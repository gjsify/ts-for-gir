<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <package name="gupnp-av-1.0"/>
  <namespace name="GUPnPAV"
             version="1.0"
             shared-library="libgupnp-av-1.0.so.3"
             c:identifier-prefixes="GUPnP"
             c:symbol-prefixes="gupnp">
    <record name="CDSLastChangeEntry"
            c:type="GUPnPCDSLastChangeEntry"
            opaque="1"
            glib:type-name="GUPnPCDSLastChangeEntry"
            glib:get-type="gupnp_cds_last_change_entry_get_type"
            c:symbol-prefix="cds_last_change_entry">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-cds-last-change-parser.c"
           line="25">Opaque struct which contains information about the event.</doc>
      <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                       line="33"/>
      <method name="get_class"
              c:identifier="gupnp_cds_last_change_entry_get_class">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="312">Get the class of the object in this change entry. This is only
valid if gupnp_cds_last_change_entry_get_event() returns
%GUPNP_CDS_LAST_CHANGE_EVENT_OBJECT_ADDED.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="320">The upnp class of the object of this entry.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="314">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_event"
              c:identifier="gupnp_cds_last_change_entry_get_event">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="259">Get the type of the last change entry as defined in
#GUPnPCDSLastChangeEvent.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="266">An event from the #GUPnPCDSLastChangeEvent or
%GUPNP_CDS_LAST_CHANGE_EVENT_INVALID if the entry is not valid.</doc>
          <type name="CDSLastChangeEvent" c:type="GUPnPCDSLastChangeEvent"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="261">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object_id"
              c:identifier="gupnp_cds_last_change_entry_get_object_id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="278">Get the ID of the object in this change entry.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="284">The id of the object of this entry.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="280">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_id"
              c:identifier="gupnp_cds_last_change_entry_get_parent_id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="294">Get the parent object id of the object in this change entry. This is only
valid if gupnp_cds_last_change_entry_get_event() returns
%GUPNP_CDS_LAST_CHANGE_EVENT_OBJECT_ADDED.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="302">The id of the object's parent of this entry.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="296">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_id"
              c:identifier="gupnp_cds_last_change_entry_get_update_id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="346">Get the update id of the last change entry.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="352">update id of the entry or 0 if the entry is not valid.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="348">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_subtree_update"
              c:identifier="gupnp_cds_last_change_entry_is_subtree_update">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="330">Returns whether this entry is part of a subtree update.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="336">%TRUE, if the entry is part of a subtree update, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="332">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="gupnp_cds_last_change_entry_ref">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="220">Increase reference count of a #GUPnPCDSLastChangeEntry.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="226">The object passed in @entry.</doc>
          <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="222">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="gupnp_cds_last_change_entry_unref">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="244">Decrease reference count of a #GUPnPCDSLastChangeEntry. If the reference
count drops to 0, @entry is freed.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="246">A #GUPnPCDSLastChangeEntry</doc>
            <type name="CDSLastChangeEntry" c:type="GUPnPCDSLastChangeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="CDSLastChangeEvent" c:type="GUPnPCDSLastChangeEvent">
      <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                       line="53"/>
      <member name="invalid"
              value="0"
              c:identifier="GUPNP_CDS_LAST_CHANGE_EVENT_INVALID">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.h"
             line="37">Invalid #GUPnPCDSLastChangeEntry.</doc>
      </member>
      <member name="object_added"
              value="1"
              c:identifier="GUPNP_CDS_LAST_CHANGE_EVENT_OBJECT_ADDED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.h"
             line="38">The #GUPnPCDSLastChangeEntry is
an object added event.</doc>
      </member>
      <member name="object_removed"
              value="2"
              c:identifier="GUPNP_CDS_LAST_CHANGE_EVENT_OBJECT_REMOVED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.h"
             line="40">The #GUPnPCDSLastChangeEntry
is an object removal event.</doc>
      </member>
      <member name="object_modified"
              value="3"
              c:identifier="GUPNP_CDS_LAST_CHANGE_EVENT_OBJECT_MODIFIED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.h"
             line="42">The #GUPnPCDSLastChangeEntry
is an object modification event.</doc>
      </member>
      <member name="st_done"
              value="4"
              c:identifier="GUPNP_CDS_LAST_CHANGE_EVENT_ST_DONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.h"
             line="44">The #GUPnPCDSLastChangeEntry is a
subtree update done event.</doc>
      </member>
    </enumeration>
    <class name="CDSLastChangeParser"
           c:symbol-prefix="cds_last_change_parser"
           c:type="GUPnPCDSLastChangeParser"
           parent="GObject.Object"
           glib:type-name="GUPnPCDSLastChangeParser"
           glib:get-type="gupnp_cds_last_change_parser_get_type"
           glib:type-struct="CDSLastChangeParserClass">
      <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                       line="31"/>
      <constructor name="new" c:identifier="gupnp_cds_last_change_parser_new">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="58">Create a new #GUPnPCDSLastChangeParser.

This parser is able to parse LastChange as defined in the
ContentDirectory:3 specification.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="66">A new instance of #GUPnPCDSLastChangeParser.</doc>
          <type name="CDSLastChangeParser" c:type="GUPnPCDSLastChangeParser*"/>
        </return-value>
      </constructor>
      <method name="parse"
              c:identifier="gupnp_cds_last_change_parser_parse"
              throws="1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-cds-last-change-parser.c"
             line="75">Parse a LastChange XML document in the flavor defined by the
ContentDirectory:3 specification.</doc>
        <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-cds-last-change-parser.c"
               line="84">
List of #GUPnPCDSLastChangeEntry&lt;!-- --&gt;s</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CDSLastChangeEntry"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="77">#GUPnPCDSLastChangeParser</doc>
            <type name="CDSLastChangeParser"
                  c:type="GUPnPCDSLastChangeParser*"/>
          </instance-parameter>
          <parameter name="last_change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-cds-last-change-parser.c"
                 line="78">XML string to parse</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CDSLastChangeParserClass"
            c:type="GUPnPCDSLastChangeParserClass"
            glib:is-gtype-struct-for="CDSLastChangeParser">
      <source-position filename="libgupnp-av/gupnp-cds-last-change-parser.h"
                       line="31"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="DIDLLiteContainer"
           c:symbol-prefix="didl_lite_container"
           c:type="GUPnPDIDLLiteContainer"
           parent="DIDLLiteObject"
           glib:type-name="GUPnPDIDLLiteContainer"
           glib:get-type="gupnp_didl_lite_container_get_type"
           glib:type-struct="DIDLLiteContainerClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                       line="38"/>
      <method name="add_create_class"
              c:identifier="gupnp_didl_lite_container_add_create_class">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="723">Add a new create class to the @container. includeDerived defaults to "0".</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="725">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="726">The createClass to add.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_create_class_full"
              c:identifier="gupnp_didl_lite_container_add_create_class_full">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="740">Add a new create class to the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="742">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="743">The createClass to add.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="include_derived" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="744">Whether object with dervied classes may be created in
this container or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_search_class"
              c:identifier="gupnp_didl_lite_container_add_search_class">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="781">Add a new search class to the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="783">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="search_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="784">The searchClass to add.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_search_class_full"
              c:identifier="gupnp_didl_lite_container_add_search_class_full">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="798">Add a new search class to the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="800">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="search_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="801">The searchClass to add.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="include_derived" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="802">includeDerived attribute of the DIDL</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="container_update_id_is_set"
              c:identifier="gupnp_didl_lite_container_container_update_id_is_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="312">Get whether the container update ID of the @container is set.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="318">%TRUE if update ID is set, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="314">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_count"
              c:identifier="gupnp_didl_lite_container_get_child_count"
              glib:get-property="child-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="264">Get the child count of the @container.  If the child count is unknown, -1 is
returned.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="271">The child count of the @container, or -1 if it is unknown.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="266">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_container_update_id"
              c:identifier="gupnp_didl_lite_container_get_container_update_id"
              glib:get-property="container-update-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="287">Get the container update ID of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="293">The container update ID of the @container.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="289">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_create_classes"
              c:identifier="gupnp_didl_lite_container_get_create_classes">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="386">Gets the list of create classes of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="392">The list of create classes
belonging to @container, or %NULL.
#g_list_free the returned list after usage and #g_free each string in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="388">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_create_classes_full"
              c:identifier="gupnp_didl_lite_container_get_create_classes_full">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="428">Gets the list of create classes of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="434">The list
of create classes belonging to @container, or %NULL.
#g_list_free the returned list after usage and unref each object in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteCreateClass"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="430">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_classes"
              c:identifier="gupnp_didl_lite_container_get_search_classes">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="475">Gets the list of search classes of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="481">The list of search classes
belonging to @container, or %NULL. #g_list_free the returned list after usage
and #g_free each string in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="477">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_searchable"
              c:identifier="gupnp_didl_lite_container_get_searchable"
              glib:get-property="searchable">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="242">Checks whether @container is searchable.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="248">#TRUE if @container is searchable.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="244">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_storage_used"
              c:identifier="gupnp_didl_lite_container_get_storage_used"
              glib:get-property="storage-used">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="516">Get the number of bytes used by all child items of the @container.
If storage used is unknown, -1 is returned.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="523">The number of bytes used by all children of the @container,
or -1 if it is unknown.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="518">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_total_deleted_child_count"
              c:identifier="gupnp_didl_lite_container_get_total_deleted_child_count"
              glib:get-property="total-deleted-child-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="337">Get the total deleted child count of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="343">The total deleted child count of the @container.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="339">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child_count"
              c:identifier="gupnp_didl_lite_container_set_child_count"
              glib:set-property="child-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="574">Set the child count of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="576">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="child_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="577">The child count</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_container_update_id"
              c:identifier="gupnp_didl_lite_container_set_container_update_id"
              glib:set-property="container-update-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="603">Set the container update ID of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="605">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="update_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="606">The container update ID</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_searchable"
              c:identifier="gupnp_didl_lite_container_set_searchable"
              glib:set-property="searchable">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="543">(Un)set the searchibility of @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="545">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="searchable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="546">The searchibility</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_storage_used"
              c:identifier="gupnp_didl_lite_container_set_storage_used"
              glib:set-property="storage-used">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="840">Set the number of bytes used by all child items of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="842">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="storage_used" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="843">The number of bytes used by all child items of the
               @container or -1 if unknown.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_total_deleted_child_count"
              c:identifier="gupnp_didl_lite_container_set_total_deleted_child_count"
              glib:set-property="total-deleted-child-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="663">Set the container update ID of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="665">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="666">The container update ID</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="total_deleted_child_count_is_set"
              c:identifier="gupnp_didl_lite_container_total_deleted_child_count_is_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="362">Get whether the total deleted child conut of the @container is set.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-container.c"
               line="368">%TRUE if property is set, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="364">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_container_update_id"
              c:identifier="gupnp_didl_lite_container_unset_container_update_id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="641">Unset the container update ID property of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="643">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_total_deleted_child_count"
              c:identifier="gupnp_didl_lite_container_unset_total_deleted_child_count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="701">Unset the total deleted child count property of the @container.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-container.c"
                 line="703">#GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="child-count"
                writable="1"
                transfer-ownership="none"
                setter="set_child_count"
                getter="get_child_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="164">The child count of this container.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="container-update-id"
                writable="1"
                transfer-ownership="none"
                setter="set_container_update_id"
                getter="get_container_update_id"
                default-value="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="203">Update ID of this container.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="searchable"
                writable="1"
                transfer-ownership="none"
                setter="set_searchable"
                getter="get_searchable"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="147">Whether this container is searchable.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="storage-used"
                writable="1"
                transfer-ownership="none"
                setter="set_storage_used"
                getter="get_storage_used"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="183">The number of bytes used by all child items of this container.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="total-deleted-child-count"
                writable="1"
                transfer-ownership="none"
                setter="set_total_deleted_child_count"
                getter="get_total_deleted_child_count"
                default-value="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-container.c"
             line="222">Total deleted child count of this container.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject"/>
      </field>
    </class>
    <record name="DIDLLiteContainerClass"
            c:type="GUPnPDIDLLiteContainerClass"
            glib:is-gtype-struct-for="DIDLLiteContainer">
      <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                       line="38"/>
      <field name="parent_class">
        <type name="DIDLLiteObjectClass" c:type="GUPnPDIDLLiteObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                           line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-container.h"
                           line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteContributor"
           c:symbol-prefix="didl_lite_contributor"
           c:type="GUPnPDIDLLiteContributor"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteContributor"
           glib:get-type="gupnp_didl_lite_contributor_get_type"
           glib:type-struct="DIDLLiteContributorClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                       line="36"/>
      <method name="get_name"
              c:identifier="gupnp_didl_lite_contributor_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="239">Get the name of the @contributor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-contributor.c"
               line="245">The name of the @contributor or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="contributor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="241">A #GUPnPDIDLLiteContributor</doc>
            <type name="DIDLLiteContributor"
                  c:type="GUPnPDIDLLiteContributor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_role"
              c:identifier="gupnp_didl_lite_contributor_get_role"
              glib:get-property="role">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="219">Get the role of the @contributor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-contributor.c"
               line="225">The role of the @contributor, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="contributor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="221">#GUPnPDIDLLiteContributor</doc>
            <type name="DIDLLiteContributor"
                  c:type="GUPnPDIDLLiteContributor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_contributor_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="328">Get the pointer to relevant node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-contributor.c"
               line="334">The pointer to relevant node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="contributor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="330">The #GUPnPDIDLLiteContributor</doc>
            <type name="DIDLLiteContributor"
                  c:type="GUPnPDIDLLiteContributor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gupnp_didl_lite_contributor_set_name"
              glib:set-property="name">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="282">Set the name of the @contributor to @name.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contributor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="284">A #GUPnPDIDLLiteContributor</doc>
            <type name="DIDLLiteContributor"
                  c:type="GUPnPDIDLLiteContributor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="285">The name of the contributor</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_role"
              c:identifier="gupnp_didl_lite_contributor_set_role"
              glib:set-property="role">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="258">Set the role of the @contributor to @role.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contributor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="260">#GUPnPDIDLLiteContributor</doc>
            <type name="DIDLLiteContributor"
                  c:type="GUPnPDIDLLiteContributor*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-contributor.c"
                 line="261">The role of the @contributor</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="201">The name of this contributor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="role"
                writable="1"
                transfer-ownership="none"
                setter="set_role"
                getter="get_role"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="184">The role of this contributor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xml-doc"
                introspectable="0"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="161">The reference to XML document containing this object.

Internal property.</doc>
        <type/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-contributor.c"
             line="143">The pointer to object node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteContributorClass"
            c:type="GUPnPDIDLLiteContributorClass"
            glib:is-gtype-struct-for="DIDLLiteContributor">
      <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                       line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                           line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-contributor.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteCreateClass"
           c:symbol-prefix="didl_lite_create_class"
           c:type="GUPnPDIDLLiteCreateClass"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteCreateClass"
           glib:get-type="gupnp_didl_lite_create_class_get_type"
           glib:type-struct="DIDLLiteCreateClassClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                       line="39"/>
      <method name="get_content"
              c:identifier="gupnp_didl_lite_create_class_get_content"
              glib:get-property="content">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="259">Get the content of the @create_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-createclass.c"
               line="265">The Content of the @create_class, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="261">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_friendly_name"
              c:identifier="gupnp_didl_lite_create_class_get_friendly_name"
              glib:get-property="friendly-name">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="365">Get the friendly name of the @create_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-createclass.c"
               line="371">The FriendlyName of the @create_class, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="367">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_include_derived"
              c:identifier="gupnp_didl_lite_create_class_get_include_derived"
              glib:get-property="include-derived">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="310">Checks whether @create_class can be derived.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-createclass.c"
               line="316">#TRUE if @create_class can be derived.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="312">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_create_class_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="431">Get the pointer to relevant node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-createclass.c"
               line="437">The pointer to relevant node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="433">The #GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="gupnp_didl_lite_create_class_set_content"
              glib:set-property="content">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="283">Set the content of the @create_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="285">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="286">The content</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_friendly_name"
              c:identifier="gupnp_didl_lite_create_class_set_friendly_name"
              glib:set-property="friendly-name">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="386">Set the friendly name of the @create_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="388">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
          <parameter name="friendly_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="389">The friendly name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_include_derived"
              c:identifier="gupnp_didl_lite_create_class_set_include_derived"
              glib:set-property="include-derived">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="332">(Un)set the derivability of create_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="create_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="334">#GUPnPDIDLLiteCreateClass</doc>
            <type name="DIDLLiteCreateClass"
                  c:type="GUPnPDIDLLiteCreateClass*"/>
          </instance-parameter>
          <parameter name="include_derived" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-createclass.c"
                 line="335">the derivability</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                writable="1"
                transfer-ownership="none"
                setter="set_content"
                getter="get_content"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="204">The content of this create Class.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="friendly-name"
                writable="1"
                transfer-ownership="none"
                setter="set_friendly_name"
                getter="get_friendly_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="240">The friendly name of this create Class.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="include-derived"
                writable="1"
                transfer-ownership="none"
                setter="set_include_derived"
                getter="get_include_derived"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="222">Whether this create Class can be derived.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="xml-doc"
                introspectable="0"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="180">The reference to XML document containing this object.

Internal property.</doc>
        <type/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-createclass.c"
             line="161">The pointer to desc node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteCreateClassClass"
            c:type="GUPnPDIDLLiteCreateClassClass"
            glib:is-gtype-struct-for="DIDLLiteCreateClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                       line="39"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                           line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                           line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-createclass.h"
                           line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteDescriptor"
           c:symbol-prefix="didl_lite_descriptor"
           c:type="GUPnPDIDLLiteDescriptor"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteDescriptor"
           glib:get-type="gupnp_didl_lite_descriptor_get_type"
           glib:type-struct="DIDLLiteDescriptorClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                       line="36"/>
      <constructor name="new" c:identifier="gupnp_didl_lite_descriptor_new">
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="281">A new #GUPnPDIDLLiteDescriptor object. Unref after usage.</doc>
          <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
        </return-value>
      </constructor>
      <method name="get_content"
              c:identifier="gupnp_didl_lite_descriptor_get_content"
              glib:get-property="content">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="327">Get the content of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="333">The content of the @descriptor or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="329">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gupnp_didl_lite_descriptor_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="345">Get the ID of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="351">The ID string or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="347">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_type"
              c:identifier="gupnp_didl_lite_descriptor_get_metadata_type"
              glib:get-property="metadata-type">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="363">Get the metadata type of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="369">The type as string or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="365">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name_space"
              c:identifier="gupnp_didl_lite_descriptor_get_name_space"
              glib:get-property="name-space">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="382">Get the name space associated with the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="388">The name space or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="384">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_descriptor_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="309">Get the pointer to desc node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
               line="315">The pointer to desc node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="311">The #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="gupnp_didl_lite_descriptor_set_content"
              glib:set-property="content">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="400">Set the content of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="402">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="403">The content as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="gupnp_didl_lite_descriptor_set_id"
              glib:set-property="id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="426">Set the ID of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="428">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="429">The ID as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_metadata_type"
              c:identifier="gupnp_didl_lite_descriptor_set_metadata_type"
              glib:set-property="metadata-type">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="449">Set the metadata type of the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="451">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="452">The metadata type as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name_space"
              c:identifier="gupnp_didl_lite_descriptor_set_name_space"
              glib:set-property="name-space">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="473">Set the name space associated with the @descriptor.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="descriptor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="475">A #GUPnPDIDLLiteDescriptor</doc>
            <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
          </instance-parameter>
          <parameter name="name_space" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
                 line="476">The name space URI as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                writable="1"
                transfer-ownership="none"
                setter="set_content"
                getter="get_content"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="260">The content of this descriptor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="226">The ID of this descriptor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="metadata-type"
                writable="1"
                transfer-ownership="none"
                setter="set_metadata_type"
                getter="get_metadata_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="243">The type of this descriptor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name-space"
                writable="1"
                transfer-ownership="none"
                setter="set_name_space"
                getter="get_name_space"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="208">The name space associated with this descriptor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xml-doc"
                introspectable="0"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="185">The reference to XML document containing this object.

Internal property.</doc>
        <type/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
             line="167">The pointer to desc node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteDescriptorClass"
            c:type="GUPnPDIDLLiteDescriptorClass"
            glib:is-gtype-struct-for="DIDLLiteDescriptor">
      <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                       line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                           line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-descriptor.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="DIDLLiteFragmentResult"
                 c:type="GUPnPDIDLLiteFragmentResult">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-av-enums.h"
           line="17">Possible return values of the gupnp_didl_lite_object_apply_fragments() call.</doc>
      <source-position filename="libgupnp-av/gupnp-av-enums.h" line="49"/>
      <member name="ok"
              value="0"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_OK">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="19">Operation succeeded.</doc>
      </member>
      <member name="current_bad_xml"
              value="1"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_CURRENT_BAD_XML">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="20">Current set of fragments
is bad XML</doc>
      </member>
      <member name="new_bad_xml"
              value="2"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_NEW_BAD_XML">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="22">New set of fragments is bad
XML</doc>
      </member>
      <member name="current_invalid"
              value="3"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_CURRENT_INVALID">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="24">Current set of fragments
is invalid</doc>
      </member>
      <member name="new_invalid"
              value="4"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_NEW_INVALID">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="26">New set of fragments is
invalid</doc>
      </member>
      <member name="required_tag"
              value="5"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_REQUIRED_TAG">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="28">Trying to remove a required
tag</doc>
      </member>
      <member name="readonly_tag"
              value="6"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_READONLY_TAG">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="30">Trying to modify or remove a
read-only tag</doc>
      </member>
      <member name="mismatch"
              value="7"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_MISMATCH">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="32">Length of the two fragment sets
does not match</doc>
      </member>
      <member name="unknown_error"
              value="8"
              c:identifier="GUPNP_DIDL_LITE_FRAGMENT_RESULT_UNKNOWN_ERROR">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-enums.h"
             line="34">General error sink if none
of the others applies.</doc>
      </member>
    </enumeration>
    <class name="DIDLLiteItem"
           c:symbol-prefix="didl_lite_item"
           c:type="GUPnPDIDLLiteItem"
           parent="DIDLLiteObject"
           glib:type-name="GUPnPDIDLLiteItem"
           glib:get-type="gupnp_didl_lite_item_get_type"
           glib:type-struct="DIDLLiteItemClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                       line="38"/>
      <method name="get_lifetime"
              c:identifier="gupnp_didl_lite_item_get_lifetime"
              glib:get-property="lifetime">
        <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-item.c"
               line="231">-1 if unset or the lifetime (in seconds) of the current item.</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="229">#GUPnPDIDLLiteItem</doc>
            <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ref_id"
              c:identifier="gupnp_didl_lite_item_get_ref_id"
              glib:get-property="ref-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-item.c"
             line="140">Get the ref ID of the @item.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-item.c"
               line="146">The ref ID of the @item, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="142">#GUPnPDIDLLiteItem</doc>
            <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_lifetime"
              c:identifier="gupnp_didl_lite_item_set_lifetime"
              glib:set-property="lifetime">
        <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="190">#GUPnPDIDLLiteItem</doc>
            <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
          </instance-parameter>
          <parameter name="lifetime" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="191">The lifetime (in seconds) of this item in a media collection.</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ref_id"
              c:identifier="gupnp_didl_lite_item_set_ref_id"
              glib:set-property="ref-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-item.c"
             line="162">Set the ref ID of the @item.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="164">#GUPnPDIDLLiteItem</doc>
            <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
          </instance-parameter>
          <parameter name="ref_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-item.c"
                 line="165">The ref ID</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="lifetime"
                writable="1"
                transfer-ownership="none"
                setter="set_lifetime"
                getter="get_lifetime"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-item.c"
             line="121">The lifetime in seconds of this DIDLLite item in a media collection.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="ref-id"
                writable="1"
                transfer-ownership="none"
                setter="set_ref_id"
                getter="get_ref_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-item.c"
             line="104">The ref ID of this item.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject"/>
      </field>
    </class>
    <record name="DIDLLiteItemClass"
            c:type="GUPnPDIDLLiteItemClass"
            glib:is-gtype-struct-for="DIDLLiteItem">
      <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                       line="38"/>
      <field name="parent_class">
        <type name="DIDLLiteObjectClass" c:type="GUPnPDIDLLiteObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                           line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-item.h"
                           line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteObject"
           c:symbol-prefix="didl_lite_object"
           c:type="GUPnPDIDLLiteObject"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDIDLLiteObject"
           glib:get-type="gupnp_didl_lite_object_get_type"
           glib:type-struct="DIDLLiteObjectClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                       line="48"/>
      <method name="add_artist"
              c:identifier="gupnp_didl_lite_object_add_artist">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1930">Add a new Artist node to the @object and return the associated
#GUPnPDIDLLiteContributor object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="198"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1937">A new #GUPnPDIDLLiteContributor object. Unref after usage.</doc>
          <type name="DIDLLiteContributor" c:type="GUPnPDIDLLiteContributor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1932">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_author"
              c:identifier="gupnp_didl_lite_object_add_author">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1986">Add a new author node to the @object and return the associated
#GUPnPDIDLLiteContributor object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="201"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1993">A new #GUPnPDIDLLiteContributor object. Unref after usage.</doc>
          <type name="DIDLLiteContributor" c:type="GUPnPDIDLLiteContributor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1988">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_creator"
              c:identifier="gupnp_didl_lite_object_add_creator">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1873">Add a new creator node to the @object and return the associated
#GUPnPDIDLLiteContributor object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="195"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1880">A new #GUPnPDIDLLiteContributor object. Unref after usage.</doc>
          <type name="DIDLLiteContributor" c:type="GUPnPDIDLLiteContributor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1875">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_descriptor"
              c:identifier="gupnp_didl_lite_object_add_descriptor">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2321">Creates a new descriptor, attaches it to @object and returns it.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="157"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2327">A new #GUPnPDIDLLiteDescriptor object. Unref after usage.</doc>
          <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2323">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_resource"
              c:identifier="gupnp_didl_lite_object_add_resource">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2293">Creates a new resource, attaches it to @object and returns it.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2299">A new #GUPnPDIDLLiteResource object. Unref after usage.</doc>
          <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2295">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="apply_fragments"
              c:identifier="gupnp_didl_lite_object_apply_fragments">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2524">Updates object by applying @new_fragments in places of
@current_fragments. For @current_size and @new_size -1 can be
passed when respectively @current_fragments and @new_fragments are
NULL terminated.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="270"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2539">Result of operation.</doc>
          <type name="DIDLLiteFragmentResult"
                c:type="GUPnPDIDLLiteFragmentResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2526">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="current_fragments" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2527">XML
fragments of @object.</doc>
            <array length="1" zero-terminated="0" c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="current_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2529">Size of @current_fragments or -1.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="new_fragments" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2530">Substitutes
for @current_fragments.</doc>
            <array length="3" zero-terminated="0" c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="new_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2532">Size of @new_fragments or -1.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_album"
              c:identifier="gupnp_didl_lite_object_get_album"
              glib:get-property="album">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1423">Get the album of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1429">The album of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1425">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_album_art"
              c:identifier="gupnp_didl_lite_object_get_album_art"
              glib:get-property="album-art">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1441">Get the URI to album art of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1447">The URI to album art of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1443">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_album_xml_string"
              c:identifier="gupnp_didl_lite_object_get_album_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2408">Creates a string representation of the DIDL-Lite XML fragment related to the
object album.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="255"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2415">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2410">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_artist"
              c:identifier="gupnp_didl_lite_object_get_artist"
              glib:get-property="artist"
              deprecated="1"
              deprecated-version="0.5.3">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1268">Get the artist of the @object. If role is not %NULL, it is set to the role
of the artist if available.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_get_artists instead.</doc-deprecated>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1275">The artist of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1270">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_artists"
              c:identifier="gupnp_didl_lite_object_get_artists">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1289">Get the artists of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1295">The list
of artists belonging to @object, or %NULL.
#g_list_free the returned list after usage and unref each object in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteContributor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1291">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_artists_xml_string"
              c:identifier="gupnp_didl_lite_object_get_artists_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2450">Creates a string representation of the DIDL-Lite XML fragments related to the
object artists.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="263"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2457">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2452">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_author"
              c:identifier="gupnp_didl_lite_object_get_author"
              glib:get-property="author"
              deprecated="1"
              deprecated-version="0.5.3">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1307">Get the author of the @object.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_get_authors instead.</doc-deprecated>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1313">The author of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1309">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_authors"
              c:identifier="gupnp_didl_lite_object_get_authors">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1327">Get the authors of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1333">The list
of authors belonging to @object, or %NULL.
#g_list_free the returned list after usage and unref each object in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteContributor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1329">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_compat_resource"
              c:identifier="gupnp_didl_lite_object_get_compat_resource">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1639">Use this function to get a resource from the @object that is compatible with
any of the protocols specified in the @sink_protocol_info. The value of
@sink_protocol_info will typically be acquired from 'Sink' argument of
'GetProtocolInfo' action or 'SinkProtocolInfo' state-variable of a
ConnectionManager service.

If @lenient is #TRUE, the first resource in the list is returned instead of
%NULL if none of resources and protocols are found to be compatible.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1654">The resource belonging to @object that is comaptible with
any of the protocols specified in @sink_protocol_info, or %NULL. Unref after
usage.</doc>
          <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1641">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="sink_protocol_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1642">The SinkProtocolInfo string from MediaRenderer</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="lenient" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1643">Enable lenient mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_creator"
              c:identifier="gupnp_didl_lite_object_get_creator"
              glib:get-property="creator">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1231">Get the creator of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1237">The creator of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1233">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_creators"
              c:identifier="gupnp_didl_lite_object_get_creators">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1250">Get the creators of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1256">The list
of creators belonging to @object, or %NULL.
#g_list_free the returned list after usage and unref each object in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteContributor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1252">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_date"
              c:identifier="gupnp_didl_lite_object_get_date"
              glib:get-property="date">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1479">Get the date of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1485">The date of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1481">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_date_xml_string"
              c:identifier="gupnp_didl_lite_object_get_date_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2366">Creates a string representation of the DIDL-Lite XML fragment related to the
object date.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="247"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2373">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2368">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dc_namespace"
              c:identifier="gupnp_didl_lite_object_get_dc_namespace"
              glib:get-property="dc-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1033">Get the pointer to the DublinCore namespace registered with the XML document
containing this object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1040">The pointer to DublinCore namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1035">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gupnp_didl_lite_object_get_description"
              glib:get-property="description">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1460">Get the description of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1466">The description of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1462">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_descriptors"
              c:identifier="gupnp_didl_lite_object_get_descriptors">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1345">Get the descriptors of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="111"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1351">The list of
descriptors belonging to @object, or %NULL.
#g_list_free the returned list after usage and unref each object in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteDescriptor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1347">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_managed"
              c:identifier="gupnp_didl_lite_object_get_dlna_managed"
              glib:get-property="dlna-managed">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1522">Get the 'dlna:dlnaManaged' attribute of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1528">The 'dlna:dlnaManaged' attribute of the @object.</doc>
          <type name="OCMFlags" c:type="GUPnPOCMFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1524">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_namespace"
              c:identifier="gupnp_didl_lite_object_get_dlna_namespace"
              glib:get-property="dlna-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1073">Get the pointer to the DLNA metadata namespace registered with the XML
document containing this object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1080">The pointer to DLNA namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1075">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_genre"
              c:identifier="gupnp_didl_lite_object_get_genre"
              glib:get-property="genre">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1386">Get the genre of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1392">The genre of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1388">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gupnp_didl_lite_object_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1116">Get the ID of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1122">The ID of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1118">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_id"
              c:identifier="gupnp_didl_lite_object_get_parent_id"
              glib:get-property="parent-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1134">Get the ID of the parent of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1140">The ID of parent of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1136">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_properties"
              c:identifier="gupnp_didl_lite_object_get_properties">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1152">Use this function to retreive property nodes by name.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="77"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1159">The list of
property nodes by the name @property_name belonging to @object, or %NULL.
#g_list_free the returned list after usage but do not modify the contents.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="libxml2.Node"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1154">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1155">name of the properties</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pv_namespace"
              c:identifier="gupnp_didl_lite_object_get_pv_namespace"
              glib:get-property="pv-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1094">Get the pointer to the PV metadata namespace registered with the XML
document containing this object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1101">The pointer to PV namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1096">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resources"
              c:identifier="gupnp_didl_lite_object_get_resources">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1596">Use this function to retreive resources from the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="144"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1602">The list
              of resources belonging to  @object, or %NULL. #g_list_free the
              returned list after usage and unref each resource in it.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteResource"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1598">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_restricted"
              c:identifier="gupnp_didl_lite_object_get_restricted"
              glib:get-property="restricted">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1195">Whether the @object is restricted or not.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1201">#TRUE if @object is restricted.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1197">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gupnp_didl_lite_object_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1213">Get the title of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1219">The title of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1215">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_xml_string"
              c:identifier="gupnp_didl_lite_object_get_title_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2345">Creates a string representation of the DIDL-Lite XML fragment related to the
object title.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="243"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2352">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2347">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track_number"
              c:identifier="gupnp_didl_lite_object_get_track_number"
              glib:get-property="track-number">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1497">Get the original track number of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1503">The original track number of the @object, or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1499">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track_number_xml_string"
              c:identifier="gupnp_didl_lite_object_get_track_number_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2429">Creates a string representation of the DIDL-Lite XML fragment related to the
object track number.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="259"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2436">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2431">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_id"
              c:identifier="gupnp_didl_lite_object_get_update_id"
              glib:get-property="update-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1552">Get the update ID of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1558">The update ID of the @object.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1554">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upnp_class"
              c:identifier="gupnp_didl_lite_object_get_upnp_class"
              glib:get-property="upnp-class">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1054">Get the UPnP class of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1060">The class of @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1056">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upnp_class_xml_string"
              c:identifier="gupnp_didl_lite_object_get_upnp_class_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2387">Creates a string representation of the DIDL-Lite XML fragment related to the
object UPnP class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="251"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2394">A DIDL-Lite XML fragment string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2389">A #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upnp_namespace"
              c:identifier="gupnp_didl_lite_object_get_upnp_namespace"
              glib:get-property="upnp-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1013">Get the pointer to the UPnP namespace registered with the XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1019">The pointer to UPnP namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1015">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_write_status"
              c:identifier="gupnp_didl_lite_object_get_write_status"
              glib:get-property="write-status">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1404">Get the write status of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1410">The write status of the @object, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1406">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_object_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="995">Get the pointer to object node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1001">The pointer to object node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="997">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_string"
              c:identifier="gupnp_didl_lite_object_get_xml_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2624">Get the representation of this object as an XML string.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="278"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2629">XML representation of this object as string.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2626">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_restricted_set"
              c:identifier="gupnp_didl_lite_object_is_restricted_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1175">Whehter the restricted attribute exists on @object</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1181">#TRUE if restricted exists, #FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1177">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_album"
              c:identifier="gupnp_didl_lite_object_set_album"
              glib:set-property="album">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2066">Set the album of the @object to @album.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2068">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="album" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2069">The album string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_album_art"
              c:identifier="gupnp_didl_lite_object_set_album_art"
              glib:set-property="album-art">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2092">Set the URI to album art of the @object to @album_art.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="216"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2094">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="album_art" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2095">The URI of album art</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_artist"
              c:identifier="gupnp_didl_lite_object_set_artist"
              glib:set-property="artist"
              deprecated="1"
              deprecated-version="0.5.3">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1902">Set the Artist of the @object to @artist.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_add_artist instead.</doc-deprecated>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1904">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="artist" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1905">The Artist</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_author"
              c:identifier="gupnp_didl_lite_object_set_author"
              glib:set-property="author"
              deprecated="1"
              deprecated-version="0.5.3">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1958">Set the Author of the @object to @author.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_add_author instead.</doc-deprecated>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1960">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="author" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1961">The Author</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_creator"
              c:identifier="gupnp_didl_lite_object_set_creator"
              glib:set-property="creator">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1847">Set the creator of the @object to @creator.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1849">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="creator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1850">The creator</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_date"
              c:identifier="gupnp_didl_lite_object_set_date"
              glib:set-property="date">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2155">Set the date of the @object to @date.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2157">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2158">The date string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gupnp_didl_lite_object_set_description"
              glib:set-property="description">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2129">Set the description of the @object to @description.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="220"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2131">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2132">The description string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dlna_managed"
              c:identifier="gupnp_didl_lite_object_set_dlna_managed"
              glib:set-property="dlna-managed">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2211">Set the 'dlna:dlnaManaged' attribute of the @object to @dlna_managed.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2213">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="dlna_managed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2214">The #GUPnPOCMFlags.</doc>
            <type name="OCMFlags" c:type="GUPnPOCMFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_genre"
              c:identifier="gupnp_didl_lite_object_set_genre"
              glib:set-property="genre">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2014">Set the genre of the @object to @genre.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="204"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2016">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="genre" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2017">The Genre</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="gupnp_didl_lite_object_set_id"
              glib:set-property="id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1746">Set the ID of the @object to @id.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1748">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1749">The ID</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent_id"
              c:identifier="gupnp_didl_lite_object_set_parent_id"
              glib:set-property="parent-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1769">Set the ID of the parent of the @object to @parent_id.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1771">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="parent_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1772">The parent ID</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_restricted"
              c:identifier="gupnp_didl_lite_object_set_restricted"
              glib:set-property="restricted">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1792">Set the restricted status of @object to @restricted.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1794">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="restricted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1795">The restricted status</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gupnp_didl_lite_object_set_title"
              glib:set-property="title">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1821">Set the title of the @object to @title.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1823">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1824">The title</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_number"
              c:identifier="gupnp_didl_lite_object_set_track_number"
              glib:set-property="track-number">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2181">Set the original track number of the @object to @track_number.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2183">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="track_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2184">The original track number</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_id"
              c:identifier="gupnp_didl_lite_object_set_update_id"
              glib:set-property="update-id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2243">Set the update ID of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="236"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2245">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="update_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2246">Update ID</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_upnp_class"
              c:identifier="gupnp_didl_lite_object_set_upnp_class"
              glib:set-property="upnp-class">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1720">Set the UPnP class of the @object to @upnp_class.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1722">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="upnp_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1723">The UPnP class as string.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_write_status"
              c:identifier="gupnp_didl_lite_object_set_write_status"
              glib:set-property="write-status">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2040">Set the write status of the @object to @write_status.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="208"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2042">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
          <parameter name="write_status" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2043">The write status string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unset_artists"
              c:identifier="gupnp_didl_lite_object_unset_artists">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2467">Unset the artists properties of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="267"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2469">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_update_id"
              c:identifier="gupnp_didl_lite_object_unset_update_id">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2273">Unset the update ID property of the @object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="2275">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_id_is_set"
              c:identifier="gupnp_didl_lite_object_update_id_is_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="1573">Get whether the update ID of the @object is set.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="1579">%TRUE if update ID is set, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-object.c"
                 line="1575">#GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="album"
                writable="1"
                transfer-ownership="none"
                setter="set_album"
                getter="get_album"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="678">The album of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="album-art"
                writable="1"
                transfer-ownership="none"
                setter="set_album_art"
                getter="get_album_art"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="695">The URI to album art of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="artist"
                deprecated="1"
                deprecated-version="0.5.3"
                writable="1"
                transfer-ownership="none"
                setter="set_artist"
                getter="get_artist"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="602">The artist of this object.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_get_artists and
#gupnp_didl_lite_object_add_artist instead since unlike this
property, they are capable of dealing with multiple artist nodes.</doc-deprecated>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="author"
                deprecated="1"
                deprecated-version="0.5.3"
                writable="1"
                transfer-ownership="none"
                setter="set_author"
                getter="get_author"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="623">The author of this object.</doc>
        <doc-deprecated xml:space="preserve">Use #gupnp_didl_lite_object_get_authors and
#gupnp_didl_lite_object_add_author instead since unlike this
property, they are capable of dealing with multiple author nodes.</doc-deprecated>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="creator"
                writable="1"
                transfer-ownership="none"
                setter="set_creator"
                getter="get_creator"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="584">The creator of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="date"
                writable="1"
                transfer-ownership="none"
                setter="set_date"
                getter="get_date"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="729">The date of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="dc-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_dc_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="437">Pointer to the DublinCore namespace registered with the XML document
containing this object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="712">The description of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="dlna-managed"
                writable="1"
                transfer-ownership="none"
                setter="set_dlna_managed"
                getter="get_dlna_managed"
                default-value="GUPNP_OCM_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="763">The 'dlna:dlnaManaged' attribute.</doc>
        <type name="OCMFlags"/>
      </property>
      <property name="dlna-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_dlna_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="458">Pointer to the DLNA metadata namespace registered with the XML
document containing this object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="genre"
                writable="1"
                transfer-ownership="none"
                setter="set_genre"
                getter="get_genre"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="644">The genre of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="498">The ID of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="parent-id"
                writable="1"
                transfer-ownership="none"
                setter="set_parent_id"
                getter="get_parent_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="515">The ID of the parent container of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pv-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_pv_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="479">Pointer to the PV metadata namespace registered with the XML
document containing this object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="restricted"
                writable="1"
                transfer-ownership="none"
                setter="set_restricted"
                getter="get_restricted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="533">Whether this object is restricted.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="550">The title of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="track-number"
                writable="1"
                transfer-ownership="none"
                setter="set_track_number"
                getter="get_track_number"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="746">The original track number of this object.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="update-id"
                writable="1"
                transfer-ownership="none"
                setter="set_update_id"
                getter="get_update_id"
                default-value="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="781">Update ID of this object.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="upnp-class"
                writable="1"
                transfer-ownership="none"
                setter="set_upnp_class"
                getter="get_upnp_class"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="567">The UPnP class of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="upnp-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_upnp_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="416">Pointer to the UPnP namespace registered with the XML document
containing this object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="write-status"
                writable="1"
                transfer-ownership="none"
                setter="set_write_status"
                getter="get_write_status"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="661">The write status of this object.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xml-doc"
                introspectable="0"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="393">The reference to XML document containing this object.

Internal property.</doc>
        <type/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="375">The pointer to object node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteObjectClass"
            c:type="GUPnPDIDLLiteObjectClass"
            glib:is-gtype-struct-for="DIDLLiteObject">
      <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                       line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                           line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                           line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                           line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DIDLLiteObjectPrivate"
            c:type="GUPnPDIDLLiteObjectPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                       line="38"/>
    </record>
    <class name="DIDLLiteParser"
           c:symbol-prefix="didl_lite_parser"
           c:type="GUPnPDIDLLiteParser"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteParser"
           glib:get-type="gupnp_didl_lite_parser_get_type"
           glib:type-struct="DIDLLiteParserClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                       line="44"/>
      <constructor name="new" c:identifier="gupnp_didl_lite_parser_new">
        <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                         line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-parser.c"
               line="175">A new #GUPnPDIDLLiteParser object.</doc>
          <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
        </return-value>
      </constructor>
      <virtual-method name="container_available">
        <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                         line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="item_available">
        <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="object_available">
        <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="parse_didl"
              c:identifier="gupnp_didl_lite_parser_parse_didl"
              throws="1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-parser.c"
             line="183">Parses DIDL-Lite XML string @didl, emitting the ::object-available,
::item-available and ::container-available signals appropriately during the
process.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-parser.c"
               line="193">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-parser.c"
                 line="185">A #GUPnPDIDLLiteParser</doc>
            <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
          </instance-parameter>
          <parameter name="didl" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-parser.c"
                 line="186">The DIDL-Lite XML string to be parsed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="container-available" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-parser.c"
             line="150">The ::container-available signal is emitted each time a container is
found in the DIDL-Lite XML being parsed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-parser.c"
                 line="153">The now available #GUPnPDIDLLiteContainer</doc>
            <type name="DIDLLiteContainer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="item-available" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-parser.c"
             line="129">The ::item-available signal is emitted each time an item is found in
the DIDL-Lite XML being parsed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-parser.c"
                 line="132">The now available #GUPnPDIDLLiteItem</doc>
            <type name="DIDLLiteItem"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="object-available" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-parser.c"
             line="108">The ::object-available signal is emitted each time an object is
found in the DIDL-Lite XML being parsed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-parser.c"
                 line="111">The now available #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DIDLLiteParserClass"
            c:type="GUPnPDIDLLiteParserClass"
            glib:is-gtype-struct-for="DIDLLiteParser">
      <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                       line="44"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="object_available">
        <callback name="object_available">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
            </parameter>
            <parameter name="object" transfer-ownership="none">
              <type name="DIDLLiteObject" c:type="GUPnPDIDLLiteObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="item_available">
        <callback name="item_available">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
            </parameter>
            <parameter name="item" transfer-ownership="none">
              <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="container_available">
        <callback name="container_available">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="DIDLLiteParser" c:type="GUPnPDIDLLiteParser*"/>
            </parameter>
            <parameter name="container" transfer-ownership="none">
              <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved5" introspectable="0">
        <callback name="_gupnp_reserved5">
          <source-position filename="libgupnp-av/gupnp-didl-lite-parser.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteResource"
           c:symbol-prefix="didl_lite_resource"
           c:type="GUPnPDIDLLiteResource"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteResource"
           glib:get-type="gupnp_didl_lite_resource_get_type"
           glib:type-struct="DIDLLiteResourceClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                       line="47"/>
      <method name="get_audio_channels"
              c:identifier="gupnp_didl_lite_resource_get_audio_channels"
              glib:get-property="audio-channels">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1140">Get the number of audio channels in the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1146">The number of audio channels in the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1142">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bitrate"
              c:identifier="gupnp_didl_lite_resource_get_bitrate"
              glib:get-property="bitrate">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1064">Get the bitrate (in bytes per second) of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1070">The bitrate (in bytes per second) of the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1066">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bits_per_sample"
              c:identifier="gupnp_didl_lite_resource_get_bits_per_sample"
              glib:get-property="bits-per-sample">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1102">Get the sample size of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1108">The number of bits per sample of the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1104">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cleartext_size"
              c:identifier="gupnp_didl_lite_resource_get_cleartext_size"
              glib:get-property="cleartext-size">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1019">Get the size (in bytes) of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1025">The size (in bytes) of the @resource or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1021">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color_depth"
              c:identifier="gupnp_didl_lite_resource_get_color_depth"
              glib:get-property="color-depth">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1204">Get the color-depth of this image/video resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1210">The color depth of the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1206">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_namespace"
              c:identifier="gupnp_didl_lite_resource_get_dlna_namespace"
              glib:get-property="dlna-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="866">Get the pointer to the DLNA metadata namespace registered with the XML
document containing this object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="873">The pointer to DLNA namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="868">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="gupnp_didl_lite_resource_get_duration"
              glib:get-property="duration">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1039">Get the duration (in seconds) of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1045">The duration (in seconds) of the @resource or -1.</doc>
          <type name="glong" c:type="long"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1041">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gupnp_didl_lite_resource_get_height"
              glib:get-property="height">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1182">Get the height of this image/video resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1188">The height of the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1184">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_import_uri"
              c:identifier="gupnp_didl_lite_resource_get_import_uri"
              glib:get-property="import-uri">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="926">Get the import URI associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="932">The import URI or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="928">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protection"
              c:identifier="gupnp_didl_lite_resource_get_protection"
              glib:get-property="protection">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1122">Get the protection system used by the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1128">The protection system in use by the @resource or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1124">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol_info"
              c:identifier="gupnp_didl_lite_resource_get_protocol_info"
              glib:get-property="protocol-info">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="944">Get the protocol info associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="160"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="950">The protocol info associated with the
@resource or %NULL. The returned object must not be unrefed.</doc>
          <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="946">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pv_namespace"
              c:identifier="gupnp_didl_lite_resource_get_pv_namespace"
              glib:get-property="pv-namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="885">Get the pointer to the DLNA metadata namespace registered with the XML
document containing this object.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="892">The pointer to DLNA namespace in XML document.</doc>
          <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="887">The #GUPnPDIDLLiteObject</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sample_freq"
              c:identifier="gupnp_didl_lite_resource_get_sample_freq"
              glib:get-property="sample-freq">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1082">Get the sample frequency of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1088">The sample frequency of the @resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1084">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="gupnp_didl_lite_resource_get_size"
              glib:get-property="size">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="987">Get the size (in bytes) of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="993">The size (in bytes) of the @resource or -1.</doc>
          <type name="glong" c:type="long"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="989">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size64"
              c:identifier="gupnp_didl_lite_resource_get_size64"
              glib:get-property="size64">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1001">Get the size (in bytes) of the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1007">The size (in bytes) of the @resource or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1003">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle_file_type"
              c:identifier="gupnp_didl_lite_resource_get_subtitle_file_type"
              glib:get-property="subtitle-file-type"
              version="0.12.4">
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1859">The content of the subtitleFileType property or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1857">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle_file_uri"
              c:identifier="gupnp_didl_lite_resource_get_subtitle_file_uri"
              glib:get-property="subtitle-file-uri"
              version="0.12.4">
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1839">The content of the subtitleFileUri property or %NULL when not set.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1837">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track_total"
              c:identifier="gupnp_didl_lite_resource_get_track_total"
              glib:get-property="track-total">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1244">Get the total track count of this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="213"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1250">The total track count of the @resource.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1246">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_count"
              c:identifier="gupnp_didl_lite_resource_get_update_count"
              glib:get-property="update-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1224">Get the update count of this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1230">The update count of the @resource.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1226">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="gupnp_didl_lite_resource_get_uri"
              glib:get-property="uri">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="905">Get the URI associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="154"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="911">The of URI the @resource or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="907">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gupnp_didl_lite_resource_get_width"
              glib:get-property="width">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1160">Get the width of this image/video resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1166">The width of this image/video resource or -1.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1162">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_resource_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="848">Get the pointer to res node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="854">The pointer to res node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="850">The #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_audio_channels"
              c:identifier="gupnp_didl_lite_resource_set_audio_channels"
              glib:set-property="audio-channels">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1628">Set the number of audio channels in the @resource. Passing a negative number
will unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1630">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="n_channels" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1631">The number of channels</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bitrate"
              c:identifier="gupnp_didl_lite_resource_set_bitrate"
              glib:set-property="bitrate">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1512">Set the bitrate (in bytes per second) of the @resource. Passing a negative
number will unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1514">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="bitrate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1515">The bitrate</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bits_per_sample"
              c:identifier="gupnp_didl_lite_resource_set_bits_per_sample"
              glib:set-property="bits-per-sample">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1575">Set the sample size of the @resource. Passing a negative number will unset
this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1577">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="sample_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1578">The number of bits per sample</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cleartext_size"
              c:identifier="gupnp_didl_lite_resource_set_cleartext_size"
              glib:set-property="cleartext-size">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1442">Set the size (in bytes) of the @resource. Passing a negative number will
unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1444">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="cleartext_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1445">The size (in bytes)</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_depth"
              c:identifier="gupnp_didl_lite_resource_set_color_depth"
              glib:set-property="color-depth">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1716">Set the color-depth of this image/video resource. Passing a negative number
will unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1718">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="color_depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1719">The color-depth</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration"
              c:identifier="gupnp_didl_lite_resource_set_duration"
              glib:set-property="duration">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1481">Set the duration (in seconds) of the @resource. Passing a negative number
will unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1483">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1484">The duration (in seconds)</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_height"
              c:identifier="gupnp_didl_lite_resource_set_height"
              glib:set-property="height">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1686">Set the height of this image/video resource. Setting both width and height to
a negative number will unset the resolution property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1688">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1689">The height</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_import_uri"
              c:identifier="gupnp_didl_lite_resource_set_import_uri"
              glib:set-property="import-uri">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1329">Set the import URI associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1331">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="import_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1332">The URI as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protection"
              c:identifier="gupnp_didl_lite_resource_set_protection"
              glib:set-property="protection">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1605">Set the protection system used by the @resource. Passing a negative number
will unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1607">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="protection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1608">The protection system identifier as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protocol_info"
              c:identifier="gupnp_didl_lite_resource_set_protocol_info"
              glib:set-property="protocol-info">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1352">Set the protocol info associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1354">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1355">The protocol string</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sample_freq"
              c:identifier="gupnp_didl_lite_resource_set_sample_freq"
              glib:set-property="sample-freq">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1543">Set the sample frequency of the @resource. Passing a negative number will
unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1545">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="sample_freq" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1546">The sample frequency</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="gupnp_didl_lite_resource_set_size"
              glib:set-property="size">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1395">Set the size (in bytes) of the @resource. Passing a negative number will
unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1397">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1398">The size (in bytes)</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size64"
              c:identifier="gupnp_didl_lite_resource_set_size64"
              glib:set-property="size64">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1410">Set the size (in bytes) of the @resource. Passing a negative number will
unset this property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1412">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1413">The size (in bytes)</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle_file_type"
              c:identifier="gupnp_didl_lite_resource_set_subtitle_file_type"
              glib:set-property="subtitle-file-type"
              version="0.12.4">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1911">Set the type of an external subtitle file, specified via
pv:subtitleFileUri using gupnp_didl_lite_resource_set_subtitle_file_uri().

When @type is %NULL the value is removed.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1913">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1914">An URI to an external subtitle file</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle_file_uri"
              c:identifier="gupnp_didl_lite_resource_set_subtitle_file_uri"
              glib:set-property="subtitle-file-uri"
              version="0.12.4">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1875">Set the URI of an external subtitle file to be used with this resource.
When @uri is %NULL the value is removed.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1877">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1878">An URI to an external subtitle file or %NULL to remove.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_total"
              c:identifier="gupnp_didl_lite_resource_set_track_total"
              glib:set-property="track-total">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1766">Set the total number of tracks in this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1768">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="track_total" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1769">The total number of tracks in this resource</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_count"
              c:identifier="gupnp_didl_lite_resource_set_update_count"
              glib:set-property="update-count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1744">Set the update count of this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1746">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="update_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1747">The update_count</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="gupnp_didl_lite_resource_set_uri"
              glib:set-property="uri">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1303">Set the URI associated with the @resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1305">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1306">The URI as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width"
              c:identifier="gupnp_didl_lite_resource_set_width"
              glib:set-property="width">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1656">Set the width of this image/video resource. Setting both width and height to
a negative number will unset the resolution property.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1658">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1659">The width</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_total_is_set"
              c:identifier="gupnp_didl_lite_resource_track_total_is_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1283">Check whether the total track count property of this resource is set.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1289">%TRUE if set, otherwise %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1285">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_track_total"
              c:identifier="gupnp_didl_lite_resource_unset_track_total">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1811">Unset the total track count of this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1813">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_update_count"
              c:identifier="gupnp_didl_lite_resource_unset_update_count">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1793">Unset the update count of this resource.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1795">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_count_is_set"
              c:identifier="gupnp_didl_lite_resource_update_count_is_set">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="1264">Check whether the update count property of this resource is set.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                         line="209"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-resource.c"
               line="1270">%TRUE if set, otherwise %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="resource" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-resource.c"
                 line="1266">A #GUPnPDIDLLiteResource</doc>
            <type name="DIDLLiteResource" c:type="GUPnPDIDLLiteResource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="audio-channels"
                writable="1"
                transfer-ownership="none"
                setter="set_audio_channels"
                getter="get_audio_channels"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="678">The number of audio channels in this resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="bitrate"
                writable="1"
                transfer-ownership="none"
                setter="set_bitrate"
                getter="get_bitrate"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="603">The bitrate of this resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="bits-per-sample"
                writable="1"
                transfer-ownership="none"
                setter="set_bits_per_sample"
                getter="get_bits_per_sample"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="641">The sample size of this resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="cleartext-size"
                writable="1"
                transfer-ownership="none"
                setter="set_cleartext_size"
                getter="get_cleartext_size"
                default-value="-1">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="color-depth"
                writable="1"
                transfer-ownership="none"
                setter="set_color_depth"
                getter="get_color_depth"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="736">The color-depth of this image/video resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="dlna-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_dlna_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="545">Pointer to the DLNA metadata namespace registered with the
resource object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="duration"
                writable="1"
                transfer-ownership="none"
                setter="set_duration"
                getter="get_duration"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="583">The duration (in seconds) of this resource.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="height"
                writable="1"
                transfer-ownership="none"
                setter="set_height"
                getter="get_height"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="717">The height of this image/video resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="import-uri"
                writable="1"
                transfer-ownership="none"
                setter="set_import_uri"
                getter="get_import_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="452">The Import URI associated with this resource.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="protection"
                writable="1"
                transfer-ownership="none"
                setter="set_protection"
                getter="get_protection"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="660">The protection system used for this resource.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="protocol-info"
                writable="1"
                transfer-ownership="none"
                setter="set_protocol_info"
                getter="get_protocol_info">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="470">The protocol info associated with this resource.</doc>
        <type name="ProtocolInfo"/>
      </property>
      <property name="pv-namespace"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_pv_namespace">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="565">Pointer to the PV metadata namespace registered with the
resource object.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="sample-freq"
                writable="1"
                transfer-ownership="none"
                setter="set_sample_freq"
                getter="get_sample_freq"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="622">The sample frequency of this resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="size"
                writable="1"
                transfer-ownership="none"
                setter="set_size"
                getter="get_size"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="488">The size (in bytes) of this resource.</doc>
        <type name="glong" c:type="glong"/>
      </property>
      <property name="size64"
                writable="1"
                transfer-ownership="none"
                setter="set_size64"
                getter="get_size64"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="507">The size (in bytes) of this resource.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="subtitle-file-type"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle_file_type"
                getter="get_subtitle_file_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="792">Type of external subtitle file. Usually SRT or SMI.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle-file-uri"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle_file_uri"
                getter="get_subtitle_file_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="808">Uri to external subtitle file.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="track-total"
                writable="1"
                transfer-ownership="none"
                setter="set_track_total"
                getter="get_track_total"
                default-value="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="774">Number of tracks in a DIDL_S or DIDL_V resource.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="update-count"
                writable="1"
                transfer-ownership="none"
                setter="set_update_count"
                getter="get_update_count"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="uri"
                writable="1"
                transfer-ownership="none"
                setter="set_uri"
                getter="get_uri"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="435">The URI associated with this resource.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                writable="1"
                transfer-ownership="none"
                setter="set_width"
                getter="get_width"
                default-value="-1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="698">The width of this image/video resource.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="xml-doc"
                introspectable="0"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="412">The reference to XML document containing this object.

Internal property.</doc>
        <type/>
      </property>
      <property name="xml-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-resource.c"
             line="394">The pointer to res node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteResourceClass"
            c:type="GUPnPDIDLLiteResourceClass"
            glib:is-gtype-struct-for="DIDLLiteResource">
      <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                       line="47"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                           line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-resource.h"
                           line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="DIDLLiteWriter"
           c:symbol-prefix="didl_lite_writer"
           c:type="GUPnPDIDLLiteWriter"
           parent="GObject.Object"
           glib:type-name="GUPnPDIDLLiteWriter"
           glib:get-type="gupnp_didl_lite_writer_get_type"
           glib:type-struct="DIDLLiteWriterClass">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="42"/>
      <constructor name="new" c:identifier="gupnp_didl_lite_writer_new">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="457">Note: @language should always be set to %NULL, DLNA does not support the
language parameter.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="464">A new #GUPnPDIDLLiteWriter object.</doc>
          <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
        </return-value>
        <parameters>
          <parameter name="language"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="459">The language the DIDL-Lite fragment is in, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_container"
              c:identifier="gupnp_didl_lite_writer_add_container">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="546">Creates a new container, attaches it to @writer and returns it.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="552">A new #GUPnPDIDLLiteContainer object. Unref after usage.</doc>
          <type name="DIDLLiteContainer" c:type="GUPnPDIDLLiteContainer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="548">A #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_descriptor"
              c:identifier="gupnp_didl_lite_writer_add_descriptor">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="578">Creates a new descriptor, attaches it to @object and returns it.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="584">A new #GUPnPDIDLLiteDescriptor object. Unref after usage.</doc>
          <type name="DIDLLiteDescriptor" c:type="GUPnPDIDLLiteDescriptor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="580">A #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_item" c:identifier="gupnp_didl_lite_writer_add_item">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="474">Creates a new item, attaches it to @writer and returns it.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="480">A new #GUPnPDIDLLiteItem object. Unref after usage.</doc>
          <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="476">A #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filter" c:identifier="gupnp_didl_lite_writer_filter">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="667">Clears the DIDL-Lite XML document of the properties not specified in the
@filter. The passed filter string would typically come from the 'Filter'
argument of Browse or Search actions from a ContentDirectory control point.
Please refer to Section 2.3.15 of UPnP AV ContentDirectory version 3
specification for details on this string.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="669">A #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="670">A filter string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_language"
              c:identifier="gupnp_didl_lite_writer_get_language"
              glib:get-property="language">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="649">Get the language the DIDL-Lite fragment is in.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="655">The language of the @writer, or %NULL.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="651">#GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="gupnp_didl_lite_writer_get_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="604">Creates a string representation of the DIDL-Lite XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="610">The DIDL-Lite XML string, or %NULL. #g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="606">A #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xml_node"
              c:identifier="gupnp_didl_lite_writer_get_xml_node"
              glib:get-property="xml-node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="631">Get the pointer to root node in XML document.</doc>
        <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-writer.c"
               line="637">The pointer to root node in XML document.</doc>
          <type name="libxml2.Node" c:type="xmlNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="writer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-didl-lite-writer.c"
                 line="633">The #GUPnPDIDLLiteWriter</doc>
            <type name="DIDLLiteWriter" c:type="GUPnPDIDLLiteWriter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="language"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_language"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="436">The language the DIDL-Lite fragment is in.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="xml-node"
                transfer-ownership="none"
                getter="get_xml_node">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-writer.c"
             line="419">The pointer to root node in XML document.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DIDLLiteWriterClass"
            c:type="GUPnPDIDLLiteWriterClass"
            glib:is-gtype-struct-for="DIDLLiteWriter">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="42"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                           line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                           line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                           line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <constant name="DIDL_LITE_WRITER_NAMESPACE_DC"
              value="dc"
              c:type="GUPNP_DIDL_LITE_WRITER_NAMESPACE_DC">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DIDL_LITE_WRITER_NAMESPACE_DLNA"
              value="dlna"
              c:type="GUPNP_DIDL_LITE_WRITER_NAMESPACE_DLNA">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DIDL_LITE_WRITER_NAMESPACE_PV"
              value="pv"
              c:type="GUPNP_DIDL_LITE_WRITER_NAMESPACE_PV">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DIDL_LITE_WRITER_NAMESPACE_UPNP"
              value="upnp"
              c:type="GUPNP_DIDL_LITE_WRITER_NAMESPACE_UPNP">
      <source-position filename="libgupnp-av/gupnp-didl-lite-writer.h"
                       line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <bitfield name="DLNAConversion"
              glib:type-name="GUPnPDLNAConversion"
              glib:get-type="gupnp_dlna_conversion_get_type"
              c:type="GUPnPDLNAConversion">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-dlna.h"
           line="22">The DLNA conversion flags for a resource.</doc>
      <member name="none"
              value="0"
              c:identifier="GUPNP_DLNA_CONVERSION_NONE"
              glib:nick="none"
              glib:name="GUPNP_DLNA_CONVERSION_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="24">Content is in original source format</doc>
      </member>
      <member name="transcoded"
              value="1"
              c:identifier="GUPNP_DLNA_CONVERSION_TRANSCODED"
              glib:nick="transcoded"
              glib:name="GUPNP_DLNA_CONVERSION_TRANSCODED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="25">Content is transcoded</doc>
      </member>
    </bitfield>
    <bitfield name="DLNAFlags"
              glib:type-name="GUPnPDLNAFlags"
              glib:get-type="gupnp_dlna_flags_get_type"
              c:type="GUPnPDLNAFlags">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-dlna.h"
           line="60">The miscellaneous operations supported by a resource. For details on these
flags please refer to section 7.3.37.2 of DLNA Networked Device
Interoperability Guidelines Volume 1, October 2006.

Updated DTCP Flags based on 2011 Guidelines, section 7.4.1.3.23.2</doc>
      <member name="none"
              value="0"
              c:identifier="GUPNP_DLNA_FLAGS_NONE"
              glib:nick="none"
              glib:name="GUPNP_DLNA_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="62">No flags</doc>
      </member>
      <member name="sender_paced"
              value="2147483648"
              c:identifier="GUPNP_DLNA_FLAGS_SENDER_PACED"
              glib:nick="sender-paced"
              glib:name="GUPNP_DLNA_FLAGS_SENDER_PACED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="63">Content source is the clock source during
                                transport</doc>
      </member>
      <member name="time_based_seek"
              value="1073741824"
              c:identifier="GUPNP_DLNA_FLAGS_TIME_BASED_SEEK"
              glib:nick="time-based-seek"
              glib:name="GUPNP_DLNA_FLAGS_TIME_BASED_SEEK">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="65">Limited Operation: time-seek supported</doc>
      </member>
      <member name="byte_based_seek"
              value="536870912"
              c:identifier="GUPNP_DLNA_FLAGS_BYTE_BASED_SEEK"
              glib:nick="byte-based-seek"
              glib:name="GUPNP_DLNA_FLAGS_BYTE_BASED_SEEK">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="66">Limited Operation: byte-seek supported</doc>
      </member>
      <member name="play_container"
              value="268435456"
              c:identifier="GUPNP_DLNA_FLAGS_PLAY_CONTAINER"
              glib:nick="play-container"
              glib:name="GUPNP_DLNA_FLAGS_PLAY_CONTAINER">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="67">Resource supports 'Container Playback'</doc>
      </member>
      <member name="s0_increase"
              value="134217728"
              c:identifier="GUPNP_DLNA_FLAGS_S0_INCREASE"
              glib:nick="s0-increase"
              glib:name="GUPNP_DLNA_FLAGS_S0_INCREASE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="68">Content does not have a fixed beginning</doc>
      </member>
      <member name="sn_increase"
              value="67108864"
              c:identifier="GUPNP_DLNA_FLAGS_SN_INCREASE"
              glib:nick="sn-increase"
              glib:name="GUPNP_DLNA_FLAGS_SN_INCREASE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="69">Content does not have a fixed end</doc>
      </member>
      <member name="rtsp_pause"
              value="33554432"
              c:identifier="GUPNP_DLNA_FLAGS_RTSP_PAUSE"
              glib:nick="rtsp-pause"
              glib:name="GUPNP_DLNA_FLAGS_RTSP_PAUSE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="70">RTSP resource supports pausing of media
                              transfer</doc>
      </member>
      <member name="streaming_transfer_mode"
              value="16777216"
              c:identifier="GUPNP_DLNA_FLAGS_STREAMING_TRANSFER_MODE"
              glib:nick="streaming-transfer-mode"
              glib:name="GUPNP_DLNA_FLAGS_STREAMING_TRANSFER_MODE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="72">Streaming transfer mode supported</doc>
      </member>
      <member name="interactive_transfer_mode"
              value="8388608"
              c:identifier="GUPNP_DLNA_FLAGS_INTERACTIVE_TRANSFER_MODE"
              glib:nick="interactive-transfer-mode"
              glib:name="GUPNP_DLNA_FLAGS_INTERACTIVE_TRANSFER_MODE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="73">Interactive transfer mode
                                             supported</doc>
      </member>
      <member name="background_transfer_mode"
              value="4194304"
              c:identifier="GUPNP_DLNA_FLAGS_BACKGROUND_TRANSFER_MODE"
              glib:nick="background-transfer-mode"
              glib:name="GUPNP_DLNA_FLAGS_BACKGROUND_TRANSFER_MODE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="75">Background transfer mode
                                            supported</doc>
      </member>
      <member name="connection_stall"
              value="2097152"
              c:identifier="GUPNP_DLNA_FLAGS_CONNECTION_STALL"
              glib:nick="connection-stall"
              glib:name="GUPNP_DLNA_FLAGS_CONNECTION_STALL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="77">No content transfer when paused.</doc>
      </member>
      <member name="dlna_v15"
              value="1048576"
              c:identifier="GUPNP_DLNA_FLAGS_DLNA_V15"
              glib:nick="dlna-v15"
              glib:name="GUPNP_DLNA_FLAGS_DLNA_V15">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="78">DLNAv1.5 version flag</doc>
      </member>
      <member name="link_protected_content"
              value="65536"
              c:identifier="GUPNP_DLNA_FLAGS_LINK_PROTECTED_CONTENT"
              glib:nick="link-protected-content"
              glib:name="GUPNP_DLNA_FLAGS_LINK_PROTECTED_CONTENT">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="79">The content is protected.</doc>
      </member>
      <member name="cleartext_byteseek_full"
              value="32768"
              c:identifier="GUPNP_DLNA_FLAGS_CLEAR_TEXT_BYTE_SEEK_FULL"
              glib:nick="cleartext-byteseek-full"
              glib:name="GUPNP_DLNA_FLAGS_CLEAR_TEXT_BYTE_SEEK_FULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="80">Full byte seek on cleartext
                                             domain is supported.</doc>
      </member>
      <member name="lop_cleartext_byteseek"
              value="16384"
              c:identifier="GUPNP_DLNA_FLAGS_LOP_CLEAR_TEXT_BYTE_SEEK"
              glib:nick="lop-cleartext-byteseek"
              glib:name="GUPNP_DLNA_FLAGS_LOP_CLEAR_TEXT_BYTE_SEEK">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="82">Limited operations on
                                             byte seek in cleartext domain.</doc>
      </member>
    </bitfield>
    <bitfield name="DLNAOperation"
              glib:type-name="GUPnPDLNAOperation"
              glib:get-type="gupnp_dlna_operation_get_type"
              c:type="GUPnPDLNAOperation">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-dlna.h"
           line="40">The seek operations supported by a resource.</doc>
      <member name="none"
              value="0"
              c:identifier="GUPNP_DLNA_OPERATION_NONE"
              glib:nick="none"
              glib:name="GUPNP_DLNA_OPERATION_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="42">Resource does not support seeking of any type</doc>
      </member>
      <member name="range"
              value="1"
              c:identifier="GUPNP_DLNA_OPERATION_RANGE"
              glib:nick="range"
              glib:name="GUPNP_DLNA_OPERATION_RANGE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="43">Resource supports byte-seek</doc>
      </member>
      <member name="timeseek"
              value="16"
              c:identifier="GUPNP_DLNA_OPERATION_TIMESEEK"
              glib:nick="timeseek"
              glib:name="GUPNP_DLNA_OPERATION_TIMESEEK">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="44">Resource supports time-seek</doc>
      </member>
    </bitfield>
    <class name="Feature"
           c:symbol-prefix="feature"
           c:type="GUPnPFeature"
           parent="GObject.Object"
           glib:type-name="GUPnPFeature"
           glib:get-type="gupnp_feature_get_type"
           glib:type-struct="FeatureClass">
      <source-position filename="libgupnp-av/gupnp-feature.h" line="27"/>
      <method name="get_name"
              c:identifier="gupnp_feature_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="178">Get the name of the @feature.</doc>
        <source-position filename="libgupnp-av/gupnp-feature.h" line="30"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-feature.c"
               line="184">The name of the @feature.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-feature.c"
                 line="180">#GUPnPFeature</doc>
            <type name="Feature" c:type="GUPnPFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object_ids"
              c:identifier="gupnp_feature_get_object_ids"
              glib:get-property="object-ids">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="212">Get the object IDs related to the @feature.</doc>
        <source-position filename="libgupnp-av/gupnp-feature.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-feature.c"
               line="218">The object IDs related to the @feature.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-feature.c"
                 line="214">#GUPnPFeature</doc>
            <type name="Feature" c:type="GUPnPFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="gupnp_feature_get_version"
              glib:get-property="version">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="195">Get the version of the @feature.</doc>
        <source-position filename="libgupnp-av/gupnp-feature.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-feature.c"
               line="201">The version of the @feature.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-feature.c"
                 line="197">#GUPnPFeature</doc>
            <type name="Feature" c:type="GUPnPFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="123">The name of this feature.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="object-ids"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_object_ids"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="159">The object IDs related to this feature.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_version"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature.c"
             line="141">The version of this feature.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="FeatureClass"
            c:type="GUPnPFeatureClass"
            glib:is-gtype-struct-for="Feature">
      <source-position filename="libgupnp-av/gupnp-feature.h" line="27"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="FeatureListParser"
           c:symbol-prefix="feature_list_parser"
           c:type="GUPnPFeatureListParser"
           parent="GObject.Object"
           glib:type-name="GUPnPFeatureListParser"
           glib:get-type="gupnp_feature_list_parser_get_type"
           glib:type-struct="FeatureListParserClass">
      <source-position filename="libgupnp-av/gupnp-feature-list-parser.h"
                       line="18"/>
      <constructor name="new" c:identifier="gupnp_feature_list_parser_new">
        <source-position filename="libgupnp-av/gupnp-feature-list-parser.h"
                         line="27"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-feature-list-parser.c"
               line="63">A new #GUPnPFeatureListParser object.</doc>
          <type name="FeatureListParser" c:type="GUPnPFeatureListParser*"/>
        </return-value>
      </constructor>
      <method name="parse_text"
              c:identifier="gupnp_feature_list_parser_parse_text"
              throws="1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-feature-list-parser.c"
             line="95">Parses @text and returns the list of available features.
If an error occured @error will be set.</doc>
        <source-position filename="libgupnp-av/gupnp-feature-list-parser.h"
                         line="30"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-feature-list-parser.c"
               line="104">The list of
features or %NULL if an error occured.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Feature"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-feature-list-parser.c"
                 line="97">A #GUPnPFeatureListParser</doc>
            <type name="FeatureListParser" c:type="GUPnPFeatureListParser*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-feature-list-parser.c"
                 line="98">The feature list string to be parsed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FeatureListParserClass"
            c:type="GUPnPFeatureListParserClass"
            glib:is-gtype-struct-for="FeatureListParser">
      <source-position filename="libgupnp-av/gupnp-feature-list-parser.h"
                       line="18"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="LastChangeParser"
           c:symbol-prefix="last_change_parser"
           c:type="GUPnPLastChangeParser"
           parent="GObject.Object"
           glib:type-name="GUPnPLastChangeParser"
           glib:get-type="gupnp_last_change_parser_get_type"
           glib:type-struct="LastChangeParserClass">
      <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                       line="35"/>
      <constructor name="new" c:identifier="gupnp_last_change_parser_new">
        <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-last-change-parser.c"
               line="114">A new #GUPnPLastChangeParser</doc>
          <type name="LastChangeParser" c:type="GUPnPLastChangeParser*"/>
        </return-value>
      </constructor>
      <method name="parse_last_change"
              c:identifier="gupnp_last_change_parser_parse_last_change"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-last-change-parser.c"
             line="209">Parses the xml fragment from a LastChange event.</doc>
        <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-last-change-parser.c"
               line="221">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="211">A #GUPnPLastChangeParser</doc>
            <type name="LastChangeParser" c:type="GUPnPLastChangeParser*"/>
          </instance-parameter>
          <parameter name="instance_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="212">The ID of the AV instance caller is interested in</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="last_change_xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="213">The xml from the "LastChange" event to parse</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="214">The location where to store any error, or NULL</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="215">tuples of state variable name, state variable type, and state
variable value location, terminated with NULL. The state variable values
should be freed after use.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_last_change_valist"
              c:identifier="gupnp_last_change_parser_parse_last_change_valist"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-last-change-parser.c"
             line="123">See gupnp_last_change_parser_parse_last_change(); this version takes a
va_list for use by language bindings.</doc>
        <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-last-change-parser.c"
               line="136">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="125">A #GUPnPLastChangeParser</doc>
            <type name="LastChangeParser" c:type="GUPnPLastChangeParser*"/>
          </instance-parameter>
          <parameter name="instance_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="126">The ID of the AV instance caller is interested in</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="last_change_xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="127">The xml from the "LastChange" event to parse</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="128">The location where to store any error, or NULL</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="var_args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-last-change-parser.c"
                 line="129">A va_list of tuples of state variable name, state variable type,
and state variable value location, terminated with NULL. The state variable
values should be freed after use</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="LastChangeParserClass"
            c:type="GUPnPLastChangeParserClass"
            glib:is-gtype-struct-for="LastChangeParser">
      <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                       line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                           line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                           line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-last-change-parser.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="MediaCollection"
           c:symbol-prefix="media_collection"
           c:type="GUPnPMediaCollection"
           parent="GObject.Object"
           glib:type-name="GUPnPMediaCollection"
           glib:get-type="gupnp_media_collection_get_type"
           glib:type-struct="MediaCollectionClass">
      <source-position filename="libgupnp-av/gupnp-media-collection.h"
                       line="35"/>
      <constructor name="new" c:identifier="gupnp_media_collection_new">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="335">Create a new writable media collection.</doc>
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="340">A new #GUPnPMediaCollection.</doc>
          <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="gupnp_media_collection_new_from_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="348">Parse a new #GUPnPMediaCollection from a block of XML data.</doc>
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="354">A new #GUPnPMediaCollection.</doc>
          <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="350">XML string.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_item" c:identifier="gupnp_media_collection_add_item">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="482">A new #GUPnPDIDLLiteItem object. Unref after
use.</doc>
          <type name="DIDLLiteItem" c:type="GUPnPDIDLLiteItem*"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="480">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_author"
              c:identifier="gupnp_media_collection_get_author"
              glib:get-property="author">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="463">The author of this media collection or %NULL if not set.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="461">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_items" c:identifier="gupnp_media_collection_get_items">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="545">A #GList
containing the elemens of this collection, in proper order. Unref all items
and free the list after use.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DIDLLiteItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="543">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mutable"
              c:identifier="gupnp_media_collection_get_mutable"
              glib:get-property="mutable">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="565">#TRUE if the collections is modifiable, #FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="563">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="gupnp_media_collection_get_string">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="521">XML string representing this media
collection. g_free() after use. If the colleciton is not mutable, returns a
copy of the original string.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="519">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gupnp_media_collection_get_title"
              glib:get-property="title">
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="48"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-media-collection.c"
               line="406">The title of this media collection or %NULL if not set.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="404">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_author"
              c:identifier="gupnp_media_collection_set_author"
              glib:set-property="author">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="421">Set the author of the media collection</doc>
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="423">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
          <parameter name="author" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="424">New author of this media collection.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gupnp_media_collection_set_title"
              glib:set-property="title">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="364">Set the title of a #GUPnPMediaCollection.</doc>
        <source-position filename="libgupnp-av/gupnp-media-collection.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="collection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="366">#GUPnPMediaCollection</doc>
            <type name="MediaCollection" c:type="GUPnPMediaCollection*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-media-collection.c"
                 line="367">New Title of this collection;</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="author"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_author"
                getter="get_author"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="269">The author of this media collection.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="data"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="316">Block of data to parse a collection from. If data is set upon
construction it will override the other properties and create a
unmutable collection parsed from data.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mutable"
                transfer-ownership="none"
                getter="get_mutable"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="301">Whether this media collation is modifyable or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-media-collection.c"
             line="285">The title of this media collection.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MediaCollectionClass"
            c:type="GUPnPMediaCollectionClass"
            glib:is-gtype-struct-for="MediaCollection">
      <source-position filename="libgupnp-av/gupnp-media-collection.h"
                       line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-media-collection.h"
                           line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-media-collection.h"
                           line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-media-collection.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-media-collection.h"
                           line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="OCMFlags"
              glib:type-name="GUPnPOCMFlags"
              glib:get-type="gupnp_ocm_flags_get_type"
              c:type="GUPnPOCMFlags">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-dlna.h"
           line="111">The DLNA OCM flags supported by a DIDL-Lite Object. For details on these
flags please refer to section 7.3.118.4 of DLNA Networked Device
Interoperability Guidelines Volume 1, October 2006.</doc>
      <member name="none"
              value="0"
              c:identifier="GUPNP_OCM_FLAGS_NONE"
              glib:nick="none"
              glib:name="GUPNP_OCM_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="113">No flags</doc>
      </member>
      <member name="upload"
              value="1"
              c:identifier="GUPNP_OCM_FLAGS_UPLOAD"
              glib:nick="upload"
              glib:name="GUPNP_OCM_FLAGS_UPLOAD">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="114">Indicates support for content upload.</doc>
      </member>
      <member name="create_container"
              value="2"
              c:identifier="GUPNP_OCM_FLAGS_CREATE_CONTAINER"
              glib:nick="create-container"
              glib:name="GUPNP_OCM_FLAGS_CREATE_CONTAINER">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="115">Indicates support for creation of child
                                   container.</doc>
      </member>
      <member name="destroyable"
              value="4"
              c:identifier="GUPNP_OCM_FLAGS_DESTROYABLE"
              glib:nick="destroyable"
              glib:name="GUPNP_OCM_FLAGS_DESTROYABLE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="117">This object is destroyable.</doc>
      </member>
      <member name="upload_destroyable"
              value="8"
              c:identifier="GUPNP_OCM_FLAGS_UPLOAD_DESTROYABLE"
              glib:nick="upload-destroyable"
              glib:name="GUPNP_OCM_FLAGS_UPLOAD_DESTROYABLE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="118">Indicates support for upload of
                                     destroyable content.</doc>
      </member>
      <member name="change_metadata"
              value="16"
              c:identifier="GUPNP_OCM_FLAGS_CHANGE_METADATA"
              glib:nick="change-metadata"
              glib:name="GUPNP_OCM_FLAGS_CHANGE_METADATA">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-dlna.h"
             line="120">Indicates support for changing metadata.</doc>
      </member>
    </bitfield>
    <enumeration name="ProtocolError"
                 c:type="GUPnPProtocolError"
                 glib:error-domain="gupnp-protocol-error">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-av-error.h"
           line="25">#GError codes used for errors in the #GUPNP_PROTOCOL_ERROR domain, upon any
protocol related errors.</doc>
      <source-position filename="libgupnp-av/gupnp-av-error.h" line="36"/>
      <member name="invalid_syntax"
              value="0"
              c:identifier="GUPNP_PROTOCOL_ERROR_INVALID_SYNTAX">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-error.h"
             line="27">Invalid syntax.</doc>
      </member>
      <member name="other" value="1" c:identifier="GUPNP_PROTOCOL_ERROR_OTHER">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-av-error.h"
             line="28">Unknown/unhandled protocol related errors.</doc>
      </member>
    </enumeration>
    <class name="ProtocolInfo"
           c:symbol-prefix="protocol_info"
           c:type="GUPnPProtocolInfo"
           parent="GObject.Object"
           glib:type-name="GUPnPProtocolInfo"
           glib:get-type="gupnp_protocol_info_get_type"
           glib:type-struct="ProtocolInfoClass">
      <source-position filename="libgupnp-av/gupnp-protocol-info.h" line="39"/>
      <constructor name="new" c:identifier="gupnp_protocol_info_new">
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="572">A new #GUPnPProtocolInfo object. Unref after usage.</doc>
          <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="gupnp_protocol_info_new_from_string"
                   throws="1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="581">Parses the @protocol_info string and creates a new #GUPnPProtocolInfo object
as a result.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="589">A new #GUPnPProtocolInfo object. Unref after usage.</doc>
          <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
        </return-value>
        <parameters>
          <parameter name="protocol_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="583">The protocol info string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_dlna_conversion"
              c:identifier="gupnp_protocol_info_get_dlna_conversion"
              glib:get-property="dlna-conversion">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="766">Get the DLNA conversion flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="772">The DLNA conversion flags.</doc>
          <type name="DLNAConversion" c:type="GUPnPDLNAConversion"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="768">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_flags"
              c:identifier="gupnp_protocol_info_get_dlna_flags"
              glib:get-property="dlna-flags">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="804">Get the gereric DLNA flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="810">The generic DLNA flags.</doc>
          <type name="DLNAFlags" c:type="GUPnPDLNAFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="806">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_operation"
              c:identifier="gupnp_protocol_info_get_dlna_operation"
              glib:get-property="dlna-operation">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="785">Get the DLNA operation flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="791">The DLNA operation flags.</doc>
          <type name="DLNAOperation" c:type="GUPnPDLNAOperation"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="787">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dlna_profile"
              c:identifier="gupnp_protocol_info_get_dlna_profile"
              glib:get-property="dlna-profile">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="728">Get the DLNA profile of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="97"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="734">The DLNA profile of this info or %NULL. This string should
not be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="730">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_type"
              c:identifier="gupnp_protocol_info_get_mime_type"
              glib:get-property="mime-type">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="709">Get the MIME-type of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="94"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="715">The MIME-type of this info or %NULL. This string should not
be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="711">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_network"
              c:identifier="gupnp_protocol_info_get_network"
              glib:get-property="network">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="691">Get the network this info is associated with.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="91"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="697">The network string or %NULL. This string should not be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="693">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_play_speeds"
              c:identifier="gupnp_protocol_info_get_play_speeds"
              glib:get-property="play-speeds">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="747">Get the allowed play speeds on this info in the form of array of strings.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="100"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="753">The allowed play speeds as array of strings or %NULL. This
return array and it's content must not be modified or freed.</doc>
          <array c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="749">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="gupnp_protocol_info_get_protocol"
              glib:get-property="protocol">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="672">Get the protocol of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="88"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="678">The protocol of this info or %NULL. This string should not
be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="674">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_compatible"
              c:identifier="gupnp_protocol_info_is_compatible">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="989">Checks if the given protocolInfo string is compatible with @info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="996">#TRUE if @protocol_info is compatible with @info, otherwise
#FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="info1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="991">The first #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="info2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="992">The second #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dlna_conversion"
              c:identifier="gupnp_protocol_info_set_dlna_conversion"
              glib:set-property="dlna-conversion">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="929">Set the DLNA conversion flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="931">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="conversion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="932">The bitwise OR of one or more DLNA conversion flags</doc>
            <type name="DLNAConversion" c:type="GUPnPDLNAConversion"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dlna_flags"
              c:identifier="gupnp_protocol_info_set_dlna_flags"
              glib:set-property="dlna-flags">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="969">Set the gereric DLNA flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="971">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="972">The bitwise OR of one or more generic DLNA flags</doc>
            <type name="DLNAFlags" c:type="GUPnPDLNAFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dlna_operation"
              c:identifier="gupnp_protocol_info_set_dlna_operation"
              glib:set-property="dlna-operation">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="949">Set the DLNA operation flags.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="951">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="952">The bitwise OR of one or more DLNA operation flags</doc>
            <type name="DLNAOperation" c:type="GUPnPDLNAOperation"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dlna_profile"
              c:identifier="gupnp_protocol_info_set_dlna_profile"
              glib:set-property="dlna-profile">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="886">Set the DLNA profile of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="888">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="889">The DLNA profile string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mime_type"
              c:identifier="gupnp_protocol_info_set_mime_type"
              glib:set-property="mime-type">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="865">Set the MIME-type of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="867">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="868">The MIME-type string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_network"
              c:identifier="gupnp_protocol_info_set_network"
              glib:set-property="network">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="844">Set the network this info is associated with.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="846">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="network" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="847">The network string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_play_speeds"
              c:identifier="gupnp_protocol_info_set_play_speeds"
              glib:set-property="play-speeds">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="907">Set the allowed play speeds on this info in the form of array of strings.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="909">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="speeds" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="910">The allowed play speeds</doc>
            <type name="utf8" c:type="const char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protocol"
              c:identifier="gupnp_protocol_info_set_protocol"
              glib:set-property="protocol">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="823">Set the protocol of this info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="825">A #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
          <parameter name="protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="826">The protocol string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="gupnp_protocol_info_to_string">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="630">Provides the string representation of @info.</doc>
        <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                         line="49"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-protocol-info.c"
               line="636">String representation of @info.
#g_free after usage.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-protocol-info.c"
                 line="632">The #GUPnPProtocolInfo</doc>
            <type name="ProtocolInfo" c:type="GUPnPProtocolInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="dlna-conversion"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_dlna_conversion"
                getter="get_dlna_conversion"
                default-value="GUPNP_DLNA_CONVERSION_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="520">The DLNA conversion flags.</doc>
        <type name="DLNAConversion"/>
      </property>
      <property name="dlna-flags"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_dlna_flags"
                getter="get_dlna_flags"
                default-value="GUPNP_DLNA_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="552">Various generic DLNA flags.</doc>
        <type name="DLNAFlags"/>
      </property>
      <property name="dlna-operation"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_dlna_operation"
                getter="get_dlna_operation"
                default-value="GUPNP_DLNA_OPERATION_NONE">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="536">The DLNA operation flags.</doc>
        <type name="DLNAOperation"/>
      </property>
      <property name="dlna-profile"
                writable="1"
                transfer-ownership="none"
                setter="set_dlna_profile"
                getter="get_dlna_profile"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="483">The DLNA profile of this info.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mime-type"
                writable="1"
                transfer-ownership="none"
                setter="set_mime_type"
                getter="get_mime_type"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="466">The MIME-type of this info.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="network"
                writable="1"
                transfer-ownership="none"
                setter="set_network"
                getter="get_network"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="448">The network this info is associated with.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="play-speeds"
                writable="1"
                transfer-ownership="none"
                setter="set_play_speeds"
                getter="get_play_speeds">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="500">The allowed play speeds on this info in the form of array of
strings.</doc>
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="protocol"
                writable="1"
                transfer-ownership="none"
                setter="set_protocol"
                getter="get_protocol"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-protocol-info.c"
             line="431">The protocol of this info.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ProtocolInfoClass"
            c:type="GUPnPProtocolInfoClass"
            glib:is-gtype-struct-for="ProtocolInfo">
      <source-position filename="libgupnp-av/gupnp-protocol-info.h" line="39"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                           line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                           line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                           line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-protocol-info.h"
                           line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SearchCriteriaOp"
                 glib:type-name="GUPnPSearchCriteriaOp"
                 glib:get-type="gupnp_search_criteria_op_get_type"
                 c:type="GUPnPSearchCriteriaOp">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-search-criteria-parser.h"
           line="26">The possible operators in SearchCriteria strings.</doc>
      <member name="EQ"
              value="271"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_EQ"
              glib:nick="EQ"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_EQ">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="28">'='</doc>
      </member>
      <member name="NEQ"
              value="272"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_NEQ"
              glib:nick="NEQ"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_NEQ">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="29">'!='</doc>
      </member>
      <member name="LESS"
              value="273"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_LESS"
              glib:nick="LESS"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_LESS">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="30">'&lt;'</doc>
      </member>
      <member name="LEQ"
              value="274"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_LEQ"
              glib:nick="LEQ"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_LEQ">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="31">'&lt;='</doc>
      </member>
      <member name="GREATER"
              value="275"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_GREATER"
              glib:nick="GREATER"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_GREATER">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="32">'&gt;'</doc>
      </member>
      <member name="GEQ"
              value="276"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_GEQ"
              glib:nick="GEQ"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_GEQ">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="33">'&gt;='</doc>
      </member>
      <member name="CONTAINS"
              value="277"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_CONTAINS"
              glib:nick="CONTAINS"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_CONTAINS">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="34">'contains'</doc>
      </member>
      <member name="DOES_NOT_CONTAIN"
              value="278"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_DOES_NOT_CONTAIN"
              glib:nick="DOES_NOT_CONTAIN"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_DOES_NOT_CONTAIN">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="35">'doesNotContain'</doc>
      </member>
      <member name="DERIVED_FROM"
              value="279"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_DERIVED_FROM"
              glib:nick="DERIVED_FROM"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_DERIVED_FROM">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="36">'derivedFrom'</doc>
      </member>
      <member name="EXISTS"
              value="280"
              c:identifier="GUPNP_SEARCH_CRITERIA_OP_EXISTS"
              glib:nick="EXISTS"
              glib:name="GUPNP_SEARCH_CRITERIA_OP_EXISTS">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="37">'exists'</doc>
      </member>
    </enumeration>
    <class name="SearchCriteriaParser"
           c:symbol-prefix="search_criteria_parser"
           c:type="GUPnPSearchCriteriaParser"
           parent="GObject.Object"
           glib:type-name="GUPnPSearchCriteriaParser"
           glib:get-type="gupnp_search_criteria_parser_get_type"
           glib:type-struct="SearchCriteriaParserClass">
      <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                       line="98"/>
      <constructor name="new" c:identifier="gupnp_search_criteria_parser_new">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-search-criteria-parser.c"
               line="328">A new #GUPnPSearchCriteriaParser object.</doc>
          <type name="SearchCriteriaParser"
                c:type="GUPnPSearchCriteriaParser*"/>
        </return-value>
      </constructor>
      <function name="error_quark"
                c:identifier="gupnp_search_criteria_parser_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="begin_parens">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="conjunction">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="disjunction">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_parens">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="expression" throws="1">
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <type name="SearchCriteriaOp" c:type="GUPnPSearchCriteriaOp"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="parse_text"
              c:identifier="gupnp_search_criteria_parser_parse_text"
              throws="1">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="550">Parses @text, emitting the various defined signals on the way. If an
error occured @error will be set.</doc>
        <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-search-criteria-parser.c"
               line="559">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="552">A #GUPnPSearchCriteriaParser</doc>
            <type name="SearchCriteriaParser"
                  c:type="GUPnPSearchCriteriaParser*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="553">The search criteria string to be parsed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="begin-parens" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="221">The ::begin_parens signal is emitted to mark the beginning of a
parenthetical expression.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="conjunction" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="259">The ::conjuction signal is emitted whenever a conjuction marker
&amp;lpar;and&amp;rpar; is parsed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disjunction" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="278">The ::disjuction signal is emitted whenever a disjuction marker
&amp;lpar;or&amp;rpar is parsed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="end-parens" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="240">The ::end_parens signal is emitted to mark the end of a parenthetical
expression.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="expression" when="last">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.c"
             line="297">The ::expression signal is emitted whenever an expression is parsed.
Set @error and return %FALSE if an error occurred.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="300">The property</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="op" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="301">The operator as #GUPnPSearchCriteriaOp</doc>
            <type name="SearchCriteriaOp"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="302">The value as string</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgupnp-av/gupnp-search-criteria-parser.c"
                 line="303">Place-holder for any possible errors from handler</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SearchCriteriaParserClass"
            c:type="GUPnPSearchCriteriaParserClass"
            glib:is-gtype-struct-for="SearchCriteriaParser">
      <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                       line="98"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="begin_parens">
        <callback name="begin_parens">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="SearchCriteriaParser"
                    c:type="GUPnPSearchCriteriaParser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_parens">
        <callback name="end_parens">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="SearchCriteriaParser"
                    c:type="GUPnPSearchCriteriaParser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="conjunction">
        <callback name="conjunction">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="SearchCriteriaParser"
                    c:type="GUPnPSearchCriteriaParser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="disjunction">
        <callback name="disjunction">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="SearchCriteriaParser"
                    c:type="GUPnPSearchCriteriaParser*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="expression">
        <callback name="expression" throws="1">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="parser" transfer-ownership="none">
              <type name="SearchCriteriaParser"
                    c:type="GUPnPSearchCriteriaParser*"/>
            </parameter>
            <parameter name="property" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="op" transfer-ownership="none">
              <type name="SearchCriteriaOp" c:type="GUPnPSearchCriteriaOp"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gupnp_reserved1" introspectable="0">
        <callback name="_gupnp_reserved1">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved2" introspectable="0">
        <callback name="_gupnp_reserved2">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved3" introspectable="0">
        <callback name="_gupnp_reserved3">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gupnp_reserved4" introspectable="0">
        <callback name="_gupnp_reserved4">
          <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="SearchCriteriaParserError"
                 c:type="GUPnPSearchCriteriaParserError">
      <source-position filename="libgupnp-av/gupnp-search-criteria-parser.h"
                       line="76"/>
      <member name="search_criteria_parser_error_failed"
              value="0"
              c:identifier="GUPNP_SEARCH_CRITERIA_PARSER_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-search-criteria-parser.h"
             line="71">Parsing the search criteria
failed.</doc>
      </member>
    </enumeration>
    <function name="format_date_time_for_didl_lite"
              c:identifier="gupnp_format_date_time_for_didl_lite">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-object.c"
           line="2649">Get the representation of DateTime as an ISO8601 string.

DLNA requires a specific subset of ISO8601</doc>
      <source-position filename="libgupnp-av/gupnp-didl-lite-object.h"
                       line="281"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgupnp-av/gupnp-didl-lite-object.c"
             line="2656">@date_time formatted as an ISO8601 string</doc>
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="date_time" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgupnp-av/gupnp-didl-lite-object.c"
               line="2651">DateTime to format</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </parameter>
        <parameter name="date_only" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="gupnp-cds-last-change-parser">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-cds-last-change-parser.c"
           line="10">#GUPnPCDSLastChangeParser parses XML strings from
CDS's LastChange state variable.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-container">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-container.c"
           line="14">#GUPnPDIDLLiteContainer respresents a DIDL-Lite container element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-contributor">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-contributor.c"
           line="11">#GUPnPDIDLLiteContributor respresents a contributor (artist, author, actor,
producer, director, producer and contributor) property in a DIDL-Lite object.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-create-class">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-createclass.c"
           line="13">#GUPnPDIDLLiteCreateClass respresents a DIDL-Lite create class element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-descriptor">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-descriptor.c"
           line="11">#GUPnPDIDLLiteDescriptor respresent a DIDL-Lite descriptor (desc) element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-item">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-item.c"
           line="11">#GUPnPDIDLLiteItem respresents a DIDL-Lite item element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-object">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-object.c"
           line="13">#GUPnPDIDLLiteObject respresent a DIDL-Lite object element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-parser">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-parser.c"
           line="10">#GUPnPDIDLLiteParser parses DIDL-Lite XML strings.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-resource">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-resource.c"
           line="15">#GUPnPDIDLLiteResource respresent a DIDL-Lite resource (res) element.</doc>
    </docsection>
    <docsection name="gupnp-didl-lite-writer">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-didl-lite-writer.c"
           line="12">#GUPnPDIDLLiteWriter is a helper class for writing DIDL-Lite fragments.</doc>
    </docsection>
    <docsection name="gupnp-feature">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-feature.c"
           line="10">#GUPnPFeature respresent a Feature element.</doc>
    </docsection>
    <docsection name="gupnp-feature-list-parser">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-feature-list-parser.c"
           line="10">#GUPnPFeatureListParser parses XML strings from ContentDirectory
FeatureList state variable.</doc>
    </docsection>
    <docsection name="gupnp-last-change-parser">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-last-change-parser.c"
           line="12">#GUPnPLastChangeParser parses XML strings from LastChange events that are
generated by AVTransport and RenderingControl services.</doc>
    </docsection>
    <docsection name="gupnp-media-collection">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-media-collection.c"
           line="10">#GUPnPMediaCollection is a helper class for writing media collection files.</doc>
    </docsection>
    <docsection name="gupnp-protocol-info">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-protocol-info.c"
           line="13">#GUPnPProtocolInfo provides a convenient API to deal with ProtocolInfo
strings used in UPnP AV specifications.</doc>
    </docsection>
    <docsection name="gupnp-search-criteria-parser">
      <doc xml:space="preserve"
           filename="libgupnp-av/gupnp-search-criteria-parser.c"
           line="10">#GUPnPSearchCriteriaParser parses ContentDirectory search criteria
strings.

Note that no signals will be emitted if a wildcard is specified,
and that the user is responsible for ensuring precedence of conjunction
over disjunction.</doc>
    </docsection>
    <function name="protocol_error_quark"
              c:identifier="gupnp_protocol_error_quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
