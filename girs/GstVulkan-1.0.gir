<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="GstVideo" version="1.0"/>
  <include name="Vulkan" version="1.0"/>
  <package name="gstreamer-vulkan-1.0"/>
  <c:include name="gst/vulkan/vulkan.h"/>
  <namespace name="GstVulkan"
             version="1.0"
             shared-library="libgstvulkan-1.0.so.0"
             c:identifier-prefixes="Gst"
             c:symbol-prefixes="gst">
    <constant name="CAPS_FEATURE_MEMORY_VULKAN_BUFFER"
              value="memory:VulkanBuffer"
              c:type="GST_CAPS_FEATURE_MEMORY_VULKAN_BUFFER">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CAPS_FEATURE_MEMORY_VULKAN_IMAGE"
              value="memory:VulkanImage"
              c:type="GST_CAPS_FEATURE_MEMORY_VULKAN_IMAGE">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="IS_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_BUFFER_POOL"
                    c:identifier="GST_IS_VULKAN_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_COMMAND_POOL"
                    c:identifier="GST_IS_VULKAN_COMMAND_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_COMMAND_POOL_CLASS"
                    c:identifier="GST_IS_VULKAN_COMMAND_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DESCRIPTOR_CACHE"
                    c:identifier="GST_IS_VULKAN_DESCRIPTOR_CACHE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DESCRIPTOR_CACHE_CLASS"
                    c:identifier="GST_IS_VULKAN_DESCRIPTOR_CACHE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DESCRIPTOR_POOL"
                    c:identifier="GST_IS_VULKAN_DESCRIPTOR_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DESCRIPTOR_POOL_CLASS"
                    c:identifier="GST_IS_VULKAN_DESCRIPTOR_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DEVICE"
                    c:identifier="GST_IS_VULKAN_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DEVICE_CLASS"
                    c:identifier="GST_IS_VULKAN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DISPLAY"
                    c:identifier="GST_IS_VULKAN_DISPLAY"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_DISPLAY_CLASS"
                    c:identifier="GST_IS_VULKAN_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_FENCE_CACHE"
                    c:identifier="GST_IS_VULKAN_FENCE_CACHE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="74"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_FENCE_CACHE_CLASS"
                    c:identifier="GST_IS_VULKAN_FENCE_CACHE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="75"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_FULL_SCREEN_QUAD"
                    c:identifier="GST_IS_VULKAN_FULL_SCREEN_QUAD"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_FULL_SCREEN_QUAD_CLASS"
                    c:identifier="GST_IS_VULKAN_FULL_SCREEN_QUAD_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_HANDLE_POOL"
                    c:identifier="GST_IS_VULKAN_HANDLE_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_HANDLE_POOL_CLASS"
                    c:identifier="GST_IS_VULKAN_HANDLE_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_BUFFER_POOL"
                    c:identifier="GST_IS_VULKAN_IMAGE_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_INSTANCE"
                    c:identifier="GST_IS_VULKAN_INSTANCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_INSTANCE_CLASS"
                    c:identifier="GST_IS_VULKAN_INSTANCE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_MEMORY_ALLOCATOR"
                    c:identifier="GST_IS_VULKAN_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_IS_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_PHYSICAL_DEVICE"
                    c:identifier="GST_IS_VULKAN_PHYSICAL_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_PHYSICAL_DEVICE_CLASS"
                    c:identifier="GST_IS_VULKAN_PHYSICAL_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="33"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_QUEUE"
                    c:identifier="GST_IS_VULKAN_QUEUE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_QUEUE_CLASS"
                    c:identifier="GST_IS_VULKAN_QUEUE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_SWAPPER"
                    c:identifier="GST_IS_VULKAN_SWAPPER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_SWAPPER_CLASS"
                    c:identifier="GST_IS_VULKAN_SWAPPER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_TRASH_LIST"
                    c:identifier="GST_IS_VULKAN_TRASH_LIST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="117"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_TRASH_LIST_CLASS"
                    c:identifier="GST_IS_VULKAN_TRASH_LIST_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="118"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_VIDEO_FILTER"
                    c:identifier="GST_IS_VULKAN_VIDEO_FILTER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_VIDEO_FILTER_CLASS"
                    c:identifier="GST_IS_VULKAN_VIDEO_FILTER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_WINDOW"
                    c:identifier="GST_IS_VULKAN_WINDOW"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VULKAN_WINDOW_CLASS"
                    c:identifier="GST_IS_VULKAN_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="34"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_BUFFER_MEMORY_ALLOCATOR_NAME"
              value="VulkanBuffer"
              c:type="GST_VULKAN_BUFFER_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_BUFFER_POOL"
                    c:identifier="GST_VULKAN_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_BUFFER_POOL_CAST"
                    c:identifier="GST_VULKAN_BUFFER_POOL_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL"
                    c:identifier="GST_VULKAN_COMMAND_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="27"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL_CLASS"
                    c:identifier="GST_VULKAN_COMMAND_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="28"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_COMMAND_POOL_GET_CLASS"
                    c:identifier="GST_VULKAN_COMMAND_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_CACHE"
                    c:identifier="GST_VULKAN_DESCRIPTOR_CACHE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="28"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_CACHE_CLASS"
                    c:identifier="GST_VULKAN_DESCRIPTOR_CACHE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="29"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_CACHE_GET_CLASS"
                    c:identifier="GST_VULKAN_DESCRIPTOR_CACHE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_POOL"
                    c:identifier="GST_VULKAN_DESCRIPTOR_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_POOL_CLASS"
                    c:identifier="GST_VULKAN_DESCRIPTOR_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DESCRIPTOR_POOL_GET_CLASS"
                    c:identifier="GST_VULKAN_DESCRIPTOR_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DEVICE"
                    c:identifier="GST_VULKAN_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DEVICE_CLASS"
                    c:identifier="GST_VULKAN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_DEVICE_CONTEXT_TYPE_STR"
              value="gst.vulkan.device"
              c:type="GST_VULKAN_DEVICE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_DEVICE_GET_CLASS"
                    c:identifier="GST_VULKAN_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY"
                    c:identifier="GST_VULKAN_DISPLAY"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY_CAST"
                    c:identifier="GST_VULKAN_DISPLAY_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_DISPLAY_CLASS"
                    c:identifier="GST_VULKAN_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_DISPLAY_CONTEXT_TYPE_STR"
              value="gst.vulkan.display"
              c:type="GST_VULKAN_DISPLAY_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_DISPLAY_GET_CLASS"
                    c:identifier="GST_VULKAN_DISPLAY_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="37"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_EXTENT2D_ARGS"
                    c:identifier="GST_VULKAN_EXTENT2D_ARGS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                       line="33"/>
      <parameters>
        <parameter name="var">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_EXTENT3D_ARGS"
                    c:identifier="GST_VULKAN_EXTENT3D_ARGS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                       line="31"/>
      <parameters>
        <parameter name="var">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_CACHE"
                    c:identifier="GST_VULKAN_FENCE_CACHE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="72"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_CACHE_CLASS"
                    c:identifier="GST_VULKAN_FENCE_CACHE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="73"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_CACHE_GET_CLASS"
                    c:identifier="GST_VULKAN_FENCE_CACHE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="76"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_CAST"
                    c:identifier="GST_VULKAN_FENCE_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="32"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FENCE_FENCE"
                    c:identifier="GST_VULKAN_FENCE_FENCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="33"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FULL_SCREEN_QUAD"
                    c:identifier="GST_VULKAN_FULL_SCREEN_QUAD"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FULL_SCREEN_QUAD_CLASS"
                    c:identifier="GST_VULKAN_FULL_SCREEN_QUAD_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_FULL_SCREEN_QUAD_GET_CLASS"
                    c:identifier="GST_VULKAN_FULL_SCREEN_QUAD_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_HANDLE_POOL"
                    c:identifier="GST_VULKAN_HANDLE_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_HANDLE_POOL_CAST"
                    c:identifier="GST_VULKAN_HANDLE_POOL_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="39"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_HANDLE_POOL_CLASS"
                    c:identifier="GST_VULKAN_HANDLE_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_HANDLE_POOL_GET_CLASS"
                    c:identifier="GST_VULKAN_HANDLE_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_BUFFER_POOL"
                    c:identifier="GST_VULKAN_IMAGE_BUFFER_POOL"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_BUFFER_POOL_CAST"
                    c:identifier="GST_VULKAN_IMAGE_BUFFER_POOL_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_IMAGE_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_IMAGE_MEMORY_ALLOCATOR_NAME"
              value="VulkanImage"
              c:type="GST_VULKAN_IMAGE_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_INSTANCE"
                    c:identifier="GST_VULKAN_INSTANCE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="29"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_INSTANCE_CLASS"
                    c:identifier="GST_VULKAN_INSTANCE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="30"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_INSTANCE_CONTEXT_TYPE_STR"
              value="gst.vulkan.instance"
              c:type="GST_VULKAN_INSTANCE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_INSTANCE_GET_CLASS"
                    c:identifier="GST_VULKAN_INSTANCE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="33"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_MAX_COMPONENTS"
              value="4"
              c:type="GST_VULKAN_MAX_COMPONENTS">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="30"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_CAST"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_CAST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_CLASS"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_MEMORY_ALLOCATOR_GET_CLASS"
                    c:identifier="GST_VULKAN_MEMORY_ALLOCATOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_MEMORY_ALLOCATOR_NAME"
              value="Vulkan"
              c:type="GST_VULKAN_MEMORY_ALLOCATOR_NAME">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="VULKAN_NON_DISPATCHABLE_HANDLE_FORMAT"
              value="p"
              c:type="GST_VULKAN_NON_DISPATCHABLE_HANDLE_FORMAT">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkhandle.h"
           line="37">The printf format specifier for raw Vulkan non dispatchable handles.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_PHYSICAL_DEVICE"
                    c:identifier="GST_VULKAN_PHYSICAL_DEVICE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="30"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_PHYSICAL_DEVICE_CLASS"
                    c:identifier="GST_VULKAN_PHYSICAL_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="31"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_PHYSICAL_DEVICE_GET_CLASS"
                    c:identifier="GST_VULKAN_PHYSICAL_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="34"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_QUEUE"
                    c:identifier="GST_VULKAN_QUEUE"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="28"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_QUEUE_CLASS"
                    c:identifier="GST_VULKAN_QUEUE_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="29"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_QUEUE_CONTEXT_TYPE_STR"
              value="gst.vulkan.queue"
              c:type="GST_VULKAN_QUEUE_CONTEXT_TYPE_STR">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_QUEUE_GET_CLASS"
                    c:identifier="GST_VULKAN_QUEUE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="32"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER"
                    c:identifier="GST_VULKAN_SWAPPER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER_CLASS"
                    c:identifier="GST_VULKAN_SWAPPER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_SWAPPER_GET_CLASS"
                    c:identifier="GST_VULKAN_SWAPPER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="VULKAN_SWAPPER_VIDEO_FORMATS"
              value=" { RGBA, BGRA, RGB, BGR } "
              c:type="GST_VULKAN_SWAPPER_VIDEO_FORMATS">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="VULKAN_TRASH_LIST"
                    c:identifier="GST_VULKAN_TRASH_LIST"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="114"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_TRASH_LIST_CLASS"
                    c:identifier="GST_VULKAN_TRASH_LIST_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="115"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_TRASH_LIST_GET_CLASS"
                    c:identifier="GST_VULKAN_TRASH_LIST_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="116"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_VIDEO_FILTER"
                    c:identifier="GST_VULKAN_VIDEO_FILTER"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_VIDEO_FILTER_CLASS"
                    c:identifier="GST_VULKAN_VIDEO_FILTER_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_VIDEO_FILTER_GET_CLASS"
                    c:identifier="GST_VULKAN_VIDEO_FILTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW"
                    c:identifier="GST_VULKAN_WINDOW"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="31"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_CLASS"
                    c:identifier="GST_VULKAN_WINDOW_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="32"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_GET_CLASS"
                    c:identifier="GST_VULKAN_WINDOW_GET_CLASS"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="35"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_GET_LOCK"
                    c:identifier="GST_VULKAN_WINDOW_GET_LOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="41"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_LOCK"
                    c:identifier="GST_VULKAN_WINDOW_LOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="39"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VULKAN_WINDOW_UNLOCK"
                    c:identifier="GST_VULKAN_WINDOW_UNLOCK"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="40"/>
      <parameters>
        <parameter name="w">
        </parameter>
      </parameters>
    </function-macro>
    <record name="VulkanBarrierBufferInfo" c:type="GstVulkanBarrierBufferInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="54"/>
      <field name="parent" writable="1">
        <type name="VulkanBarrierMemoryInfo"
              c:type="GstVulkanBarrierMemoryInfo"/>
      </field>
      <field name="offset" writable="1">
        <type name="Vulkan.DeviceSize" c:type="VkDeviceSize"/>
      </field>
      <field name="size" writable="1">
        <type name="Vulkan.DeviceSize" c:type="VkDeviceSize"/>
      </field>
    </record>
    <enumeration name="VulkanBarrierFlags"
                 glib:type-name="GstVulkanBarrierFlags"
                 glib:get-type="gst_vulkan_barrier_flags_get_type"
                 c:type="GstVulkanBarrierFlags">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_BARRIER_FLAG_NONE"
              glib:nick="none">
      </member>
    </enumeration>
    <record name="VulkanBarrierImageInfo" c:type="GstVulkanBarrierImageInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="52"/>
      <field name="parent" writable="1">
        <type name="VulkanBarrierMemoryInfo"
              c:type="GstVulkanBarrierMemoryInfo"/>
      </field>
      <field name="image_layout" writable="1">
        <type name="Vulkan.ImageLayout" c:type="VkImageLayout"/>
      </field>
      <field name="subresource_range" writable="1">
        <type name="Vulkan.ImageSubresourceRange"
              c:type="VkImageSubresourceRange"/>
      </field>
    </record>
    <record name="VulkanBarrierMemoryInfo" c:type="GstVulkanBarrierMemoryInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbarrier.h"
                       line="49"/>
      <field name="type" writable="1">
        <type name="VulkanBarrierType" c:type="GstVulkanBarrierType"/>
      </field>
      <field name="flags" writable="1">
        <type name="VulkanBarrierFlags" c:type="GstVulkanBarrierFlags"/>
      </field>
      <field name="queue" writable="1">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="pipeline_stages" writable="1">
        <type name="Vulkan.PipelineStageFlags" c:type="VkPipelineStageFlags"/>
      </field>
      <field name="access_flags" writable="1">
        <type name="Vulkan.AccessFlags" c:type="VkAccessFlags"/>
      </field>
    </record>
    <enumeration name="VulkanBarrierType"
                 glib:type-name="GstVulkanBarrierType"
                 glib:get-type="gst_vulkan_barrier_type_get_type"
                 c:type="GstVulkanBarrierType">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_BARRIER_NONE"
              glib:nick="none">
      </member>
      <member name="type_memory"
              value="1"
              c:identifier="GST_VULKAN_BARRIER_TYPE_MEMORY"
              glib:nick="type-memory">
      </member>
      <member name="type_buffer"
              value="2"
              c:identifier="GST_VULKAN_BARRIER_TYPE_BUFFER"
              glib:nick="type-buffer">
      </member>
      <member name="type_image"
              value="3"
              c:identifier="GST_VULKAN_BARRIER_TYPE_IMAGE"
              glib:nick="type-image">
      </member>
    </enumeration>
    <record name="VulkanBufferMemory" c:type="GstVulkanBufferMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="74"/>
      <field name="parent" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="buffer" writable="1">
        <type name="Vulkan.Buffer" c:type="VkBuffer"/>
      </field>
      <field name="vk_mem" writable="1">
        <type name="VulkanMemory" c:type="GstVulkanMemory*"/>
      </field>
      <field name="requirements" writable="1">
        <type name="Vulkan.MemoryRequirements" c:type="VkMemoryRequirements"/>
      </field>
      <field name="usage" writable="1">
        <type name="Vulkan.BufferUsageFlags" c:type="VkBufferUsageFlags"/>
      </field>
      <field name="barrier" writable="1">
        <type name="VulkanBarrierBufferInfo"
              c:type="GstVulkanBarrierBufferInfo"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="notify" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <function name="alloc"
                c:identifier="gst_vulkan_buffer_memory_alloc"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="274">Allocate a new #GstVulkanBufferMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="283">a #GstMemory object backed by a vulkan buffer
         backed by vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="276">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="277">size of the new buffer</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="278">buffer usage flags</doc>
            <type name="Vulkan.BufferUsageFlags" c:type="VkBufferUsageFlags"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="279">memory properties flags for the backing memory</doc>
            <type name="Vulkan.MemoryPropertyFlags"
                  c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_buffer_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="355">Initializes the Vulkan buffer memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanBufferMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="wrapped"
                c:identifier="gst_vulkan_buffer_memory_wrapped"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="300">Allocated a new wrapped #GstVulkanBufferMemory with @buffer.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="310">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="302">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="303">a #VkBuffer</doc>
            <type name="Vulkan.Buffer" c:type="VkBuffer"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="304">usage flags of @buffer</doc>
            <type name="Vulkan.BufferUsageFlags" c:type="VkBufferUsageFlags"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="305">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
                 line="306">a #GDestroyNotify called when @buffer is no longer in use</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanBufferMemoryAllocator"
           c:symbol-prefix="vulkan_buffer_memory_allocator"
           c:type="GstVulkanBufferMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanBufferMemoryAllocator"
           glib:get-type="gst_vulkan_buffer_memory_allocator_get_type"
           glib:type-struct="VulkanBufferMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
           line="76">Opaque #GstVulkanBufferMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="94"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanBufferMemoryAllocatorClass"
            c:type="GstVulkanBufferMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanBufferMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
           line="86">The #GstVulkanBufferMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="94"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <class name="VulkanBufferPool"
           c:symbol-prefix="vulkan_buffer_pool"
           c:type="GstVulkanBufferPool"
           parent="Gst.BufferPool"
           glib:type-name="GstVulkanBufferPool"
           glib:get-type="gst_vulkan_buffer_pool_get_type"
           glib:type-struct="VulkanBufferPoolClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
           line="39">Opaque GstVulkanBufferPool struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="59"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_buffer_pool_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbufferpool.c"
               line="193">a #GstBufferPool that allocates buffers with #GstGLMemory</doc>
          <type name="Gst.BufferPool" c:type="GstBufferPool*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkbufferpool.c"
                 line="191">the #GstVulkanDevice to use</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="bufferpool">
        <type name="Gst.BufferPool" c:type="GstBufferPool"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
    </class>
    <record name="VulkanBufferPoolClass"
            c:type="GstVulkanBufferPoolClass"
            glib:is-gtype-struct-for="VulkanBufferPool">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
           line="51">The #GstVulkanBufferPoolClass structure contains only private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbufferpool.h"
                       line="59"/>
      <field name="parent_class">
        <type name="Gst.BufferPoolClass" c:type="GstBufferPoolClass"/>
      </field>
    </record>
    <record name="VulkanBufferPoolPrivate"
            c:type="GstVulkanBufferPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="85"/>
    </record>
    <record name="VulkanCommandBuffer"
            c:type="GstVulkanCommandBuffer"
            glib:type-name="GstVulkanCommandBuffer"
            glib:get-type="gst_vulkan_command_buffer_get_type"
            c:symbol-prefix="vulkan_command_buffer">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                       line="48"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="cmd" writable="1">
        <type name="Vulkan.CommandBuffer" c:type="VkCommandBuffer"/>
      </field>
      <field name="pool" writable="1">
        <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
      </field>
      <field name="level" writable="1">
        <type name="Vulkan.CommandBufferLevel" c:type="VkCommandBufferLevel"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <constructor name="new_wrapped"
                   c:identifier="gst_vulkan_command_buffer_new_wrapped">
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                         line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.c"
               line="99">a new #GstVulkanCommandBuffer</doc>
          <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.c"
                 line="96">a VkCommandBuffer</doc>
            <type name="Vulkan.CommandBuffer" c:type="VkCommandBuffer"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.c"
                 line="97">the VkCommandBufferLevel for @cmd</doc>
            <type name="Vulkan.CommandBufferLevel"
                  c:type="VkCommandBufferLevel"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref"
              c:identifier="gst_vulkan_command_buffer_ref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
             line="50">Increases the refcount of the given buffer by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
               line="56">@buf</doc>
          <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                 line="52">a #GstVulkanCommandBuffer.</doc>
            <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_command_buffer_unref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
             line="65">Decreases the refcount of the buffer. If the refcount reaches 0, the buffer
will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cmd" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                 line="67">a #GstVulkanCommandBuffer.</doc>
            <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="VulkanCommandPool"
           c:symbol-prefix="vulkan_command_pool"
           c:type="GstVulkanCommandPool"
           parent="Gst.Object"
           glib:type-name="GstVulkanCommandPool"
           glib:get-type="gst_vulkan_command_pool_get_type"
           glib:type-struct="VulkanCommandPoolClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="47"/>
      <method name="create"
              c:identifier="gst_vulkan_command_pool_create"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
               line="167">a new or recycled primary #GstVulkanCommandBuffer</doc>
          <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="164">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_queue"
              c:identifier="gst_vulkan_command_pool_get_queue"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
               line="112">the parent #GstVulkanQueue for this command pool</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="110">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lock" c:identifier="gst_vulkan_command_pool_lock">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
             line="235">This should be called to ensure no other thread will attempt to access
the pool's internal resources.  Any modification of any of the allocated
#GstVulkanCommandBuffer's need to be encapsulated in a
gst_vulkan_command_pool_lock()/gst_vulkan_command_pool_unlock() pair to meet
the Vulkan API requirements that host access to the command pool is
externally synchronised.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="237">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unlock" c:identifier="gst_vulkan_command_pool_unlock">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
             line="255">See the documentation for gst_vulkan_command_pool_lock() for when you would
need to use this function.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkcommandpool.c"
                 line="257">a #GstVulkanCommandPool</doc>
            <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="pool">
        <type name="Vulkan.CommandPool" c:type="VkCommandPool"/>
      </field>
    </class>
    <record name="VulkanCommandPoolClass"
            c:type="GstVulkanCommandPoolClass"
            glib:is-gtype-struct-for="VulkanCommandPool">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandpool.h"
                       line="47"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanCommandPoolPrivate"
            c:type="GstVulkanCommandPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="46"/>
    </record>
    <class name="VulkanDescriptorCache"
           c:symbol-prefix="vulkan_descriptor_cache"
           c:type="GstVulkanDescriptorCache"
           parent="VulkanHandlePool"
           glib:type-name="GstVulkanDescriptorCache"
           glib:get-type="gst_vulkan_descriptor_cache_get_type"
           glib:type-struct="VulkanDescriptorCacheClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="46"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_descriptor_cache_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                         line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
               line="73">a new #GstVulkanDescriptorCache</doc>
          <type name="VulkanDescriptorCache"
                c:type="GstVulkanDescriptorCache*"/>
        </return-value>
        <parameters>
          <parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
                 line="69">a #GstVulkanDescriptorPool</doc>
            <type name="VulkanDescriptorPool"
                  c:type="GstVulkanDescriptorPool*"/>
          </parameter>
          <parameter name="n_layouts" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
                 line="70">number of @layouts</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="layouts" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
                 line="71">list of #GstVulkanHandle containing descriptor set layouts</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle**"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="acquire"
              c:identifier="gst_vulkan_descriptor_cache_acquire"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                         line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
               line="157">a new #GstVulkanDescriptorSet</doc>
          <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cache" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.c"
                 line="154">a #GstVulkanDescriptorCache</doc>
            <type name="VulkanDescriptorCache"
                  c:type="GstVulkanDescriptorCache*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="VulkanHandlePool" c:type="GstVulkanHandlePool"/>
      </field>
      <field name="pool">
        <type name="VulkanDescriptorPool" c:type="GstVulkanDescriptorPool*"/>
      </field>
    </class>
    <record name="VulkanDescriptorCacheClass"
            c:type="GstVulkanDescriptorCacheClass"
            glib:is-gtype-struct-for="VulkanDescriptorCache">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorcache.h"
                       line="46"/>
      <field name="parent_class">
        <type name="VulkanHandlePoolClass" c:type="GstVulkanHandlePoolClass"/>
      </field>
    </record>
    <record name="VulkanDescriptorCachePrivate"
            c:type="GstVulkanDescriptorCachePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="60"/>
    </record>
    <class name="VulkanDescriptorPool"
           c:symbol-prefix="vulkan_descriptor_pool"
           c:type="GstVulkanDescriptorPool"
           parent="Gst.Object"
           glib:type-name="GstVulkanDescriptorPool"
           glib:get-type="gst_vulkan_descriptor_pool_get_type"
           glib:type-struct="VulkanDescriptorPoolClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="47"/>
      <constructor name="new_wrapped"
                   c:identifier="gst_vulkan_descriptor_pool_new_wrapped"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
               line="94">a new #GstVulkanDescriptorPool</doc>
          <type name="VulkanDescriptorPool" c:type="GstVulkanDescriptorPool*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
                 line="91">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="pool" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
                 line="92">a #VkDescriptorPool</doc>
            <type name="Vulkan.DescriptorPool" c:type="VkDescriptorPool"/>
          </parameter>
          <parameter name="max_sets" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="create"
              c:identifier="gst_vulkan_descriptor_pool_create"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
               line="198">a new #GstVulkanDescriptorSet</doc>
          <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
                 line="195">a #GstVulkanDescriptorPool</doc>
            <type name="VulkanDescriptorPool"
                  c:type="GstVulkanDescriptorPool*"/>
          </instance-parameter>
          <parameter name="n_layouts" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="layouts" transfer-ownership="none">
            <type name="VulkanHandle" c:type="GstVulkanHandle**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="gst_vulkan_descriptor_pool_get_device"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                         line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
               line="125">the parent #GstVulkanDevice for this descriptor pool</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
                 line="123">a #GstVulkanDescriptorPool</doc>
            <type name="VulkanDescriptorPool"
                  c:type="GstVulkanDescriptorPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_sets"
              c:identifier="gst_vulkan_descriptor_pool_get_max_sets">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
               line="141">the maximum number of sets allocatable from @pool</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.c"
                 line="139">a #GstVulkanDescriptorPool</doc>
            <type name="VulkanDescriptorPool"
                  c:type="GstVulkanDescriptorPool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="pool">
        <type name="Vulkan.DescriptorPool" c:type="VkDescriptorPool"/>
      </field>
    </class>
    <record name="VulkanDescriptorPoolClass"
            c:type="GstVulkanDescriptorPoolClass"
            glib:is-gtype-struct-for="VulkanDescriptorPool">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorpool.h"
                       line="47"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanDescriptorPoolPrivate"
            c:type="GstVulkanDescriptorPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="56"/>
    </record>
    <record name="VulkanDescriptorSet"
            c:type="GstVulkanDescriptorSet"
            glib:type-name="GstVulkanDescriptorSet"
            glib:get-type="gst_vulkan_descriptor_set_get_type"
            c:symbol-prefix="vulkan_descriptor_set">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                       line="51"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="set" writable="1">
        <type name="Vulkan.DescriptorSet" c:type="VkDescriptorSet"/>
      </field>
      <field name="pool" writable="1">
        <type name="VulkanDescriptorPool" c:type="GstVulkanDescriptorPool*"/>
      </field>
      <field name="cache" writable="1">
        <type name="VulkanDescriptorCache" c:type="GstVulkanDescriptorCache*"/>
      </field>
      <field name="n_layouts" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="layouts" writable="1">
        <type name="VulkanHandle" c:type="GstVulkanHandle**"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <constructor name="new_wrapped"
                   c:identifier="gst_vulkan_descriptor_set_new_wrapped">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorset.c"
               line="119">a new #GstVulkanDescriptorSet</doc>
          <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
        </return-value>
        <parameters>
          <parameter name="pool" transfer-ownership="none">
            <type name="VulkanDescriptorPool"
                  c:type="GstVulkanDescriptorPool*"/>
          </parameter>
          <parameter name="set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorset.c"
                 line="117">a VkDescriptorSet</doc>
            <type name="Vulkan.DescriptorSet" c:type="VkDescriptorSet"/>
          </parameter>
          <parameter name="n_layouts" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="layouts" transfer-ownership="none">
            <type name="VulkanHandle" c:type="GstVulkanHandle**"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref"
              c:identifier="gst_vulkan_descriptor_set_ref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
             line="53">Increases the refcount of the given buffer by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
               line="59">@buf</doc>
          <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                 line="55">a #GstVulkanDescriptorSet.</doc>
            <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_descriptor_set_unref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
             line="68">Decreases the refcount of the buffer. If the refcount reaches 0, the buffer
will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="set" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                 line="70">a #GstVulkanDescriptorSet.</doc>
            <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="VulkanDescriptorSetClass"
            c:type="GstVulkanDescriptorSetClass"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="51"/>
    </record>
    <record name="VulkanDescriptorSetPrivate"
            c:type="GstVulkanDescriptorSetPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="52"/>
    </record>
    <class name="VulkanDevice"
           c:symbol-prefix="vulkan_device"
           c:type="GstVulkanDevice"
           parent="Gst.Object"
           glib:type-name="GstVulkanDevice"
           glib:get-type="gst_vulkan_device_get_type"
           glib:type-struct="VulkanDeviceClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="54"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_device_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="86">a new #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <parameter name="physical_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="84">the associated #GstVulkanPhysicalDevice</doc>
            <type name="VulkanPhysicalDevice"
                  c:type="GstVulkanPhysicalDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_index"
                   c:identifier="gst_vulkan_device_new_with_index"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="109">a new #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="106">the associated #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
          <parameter name="device_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="107">the device index to create the new #GstVulkanDevice from</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_device_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="526">If a #GstVulkanDevice is requested in @query, sets @device as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanDevice.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="537">whether @query was responded to with @device</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="528">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="529">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="530">the #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_device_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="576">Attempt to retrieve a #GstVulkanDevice using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="584">whether @device contains a valid #GstVulkanDevice</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="578">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="device"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="579">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
          </parameter>
        </parameters>
      </function>
      <method name="create_fence"
              c:identifier="gst_vulkan_device_create_fence"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="95"/>
        <return-value transfer-ownership="full">
          <type name="VulkanFence" c:type="GstVulkanFence*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="foreach_queue"
              c:identifier="gst_vulkan_device_foreach_queue"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="383">Iterate over each queue family available on #GstVulkanDevice</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="385">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="386">a #GstVulkanDeviceForEachQueueFunc to run for each #GstVulkanQueue</doc>
            <type name="VulkanDeviceForEachQueueFunc"
                  c:type="GstVulkanDeviceForEachQueueFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="0">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="387">user data to pass to each call of @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_instance"
              c:identifier="gst_vulkan_device_get_instance"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="443">the #GstVulkanInstance used to create this @device</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="441">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_physical_device"
              c:identifier="gst_vulkan_device_get_physical_device"
              version="1.18"
              introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="78"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="459">The VkPhysicalDevice used to create @device</doc>
          <type name="Vulkan.PhysicalDevice" c:type="VkPhysicalDevice"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="457">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proc_address"
              c:identifier="gst_vulkan_device_get_proc_address"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="415">Performs vkGetDeviceProcAddr() with @device and @name</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="67"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="422">the function pointer for @name or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="417">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="418">name of the function to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue"
              c:identifier="gst_vulkan_device_get_queue"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="353">a new #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="349">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
          <parameter name="queue_family" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="350">a queue family to retrieve</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="queue_i" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="351">index of the family to retrieve</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_device_open"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="235">Attempts to create the internal #VkDevice object.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="242">whether a vulkan device could be created</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdevice.c"
                 line="237">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="instance" transfer-ownership="none">
        <type name="VulkanInstance"/>
      </property>
      <property name="physical-device"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="VulkanPhysicalDevice"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="instance">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="physical_device">
        <type name="VulkanPhysicalDevice" c:type="GstVulkanPhysicalDevice*"/>
      </field>
      <field name="device">
        <type name="Vulkan.Device" c:type="VkDevice"/>
      </field>
    </class>
    <record name="VulkanDeviceClass"
            c:type="GstVulkanDeviceClass"
            glib:is-gtype-struct-for="VulkanDevice">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="54"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <callback name="VulkanDeviceForEachQueueFunc"
              c:type="GstVulkanDeviceForEachQueueFunc">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="40"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="VulkanDevicePrivate"
            c:type="GstVulkanDevicePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="34"/>
    </record>
    <class name="VulkanDisplay"
           c:symbol-prefix="vulkan_display"
           c:type="GstVulkanDisplay"
           parent="Gst.Object"
           glib:type-name="GstVulkanDisplay"
           glib:get-type="gst_vulkan_display_get_type"
           glib:type-struct="VulkanDisplayClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
           line="69">The contents of a #GstVulkanDisplay are private and should only be accessed
through the provided API</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="97"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_display_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="257">a new #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_type"
                   c:identifier="gst_vulkan_display_new_with_type"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="209">a new #GstVulkanDisplay or %NULL if e.g. @type is
unsupported</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="206">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="207">the #GstVulkanDisplayType to create</doc>
            <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="choose_type"
                c:identifier="gst_vulkan_display_choose_type"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="517">This function will read the %GST_VULKAN_WINDOW environment variable for
a user choice or choose the first supported implementation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="524">the default #GstVulkanDisplayType #GstVulkanInstance will choose
         on creation</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="519">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </function>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_display_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="641">If a #GstVulkanDisplay is requested in @query, sets @device as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanDisplay.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="652">whether @query was responded to with @display</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="643">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="644">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="display"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="645">the #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_display_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="691">Attempt to retrieve a #GstVulkanDisplay using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="699">whether @display contains a valid #GstVulkanDisplay</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="693">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="display"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="694">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="create_window"
                      invoker="create_window"
                      version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="329">a new #GstVulkanWindow for @display or %NULL.</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="327">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_handle" invoker="get_handle" version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="95"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="286">the winsys specific handle of @display</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="284">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="create_window"
              c:identifier="gst_vulkan_display_create_window"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="115"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="329">a new #GstVulkanWindow for @display or %NULL.</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="327">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_window"
              c:identifier="gst_vulkan_display_find_window"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="393">Execute @compare_func over the list of windows stored by @display.  The
first argument to @compare_func is the #GstVulkanWindow being checked and the
second argument is @data.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="135"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="403">The first #GstVulkanWindow that causes a match
         from @compare_func</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="395">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="396">some data to pass to @compare_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="compare_func"
                     transfer-ownership="none"
                     scope="call">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="397">a comparison function to run</doc>
            <type name="GLib.CompareFunc" c:type="GCompareFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gst_vulkan_display_get_handle"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="111"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="286">the winsys specific handle of @display</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="284">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle_type"
              c:identifier="gst_vulkan_display_get_handle_type"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="312">the #GstVulkanDisplayType of @display</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="310">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_window"
              c:identifier="gst_vulkan_display_remove_window"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="435">whether the window was successfully removed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="432">a #GstVUlkanDisplay:</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="433">the #GstVulkanWindow to remove</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="type" readable="0" private="1">
        <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
      </field>
      <field name="instance" readable="0" private="1">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="windows" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="main_context" readable="0" private="1">
        <type name="GLib.MainContext" c:type="GMainContext*"/>
      </field>
      <field name="main_loop" readable="0" private="1">
        <type name="GLib.MainLoop" c:type="GMainLoop*"/>
      </field>
      <field name="event_source" readable="0" private="1">
        <type name="GLib.Source" c:type="GSource*"/>
      </field>
    </class>
    <record name="VulkanDisplayClass"
            c:type="GstVulkanDisplayClass"
            glib:is-gtype-struct-for="VulkanDisplay">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="97"/>
      <field name="object_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_handle">
        <callback name="get_handle">
          <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                           line="95"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="286">the winsys specific handle of @display</doc>
            <type name="gpointer" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                   line="284">a #GstVulkanDisplay</doc>
              <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_window">
        <callback name="create_window">
          <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                           line="96"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="329">a new #GstVulkanWindow for @display or %NULL.</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                   line="327">a #GstVulkanDisplay</doc>
              <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="VulkanDisplayPrivate"
            c:type="GstVulkanDisplayPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="64"/>
    </record>
    <bitfield name="VulkanDisplayType"
              glib:type-name="GstVulkanDisplayType"
              glib:get-type="gst_vulkan_display_type_get_type"
              c:type="GstVulkanDisplayType">
      <member name="none"
              value="0"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="49">no display</doc>
      </member>
      <member name="xcb"
              value="1"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_XCB"
              glib:nick="xcb">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="50">XCB display</doc>
      </member>
      <member name="wayland"
              value="2"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_WAYLAND"
              glib:nick="wayland">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="51">wayland display</doc>
      </member>
      <member name="cocoa"
              value="4"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_COCOA"
              glib:nick="cocoa">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="52">cocoa display for macOS</doc>
      </member>
      <member name="ios"
              value="8"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_IOS"
              glib:nick="ios">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="53">ios display</doc>
      </member>
      <member name="win32"
              value="16"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_WIN32"
              glib:nick="win32">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
             line="54">win32 display</doc>
      </member>
      <member name="android"
              value="32"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_ANDROID"
              glib:nick="android">
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_VULKAN_DISPLAY_TYPE_ANY"
              glib:nick="any">
      </member>
      <function name="to_extension_string"
                c:identifier="gst_vulkan_display_type_to_extension_string"
                version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="601">the Vulkan extension string required for creating a VkSurfaceKHR
using a window system handle or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
                 line="599">a #GstVulkanDisplayType</doc>
            <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="VulkanError"
                 glib:type-name="GstVulkanError"
                 glib:get-type="gst_vulkan_error_get_type"
                 c:type="GstVulkanError"
                 glib:error-domain="gst-vulkan-error">
      <member name="failed"
              value="0"
              c:identifier="GST_VULKAN_FAILED"
              glib:nick="failed">
      </member>
      <function name="quark" c:identifier="gst_vulkan_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="to_g_error"
                c:identifier="gst_vulkan_error_to_g_error"
                version="1.18"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkerror.c"
             line="75">if @result indicates an error condition, fills out #Gerror with details of
the error</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkerror.h"
                         line="42"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="85">@result for easy chaining</doc>
          <type name="Vulkan.Result" c:type="VkResult"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="77">a VkResult</doc>
            <type name="Vulkan.Result" c:type="VkResult"/>
          </parameter>
          <parameter name="error"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="78">a #GError to fill</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="79">the printf-like format to write into the #GError</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkerror.c"
                 line="80">arguments for @format</doc>
            <varargs/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="VulkanFence"
            c:type="GstVulkanFence"
            glib:type-name="GstVulkanFence"
            glib:get-type="gst_vulkan_fence_get_type"
            c:symbol-prefix="vulkan_fence">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="43"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="cache" writable="1">
        <type name="VulkanFenceCache" c:type="GstVulkanFenceCache*"/>
      </field>
      <field name="fence" writable="1">
        <type name="Vulkan.Fence" c:type="VkFence"/>
      </field>
      <constructor name="new"
                   c:identifier="gst_vulkan_fence_new"
                   version="1.18"
                   throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfence.c"
               line="92">whether a new #GstVulkanFence or %NULL on error</doc>
          <type name="VulkanFence" c:type="GstVulkanFence*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfence.c"
                 line="89">the parent #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_always_signalled"
                   c:identifier="gst_vulkan_fence_new_always_signalled">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfence.c"
               line="132">a new #GstVulkanFence that is always in the signalled state</doc>
          <type name="VulkanFence" c:type="GstVulkanFence*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="is_signaled"
              c:identifier="gst_vulkan_fence_is_signaled"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfence.c"
               line="159">whether @fence has been signalled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfence.c"
                 line="157">a #GstVulkanFence</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="gst_vulkan_fence_reset">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="VulkanFenceCache"
           c:symbol-prefix="vulkan_fence_cache"
           c:type="GstVulkanFenceCache"
           parent="VulkanHandlePool"
           glib:type-name="GstVulkanFenceCache"
           glib:get-type="gst_vulkan_fence_cache_get_type"
           glib:type-struct="VulkanFenceCacheClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="89"/>
      <constructor name="new" c:identifier="gst_vulkan_fence_cache_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="VulkanFenceCache" c:type="GstVulkanFenceCache*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="VulkanHandlePool" c:type="GstVulkanHandlePool"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="VulkanFenceCacheClass"
            c:type="GstVulkanFenceCacheClass"
            glib:is-gtype-struct-for="VulkanFenceCache">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="89"/>
      <field name="parent_class">
        <type name="VulkanHandlePoolClass" c:type="GstVulkanHandlePoolClass"/>
      </field>
    </record>
    <bitfield name="VulkanFormatFlags"
              glib:type-name="GstVulkanFormatFlags"
              glib:get-type="gst_vulkan_format_flags_get_type"
              c:type="GstVulkanFormatFlags">
      <member name="yuv"
              value="1"
              c:identifier="GST_VULKAN_FORMAT_FLAG_YUV"
              glib:nick="yuv">
      </member>
      <member name="rgb"
              value="2"
              c:identifier="GST_VULKAN_FORMAT_FLAG_RGB"
              glib:nick="rgb">
      </member>
      <member name="alpha"
              value="4"
              c:identifier="GST_VULKAN_FORMAT_FLAG_ALPHA"
              glib:nick="alpha">
      </member>
      <member name="le"
              value="8"
              c:identifier="GST_VULKAN_FORMAT_FLAG_LE"
              glib:nick="le">
      </member>
      <member name="complex"
              value="16"
              c:identifier="GST_VULKAN_FORMAT_FLAG_COMPLEX"
              glib:nick="complex">
      </member>
    </bitfield>
    <record name="VulkanFormatInfo" c:type="GstVulkanFormatInfo">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="80"/>
      <field name="format" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="54">the Vulkan format being described</doc>
        <type name="Vulkan.Format" c:type="VkFormat"/>
      </field>
      <field name="name" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="55">name of this format</doc>
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="scaling" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkformat.h"
             line="56">how raw data is interpreted and scaled
@n_components; number of components in this format</doc>
        <type name="VulkanFormatScaling" c:type="GstVulkanFormatScaling"/>
      </field>
      <field name="flags" writable="1">
        <type name="VulkanFormatFlags" c:type="GstVulkanFormatFlags"/>
      </field>
      <field name="bits" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="n_components" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="shift" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="depth" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="pixel_stride" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gint8" c:type="gint8"/>
        </array>
      </field>
      <field name="n_planes" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="plane" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="poffset" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="w_sub" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="h_sub" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
    </record>
    <enumeration name="VulkanFormatScaling"
                 glib:type-name="GstVulkanFormatScaling"
                 glib:get-type="gst_vulkan_format_scaling_get_type"
                 c:type="GstVulkanFormatScaling">
      <member name="unorm"
              value="1"
              c:identifier="GST_VULKAN_FORMAT_SCALING_UNORM"
              glib:nick="unorm">
      </member>
      <member name="snorm"
              value="2"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SNORM"
              glib:nick="snorm">
      </member>
      <member name="uscaled"
              value="3"
              c:identifier="GST_VULKAN_FORMAT_SCALING_USCALED"
              glib:nick="uscaled">
      </member>
      <member name="sscaled"
              value="4"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SSCALED"
              glib:nick="sscaled">
      </member>
      <member name="uint"
              value="5"
              c:identifier="GST_VULKAN_FORMAT_SCALING_UINT"
              glib:nick="uint">
      </member>
      <member name="sint"
              value="6"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SINT"
              glib:nick="sint">
      </member>
      <member name="srgb"
              value="7"
              c:identifier="GST_VULKAN_FORMAT_SCALING_SRGB"
              glib:nick="srgb">
      </member>
    </enumeration>
    <class name="VulkanFullScreenQuad"
           c:symbol-prefix="vulkan_full_screen_quad"
           c:type="GstVulkanFullScreenQuad"
           parent="Gst.Object"
           glib:type-name="GstVulkanFullScreenQuad"
           glib:get-type="gst_vulkan_full_screen_quad_get_type"
           glib:type-struct="VulkanFullScreenQuadClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="67"/>
      <constructor name="new" c:identifier="gst_vulkan_full_screen_quad_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="VulkanFullScreenQuad" c:type="GstVulkanFullScreenQuad*"/>
        </return-value>
        <parameters>
          <parameter name="queue" transfer-ownership="none">
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="draw"
              c:identifier="gst_vulkan_full_screen_quad_draw"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fill_command_buffer"
              c:identifier="gst_vulkan_full_screen_quad_fill_command_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
               line="1253">whether @cmd could be filled with the necessary commands</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
                 line="1249">a #GstVulkanFullScreenQuad</doc>
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
                 line="1250">the #GstVulkanCommandBuffer to fill with commands</doc>
            <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
          </parameter>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_last_fence"
              c:identifier="gst_vulkan_full_screen_quad_get_last_fence">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <type name="VulkanFence" c:type="GstVulkanFence*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="prepare_draw"
              c:identifier="gst_vulkan_full_screen_quad_prepare_draw"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_index_buffer"
              c:identifier="gst_vulkan_full_screen_quad_set_index_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="indices" transfer-ownership="none">
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
          <parameter name="n_indices" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_info"
              c:identifier="gst_vulkan_full_screen_quad_set_info">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="in_info" transfer-ownership="none">
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="out_info" transfer-ownership="none">
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_buffer"
              c:identifier="gst_vulkan_full_screen_quad_set_input_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_output_buffer"
              c:identifier="gst_vulkan_full_screen_quad_set_output_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_shaders"
              c:identifier="gst_vulkan_full_screen_quad_set_shaders">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="vert" transfer-ownership="none">
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </parameter>
          <parameter name="frag" transfer-ownership="none">
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_buffer"
              c:identifier="gst_vulkan_full_screen_quad_set_uniform_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="uniforms" transfer-ownership="none">
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vertex_buffer"
              c:identifier="gst_vulkan_full_screen_quad_set_vertex_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="vertices" transfer-ownership="none">
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="submit"
              c:identifier="gst_vulkan_full_screen_quad_submit"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
               line="1407">whether @cmd could be submitted to the queue</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
                 line="1402">a #GstVulkanFullScreenQuad</doc>
            <type name="VulkanFullScreenQuad"
                  c:type="GstVulkanFullScreenQuad*"/>
          </instance-parameter>
          <parameter name="cmd" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
                 line="1403">a #GstVulkanCommandBuffer to submit</doc>
            <type name="VulkanCommandBuffer" c:type="GstVulkanCommandBuffer*"/>
          </parameter>
          <parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.c"
                 line="1404">a #GstVulkanFence to signal on completion</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="out_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="in_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="render_pass">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="pipeline_layout">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="graphics_pipeline">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="descriptor_set_layout">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="descriptor_cache">
        <type name="VulkanDescriptorCache" c:type="GstVulkanDescriptorCache*"/>
      </field>
      <field name="descriptor_set">
        <type name="VulkanDescriptorSet" c:type="GstVulkanDescriptorSet*"/>
      </field>
      <field name="framebuffer">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="sampler">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </field>
      <field name="cmd_pool">
        <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
      </field>
      <field name="trash_list">
        <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
      </field>
      <field name="last_fence">
        <type name="VulkanFence" c:type="GstVulkanFence*"/>
      </field>
    </class>
    <record name="VulkanFullScreenQuadClass"
            c:type="GstVulkanFullScreenQuadClass"
            glib:is-gtype-struct-for="VulkanFullScreenQuad">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfullscreenquad.h"
                       line="67"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanFullScreenQuadPrivate"
            c:type="GstVulkanFullScreenQuadPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="113"/>
    </record>
    <record name="VulkanHandle"
            c:type="GstVulkanHandle"
            glib:type-name="GstVulkanHandle"
            glib:get-type="gst_vulkan_handle_get_type"
            c:symbol-prefix="vulkan_handle">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkhandle.h"
           line="70">Holds information about a vulkan non dispatchable handle</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                       line="94"/>
      <field name="parent" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="72">the parent #GstMiniObject</doc>
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="73">the #GstVulkanDevice for this handle</doc>
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="74">the type of handle</doc>
        <type name="VulkanHandleType" c:type="GstVulkanHandleType"/>
      </field>
      <field name="handle" writable="1">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="75">the handle value</doc>
        <type name="VulkanHandleTypedef" c:type="GstVulkanHandleTypedef"/>
      </field>
      <field name="notify" writable="1">
        <type name="VulkanHandleDestroyNotify"
              c:type="GstVulkanHandleDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <constructor name="new_wrapped"
                   c:identifier="gst_vulkan_handle_new_wrapped">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="149"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkhandle.c"
               line="88">a new #GstVulkanHandle wrapping @handle</doc>
          <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="VulkanHandleType" c:type="GstVulkanHandleType"/>
          </parameter>
          <parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="84">a Vulkan handle</doc>
            <type name="VulkanHandleTypedef" c:type="GstVulkanHandleTypedef"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="85">a #GDestroyNotify</doc>
            <type name="VulkanHandleDestroyNotify"
                  c:type="GstVulkanHandleDestroyNotify"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="86">data to pass to @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free_descriptor_set_layout"
              c:identifier="gst_vulkan_handle_free_descriptor_set_layout">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="105">Frees the descriptor set layout in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="107">a #GstVulkanHandle containing a vulkan `VkDescriptorSetLayout`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="108">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_framebuffer"
              c:identifier="gst_vulkan_handle_free_framebuffer">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="197">Frees the framebuffer in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="199">a #GstVulkanHandle containing a vulkan `VkFramebuffer`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="200">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_pipeline"
              c:identifier="gst_vulkan_handle_free_pipeline">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="125">Frees the pipeline in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="127">a #GstVulkanHandle containing a vulkan `VkPipeline`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="128">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_pipeline_layout"
              c:identifier="gst_vulkan_handle_free_pipeline_layout">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="142">Frees the pipeline layout in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="144">a #GstVulkanHandle containing a vulkan `VkPipelineLayout`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="145">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_render_pass"
              c:identifier="gst_vulkan_handle_free_render_pass">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="161">Frees the render pass in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="163">a #GstVulkanHandle containing a vulkan `VkRenderPass`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="164">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_sampler"
              c:identifier="gst_vulkan_handle_free_sampler">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="180">Frees the sampler in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="182">a #GstVulkanHandle containing a vulkan `VkSampler`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="183">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_shader" c:identifier="gst_vulkan_handle_free_shader">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.c"
             line="216">Frees the shader in @handle</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="218">a #GstVulkanHandle containing a vulkan `VkFramebuffer`</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.c"
                 line="219">callback user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gst_vulkan_handle_ref"
              version="1.18"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="96">Increases the refcount of the given handle by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkhandle.h"
               line="102">@buf</doc>
          <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                 line="98">a #GstVulkanHandle.</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_handle_unref"
              version="1.18"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkhandle.h"
             line="113">Decreases the refcount of the buffer. If the refcount reaches 0, the buffer
will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="handle" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                 line="115">a #GstVulkanHandle.</doc>
            <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="context_query"
                c:identifier="gst_vulkan_handle_context_query"
                version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="386">Whether the @query was successfully responded to from the passed
         @display, @instance, and @device.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="380">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="381">a #GstQuery of type %GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="display"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="382">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </parameter>
          <parameter name="instance"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="383">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
          <parameter name="device"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="384">a #GstVulkanInstance</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </function>
      <function name="set_context"
                c:identifier="gst_vulkan_handle_set_context"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="313">Helper function for implementing #GstElementClass.set_context() in
Vulkan capable elements.

Retrieve's the #GstVulkanDisplay or #GstVulkanInstance in @context and places
the result in @display or @instance respectively.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="326">whether the @display or @instance could be set successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="315">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="316">a #GstContext</doc>
            <type name="Gst.Context" c:type="GstContext*"/>
          </parameter>
          <parameter name="display"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="317">location of a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
          </parameter>
          <parameter name="instance"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkutils.c"
                 line="318">location of a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <callback name="VulkanHandleDestroyNotify"
              c:type="GstVulkanHandleDestroyNotify">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkhandle.h"
           line="48">Function definition called when the #GstVulkanHandle is no longer in use.
All implementations of this callback must free the internal handle stored
inside @handle.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                       line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="handle" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkhandle.h"
               line="50">the #GstVulkanHandle</doc>
          <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkhandle.h"
               line="51">callback user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="VulkanHandlePool"
           c:symbol-prefix="vulkan_handle_pool"
           c:type="GstVulkanHandlePool"
           parent="Gst.Object"
           abstract="1"
           glib:type-name="GstVulkanHandlePool"
           glib:get-type="gst_vulkan_handle_pool_get_type"
           glib:type-struct="VulkanHandlePoolClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="63"/>
      <virtual-method name="acquire" invoker="acquire" throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="60"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="alloc" invoker="alloc" throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="59"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="free">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="release" invoker="release">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="acquire"
              c:identifier="gst_vulkan_handle_pool_acquire"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="alloc"
              c:identifier="gst_vulkan_handle_pool_alloc"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="66"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release" c:identifier="gst_vulkan_handle_pool_release">
        <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
          </instance-parameter>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="outstanding">
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="available">
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="VulkanHandlePoolClass"
            c:type="GstVulkanHandlePoolClass"
            glib:is-gtype-struct-for="VulkanHandlePool">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                       line="63"/>
      <field name="parent">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="alloc">
        <callback name="alloc" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                           line="59"/>
          <return-value transfer-ownership="none" nullable="1">
            <type name="gpointer" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="acquire">
        <callback name="acquire" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                           line="60"/>
          <return-value transfer-ownership="none" nullable="1">
            <type name="gpointer" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="release">
        <callback name="release">
          <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
            </parameter>
            <parameter name="handle"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="free">
        <callback name="free">
          <source-position filename="../gst-libs/gst/vulkan/gstvkhandlepool.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="VulkanHandlePool" c:type="GstVulkanHandlePool*"/>
            </parameter>
            <parameter name="handle"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="VulkanHandleType"
                 glib:type-name="GstVulkanHandleType"
                 glib:get-type="gst_vulkan_handle_type_get_type"
                 c:type="GstVulkanHandleType">
      <member name="descriptor_set_layout"
              value="1"
              c:identifier="GST_VULKAN_HANDLE_TYPE_DESCRIPTOR_SET_LAYOUT"
              glib:nick="descriptor-set-layout">
      </member>
      <member name="pipeline_layout"
              value="2"
              c:identifier="GST_VULKAN_HANDLE_TYPE_PIPELINE_LAYOUT"
              glib:nick="pipeline-layout">
      </member>
      <member name="pipeline"
              value="3"
              c:identifier="GST_VULKAN_HANDLE_TYPE_PIPELINE"
              glib:nick="pipeline">
      </member>
      <member name="render_pass"
              value="4"
              c:identifier="GST_VULKAN_HANDLE_TYPE_RENDER_PASS"
              glib:nick="render-pass">
      </member>
      <member name="sampler"
              value="5"
              c:identifier="GST_VULKAN_HANDLE_TYPE_SAMPLER"
              glib:nick="sampler">
      </member>
      <member name="framebuffer"
              value="6"
              c:identifier="GST_VULKAN_HANDLE_TYPE_FRAMEBUFFER"
              glib:nick="framebuffer">
      </member>
      <member name="shader"
              value="7"
              c:identifier="GST_VULKAN_HANDLE_TYPE_SHADER"
              glib:nick="shader">
      </member>
    </enumeration>
    <record name="VulkanHandleTypedef"
            c:type="GstVulkanHandleTypedef"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/gstvkhandle.h"
                       line="35"/>
    </record>
    <class name="VulkanImageBufferPool"
           c:symbol-prefix="vulkan_image_buffer_pool"
           c:type="GstVulkanImageBufferPool"
           parent="Gst.BufferPool"
           glib:type-name="GstVulkanImageBufferPool"
           glib:get-type="gst_vulkan_image_buffer_pool_get_type"
           glib:type-struct="VulkanImageBufferPoolClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
           line="39">Opaque GstVulkanImageBufferPool struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="59"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_image_buffer_pool_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.c"
               line="221">a #GstBufferPool that allocates buffers with #GstGLMemory</doc>
          <type name="Gst.BufferPool" c:type="GstBufferPool*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.c"
                 line="219">the #GstVulkanDevice to use</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="bufferpool">
        <type name="Gst.BufferPool" c:type="GstBufferPool"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
    </class>
    <record name="VulkanImageBufferPoolClass"
            c:type="GstVulkanImageBufferPoolClass"
            glib:is-gtype-struct-for="VulkanImageBufferPool">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
           line="51">The #GstVulkanImageBufferPoolClass structure contains only private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagebufferpool.h"
                       line="59"/>
      <field name="parent_class">
        <type name="Gst.BufferPoolClass" c:type="GstBufferPoolClass"/>
      </field>
    </record>
    <record name="VulkanImageBufferPoolPrivate"
            c:type="GstVulkanImageBufferPoolPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="98"/>
    </record>
    <record name="VulkanImageMemory" c:type="GstVulkanImageMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="79"/>
      <field name="parent" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="image" writable="1">
        <type name="Vulkan.Image" c:type="VkImage"/>
      </field>
      <field name="vk_mem" writable="1">
        <type name="VulkanMemory" c:type="GstVulkanMemory*"/>
      </field>
      <field name="create_info" writable="1">
        <type name="Vulkan.ImageCreateInfo" c:type="VkImageCreateInfo"/>
      </field>
      <field name="requirements" writable="1">
        <type name="Vulkan.MemoryRequirements" c:type="VkMemoryRequirements"/>
      </field>
      <field name="format_properties" writable="1">
        <type name="Vulkan.ImageFormatProperties"
              c:type="VkImageFormatProperties"/>
      </field>
      <field name="usage" writable="1">
        <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
      </field>
      <field name="barrier" writable="1">
        <type name="VulkanBarrierImageInfo"
              c:type="GstVulkanBarrierImageInfo"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="notify" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="views" writable="1">
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="outstanding_views" writable="1">
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="_padding" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="add_view"
              c:identifier="gst_vulkan_image_memory_add_view"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="570">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
          <parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="571">a #GstVulkanImageView</doc>
            <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_view"
              c:identifier="gst_vulkan_image_memory_find_view"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="150"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="626">the first #GstVulkanImageView that @find_func
returns %TRUE for, or %NULL</doc>
          <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="622">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
          <parameter name="find_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="623">#GstVulkanImageMemoryFindViewFunc to search with</doc>
            <type name="VulkanImageMemoryFindViewFunc"
                  c:type="GstVulkanImageMemoryFindViewFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="624">user data to call @finc_func with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gst_vulkan_image_memory_get_height"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="516">the height of @image</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="514">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gst_vulkan_image_memory_get_width"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="499">the width of @image</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="497">a #GstVulkanImageMemory</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gst_vulkan_image_memory_init">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="mem" transfer-ownership="none">
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </instance-parameter>
          <parameter name="allocator" transfer-ownership="none">
            <type name="Gst.Allocator" c:type="GstAllocator*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <function name="alloc"
                c:identifier="gst_vulkan_image_memory_alloc"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="437">Allocated a new #GstVulkanImageMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="449">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="439">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="440">the VkFormat for the new image</doc>
            <type name="Vulkan.Format" c:type="VkFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="441">width for the new image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="442">height for the new image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tiling" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="443">tiling for the new image</doc>
            <type name="Vulkan.ImageTiling" c:type="VkImageTiling"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="444">usage flags for the new image</doc>
            <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="445">VkDeviceMemory property flags for the new image</doc>
            <type name="Vulkan.MemoryPropertyFlags"
                  c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_image_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="695">Initializes the Vulkan image memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanImageMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="wrapped"
                c:identifier="gst_vulkan_image_memory_wrapped"
                version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                         line="134"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="478">a new #GstVulkanImageMemory wrapping @image</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="468">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="469">a VkImage</doc>
            <type name="Vulkan.Image" c:type="VkImage"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="470">the VkFormat for @image</doc>
            <type name="Vulkan.Format" c:type="VkFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="471">width of @image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="472">height of @image</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tiling" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="473">tiling of @image</doc>
            <type name="Vulkan.ImageTiling" c:type="VkImageTiling"/>
          </parameter>
          <parameter name="usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="474">usage flags of @image</doc>
            <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="475">user data for @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
                 line="476">a #DestroyNotify when @image is no longer needed</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanImageMemoryAllocator"
           c:symbol-prefix="vulkan_image_memory_allocator"
           c:type="GstVulkanImageMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanImageMemoryAllocator"
           glib:get-type="gst_vulkan_image_memory_allocator_get_type"
           glib:type-struct="VulkanImageMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
           line="89">Opaque #GstVulkanImageMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="107"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanImageMemoryAllocatorClass"
            c:type="GstVulkanImageMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanImageMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
           line="99">The #GstVulkanImageMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="107"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <callback name="VulkanImageMemoryFindViewFunc"
              c:type="GstVulkanImageMemoryFindViewFunc">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
           line="81">Function definition used to find views.  Return %TRUE if @view matches the
criteria.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="87"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="view" transfer-ownership="none">
          <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="VulkanImageView"
            c:type="GstVulkanImageView"
            glib:type-name="GstVulkanImageView"
            glib:get-type="gst_vulkan_image_view_get_type"
            c:symbol-prefix="vulkan_image_view">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                       line="42"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="image" writable="1">
        <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
      </field>
      <field name="view" writable="1">
        <type name="Vulkan.ImageView" c:type="VkImageView"/>
      </field>
      <field name="create_info" writable="1">
        <type name="Vulkan.ImageViewCreateInfo"
              c:type="VkImageViewCreateInfo"/>
      </field>
      <constructor name="new" c:identifier="gst_vulkan_image_view_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                         line="78"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimageview.c"
               line="92">A new #GstVulkanImageView from @image and
         @create_info</doc>
          <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
        </return-value>
        <parameters>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimageview.c"
                 line="89">a #GstVulkanImageMemory to create the new view from</doc>
            <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
          </parameter>
          <parameter name="create_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimageview.c"
                 line="90">the creation information to create the view from</doc>
            <type name="Vulkan.ImageViewCreateInfo"
                  c:type="VkImageViewCreateInfo*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref"
              c:identifier="gst_vulkan_image_view_ref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimageview.h"
             line="44">Increases the refcount of the given trash object by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimageview.h"
               line="50">@trash</doc>
          <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                 line="46">a #GstVulkanImageView.</doc>
            <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_image_view_unref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimageview.h"
             line="59">Decreases the refcount of the trash object. If the refcount reaches 0, the
trash will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkimageview.h"
                 line="61">a #GstVulkanImageView.</doc>
            <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="VulkanInstance"
           c:symbol-prefix="vulkan_instance"
           c:type="GstVulkanInstance"
           parent="Gst.Object"
           glib:type-name="GstVulkanInstance"
           glib:get-type="gst_vulkan_instance_get_type"
           glib:type-struct="VulkanInstanceClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="56"/>
      <constructor name="new" c:identifier="gst_vulkan_instance_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </return-value>
      </constructor>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_instance_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="532">If a #GstVulkanInstance is requested in @query, sets @instance as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanInstance.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="543">whether @query was responded to with @instance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="534">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="535">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="instance"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="536">the #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_instance_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="582">Attempt to retrieve a #GstVulkanInstance using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="590">whether @instance contains a valid #GstVulkanInstance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="584">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="instance"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="585">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
          </parameter>
        </parameters>
      </function>
      <method name="create_device"
              c:identifier="gst_vulkan_instance_create_device"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="448">a new #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="446">a #GstVulkanIncstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proc_address"
              c:identifier="gst_vulkan_instance_get_proc_address"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="420">Performs vkGetInstanceProcAddr() with @instance and @name</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="65"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="427">the function pointer for @name or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="422">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="423">name of the function to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_instance_open"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="189">whether the instance could be created</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkinstance.c"
                 line="186">a #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="instance">
        <type name="Vulkan.Instance" c:type="VkInstance"/>
      </field>
      <field name="physical_devices">
        <type name="Vulkan.PhysicalDevice" c:type="VkPhysicalDevice*"/>
      </field>
      <field name="n_physical_devices">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="msg_callback">
        <type name="Vulkan.DebugReportCallbackEXT"
              c:type="VkDebugReportCallbackEXT"/>
      </field>
      <field name="dbgCreateDebugReportCallback" introspectable="0">
        <type c:type="PFN_vkCreateDebugReportCallbackEXT"/>
      </field>
      <field name="dbgDestroyDebugReportCallback" introspectable="0">
        <type c:type="PFN_vkDestroyDebugReportCallbackEXT"/>
      </field>
      <field name="dbgReportMessage" introspectable="0">
        <type c:type="PFN_vkDebugReportMessageEXT"/>
      </field>
      <glib:signal name="create-device" when="last" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="107">Overrides the #GstVulkanDevice creation mechanism.
It can be called from any thread.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="114">the newly created #GstVulkanDevice.</doc>
          <type name="VulkanDevice"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="VulkanInstanceClass"
            c:type="GstVulkanInstanceClass"
            glib:is-gtype-struct-for="VulkanInstance">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="56"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanInstancePrivate"
            c:type="GstVulkanInstancePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="30"/>
    </record>
    <record name="VulkanMemory" c:type="GstVulkanMemory">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="69"/>
      <field name="mem" writable="1">
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="device" writable="1">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="mem_ptr" writable="1">
        <type name="Vulkan.DeviceMemory" c:type="VkDeviceMemory"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="map_count" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="alloc_info" readable="0" private="1">
        <type name="Vulkan.MemoryAllocateInfo" c:type="VkMemoryAllocateInfo"/>
      </field>
      <field name="properties" readable="0" private="1">
        <type name="Vulkan.MemoryPropertyFlags"
              c:type="VkMemoryPropertyFlags"/>
      </field>
      <field name="vk_offset" readable="0" private="1">
        <type name="guint64" c:type="guint64"/>
      </field>
      <field name="wrapped" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <function name="alloc"
                c:identifier="gst_vulkan_memory_alloc"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="251">Allocated a new #GstVulkanMemory.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="260">a #GstMemory object backed by a vulkan device memory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="253">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="memory_type_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="254">the Vulkan memory type index</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="255">a #GstAllocationParams</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="256">the size to allocate</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mem_prop_flags" transfer-ownership="none">
            <type name="Vulkan.MemoryPropertyFlags"
                  c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="find_memory_type_index_with_type_properties"
                c:identifier="gst_vulkan_memory_find_memory_type_index_with_type_properties"
                version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="224">whether a valid memory type could be found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="219">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="type_bits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="220">memory type bits to search for</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="properties" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="221">memory properties to search for</doc>
            <type name="Vulkan.MemoryPropertyFlags"
                  c:type="VkMemoryPropertyFlags"/>
          </parameter>
          <parameter name="type_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkmemory.c"
                 line="222">resulting index of the memory type</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </function>
      <function name="heap_flags_to_string"
                c:identifier="gst_vulkan_memory_heap_flags_to_string">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                         line="41"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="prop_bits" transfer-ownership="none">
            <type name="Vulkan.MemoryHeapFlags" c:type="VkMemoryHeapFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_vulkan_memory_init_once"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="301">Initializes the Vulkan memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanMemory operation.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="property_flags_to_string"
                c:identifier="gst_vulkan_memory_property_flags_to_string">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="prop_bits" transfer-ownership="none">
            <type name="Vulkan.MemoryPropertyFlags"
                  c:type="VkMemoryPropertyFlags"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanMemoryAllocator"
           c:symbol-prefix="vulkan_memory_allocator"
           c:type="GstVulkanMemoryAllocator"
           parent="Gst.Allocator"
           glib:type-name="GstVulkanMemoryAllocator"
           glib:get-type="gst_vulkan_memory_allocator_get_type"
           glib:type-struct="VulkanMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.h"
           line="71">Opaque #GstVulkanMemoryAllocator struct</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="89"/>
      <field name="parent">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
    </class>
    <record name="VulkanMemoryAllocatorClass"
            c:type="GstVulkanMemoryAllocatorClass"
            glib:is-gtype-struct-for="VulkanMemoryAllocator">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.h"
           line="81">The #GstVulkanMemoryAllocatorClass only contains private data</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="89"/>
      <field name="parent_class">
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
    </record>
    <class name="VulkanPhysicalDevice"
           c:symbol-prefix="vulkan_physical_device"
           c:type="GstVulkanPhysicalDevice"
           parent="Gst.Object"
           glib:type-name="GstVulkanPhysicalDevice"
           glib:get-type="gst_vulkan_physical_device_get_type"
           glib:type-struct="VulkanPhysicalDeviceClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="64"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_physical_device_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
               line="84">a new #GstVulkanPhysicalDevice</doc>
          <type name="VulkanPhysicalDevice" c:type="GstVulkanPhysicalDevice*"/>
        </return-value>
        <parameters>
          <parameter name="instance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
                 line="82">the parent #GstVulkanInstance</doc>
            <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
          </parameter>
          <parameter name="device_index" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="type_to_string"
                c:identifier="gst_vulkan_physical_device_type_to_string">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                         line="36"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="Vulkan.PhysicalDeviceType"
                  c:type="VkPhysicalDeviceType"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_handle"
              c:identifier="gst_vulkan_physical_device_get_handle"
              version="1.18"
              introspectable="0">
        <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                         line="72"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
               line="631">The associated `VkPhysicalDevice` handle</doc>
          <type name="Vulkan.PhysicalDevice" c:type="VkPhysicalDevice"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
                 line="629">a #GstVulkanPhysicalDevice</doc>
            <type name="VulkanPhysicalDevice"
                  c:type="GstVulkanPhysicalDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_instance"
              c:identifier="gst_vulkan_physical_device_get_instance"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
               line="647">The #GstVulkanInstance associated with this physical device</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.c"
                 line="645">a #GstVulkanPhysicalDevice</doc>
            <type name="VulkanPhysicalDevice"
                  c:type="GstVulkanPhysicalDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="device-index"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="instance"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="VulkanInstance"/>
      </property>
      <property name="name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="instance">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="device_index">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="device">
        <type name="Vulkan.PhysicalDevice" c:type="VkPhysicalDevice"/>
      </field>
      <field name="device_layers">
        <type name="Vulkan.LayerProperties" c:type="VkLayerProperties*"/>
      </field>
      <field name="n_device_layers">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="device_extensions">
        <type name="Vulkan.ExtensionProperties"
              c:type="VkExtensionProperties*"/>
      </field>
      <field name="n_device_extensions">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="properties">
        <type name="Vulkan.PhysicalDeviceProperties"
              c:type="VkPhysicalDeviceProperties"/>
      </field>
      <field name="features">
        <type name="Vulkan.PhysicalDeviceFeatures"
              c:type="VkPhysicalDeviceFeatures"/>
      </field>
      <field name="memory_properties">
        <type name="Vulkan.PhysicalDeviceMemoryProperties"
              c:type="VkPhysicalDeviceMemoryProperties"/>
      </field>
      <field name="queue_family_props">
        <type name="Vulkan.QueueFamilyProperties"
              c:type="VkQueueFamilyProperties*"/>
      </field>
      <field name="n_queue_families">
        <type name="guint32" c:type="guint32"/>
      </field>
    </class>
    <record name="VulkanPhysicalDeviceClass"
            c:type="GstVulkanPhysicalDeviceClass"
            glib:is-gtype-struct-for="VulkanPhysicalDevice">
      <source-position filename="../gst-libs/gst/vulkan/gstvkphysicaldevice.h"
                       line="64"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanPhysicalDevicePrivate"
            c:type="GstVulkanPhysicalDevicePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="38"/>
    </record>
    <class name="VulkanQueue"
           c:symbol-prefix="vulkan_queue"
           c:type="GstVulkanQueue"
           parent="Gst.Object"
           glib:type-name="GstVulkanQueue"
           glib:get-type="gst_vulkan_queue_get_type"
           glib:type-struct="VulkanQueueClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="52"/>
      <function name="flags_to_string"
                c:identifier="gst_vulkan_queue_flags_to_string">
        <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                         line="43"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="queue_bits" transfer-ownership="none">
            <type name="Vulkan.QueueFlags" c:type="VkQueueFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="handle_context_query"
                c:identifier="gst_vulkan_queue_handle_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="212">If a #GstVulkanQueue is requested in @query, sets @queue as the reply.

Intended for use with element query handlers to respond to #GST_QUERY_CONTEXT
for a #GstVulkanQueue.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="223">whether @query was responded to with @queue</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="214">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="215">a #GstQuery of type #GST_QUERY_CONTEXT</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="queue"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="216">the #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </parameter>
        </parameters>
      </function>
      <function name="run_context_query"
                c:identifier="gst_vulkan_queue_run_context_query"
                version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="262">Attempt to retrieve a #GstVulkanQueue using #GST_QUERY_CONTEXT from the
surrounding elements of @element.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="270">whether @queue contains a valid #GstVulkanQueue</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="264">a #GstElement</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="queue"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="265">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue**"/>
          </parameter>
        </parameters>
      </function>
      <method name="create_command_pool"
              c:identifier="gst_vulkan_queue_create_command_pool"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="117">a new #GstVUlkanCommandPool or %NULL</doc>
          <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="114">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="gst_vulkan_queue_get_device"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="100">the #GstVulkanDevice for @queue</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="98">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="submit_lock" c:identifier="gst_vulkan_queue_submit_lock">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="308">Locks the queue for command submission using `vkQueueSubmit()` to meet the
Vulkan requirements for externally synchronised resources.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="310">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="submit_unlock"
              c:identifier="gst_vulkan_queue_submit_unlock">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="323">Unlocks the queue for command submission using `vkQueueSubmit()`.

See gst_vulkan_queue_submit_lock() for details on when this call is needed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="queue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkqueue.c"
                 line="325">a #GstVulkanQueue</doc>
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="queue">
        <type name="Vulkan.Queue" c:type="VkQueue"/>
      </field>
      <field name="family">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="index">
        <type name="guint32" c:type="guint32"/>
      </field>
    </class>
    <record name="VulkanQueueClass"
            c:type="GstVulkanQueueClass"
            glib:is-gtype-struct-for="VulkanQueue">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="52"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanQueuePrivate"
            c:type="GstVulkanQueuePrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="42"/>
    </record>
    <class name="VulkanSwapper"
           c:symbol-prefix="vulkan_swapper"
           c:type="GstVulkanSwapper"
           parent="Gst.Object"
           glib:type-name="GstVulkanSwapper"
           glib:get-type="gst_vulkan_swapper_get_type"
           glib:type-struct="VulkanSwapperClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="58"/>
      <constructor name="new" c:identifier="gst_vulkan_swapper_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="choose_queue"
              c:identifier="gst_vulkan_swapper_choose_queue"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="available_queue" transfer-ownership="none">
            <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_caps"
              c:identifier="gst_vulkan_swapper_get_supported_caps"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_surface_rectangles"
              c:identifier="gst_vulkan_swapper_get_surface_rectangles">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkswapper.c"
                 line="1438">a #GstVulkanSwapper</doc>
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="input_image"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkswapper.c"
                 line="1439">The #GstVideoRectangle for the configured
     caps modified for DAR.</doc>
            <type name="GstVideo.VideoRectangle" c:type="GstVideoRectangle*"/>
          </parameter>
          <parameter name="surface_location"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkswapper.c"
                 line="1441">The #GstVideoRectangle for where the
     output surface is located relative to its parent</doc>
            <type name="GstVideo.VideoRectangle" c:type="GstVideoRectangle*"/>
          </parameter>
          <parameter name="display_rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkswapper.c"
                 line="1443">The #GstVideoRectangle for where the input
     images are placed inside @surface_location</doc>
            <type name="GstVideo.VideoRectangle" c:type="GstVideoRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_buffer"
              c:identifier="gst_vulkan_swapper_render_buffer"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caps"
              c:identifier="gst_vulkan_swapper_set_caps"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="swapper" transfer-ownership="none">
            <type name="VulkanSwapper" c:type="GstVulkanSwapper*"/>
          </instance-parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <property name="force-aspect-ratio"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pixel-aspect-ratio"
                writable="1"
                transfer-ownership="none">
        <type name="Gst.Fraction"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="window">
        <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="cmd_pool">
        <type name="VulkanCommandPool" c:type="GstVulkanCommandPool*"/>
      </field>
    </class>
    <record name="VulkanSwapperClass"
            c:type="GstVulkanSwapperClass"
            glib:is-gtype-struct-for="VulkanSwapper">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="58"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="VulkanSwapperPrivate"
            c:type="GstVulkanSwapperPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/gstvkswapper.h"
                       line="43"/>
    </record>
    <record name="VulkanTrash"
            c:type="GstVulkanTrash"
            glib:type-name="GstVulkanTrash"
            glib:get-type="gst_vulkan_trash_get_type"
            c:symbol-prefix="vulkan_trash">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="43"/>
      <field name="parent" writable="1">
        <type name="Gst.MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="cache" writable="1">
        <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
      </field>
      <field name="fence" writable="1">
        <type name="VulkanFence" c:type="GstVulkanFence*"/>
      </field>
      <field name="notify" writable="1">
        <type name="VulkanTrashNotify" c:type="GstVulkanTrashNotify"/>
      </field>
      <field name="user_data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <constructor name="new" c:identifier="gst_vulkan_trash_new">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.c"
             line="108">Create and return a new #GstVulkanTrash object that will stores a callback
to call when @fence is signalled.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvktrash.c"
               line="117">a new #GstVulkanTrash</doc>
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="110">a #GstVulkanFence</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="111">a #GstVulkanTrashNotify</doc>
            <type name="VulkanTrashNotify" c:type="GstVulkanTrashNotify"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="112">user data for @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_free_semaphore"
                   c:identifier="gst_vulkan_trash_new_free_semaphore">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="93"/>
        <return-value transfer-ownership="full">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <parameter name="fence" transfer-ownership="none">
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="semaphore" transfer-ownership="none">
            <type name="Vulkan.Semaphore" c:type="VkSemaphore"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref"
              c:identifier="gst_vulkan_trash_ref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.h"
             line="49">Increases the refcount of the given trash object by one.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvktrash.h"
               line="55">@trash</doc>
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.h"
                 line="51">a #GstVulkanTrash.</doc>
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="gst_vulkan_trash_unref"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvktrash.h"
             line="64">Decreases the refcount of the trash object. If the refcount reaches 0, the
trash will be freed.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.h"
                 line="66">a #GstVulkanTrash.</doc>
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="mini_object_unref"
                c:identifier="gst_vulkan_trash_mini_object_unref">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="object_unref"
                c:identifier="gst_vulkan_trash_object_unref">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="VulkanTrashFenceList"
           c:symbol-prefix="vulkan_trash_fence_list"
           c:type="GstVulkanTrashFenceList"
           parent="VulkanTrashList"
           glib:type-name="GstVulkanTrashFenceList"
           glib:get-type="gst_vulkan_trash_fence_list_get_type"
           glib:type-struct="VulkanTrashFenceListClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="159"/>
      <constructor name="new" c:identifier="gst_vulkan_trash_fence_list_new">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </return-value>
      </constructor>
    </class>
    <record name="VulkanTrashFenceListClass"
            c:type="GstVulkanTrashFenceListClass"
            glib:is-gtype-struct-for="VulkanTrashFenceList">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="159"/>
      <field name="parent_class">
        <type name="VulkanTrashListClass" c:type="GstVulkanTrashListClass"/>
      </field>
    </record>
    <class name="VulkanTrashList"
           c:symbol-prefix="vulkan_trash_list"
           c:type="GstVulkanTrashList"
           parent="VulkanHandlePool"
           glib:type-name="GstVulkanTrashList"
           glib:get-type="gst_vulkan_trash_list_get_type"
           glib:type-struct="VulkanTrashListClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="142"/>
      <virtual-method name="add_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="trash" transfer-ownership="none">
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gc_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="wait_func">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="acquire" c:identifier="gst_vulkan_trash_list_acquire">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="153"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvktrash.c"
               line="309">a new or reused #GstVulkanTrash for the provided
         parameters.</doc>
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="304">a #GstVulkanTrashList</doc>
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="fence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="305">a #GstVulkanFence to wait for signalling</doc>
            <type name="VulkanFence" c:type="GstVulkanFence*"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="306">notify function for when @fence is signalled</doc>
            <type name="VulkanTrashNotify" c:type="GstVulkanTrashNotify"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvktrash.c"
                 line="307">user data for @notify</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add" c:identifier="gst_vulkan_trash_list_add">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="trash" transfer-ownership="none">
            <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
          </parameter>
        </parameters>
      </method>
      <method name="gc" c:identifier="gst_vulkan_trash_list_gc">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="wait" c:identifier="gst_vulkan_trash_list_wait">
        <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="trash_list" transfer-ownership="none">
            <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="VulkanHandlePool" c:type="GstVulkanHandlePool"/>
      </field>
    </class>
    <callback name="VulkanTrashListAdd" c:type="GstVulkanTrashListAdd">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="130"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
        <parameter name="trash" transfer-ownership="none">
          <type name="VulkanTrash" c:type="GstVulkanTrash*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="VulkanTrashListClass"
            c:type="GstVulkanTrashListClass"
            glib:is-gtype-struct-for="VulkanTrashList">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="142"/>
      <field name="parent_class">
        <type name="VulkanHandlePoolClass" c:type="GstVulkanHandlePoolClass"/>
      </field>
      <field name="add_func">
        <type name="VulkanTrashListAdd" c:type="GstVulkanTrashListAdd"/>
      </field>
      <field name="gc_func">
        <type name="VulkanTrashListGC" c:type="GstVulkanTrashListGC"/>
      </field>
      <field name="wait_func">
        <type name="VulkanTrashListWait" c:type="GstVulkanTrashListWait"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="VulkanTrashListGC" c:type="GstVulkanTrashListGC">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="129"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="VulkanTrashListWait" c:type="GstVulkanTrashListWait">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="131"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="trash_list" transfer-ownership="none">
          <type name="VulkanTrashList" c:type="GstVulkanTrashList*"/>
        </parameter>
        <parameter name="timeout" transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="VulkanTrashNotify" c:type="GstVulkanTrashNotify">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="28"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="VulkanVideoFilter"
           c:symbol-prefix="vulkan_video_filter"
           c:type="GstVulkanVideoFilter"
           parent="GstBase.BaseTransform"
           glib:type-name="GstVulkanVideoFilter"
           glib:get-type="gst_vulkan_video_filter_get_type"
           glib:type-struct="VulkanVideoFilterClass">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="59"/>
      <field name="parent">
        <type name="GstBase.BaseTransform" c:type="GstBaseTransform"/>
      </field>
      <field name="instance">
        <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
      </field>
      <field name="device">
        <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
      </field>
      <field name="queue">
        <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
      </field>
      <field name="in_caps">
        <type name="Gst.Caps" c:type="GstCaps*"/>
      </field>
      <field name="in_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="out_caps">
        <type name="Gst.Caps" c:type="GstCaps*"/>
      </field>
      <field name="out_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
    </class>
    <record name="VulkanVideoFilterClass"
            c:type="GstVulkanVideoFilterClass"
            glib:is-gtype-struct-for="VulkanVideoFilter">
      <source-position filename="../gst-libs/gst/vulkan/gstvkvideofilter.h"
                       line="59"/>
      <field name="video_sink_class">
        <type name="GstBase.BaseTransformClass"
              c:type="GstBaseTransformClass"/>
      </field>
    </record>
    <class name="VulkanWindow"
           c:symbol-prefix="vulkan_window"
           c:type="GstVulkanWindow"
           parent="Gst.Object"
           abstract="1"
           glib:type-name="GstVulkanWindow"
           glib:get-type="gst_vulkan_window_get_type"
           glib:type-struct="VulkanWindowClass">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkwindow.h"
           line="54">#GstVulkanWindow is an opaque struct and should only be accessed through the
provided api.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="99"/>
      <constructor name="new"
                   c:identifier="gst_vulkan_window_new"
                   version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="255">a new #GstVulkanWindow using @display's connection</doc>
          <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="253">a #GstVulkanDisplay</doc>
            <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="close" invoker="close" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="401">Attempt to close the window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="403">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_presentation_support"
                      invoker="get_presentation_support"
                      version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="362">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="358">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="359">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="queue_family_idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="360">the queue family</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_surface"
                      invoker="get_surface"
                      version="1.18"
                      introspectable="0"
                      throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="84"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="339">the VkSurface for displaying into.  The caller is responsible for
    calling `VkDestroySurface` on the returned surface.</doc>
          <type name="Vulkan.SurfaceKHR" c:type="VkSurfaceKHR"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="336">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_surface_dimensions"
                      invoker="get_surface_dimensions">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_events" invoker="handle_events">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="528">Tell a @window that it should handle events from the window system. These
events are forwarded upstream as navigation events. In some window systems
events are not propagated in the window hierarchy if a client is listening
for them. This method allows you to disable events handling completely
from the @window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="530">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="531">a #gboolean indicating if events should be handled or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open" invoker="open" version="1.18" throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="385">whether @window could be successfully opened</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="382">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_window_handle" invoker="set_window_handle">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="close"
              c:identifier="gst_vulkan_window_close"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="401">Attempt to close the window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="403">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gst_vulkan_window_get_display"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="322">the #GstVulkanDisplay for @window</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="320">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_presentation_support"
              c:identifier="gst_vulkan_window_get_presentation_support"
              version="1.18">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="362">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="358">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="359">a #GstVulkanDevice</doc>
            <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
          </parameter>
          <parameter name="queue_family_idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="360">the queue family</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_surface"
              c:identifier="gst_vulkan_window_get_surface"
              version="1.18"
              introspectable="0"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="107"/>
        <return-value>
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="339">the VkSurface for displaying into.  The caller is responsible for
    calling `VkDestroySurface` on the returned surface.</doc>
          <type name="Vulkan.SurfaceKHR" c:type="VkSurfaceKHR"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="336">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_surface_dimensions"
              c:identifier="gst_vulkan_window_get_surface_dimensions">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="handle_events"
              c:identifier="gst_vulkan_window_handle_events">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="528">Tell a @window that it should handle events from the window system. These
events are forwarded upstream as navigation events. In some window systems
events are not propagated in the window hierarchy if a client is listening
for them. This method allows you to disable events handling completely
from the @window.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="530">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="531">a #gboolean indicating if events should be handled or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="gst_vulkan_window_open"
              version="1.18"
              throws="1">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkwindow.c"
               line="385">whether @window could be successfully opened</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="382">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redraw"
              c:identifier="gst_vulkan_window_redraw"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="453">Ask the @window to redraw its contents</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="455">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resize"
              c:identifier="gst_vulkan_window_resize"
              version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="425">Resize the output surface.

Currently intended for subclasses to update internal state.</doc>
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="427">a #GstVulkanWindow</doc>
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="428">the new width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="429">the new height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_key_event"
              c:identifier="gst_vulkan_window_send_key_event">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="key_str" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_mouse_event"
              c:identifier="gst_vulkan_window_send_mouse_event">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="posx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="posy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_window_handle"
              c:identifier="gst_vulkan_window_set_window_handle">
        <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </method>
      <property name="display" transfer-ownership="none">
        <type name="VulkanDisplay"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
      </field>
      <field name="lock" readable="0" private="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <glib:signal name="close" when="last">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </glib:signal>
      <glib:signal name="draw" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="key-event" when="last" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="224">Will be emitted when a key event is received by the #GstVulkanWindow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="227">the name of the event</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="228">the id of the key pressed</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mouse-event" when="last" version="1.18">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.c"
             line="207">Will be emitted when a mouse event is received by the #GstVulkanWindow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="210">the name of the event</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="211">the id of the button</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="212">the x coordinate of the mouse event</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="213">the y coordinate of the mouse event</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="resize" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="VulkanWindowClass"
            c:type="GstVulkanWindowClass"
            glib:is-gtype-struct-for="VulkanWindow">
      <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                       line="99"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkwindow.h"
             line="73">Parent class</doc>
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="open">
        <callback name="open" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="385">whether @window could be successfully opened</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="382">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="403">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_surface" introspectable="0">
        <callback name="get_surface" introspectable="0" throws="1">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="84"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="339">the VkSurface for displaying into.  The caller is responsible for
    calling `VkDestroySurface` on the returned surface.</doc>
            <type name="Vulkan.SurfaceKHR" c:type="VkSurfaceKHR"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="336">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_presentation_support">
        <callback name="get_presentation_support">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                 line="362">whether the given combination of @window, @device and
         @queue_family_idx supports presentation</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="358">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="359">a #GstVulkanDevice</doc>
              <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
            </parameter>
            <parameter name="queue_family_idx" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="360">the queue family</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_window_handle">
        <callback name="set_window_handle">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="handle" transfer-ownership="none">
              <type name="guintptr" c:type="guintptr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_surface_dimensions">
        <callback name="get_surface_dimensions">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="guint" c:type="guint*"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="guint" c:type="guint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_events">
        <callback name="handle_events">
          <source-position filename="../gst-libs/gst/vulkan/gstvkwindow.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="530">a #GstVulkanWindow</doc>
              <type name="VulkanWindow" c:type="GstVulkanWindow*"/>
            </parameter>
            <parameter name="handle_events" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../gst-libs/gst/vulkan/gstvkwindow.c"
                   line="531">a #gboolean indicating if events should be handled or not.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="VulkanWindowError"
                 glib:type-name="GstVulkanWindowError"
                 glib:get-type="gst_vulkan_window_error_get_type"
                 c:type="GstVulkanWindowError"
                 glib:error-domain="gst-gl-window-error-quark">
      <member name="failed"
              value="0"
              c:identifier="GST_VULKAN_WINDOW_ERROR_FAILED"
              glib:nick="failed">
      </member>
      <member name="old_libs"
              value="1"
              c:identifier="GST_VULKAN_WINDOW_ERROR_OLD_LIBS"
              glib:nick="old-libs">
      </member>
      <member name="resource_unavailable"
              value="2"
              c:identifier="GST_VULKAN_WINDOW_ERROR_RESOURCE_UNAVAILABLE"
              glib:nick="resource-unavailable">
      </member>
      <function name="quark" c:identifier="gst_vulkan_window_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="VulkanWindowPrivate"
            c:type="GstVulkanWindowPrivate"
            disguised="1">
      <source-position filename="../gst-libs/gst/vulkan/vulkan_fwd.h"
                       line="68"/>
    </record>
    <function name="context_get_vulkan_device"
              c:identifier="gst_context_get_vulkan_device"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="84"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdevice.c"
             line="503">Whether @device was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="500">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="501">resulting #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_display"
              c:identifier="gst_context_get_vulkan_display"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="118"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="493">Whether @display was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="490">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="491">resulting #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_instance"
              c:identifier="gst_context_get_vulkan_instance"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="76"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkinstance.c"
             line="508">Whether @instance was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="505">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="instance" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="506">resulting #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_vulkan_queue"
              c:identifier="gst_context_get_vulkan_queue"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="70"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkqueue.c"
             line="189">Whether @queue was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="186">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="187">resulting #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_device"
              c:identifier="gst_context_set_vulkan_device"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdevice.c"
           line="471">Sets @device on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdevice.h"
                       line="81"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="473">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdevice.c"
               line="474">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_display"
              c:identifier="gst_context_set_vulkan_display"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
           line="460">Sets @display on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="121"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="462">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="463">a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_instance"
              c:identifier="gst_context_set_vulkan_instance"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkinstance.c"
           line="475">Sets @instance on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkinstance.h"
                       line="73"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="477">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="instance" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkinstance.c"
               line="478">a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_vulkan_queue"
              c:identifier="gst_context_set_vulkan_queue"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkqueue.c"
           line="157">Sets @queue on @context</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkqueue.h"
                       line="67"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="159">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="queue" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkqueue.c"
               line="160">a #GstVulkanQueue</doc>
          <type name="VulkanQueue" c:type="GstVulkanQueue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_buffer_memory"
              c:identifier="gst_is_vulkan_buffer_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="99"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="386">whether the memory at @mem is a #GstVulkanBufferMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="384">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_image_memory"
              c:identifier="gst_is_vulkan_image_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="112"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="726">whether the memory at @mem is a #GstVulkanImageMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="724">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_vulkan_memory"
              c:identifier="gst_is_vulkan_memory"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="332">whether the memory at @mem is a #GstVulkanMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="330">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_buffer_memory_alloc"
              c:identifier="gst_vulkan_buffer_memory_alloc"
              moved-to="VulkanBufferMemory.alloc"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
           line="274">Allocate a new #GstVulkanBufferMemory.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="102"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="283">a #GstMemory object backed by a vulkan buffer
         backed by vulkan device memory</doc>
        <type name="Gst.Memory" c:type="GstMemory*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="276">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="277">size of the new buffer</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="usage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="278">buffer usage flags</doc>
          <type name="Vulkan.BufferUsageFlags" c:type="VkBufferUsageFlags"/>
        </parameter>
        <parameter name="mem_prop_flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="279">memory properties flags for the backing memory</doc>
          <type name="Vulkan.MemoryPropertyFlags"
                c:type="VkMemoryPropertyFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_buffer_memory_init_once"
              c:identifier="gst_vulkan_buffer_memory_init_once"
              moved-to="VulkanBufferMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
           line="355">Initializes the Vulkan buffer memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanBufferMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="97"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_buffer_memory_wrapped"
              c:identifier="gst_vulkan_buffer_memory_wrapped"
              moved-to="VulkanBufferMemory.wrapped"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
           line="300">Allocated a new wrapped #GstVulkanBufferMemory with @buffer.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkbuffermemory.h"
                       line="108"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
             line="310">a #GstMemory object backed by a vulkan device memory</doc>
        <type name="Gst.Memory" c:type="GstMemory*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="302">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="303">a #VkBuffer</doc>
          <type name="Vulkan.Buffer" c:type="VkBuffer"/>
        </parameter>
        <parameter name="usage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="304">usage flags of @buffer</doc>
          <type name="Vulkan.BufferUsageFlags" c:type="VkBufferUsageFlags"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="305">user data to call @notify with</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkbuffermemory.c"
               line="306">a #GDestroyNotify called when @buffer is no longer in use</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="vulkan_command_buffer_lock"
                    c:identifier="gst_vulkan_command_buffer_lock"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                       line="99"/>
      <parameters>
        <parameter name="cmd">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="vulkan_command_buffer_unlock"
                    c:identifier="gst_vulkan_command_buffer_unlock"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkcommandbuffer.h"
                       line="100"/>
      <parameters>
        <parameter name="cmd">
        </parameter>
      </parameters>
    </function-macro>
    <function name="vulkan_create_shader"
              c:identifier="gst_vulkan_create_shader"
              throws="1">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="59"/>
      <return-value transfer-ownership="full">
        <type name="VulkanHandle" c:type="GstVulkanHandle*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="vulkan_descriptor_set_lock"
                    c:identifier="gst_vulkan_descriptor_set_lock"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                       line="102"/>
      <parameters>
        <parameter name="set">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="vulkan_descriptor_set_unlock"
                    c:identifier="gst_vulkan_descriptor_set_unlock"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdescriptorset.h"
                       line="103"/>
      <parameters>
        <parameter name="set">
        </parameter>
      </parameters>
    </function-macro>
    <function name="vulkan_display_type_to_extension_string"
              c:identifier="gst_vulkan_display_type_to_extension_string"
              moved-to="VulkanDisplayType.to_extension_string"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdisplay.h"
                       line="107"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
             line="601">the Vulkan extension string required for creating a VkSurfaceKHR
using a window system handle or %NULL</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkdisplay.c"
               line="599">a #GstVulkanDisplayType</doc>
          <type name="VulkanDisplayType" c:type="GstVulkanDisplayType"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_ensure_element_data"
              c:identifier="gst_vulkan_ensure_element_data"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="227">Perform the steps necessary for retrieving a #GstVulkanInstance and
(optionally) an #GstVulkanDisplay from the surrounding elements or from
the application using the #GstContext mechanism.

If the contents of @display_ptr or @instance_ptr are not %NULL, then no
#GstContext query is necessary and no #GstVulkanInstance or #GstVulkanDisplay
retrieval is performed.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="29"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="241">whether a #GstVulkanInstance exists in @instance_ptr and if
         @display_ptr is not %NULL, whether a #GstVulkanDisplay exists in
         @display_ptr</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="229">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="display_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="230">the resulting #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
        <parameter name="instance_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="231">the resulting #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_error_quark"
              c:identifier="gst_vulkan_error_quark"
              moved-to="VulkanError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="vulkan_error_to_g_error"
              c:identifier="gst_vulkan_error_to_g_error"
              moved-to="VulkanError.to_g_error"
              version="1.18"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkerror.c"
           line="75">if @result indicates an error condition, fills out #Gerror with details of
the error</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkerror.h"
                       line="42"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkerror.c"
             line="85">@result for easy chaining</doc>
        <type name="Vulkan.Result" c:type="VkResult"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="77">a VkResult</doc>
          <type name="Vulkan.Result" c:type="VkResult"/>
        </parameter>
        <parameter name="error"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="78">a #GError to fill</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="79">the printf-like format to write into the #GError</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkerror.c"
               line="80">arguments for @format</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="vulkan_fence_cache_acquire"
                    c:identifier="gst_vulkan_fence_cache_acquire"
                    introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkfence.h"
                       line="93"/>
      <parameters>
        <parameter name="o">
        </parameter>
        <parameter name="e">
        </parameter>
      </parameters>
    </function-macro>
    <function name="vulkan_format_from_video_info"
              c:identifier="gst_vulkan_format_from_video_info"
              version="1.18"
              introspectable="0">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="158"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="47">the VkFormat to use for @v_format and @plane</doc>
        <type name="Vulkan.Format" c:type="VkFormat"/>
      </return-value>
      <parameters>
        <parameter name="v_info" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="44">the #GstVideoInfo</doc>
          <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
        </parameter>
        <parameter name="plane" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="45">the plane</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_format_get_info"
              c:identifier="gst_vulkan_format_get_info">
      <source-position filename="../gst-libs/gst/vulkan/gstvkformat.h"
                       line="83"/>
      <return-value transfer-ownership="none">
        <type name="VulkanFormatInfo" c:type="const GstVulkanFormatInfo*"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="Vulkan.Format" c:type="VkFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_get_or_create_image_view"
              c:identifier="gst_vulkan_get_or_create_image_view">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="56"/>
      <return-value transfer-ownership="full">
        <type name="VulkanImageView" c:type="GstVulkanImageView*"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <type name="VulkanImageMemory" c:type="GstVulkanImageMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_global_context_query"
              c:identifier="gst_vulkan_global_context_query"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="140">Performs the steps necessary for executing a context query including
posting a message for the application to respond.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="45"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="142">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="143">the context type to query for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_handle_context_query"
              c:identifier="gst_vulkan_handle_context_query"
              moved-to="VulkanHandle.context_query"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="38"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="386">Whether the @query was successfully responded to from the passed
         @display, @instance, and @device.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="380">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="381">a #GstQuery of type %GST_QUERY_CONTEXT</doc>
          <type name="Gst.Query" c:type="GstQuery*"/>
        </parameter>
        <parameter name="display"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="382">a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay*"/>
        </parameter>
        <parameter name="instance"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="383">a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance*"/>
        </parameter>
        <parameter name="device"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="384">a #GstVulkanInstance</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_handle_set_context"
              c:identifier="gst_vulkan_handle_set_context"
              moved-to="VulkanHandle.set_context"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="313">Helper function for implementing #GstElementClass.set_context() in
Vulkan capable elements.

Retrieve's the #GstVulkanDisplay or #GstVulkanInstance in @context and places
the result in @display or @instance respectively.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="326">whether the @display or @instance could be set successfully</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="315">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="316">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="317">location of a #GstVulkanDisplay</doc>
          <type name="VulkanDisplay" c:type="GstVulkanDisplay**"/>
        </parameter>
        <parameter name="instance"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="318">location of a #GstVulkanInstance</doc>
          <type name="VulkanInstance" c:type="GstVulkanInstance**"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_image_memory_alloc"
              c:identifier="gst_vulkan_image_memory_alloc"
              moved-to="VulkanImageMemory.alloc"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
           line="437">Allocated a new #GstVulkanImageMemory.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="125"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="449">a #GstMemory object backed by a vulkan device memory</doc>
        <type name="Gst.Memory" c:type="GstMemory*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="439">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="440">the VkFormat for the new image</doc>
          <type name="Vulkan.Format" c:type="VkFormat"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="441">width for the new image</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="442">height for the new image</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="tiling" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="443">tiling for the new image</doc>
          <type name="Vulkan.ImageTiling" c:type="VkImageTiling"/>
        </parameter>
        <parameter name="usage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="444">usage flags for the new image</doc>
          <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
        </parameter>
        <parameter name="mem_prop_flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="445">VkDeviceMemory property flags for the new image</doc>
          <type name="Vulkan.MemoryPropertyFlags"
                c:type="VkMemoryPropertyFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_image_memory_init_once"
              c:identifier="gst_vulkan_image_memory_init_once"
              moved-to="VulkanImageMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
           line="695">Initializes the Vulkan image memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanImageMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="110"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_image_memory_wrapped"
              c:identifier="gst_vulkan_image_memory_wrapped"
              moved-to="VulkanImageMemory.wrapped"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkimagememory.h"
                       line="134"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
             line="478">a new #GstVulkanImageMemory wrapping @image</doc>
        <type name="Gst.Memory" c:type="GstMemory*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="468">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="469">a VkImage</doc>
          <type name="Vulkan.Image" c:type="VkImage"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="470">the VkFormat for @image</doc>
          <type name="Vulkan.Format" c:type="VkFormat"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="471">width of @image</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="472">height of @image</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="tiling" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="473">tiling of @image</doc>
          <type name="Vulkan.ImageTiling" c:type="VkImageTiling"/>
        </parameter>
        <parameter name="usage" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="474">usage flags of @image</doc>
          <type name="Vulkan.ImageUsageFlags" c:type="VkImageUsageFlags"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="475">user data for @notify</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkimagememory.c"
               line="476">a #DestroyNotify when @image is no longer needed</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_local_context_query"
              c:identifier="gst_vulkan_local_context_query"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkutils.c"
           line="180">Performs the steps necessary for executing a context query between only
other elements in the pipeline</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="48"/>
      <return-value transfer-ownership="full">
        <type name="Gst.Query" c:type="GstQuery*"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="182">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="183">the context type to query for</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_memory_alloc"
              c:identifier="gst_vulkan_memory_alloc"
              moved-to="VulkanMemory.alloc"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.c"
           line="251">Allocated a new #GstVulkanMemory.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="97"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="260">a #GstMemory object backed by a vulkan device memory</doc>
        <type name="Gst.Memory" c:type="GstMemory*"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="253">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="memory_type_index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="254">the Vulkan memory type index</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="255">a #GstAllocationParams</doc>
          <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="256">the size to allocate</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="mem_prop_flags" transfer-ownership="none">
          <type name="Vulkan.MemoryPropertyFlags"
                c:type="VkMemoryPropertyFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_memory_find_memory_type_index_with_type_properties"
              c:identifier="gst_vulkan_memory_find_memory_type_index_with_type_properties"
              moved-to="VulkanMemory.find_memory_type_index_with_type_properties"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="104"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkmemory.c"
             line="224">whether a valid memory type could be found</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="219">a #GstVulkanDevice</doc>
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="type_bits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="220">memory type bits to search for</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="properties" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="221">memory properties to search for</doc>
          <type name="Vulkan.MemoryPropertyFlags"
                c:type="VkMemoryPropertyFlags"/>
        </parameter>
        <parameter name="type_index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkmemory.c"
               line="222">resulting index of the memory type</doc>
          <type name="guint32" c:type="guint32*"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_memory_heap_flags_to_string"
              c:identifier="gst_vulkan_memory_heap_flags_to_string"
              moved-to="VulkanMemory.heap_flags_to_string">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                       line="41"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="prop_bits" transfer-ownership="none">
          <type name="Vulkan.MemoryHeapFlags" c:type="VkMemoryHeapFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_memory_init_once"
              c:identifier="gst_vulkan_memory_init_once"
              moved-to="VulkanMemory.init_once"
              version="1.18">
      <doc xml:space="preserve"
           filename="../gst-libs/gst/vulkan/gstvkmemory.c"
           line="301">Initializes the Vulkan memory allocator. It is safe to call this function
multiple times.  This must be called before any other #GstVulkanMemory operation.</doc>
      <source-position filename="../gst-libs/gst/vulkan/gstvkmemory.h"
                       line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="vulkan_memory_property_flags_to_string"
              c:identifier="gst_vulkan_memory_property_flags_to_string"
              moved-to="VulkanMemory.property_flags_to_string">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                       line="39"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="prop_bits" transfer-ownership="none">
          <type name="Vulkan.MemoryPropertyFlags"
                c:type="VkMemoryPropertyFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_run_query"
              c:identifier="gst_vulkan_run_query"
              version="1.18">
      <source-position filename="../gst-libs/gst/vulkan/gstvkutils.h"
                       line="51"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../gst-libs/gst/vulkan/gstvkutils.c"
             line="77">whether @query was answered successfully</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="73">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="74">the #GstQuery to perform</doc>
          <type name="Gst.Query" c:type="GstQuery*"/>
        </parameter>
        <parameter name="direction" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../gst-libs/gst/vulkan/gstvkutils.c"
               line="75">the #GstPadDirection to perform query on</doc>
          <type name="Gst.PadDirection" c:type="GstPadDirection"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_sample_count_flags_to_string"
              c:identifier="gst_vulkan_sample_count_flags_to_string">
      <source-position filename="../gst-libs/gst/vulkan/gstvkdebug.h"
                       line="45"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="sample_count_bits" transfer-ownership="none">
          <type name="Vulkan.SampleCountFlags" c:type="VkSampleCountFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_trash_mini_object_unref"
              c:identifier="gst_vulkan_trash_mini_object_unref"
              moved-to="VulkanTrash.mini_object_unref">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="87"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_trash_object_unref"
              c:identifier="gst_vulkan_trash_object_unref"
              moved-to="VulkanTrash.object_unref">
      <source-position filename="../gst-libs/gst/vulkan/gstvktrash.h"
                       line="90"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="device" transfer-ownership="none">
          <type name="VulkanDevice" c:type="GstVulkanDevice*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="vulkan_window_error_quark"
              c:identifier="gst_vulkan_window_error_quark"
              moved-to="VulkanWindowError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
