<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="flatpak"/>
  <c:include name="flatpak.h"/>
  <namespace name="Flatpak"
             version="1.0"
             shared-library="libflatpak.so.0"
             c:identifier-prefixes="Flatpak"
             c:symbol-prefixes="flatpak">
    <function-macro name="BUNDLE_REF"
                    c:identifier="FLATPAK_BUNDLE_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-bundle-ref.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="BundleRef"
           c:symbol-prefix="bundle_ref"
           c:type="FlatpakBundleRef"
           parent="Ref"
           glib:type-name="FlatpakBundleRef"
           glib:get-type="flatpak_bundle_ref_get_type"
           glib:type-struct="BundleRefClass">
      <source-position filename="common/flatpak-bundle-ref.h" line="49"/>
      <constructor name="new" c:identifier="flatpak_bundle_ref_new" throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="275">Creates a new bundle ref for the given file.</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="282">a new bundle ref.</doc>
          <type name="BundleRef" c:type="FlatpakBundleRef*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="277">a #GFile</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_appstream"
              c:identifier="flatpak_bundle_ref_get_appstream">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="182">Get the compressed appstream for the app/runtime</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="188">an #GBytes with the appstream contents, or %NULL</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="184">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file"
              c:identifier="flatpak_bundle_ref_get_file"
              glib:get-property="file">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="148">Get the file this bundle is stored in.</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="154">an #GFile</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="150">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon" c:identifier="flatpak_bundle_ref_get_icon">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="200">Get the icon png data for the app/runtime</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="207">an #GBytes with png contents</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="202">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="203">64 or 128</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_installed_size"
              c:identifier="flatpak_bundle_ref_get_installed_size">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="259">Returns the installed size for the bundle.</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="265">the installed size</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="261">a FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="flatpak_bundle_ref_get_metadata">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="164">Get the metadata for the app/runtime</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="170">an #GBytes with the metadata contents, or %NULL</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="166">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin" c:identifier="flatpak_bundle_ref_get_origin">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="224">Get the origin url stored in the bundle</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="230">an url string, or %NULL</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="226">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_runtime_repo_url"
              c:identifier="flatpak_bundle_ref_get_runtime_repo_url"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="241">Get the runtime flatpakrepo url stored in the bundle (if any)</doc>
        <source-position filename="common/flatpak-bundle-ref.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-bundle-ref.c"
               line="247">an url string, or %NULL</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-bundle-ref.c"
                 line="243">a #FlatpakBundleRef</doc>
            <type name="BundleRef" c:type="FlatpakBundleRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="file"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_file">
        <doc xml:space="preserve"
             filename="common/flatpak-bundle-ref.c"
             line="129">The bundle file that this ref refers to.</doc>
        <type name="Gio.File"/>
      </property>
      <field name="parent">
        <type name="Ref" c:type="FlatpakRef"/>
      </field>
    </class>
    <record name="BundleRefClass"
            c:type="FlatpakBundleRefClass"
            glib:is-gtype-struct-for="BundleRef">
      <source-position filename="common/flatpak-bundle-ref.h" line="49"/>
      <field name="parent_class">
        <type name="RefClass" c:type="FlatpakRefClass"/>
      </field>
    </record>
    <function-macro name="CHECK_VERSION"
                    c:identifier="FLATPAK_CHECK_VERSION"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="common/flatpak-version-macros.h"
           line="50">Check that the current version is at least @major.@minor.@micro.</doc>
      <source-position filename="common/flatpak-version-macros.h" line="58"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="common/flatpak-version-macros.h"
               line="52">major version to compare against</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="common/flatpak-version-macros.h"
               line="53">minor version to compare against</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="common/flatpak-version-macros.h"
               line="54">micro version to compare against</doc>
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="Error"
                 glib:type-name="FlatpakError"
                 glib:get-type="flatpak_error_get_type"
                 c:type="FlatpakError"
                 glib:error-domain="flatpak-error-quark">
      <doc xml:space="preserve"
           filename="common/flatpak-error.h"
           line="34">Error codes for library functions.</doc>
      <member name="already_installed"
              value="0"
              c:identifier="FLATPAK_ERROR_ALREADY_INSTALLED"
              glib:nick="already-installed"
              glib:name="FLATPAK_ERROR_ALREADY_INSTALLED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="36">App/runtime/remote is already installed</doc>
      </member>
      <member name="not_installed"
              value="1"
              c:identifier="FLATPAK_ERROR_NOT_INSTALLED"
              glib:nick="not-installed"
              glib:name="FLATPAK_ERROR_NOT_INSTALLED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="37">App/runtime is not installed</doc>
      </member>
      <member name="only_pulled"
              value="2"
              c:identifier="FLATPAK_ERROR_ONLY_PULLED"
              glib:nick="only-pulled"
              glib:name="FLATPAK_ERROR_ONLY_PULLED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="38">App/runtime was only pulled into the local
                            repository but not installed.</doc>
      </member>
      <member name="different_remote"
              value="3"
              c:identifier="FLATPAK_ERROR_DIFFERENT_REMOTE"
              glib:nick="different-remote"
              glib:name="FLATPAK_ERROR_DIFFERENT_REMOTE">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="40">The App/Runtime is already installed, but from a different remote.</doc>
      </member>
      <member name="aborted"
              value="4"
              c:identifier="FLATPAK_ERROR_ABORTED"
              glib:nick="aborted"
              glib:name="FLATPAK_ERROR_ABORTED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="41">The transaction was aborted (returned %TRUE in operation-error signal).</doc>
      </member>
      <member name="skipped"
              value="5"
              c:identifier="FLATPAK_ERROR_SKIPPED"
              glib:nick="skipped"
              glib:name="FLATPAK_ERROR_SKIPPED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="42">The App/Runtime install was skipped due to earlier errors.</doc>
      </member>
      <member name="need_new_flatpak"
              value="6"
              c:identifier="FLATPAK_ERROR_NEED_NEW_FLATPAK"
              glib:nick="need-new-flatpak"
              glib:name="FLATPAK_ERROR_NEED_NEW_FLATPAK">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="43">The App/Runtime needs a more recent version of flatpak.</doc>
      </member>
      <member name="remote_not_found"
              value="7"
              c:identifier="FLATPAK_ERROR_REMOTE_NOT_FOUND"
              glib:nick="remote-not-found"
              glib:name="FLATPAK_ERROR_REMOTE_NOT_FOUND">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="44">The specified remote was not found.</doc>
      </member>
      <member name="runtime_not_found"
              value="8"
              c:identifier="FLATPAK_ERROR_RUNTIME_NOT_FOUND"
              glib:nick="runtime-not-found"
              glib:name="FLATPAK_ERROR_RUNTIME_NOT_FOUND">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="45">A runtime needed for the app was not found.</doc>
      </member>
      <member name="downgrade"
              value="9"
              c:identifier="FLATPAK_ERROR_DOWNGRADE"
              glib:nick="downgrade"
              glib:name="FLATPAK_ERROR_DOWNGRADE">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="46">The pulled commit is a downgrade, and a downgrade wasn't
                          specifically allowed. (Since: 1.0)</doc>
      </member>
      <member name="invalid_ref"
              value="10"
              c:identifier="FLATPAK_ERROR_INVALID_REF"
              glib:nick="invalid-ref"
              glib:name="FLATPAK_ERROR_INVALID_REF">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="48">A ref could not be parsed. (Since: 1.0.3)</doc>
      </member>
      <member name="invalid_data"
              value="11"
              c:identifier="FLATPAK_ERROR_INVALID_DATA"
              glib:nick="invalid-data"
              glib:name="FLATPAK_ERROR_INVALID_DATA">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="49">Invalid data. (Since: 1.0.3)</doc>
      </member>
      <member name="untrusted"
              value="12"
              c:identifier="FLATPAK_ERROR_UNTRUSTED"
              glib:nick="untrusted"
              glib:name="FLATPAK_ERROR_UNTRUSTED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="50">Missing GPG key or signature. (Since: 1.0.3)</doc>
      </member>
      <member name="setup_failed"
              value="13"
              c:identifier="FLATPAK_ERROR_SETUP_FAILED"
              glib:nick="setup-failed"
              glib:name="FLATPAK_ERROR_SETUP_FAILED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="51">Sandbox setup failed. (Since: 1.0.3)</doc>
      </member>
      <member name="export_failed"
              value="14"
              c:identifier="FLATPAK_ERROR_EXPORT_FAILED"
              glib:nick="export-failed"
              glib:name="FLATPAK_ERROR_EXPORT_FAILED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="52">Exporting data failed. (Since: 1.0.3)</doc>
      </member>
      <member name="remote_used"
              value="15"
              c:identifier="FLATPAK_ERROR_REMOTE_USED"
              glib:nick="remote-used"
              glib:name="FLATPAK_ERROR_REMOTE_USED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="53">Remote can't be uninstalled. (Since: 1.0.3)</doc>
      </member>
      <member name="runtime_used"
              value="16"
              c:identifier="FLATPAK_ERROR_RUNTIME_USED"
              glib:nick="runtime-used"
              glib:name="FLATPAK_ERROR_RUNTIME_USED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="54">Runtime can't be uninstalled. (Since: 1.0.3)</doc>
      </member>
      <member name="invalid_name"
              value="17"
              c:identifier="FLATPAK_ERROR_INVALID_NAME"
              glib:nick="invalid-name"
              glib:name="FLATPAK_ERROR_INVALID_NAME">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="55">Application, runtime or remote name is invalid. (Since: 1.0.3)</doc>
      </member>
      <member name="out_of_space"
              value="18"
              c:identifier="FLATPAK_ERROR_OUT_OF_SPACE"
              glib:nick="out-of-space"
              glib:name="FLATPAK_ERROR_OUT_OF_SPACE">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="56">More disk space needed. (Since: 1.2.0)</doc>
      </member>
      <member name="wrong_user"
              value="19"
              c:identifier="FLATPAK_ERROR_WRONG_USER"
              glib:nick="wrong-user"
              glib:name="FLATPAK_ERROR_WRONG_USER">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="57">An operation is being attempted by the wrong user (such as
                           root operating on a user installation). (Since: 1.2.0)</doc>
      </member>
      <member name="not_cached"
              value="20"
              c:identifier="FLATPAK_ERROR_NOT_CACHED"
              glib:nick="not-cached"
              glib:name="FLATPAK_ERROR_NOT_CACHED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="59">Cached data was requested, but it was not available. (Since: 1.4.0)</doc>
      </member>
      <member name="ref_not_found"
              value="21"
              c:identifier="FLATPAK_ERROR_REF_NOT_FOUND"
              glib:nick="ref-not-found"
              glib:name="FLATPAK_ERROR_REF_NOT_FOUND">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="60">The specified ref was not found. (Since: 1.4.0)</doc>
      </member>
      <member name="permission_denied"
              value="22"
              c:identifier="FLATPAK_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied"
              glib:name="FLATPAK_ERROR_PERMISSION_DENIED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="61">An operation was not allowed by the administrative policy.
                                  For example, an app is not allowed to be installed due
                                  to not complying with the parental controls policy. (Since: 1.5.1)</doc>
      </member>
      <member name="authentication_failed"
              value="23"
              c:identifier="FLATPAK_ERROR_AUTHENTICATION_FAILED"
              glib:nick="authentication-failed"
              glib:name="FLATPAK_ERROR_AUTHENTICATION_FAILED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="64">An authentication operation failed, for example, no
                                      correct password was supplied. (Since: 1.7.3)</doc>
      </member>
      <member name="not_authorized"
              value="24"
              c:identifier="FLATPAK_ERROR_NOT_AUTHORIZED"
              glib:nick="not-authorized"
              glib:name="FLATPAK_ERROR_NOT_AUTHORIZED">
        <doc xml:space="preserve"
             filename="common/flatpak-error.h"
             line="66">An operation tried to access a ref, or information about it that it
                               was not authorized. For example, when succesfully authenticating with a
                               server but the user doesn't have permissions for a private ref. (Since: 1.7.3)</doc>
      </member>
      <function name="quark" c:identifier="flatpak_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <function-macro name="INSTALLATION"
                    c:identifier="FLATPAK_INSTALLATION"
                    introspectable="0">
      <source-position filename="common/flatpak-installation.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INSTALLED_REF"
                    c:identifier="FLATPAK_INSTALLED_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-installed-ref.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INSTANCE"
                    c:identifier="FLATPAK_INSTANCE"
                    introspectable="0">
      <source-position filename="common/flatpak-instance.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUNDLE_REF"
                    c:identifier="FLATPAK_IS_BUNDLE_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-bundle-ref.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INSTALLATION"
                    c:identifier="FLATPAK_IS_INSTALLATION"
                    introspectable="0">
      <source-position filename="common/flatpak-installation.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INSTALLED_REF"
                    c:identifier="FLATPAK_IS_INSTALLED_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-installed-ref.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INSTANCE"
                    c:identifier="FLATPAK_IS_INSTANCE"
                    introspectable="0">
      <source-position filename="common/flatpak-instance.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REF"
                    c:identifier="FLATPAK_IS_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-ref.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RELATED_REF"
                    c:identifier="FLATPAK_IS_RELATED_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-related-ref.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REMOTE"
                    c:identifier="FLATPAK_IS_REMOTE"
                    introspectable="0">
      <source-position filename="common/flatpak-remote.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REMOTE_REF"
                    c:identifier="FLATPAK_IS_REMOTE_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-remote-ref.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="InstallFlags"
              glib:type-name="FlatpakInstallFlags"
              glib:get-type="flatpak_install_flags_get_type"
              c:type="FlatpakInstallFlags">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="75">Flags to alter the behavior of flatpak_installation_install_full().</doc>
      <member name="none"
              value="0"
              c:identifier="FLATPAK_INSTALL_FLAGS_NONE"
              glib:nick="none"
              glib:name="FLATPAK_INSTALL_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="77">Default</doc>
      </member>
      <member name="no_static_deltas"
              value="1"
              c:identifier="FLATPAK_INSTALL_FLAGS_NO_STATIC_DELTAS"
              glib:nick="no-static-deltas"
              glib:name="FLATPAK_INSTALL_FLAGS_NO_STATIC_DELTAS">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="78">Don't use static deltas when pulling</doc>
      </member>
      <member name="no_deploy"
              value="4"
              c:identifier="FLATPAK_INSTALL_FLAGS_NO_DEPLOY"
              glib:nick="no-deploy"
              glib:name="FLATPAK_INSTALL_FLAGS_NO_DEPLOY">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="79">Don't install any new builds that might be fetched</doc>
      </member>
      <member name="no_pull"
              value="8"
              c:identifier="FLATPAK_INSTALL_FLAGS_NO_PULL"
              glib:nick="no-pull"
              glib:name="FLATPAK_INSTALL_FLAGS_NO_PULL">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="80">Don't try to fetch new builds from the remote repo</doc>
      </member>
      <member name="no_triggers"
              value="16"
              c:identifier="FLATPAK_INSTALL_FLAGS_NO_TRIGGERS"
              glib:nick="no-triggers"
              glib:name="FLATPAK_INSTALL_FLAGS_NO_TRIGGERS">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="81">Don't call triggers after installing. If used,
the caller must later call flatpak_installation_run_triggers() to update
the exported files. (Since: 1.0.3)</doc>
      </member>
    </bitfield>
    <class name="Installation"
           c:symbol-prefix="installation"
           c:type="FlatpakInstallation"
           parent="GObject.Object"
           glib:type-name="FlatpakInstallation"
           glib:get-type="flatpak_installation_get_type"
           glib:type-struct="InstallationClass">
      <source-position filename="common/flatpak-installation.h" line="51"/>
      <constructor name="new_for_path"
                   c:identifier="flatpak_installation_new_for_path"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="347">Creates a new #FlatpakInstallation for the installation at the given @path.</doc>
        <source-position filename="common/flatpak-installation.h" line="185"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="356">a new #FlatpakInstallation</doc>
          <type name="Installation" c:type="FlatpakInstallation*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="349">a #GFile</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="350">whether this is a user-specific location</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="351">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_system"
                   c:identifier="flatpak_installation_new_system"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="277">Creates a new #FlatpakInstallation for the default system-wide installation.</doc>
        <source-position filename="common/flatpak-installation.h" line="178"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="284">a new #FlatpakInstallation</doc>
          <type name="Installation" c:type="FlatpakInstallation*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="279">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_system_with_id"
                   c:identifier="flatpak_installation_new_system_with_id"
                   version="0.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="293">Creates a new #FlatpakInstallation for the system-wide installation @id.</doc>
        <source-position filename="common/flatpak-installation.h" line="180"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="301">a new #FlatpakInstallation</doc>
          <type name="Installation" c:type="FlatpakInstallation*"/>
        </return-value>
        <parameters>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="295">the ID of the system-wide installation</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="296">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_user"
                   c:identifier="flatpak_installation_new_user"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="331">Creates a new #FlatpakInstallation for the per-user installation.</doc>
        <source-position filename="common/flatpak-installation.h" line="183"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="338">a new #FlatpakInstallation</doc>
          <type name="Installation" c:type="FlatpakInstallation*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="333">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_remote"
              c:identifier="flatpak_installation_add_remote"
              version="1.3.4"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1353">Adds a new @remote object to the set of remotes. This is similar
to flatpak_installation_modify_remote() for non-existing remote
names. However, if the named remote already exists then instead of
modifying it it fails with %FLATPAK_ERROR_ALREADY_INSTALLED, or if
@if_needed is true it silently succeeds without doing anything.

As an exception to the last, if the local config has a filter defined,
but the new remote unsets the filter (for example, it comes from an
unfiltered .flatpakref via flatpak_remote_new_from_file()) the the local
remote filter gets reset. This is to allow the setup where there is a
default setup of a filtered remote, yet you can still use the standard
flatpakref file to get the full contents without getting two remotes.</doc>
        <source-position filename="common/flatpak-installation.h" line="287"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1374">%TRUE if the modifications have been committed successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1355">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1356">the new #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </parameter>
          <parameter name="if_needed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1357">if %TRUE, only add if it doesn't exists</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1358">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cleanup_local_refs_sync"
              c:identifier="flatpak_installation_cleanup_local_refs_sync"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2940">Remove all OSTree refs from the local flatpak repository which are not
in a deployed state. The next time the underlying OSTree repo is pruned,
objects which were attached to that ref will be removed. This is useful if
you pulled a flatpak refs using flatpak_installation_install_full() and
specified %FLATPAK_INSTALL_FLAGS_NO_DEPLOY but then decided not to
deploy the refs later on and want to remove the local refs to prevent them
from taking up disk space. Note that this will not remove the objects
referred to by @ref from the underlying OSTree repo, you should use
flatpak_installation_prune_local_repo() to do that.</doc>
        <source-position filename="common/flatpak-installation.h" line="479"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2957">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2942">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2943">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_monitor"
              c:identifier="flatpak_installation_create_monitor"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2653">Gets monitor object for the installation. The returned file monitor will
emit the #GFileMonitor::changed signal whenever an application or runtime
was installed, uninstalled or updated.</doc>
        <source-position filename="common/flatpak-installation.h" line="236"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2663">a new #GFileMonitor instance, or %NULL on error</doc>
          <type name="Gio.FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2655">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2656">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="drop_caches"
              c:identifier="flatpak_installation_drop_caches"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="436">Drops all internal (in-memory) caches. For instance, this may be needed to pick up new or changed
remotes configured outside this installation instance.</doc>
        <source-position filename="common/flatpak-installation.h" line="211"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="445">%TRUE on success, %FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="438">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="439">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_remote_metadata_sync"
              c:identifier="flatpak_installation_fetch_remote_metadata_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2327">Obtains the metadata file from a commit.

NOTE: Since 0.11.4 this information is accessible in FlatpakRemoteRef, so this
function is not very useful anymore.</doc>
        <source-position filename="common/flatpak-installation.h" line="413"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2340">a #GBytes containing the flatpak metadata file,
  or %NULL if an error occurred</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2329">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2330">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2331">the ref</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2332">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_remote_ref_sync"
              c:identifier="flatpak_installation_fetch_remote_ref_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2480">Gets the current remote branch of a ref in the remote.</doc>
        <source-position filename="common/flatpak-installation.h" line="427"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2493">a #FlatpakRemoteRef instance, or %NULL</doc>
          <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2482">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2483">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2484">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2485">name of the app/runtime to fetch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2486">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2487">which branch to fetch (default: 'master')</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2488">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_remote_ref_sync_full"
              c:identifier="flatpak_installation_fetch_remote_ref_sync_full"
              version="1.3.3"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2510">Gets the current remote branch of a ref in the remote.</doc>
        <source-position filename="common/flatpak-installation.h" line="435"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2524">a #FlatpakRemoteRef instance, or %NULL</doc>
          <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2512">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2513">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2514">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2515">name of the app/runtime to fetch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2516">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2517">which branch to fetch (default: 'master')</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2518">set of #FlatpakQueryFlags</doc>
            <type name="QueryFlags" c:type="FlatpakQueryFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2519">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fetch_remote_size_sync"
              c:identifier="flatpak_installation_fetch_remote_size_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2278">Gets information about the maximum amount of data that needs to be transferred
to pull the ref from a remote repository, and about the amount of
local disk space that is required to check out this commit.

Note that if there are locally available data that are in the ref, which is common
for instance if you're doing an update then the real download size may be smaller
than what is returned here.

NOTE: Since 0.11.4 this information is accessible in FlatpakRemoteRef, so this
function is not very useful anymore.</doc>
        <source-position filename="common/flatpak-installation.h" line="406"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2299">%TRUE, unless an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2280">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2281">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2282">the ref</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </parameter>
          <parameter name="download_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2283">return location for the (maximum) download size</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="installed_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2284">return location for the installed size</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2285">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config"
              c:identifier="flatpak_installation_get_config"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1499">Get a global configuration option for the installation, see
flatpak_installation_set_config_sync() for supported keys.</doc>
        <source-position filename="common/flatpak-installation.h" line="312"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1509">The (newly allocated) value, or %NULL on error (%G_KEY_FILE_ERROR_KEY_NOT_FOUND error if key is not set)</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1501">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1502">the name of the key to get</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1503">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_current_installed_app"
              c:identifier="flatpak_installation_get_current_installed_app"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="842">Get the last build of reference @name that was installed with
flatpak_installation_install(), or %NULL if the reference has
never been installed locally.</doc>
        <source-position filename="common/flatpak-installation.h" line="270"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="853">an #FlatpakInstalledRef</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="844">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="845">the name of the app</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="846">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_languages"
              c:identifier="flatpak_installation_get_default_languages"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1526">Get the default languages used by the installation to decide which
subpaths to install of locale extensions. This list may also be used
by frontends like GNOME Software to decide which language-specific apps
to display. An empty array means that all languages should be installed.</doc>
        <source-position filename="common/flatpak-installation.h" line="316"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1536">
  A possibly empty array of strings, or %NULL on error.</doc>
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1528">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_locales"
              c:identifier="flatpak_installation_get_default_locales"
              version="1.5.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1553">Like flatpak_installation_get_default_languages() but includes territory
information (e.g. `en_US` rather than `en`) which may be included in the
`extra-languages` configuration.

Strings returned by this function are in the format specified by
[`setlocale()`](man:setlocale): `language[_territory][.codeset][@modifier]`.</doc>
        <source-position filename="common/flatpak-installation.h" line="318"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1565">
  A possibly empty array of locale strings, or %NULL on error.</doc>
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1555">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="flatpak_installation_get_display_name"
              version="0.8">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="526">Returns the display name of the installation for @self.

Note that this function may return %NULL if the installation
does not have a display name.</doc>
        <source-position filename="common/flatpak-installation.h" line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="535">a string with the installation's display name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="528">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="flatpak_installation_get_id"
              version="0.8">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="505">Returns the ID of the installation for @self.

The ID for the default system installation is "default".
The ID for the user installation is "user".</doc>
        <source-position filename="common/flatpak-installation.h" line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="514">a string with the installation's ID</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="507">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installed_ref"
              c:identifier="flatpak_installation_get_installed_ref"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="792">Returns information about an installed ref, such as the available builds,
its size, location, etc.</doc>
        <source-position filename="common/flatpak-installation.h" line="263"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="805">an #FlatpakInstalledRef, or %NULL if an error occurred</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="794">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="795">whether this is an app or runtime</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="796">name of the app/runtime to fetch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="797">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="798">which branch to fetch (default: "master")</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="799">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_is_user"
              c:identifier="flatpak_installation_get_is_user">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="473">Returns whether the installation is for a user-specific location.</doc>
        <source-position filename="common/flatpak-installation.h" line="214"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="479">%TRUE if @self is a per-user installation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="475">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min_free_space_bytes"
              c:identifier="flatpak_installation_get_min_free_space_bytes"
              version="1.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1582">Returns the min-free-space config value from the OSTree repository of this installation.

Applications can use this value, together with information about the available
disk space and the size of pending updates or installs, to estimate whether a
pull operation will fail due to running out of disk space.</doc>
        <source-position filename="common/flatpak-installation.h" line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1594">%TRUE on success, or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1584">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="out_bytes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1585">Location to store the result</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_no_interaction"
              c:identifier="flatpak_installation_get_no_interaction"
              version="1.1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="173">Returns the value set with flatpak_installation_set_no_interaction().</doc>
        <source-position filename="common/flatpak-installation.h" line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="179">%TRUE if interactive authorization dialogs are not allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="175">a #FlatpakTransaction</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path" c:identifier="flatpak_installation_get_path">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="489">Returns the installation location for @self.</doc>
        <source-position filename="common/flatpak-installation.h" line="215"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="495">an #GFile</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="491">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="flatpak_installation_get_priority"
              version="0.8">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="551">Returns the numeric priority of the installation for @self.</doc>
        <source-position filename="common/flatpak-installation.h" line="218"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="557">an integer with the configured priority value</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="553">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote_by_name"
              c:identifier="flatpak_installation_get_remote_by_name"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1661">Looks up a remote by name.</doc>
        <source-position filename="common/flatpak-installation.h" line="283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1670">a #FlatpakRemote instance, or %NULL with @error
  set</doc>
          <type name="Remote" c:type="FlatpakRemote*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1663">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1664">a remote name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1665">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_storage_type"
              c:identifier="flatpak_installation_get_storage_type"
              version="0.8">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="569">Returns the type of storage of the installation for @self.</doc>
        <source-position filename="common/flatpak-installation.h" line="219"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="575">a #FlatpakStorageType</doc>
          <type name="StorageType" c:type="FlatpakStorageType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="571">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="install"
              c:identifier="flatpak_installation_install"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1954">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_install()
instead. It has a lot more interesting features.

Install a new application or runtime.

Note that this function was originally written to always return a
#FlatpakInstalledRef. Since 0.9.13, passing
FLATPAK_INSTALL_FLAGS_NO_DEPLOY will only pull refs into the local flatpak
repository without deploying them, however this function will
be unable to provide information on the installed ref, so
FLATPAK_ERROR_ONLY_PULLED will be set and the caller must respond
accordingly.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_install() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="325"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1981">The ref for the newly installed app or %NULL on failure</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1956">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1957">name of the remote to use</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1958">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1959">name of the app/runtime to fetch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1960">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1961">which branch to fetch (default: 'master')</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="6">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1962">progress callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1963">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1964">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_bundle"
              c:identifier="flatpak_installation_install_bundle"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1727">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_install_bundle()
instead. It has a lot more interesting features.

Install an application or runtime from an flatpak bundle file.
See flatpak-build-bundle(1) for how to create bundles.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_install_bundle() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="372"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1743">The ref for the newly installed app or %NULL on failure</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1729">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1730">a #GFile that is an flatpak bundle</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1731">progress callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1732">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1733">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_full"
              c:identifier="flatpak_installation_install_full"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1847">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_install()
instead. It has a lot more interesting features.

Install a new application or runtime.

Note that this function was originally written to always return a
#FlatpakInstalledRef. Since 0.9.13, passing
FLATPAK_INSTALL_FLAGS_NO_DEPLOY will only pull refs into the local flatpak
repository without deploying them, however this function will
be unable to provide information on the installed ref, so
FLATPAK_ERROR_ONLY_PULLED will be set and the caller must respond
accordingly.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_install() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="336"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1876">The ref for the newly installed app or %NULL on failure</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1849">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1850">set of #FlatpakInstallFlags flag</doc>
            <type name="InstallFlags" c:type="FlatpakInstallFlags"/>
          </parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1851">name of the remote to use</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1852">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1853">name of the app/runtime to fetch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1854">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1855">which branch to fetch (default: 'master')</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1856">A list of subpaths to fetch, or %NULL for everything</doc>
            <array c:type="const char* const*">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="8">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1857">progress callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1858">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1859">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_ref_file"
              c:identifier="flatpak_installation_install_ref_file"
              version="0.6.10"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1792">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_install_flatpakref()
instead. It has a lot more interesting features.

Creates a remote based on the passed in .flatpakref file contents
in @ref_file_data and returns the #FlatpakRemoteRef that can be used
to install it.

Note, the #FlatpakRemoteRef will not have the commit field set, or other details, to
avoid unnecessary roundtrips. If you need that you have to resolve it
explicitly with flatpak_installation_fetch_remote_ref_sync ().</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_install_flatpakref() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="379"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1811">a #FlatpakRemoteRef if the remote has been added successfully, %NULL
on error.</doc>
          <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1794">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="ref_file_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1795">The ref file contents</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1796">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="launch"
              c:identifier="flatpak_installation_launch"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="604">Launch an installed application.

You can use flatpak_installation_get_installed_ref() or
flatpak_installation_get_current_installed_app() to find out what builds
are available, in order to get a value for @commit.</doc>
        <source-position filename="common/flatpak-installation.h" line="220"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="620">%TRUE, unless an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="606">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="607">name of the app to launch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="608">which architecture to launch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="609">which branch of the application (default: "master")</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="commit"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="610">the commit of @branch to launch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="611">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="launch_full"
              c:identifier="flatpak_installation_launch_full"
              version="1.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="638">Launch an installed application.

You can use flatpak_installation_get_installed_ref() or
flatpak_installation_get_current_installed_app() to find out what builds
are available, in order to get a value for @commit.

Compared to flatpak_installation_launch(), this function returns a #FlatpakInstance
that can be used to get information about the running instance. You can also use
it to wait for the instance to be done with g_child_watch_add() if you pass the
#FLATPAK_LAUNCH_FLAGS_DO_NOT_REAP flag.</doc>
        <source-position filename="common/flatpak-installation.h" line="227"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="661">%TRUE, unless an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="640">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="641">set of #FlatpakLaunchFlags</doc>
            <type name="LaunchFlags" c:type="FlatpakLaunchFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="642">name of the app to launch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="643">which architecture to launch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="644">which branch of the application (default: "master")</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="commit"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="645">the commit of @branch to launch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="instance_out"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="646">return location for a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="647">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_installed_refs"
              c:identifier="flatpak_installation_list_installed_refs"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="883">Lists the installed references.</doc>
        <source-position filename="common/flatpak-installation.h" line="239"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="891">a GPtrArray of
  #FlatpakInstalledRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="885">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="886">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_installed_refs_by_kind"
              c:identifier="flatpak_installation_list_installed_refs_by_kind"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="940">Lists the installed references of a specific kind.</doc>
        <source-position filename="common/flatpak-installation.h" line="242"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="949">a GPtrArray of
  #FlatpakInstalledRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="942">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="943">the kind of installation</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="944">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_installed_refs_for_update"
              c:identifier="flatpak_installation_list_installed_refs_for_update"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1046">Lists the installed apps and runtimes that have an update available, either
from the configured remote or locally available but not deployed (see
flatpak_transaction_set_no_deploy()).

This also checks if any of #FlatpakInstalledRef has a missing #FlatpakRelatedRef
(which has `should-download` set to %TRUE) or runtime. If so, it adds the
ref to the returning #GPtrArray to pull in the #FlatpakRelatedRef or runtime
again via an update operation in #FlatpakTransaction.

In case more than one app needs an update of the same runtime or extension,
this function will return all of those apps.</doc>
        <source-position filename="common/flatpak-installation.h" line="246"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1064">a GPtrArray of
  #FlatpakInstalledRef instances, or %NULL on error</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1048">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1049">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_installed_related_refs_sync"
              c:identifier="flatpak_installation_list_installed_related_refs_sync"
              version="0.6.7"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2754">Lists all the locally installed refs that are related to @ref. These are
things that are interesting to install, update, or uninstall together with
@ref. For instance, locale data or debug information.

Note that while the related refs are usually installed from the same remote
as @ref (@remote_name), it is possible they were installed from another
remote.

This function is similar to flatpak_installation_list_remote_related_refs_sync,
but instead of looking at what is available on the remote, it only looks
at the locally installed refs. This is useful for instance when you're
looking for related refs to uninstall, or when you're planning to use
FLATPAK_UPDATE_FLAGS_NO_PULL to install previously pulled refs.</doc>
        <source-position filename="common/flatpak-installation.h" line="468"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2776">a GPtrArray of
  #FlatpakRelatedRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="RelatedRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2756">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2757">the name of the remote providing @ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2758">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2759">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_pinned_refs"
              c:identifier="flatpak_installation_list_pinned_refs"
              version="1.9.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="3131">Lists the installed references that are pinned, meaning they will not be
returned by flatpak_installation_list_unused_refs() and won't be removed
unless explicitly specified for removal.

Refs appear here either because they have been pinned automatically by
Flatpak or because the user pinned them; see flatpak-pin(1).</doc>
        <source-position filename="common/flatpak-installation.h" line="259"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="3145">a GPtrArray of
  #FlatpakInstalledRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3133">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3134">if non-%NULL, the architecture of refs to collect</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3135">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remote_refs_sync"
              c:identifier="flatpak_installation_list_remote_refs_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2373">Lists all the applications and runtimes in a remote.</doc>
        <source-position filename="common/flatpak-installation.h" line="418"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2382">a GPtrArray of
  #FlatpakRemoteRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="RemoteRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2375">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_or_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2376">the name or URI of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2377">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remote_refs_sync_full"
              c:identifier="flatpak_installation_list_remote_refs_sync_full"
              version="1.3.3"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2394">Lists all the applications and runtimes in a remote.</doc>
        <source-position filename="common/flatpak-installation.h" line="422"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2404">a GPtrArray of
  #FlatpakRemoteRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="RemoteRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2396">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_or_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2397">the name or URI of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2398">set of #FlatpakQueryFlags</doc>
            <type name="QueryFlags" c:type="FlatpakQueryFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2399">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remote_related_refs_for_installed_sync"
              c:identifier="flatpak_installation_list_remote_related_refs_for_installed_sync"
              version="1.11.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2822">Lists all the available refs on @remote_name that are related to @ref, and
which are appropriate for the installed version of @ref. For example if the
installed version of org.videolan.VLC has a related ref of
org.videolan.VLC.Plugin.bdj//3-19.08 and the remote version of VLC has a
related ref of org.videolan.VLC.Plugin.bdj//3-20.08, this function will only
return the 3-19.08 branch.

See also the related functions
flatpak_installation_list_remote_related_refs_sync() and
flatpak_installation_list_installed_related_refs_sync().

The returned list contains all available related refs, but not
every one should always be installed. For example,
flatpak_related_ref_should_download() returns %TRUE if the
reference should be installed/updated with the app, and
flatpak_related_ref_should_delete() returns %TRUE if it
should be uninstalled with the main ref.

The commit property of each #FlatpakRelatedRef is not guaranteed to be
non-%NULL.</doc>
        <source-position filename="common/flatpak-installation.h" line="463"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2851">a GPtrArray of
  #FlatpakRelatedRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="RelatedRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2824">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2825">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2826">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2827">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remote_related_refs_sync"
              c:identifier="flatpak_installation_list_remote_related_refs_sync"
              version="0.6.7"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2680">Lists all the available refs on @remote_name that are related to
@ref, and the subpaths to use. These are things that are
interesting to install, update, or uninstall together with
@ref. For instance, locale data or debug information.

The returned list contains all available related refs, but not
every one should always be installed. For example,
flatpak_related_ref_should_download() returns %TRUE if the
reference should be installed/updated with the app, and
flatpak_related_ref_should_delete() returns %TRUE if it
should be uninstalled with the main ref.

The commit property of each #FlatpakRelatedRef is not guaranteed to be
non-%NULL.</doc>
        <source-position filename="common/flatpak-installation.h" line="458"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2703">a GPtrArray of
  #FlatpakRelatedRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="RelatedRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2682">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2683">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2684">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2685">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remotes"
              c:identifier="flatpak_installation_list_remotes"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1295">Lists the static remotes, in priority (highest first) order. For same
priority, an earlier added remote comes before a later added one.</doc>
        <source-position filename="common/flatpak-installation.h" line="275"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1304">a GPtrArray of
  #FlatpakRemote instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Remote"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1297">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1298">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_remotes_by_type"
              c:identifier="flatpak_installation_list_remotes_by_type"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1227">Lists only the remotes whose type is included in the @types argument.

Since flatpak 1.7 this will never return any types except FLATPAK_REMOTE_TYPE_STATIC.
Equivalent functionallity to FLATPAK_REMOTE_TYPE_USB can be had by listing remote refs
with FLATPAK_QUERY_FLAGS_ONLY_SIDELOADED.</doc>
        <source-position filename="common/flatpak-installation.h" line="278"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1241">a GPtrArray of
  #FlatpakRemote instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Remote"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1229">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="types" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1230">an array of #FlatpakRemoteType</doc>
            <array length="1"
                   zero-terminated="0"
                   c:type="const FlatpakRemoteType*">
              <type name="RemoteType" c:type="FlatpakRemoteType"/>
            </array>
          </parameter>
          <parameter name="num_types" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1231">the number of types provided in @types</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1232">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_unused_refs"
              c:identifier="flatpak_installation_list_unused_refs"
              version="1.1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="3028">Lists the installed references that are not 'used'.

A reference is used if it is either an application,
or the runtime or sdk of a used ref, or an extension of a used ref.
Pinned runtimes are also considered used; see flatpak-pin(1) and
flatpak_installation_list_pinned_refs().</doc>
        <source-position filename="common/flatpak-installation.h" line="249"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="3042">a GPtrArray of
  #FlatpakInstalledRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3030">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3031">if non-%NULL, the architecture of refs to collect</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3032">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_unused_refs_with_options"
              c:identifier="flatpak_installation_list_unused_refs_with_options"
              version="1.9.1"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="3056">Like flatpak_installation_list_unused_refs() but supports an extensible set
of options as well as an @metadata_injection parameter. The following are
currently defined:

  * exclude-refs (as): Act as if these refs are not installed even if they
      are when determining the set of unused refs
  * filter-by-eol (b): Only return refs as unused if they are End-Of-Life.
      Note that if this option is combined with other filters (of which there
      are none currently) non-EOL refs may also be returned.</doc>
        <source-position filename="common/flatpak-installation.h" line="253"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="3078">a GPtrArray of
  #FlatpakInstalledRef instances</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="InstalledRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3058">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3059">if non-%NULL, the architecture of refs to collect</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="metadata_injection"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3060">if non-%NULL, a #GHashTable mapping refs to
                                 #GKeyFile objects, which when available will
                                 be used instead of installed metadata</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="options"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3063">if non-%NULL, a GVariant a{sv} with an extensible set
                      of options</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3065">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_app_overrides"
              c:identifier="flatpak_installation_load_app_overrides"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1694">Loads the metadata overrides file for an application.</doc>
        <source-position filename="common/flatpak-installation.h" line="320"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1703">the contents of the overrides files,
   or %NULL if an error occurred</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1696">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="app_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1697">an application id</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1698">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_remote"
              c:identifier="flatpak_installation_modify_remote"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1317">Saves changes in the @remote object.</doc>
        <source-position filename="common/flatpak-installation.h" line="292"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1326">%TRUE if the modifications have been committed successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1319">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1320">the modified #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1321">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prune_local_repo"
              c:identifier="flatpak_installation_prune_local_repo"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2973">Remove all orphaned OSTree objects from the underlying OSTree repo in
@self.</doc>
        <source-position filename="common/flatpak-installation.h" line="482"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2983">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2975">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2976">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_local_ref_sync"
              c:identifier="flatpak_installation_remove_local_ref_sync"
              version="0.10.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2903">Remove the OSTree ref given by @remote_name:@ref from the local flatpak
repository. The next time the underlying OSTree repo is pruned, objects
which were attached to that ref will be removed. This is useful if you
pulled a flatpak ref using flatpak_installation_install_full() and
specified %FLATPAK_INSTALL_FLAGS_NO_DEPLOY but then decided not to
deploy the ref later on and want to remove the local ref to prevent it
from taking up disk space. Note that this will not remove the objects
referred to by @ref from the underlying OSTree repo, you should use
flatpak_installation_prune_local_repo() to do that.</doc>
        <source-position filename="common/flatpak-installation.h" line="474"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2922">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2905">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2906">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2907">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2908">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_remote"
              c:identifier="flatpak_installation_remove_remote"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1414">Removes the remote with the given name from the installation.</doc>
        <source-position filename="common/flatpak-installation.h" line="296"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1423">%TRUE if the remote has been removed successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1416">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1417">the name of the remote to remove</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1418">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_triggers"
              c:identifier="flatpak_installation_run_triggers"
              version="1.0.3"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2999">Run the trigger commands to update the files exported by the apps in
@self. Should be used after one or more app install, upgrade or
uninstall operations with the %FLATPAK_INSTALL_FLAGS_NO_TRIGGERS,
%FLATPAK_UPDATE_FLAGS_NO_TRIGGERS or %FLATPAK_UNINSTALL_FLAGS_NO_TRIGGERS
flags set.</doc>
        <source-position filename="common/flatpak-installation.h" line="485"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="3012">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3001">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="3002">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_config_sync"
              c:identifier="flatpak_installation_set_config_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1454">Set a global configuration option for the installation, currently
the only supported keys are `languages`, which is a semicolon-separated
list of language codes like `"sv;en;pl"`, or `""` to mean all languages,
and `extra-languages`, which is a semicolon-separated list of locale
identifiers like `"en;en_DK;zh_HK.big5hkscs;uz_UZ.utf8@cyrillic"`.</doc>
        <source-position filename="common/flatpak-installation.h" line="304"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1468">%TRUE if the option was set correctly</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1456">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1457">the name of the key to set</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1458">the new value, or %NULL to unset</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1459">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_no_interaction"
              c:identifier="flatpak_installation_set_no_interaction"
              version="1.1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="151">This method can be used to prevent interactive authorization dialogs to appear
for operations on @self. This is useful for background operations that are not
directly triggered by a user action.

By default, interaction is allowed.</doc>
        <source-position filename="common/flatpak-installation.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="153">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="no_interaction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="154">Whether to disallow interactive authorization for operations</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninstall"
              c:identifier="flatpak_installation_uninstall"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2167">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_uninstall()
instead. It has a lot more interesting features.

Uninstall an application or runtime.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_uninstall() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="384"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2187">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2169">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2170">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2171">name of the app or runtime to uninstall</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2172">architecture of the app or runtime to uninstall; if
 %NULL, flatpak_get_default_arch() is assumed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2174">name of the branch of the app or runtime to uninstall;
 if %NULL, `master` is assumed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2176">the callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2177">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2178">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninstall_full"
              c:identifier="flatpak_installation_uninstall_full"
              version="0.11.8"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2209">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_uninstall()
instead. It has a lot more interesting features.

Uninstall an application or runtime.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_uninstall() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="395"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2230">%TRUE on success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2211">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2212">set of #FlatpakUninstallFlags flags</doc>
            <type name="UninstallFlags" c:type="FlatpakUninstallFlags"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2213">what this ref contains (an #FlatpakRefKind)</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2214">name of the app or runtime to uninstall</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2215">architecture of the app or runtime to uninstall; if
 %NULL, flatpak_get_default_arch() is assumed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2217">name of the branch of the app or runtime to uninstall;
 if %NULL, `master` is assumed</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="6">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2219">the callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2220">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2221">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update"
              c:identifier="flatpak_installation_update"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2120">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_update()
instead. It has a lot more interesting features.

Update an application or runtime.

If the specified package is not installed, then %FLATPAK_ERROR_NOT_INSTALLED
will be thrown.

If no updates could be found on the remote end and the package is
already up to date, then %FLATPAK_ERROR_ALREADY_INSTALLED will be thrown.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_update() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="349"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2145">The ref for the newly updated app or %NULL on failure</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2122">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2123">set of #FlatpakUpdateFlags flag</doc>
            <type name="UpdateFlags" c:type="FlatpakUpdateFlags"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2124">whether this is an app or runtime</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2125">name of the app or runtime to update</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2126">architecture of the app or runtime to update (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2127">name of the branch of the app or runtime to update (default: master)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="6">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2128">the callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2129">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2130">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_appstream_full_sync"
              c:identifier="flatpak_installation_update_appstream_full_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2602">Updates the local copy of appstream for @remote_name for the specified @arch.</doc>
        <source-position filename="common/flatpak-installation.h" line="450"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2615">%TRUE on success, or %FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2604">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2605">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2606">Architecture to update, or %NULL for the local machine arch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2607">progress callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2608">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="out_changed"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2609">Set to %TRUE if the contents of the appstream changed, %FALSE if nothing changed</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2610">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_appstream_sync"
              c:identifier="flatpak_installation_update_appstream_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2575">Updates the local copy of appstream for @remote_name for the specified @arch.
If you need progress feedback, use flatpak_installation_update_appstream_full_sync().</doc>
        <source-position filename="common/flatpak-installation.h" line="444"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2587">%TRUE on success, or %FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2577">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2578">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2579">Architecture to update, or %NULL for the local machine arch</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="out_changed"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2580">Set to %TRUE if the contents of the appstream changed, %FALSE if nothing changed</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2581">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_full"
              c:identifier="flatpak_installation_update_full"
              deprecated="1"
              deprecated-version="1.7.0"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="2004">This is an old deprecated function, you should use
#FlatpakTransaction and flatpak_transaction_add_update()
instead. It has a lot more interesting features.

Update an application or runtime.

If the specified package is not installed, then %FLATPAK_ERROR_NOT_INSTALLED
will be thrown.

If no updates could be found on the remote end and the package is
already up to date, then %FLATPAK_ERROR_ALREADY_INSTALLED will be thrown.</doc>
        <doc-deprecated xml:space="preserve">Use flatpak_transaction_add_update() instead.</doc-deprecated>
        <source-position filename="common/flatpak-installation.h" line="360"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="2030">The ref for the newly updated app or %NULL on failure</doc>
          <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2006">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2007">set of #FlatpakUpdateFlags flag</doc>
            <type name="UpdateFlags" c:type="FlatpakUpdateFlags"/>
          </parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2008">whether this is an app or runtime</doc>
            <type name="RefKind" c:type="FlatpakRefKind"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2009">name of the app or runtime to update</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2010">architecture of the app or runtime to update (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2011">name of the branch of the app or runtime to update (default: master)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2012">A list of subpaths to fetch, or %NULL for everything</doc>
            <array c:type="const char* const*">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
          <parameter name="progress"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="7">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2013">the callback</doc>
            <type name="ProgressCallback" c:type="FlatpakProgressCallback"/>
          </parameter>
          <parameter name="progress_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2014">user data passed to @progress</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="2015">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_remote_sync"
              c:identifier="flatpak_installation_update_remote_sync"
              version="0.6.13"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="1618">Updates the local configuration of a remote repository by fetching
the related information from the summary file in the remote OSTree
repository and committing the changes to the local installation.</doc>
        <source-position filename="common/flatpak-installation.h" line="300"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="1629">%TRUE if the remote has been updated successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1620">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1621">the name of the remote to update</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installation.c"
                 line="1622">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="InstallationClass"
            c:type="FlatpakInstallationClass"
            glib:is-gtype-struct-for="Installation">
      <source-position filename="common/flatpak-installation.h" line="51"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="InstalledRef"
           c:symbol-prefix="installed_ref"
           c:type="FlatpakInstalledRef"
           parent="Ref"
           glib:type-name="FlatpakInstalledRef"
           glib:get-type="flatpak_installed_ref_get_type"
           glib:type-struct="InstalledRefClass">
      <source-position filename="common/flatpak-installed-ref.h" line="49"/>
      <method name="get_appdata_content_rating"
              c:identifier="flatpak_installed_ref_get_appdata_content_rating"
              glib:get-property="appdata-content-rating"
              version="1.4.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="675">Returns the content rating field from the appdata. This is a potentially
empty mapping of content rating attribute IDs to values, to be interpreted
by the semantics of the content rating type (see
flatpak_installed_ref_get_appdata_content_rating_type()).</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="65"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="684">the content
rating or %NULL</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="677">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_appdata_content_rating_type"
              c:identifier="flatpak_installed_ref_get_appdata_content_rating_type"
              glib:get-property="appdata-content-rating-type"
              version="1.4.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="656">Returns the content rating type from the appdata. For example, `oars-1.0` or
`oars-1.1`.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="64"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="663">the content rating type or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="658">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_appdata_license"
              c:identifier="flatpak_installed_ref_get_appdata_license"
              glib:get-property="appdata-license"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="638">Returns the license field from the appdata.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="644">the license or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="640">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_appdata_name"
              c:identifier="flatpak_installed_ref_get_appdata_name"
              glib:get-property="appdata-name"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="580">Returns the name field from the appdata.

The returned string is localized.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="588">the name or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="582">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_appdata_summary"
              c:identifier="flatpak_installed_ref_get_appdata_summary"
              glib:get-property="appdata-summary"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="600">Returns the summary field from the appdata.

The returned string is localized.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="608">the summary or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="602">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_appdata_version"
              c:identifier="flatpak_installed_ref_get_appdata_version"
              glib:get-property="appdata-version"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="620">Returns the default version field from the appdata.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="626">the version or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="622">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_deploy_dir"
              c:identifier="flatpak_installed_ref_get_deploy_dir"
              glib:get-property="deploy-dir">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="407">Gets the deploy dir of the ref.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="413">the deploy dir</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="409">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol" c:identifier="flatpak_installed_ref_get_eol">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="546">Returns the end-of-life reason string, or %NULL if the
ref is not end-of-lifed.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="553">the end-of-life reason or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="548">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol_rebase"
              c:identifier="flatpak_installed_ref_get_eol_rebase">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="563">Returns the end-of-life rebased ref, or %NULL if the
ref is not end-of-lifed.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="570">the end-of-life rebased ref or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="565">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installed_size"
              c:identifier="flatpak_installed_ref_get_installed_size"
              glib:get-property="installed-size">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="455">Returns the installed size of the ref.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="461">the installed size</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="457">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_current"
              c:identifier="flatpak_installed_ref_get_is_current"
              glib:get-property="is-current">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="423">Returns whether the ref is current.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="429">%TRUE if the ref is current</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="425">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_latest_commit"
              c:identifier="flatpak_installed_ref_get_latest_commit"
              glib:get-property="latest-commit">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="391">Gets the latest commit of the ref.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="59"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="397">the latest commit</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="393">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin"
              c:identifier="flatpak_installed_ref_get_origin"
              glib:get-property="origin">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="375">Gets the origin of the ref.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="381">the origin</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="377">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subpaths"
              c:identifier="flatpak_installed_ref_get_subpaths"
              glib:get-property="subpaths">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="439">Returns the subpaths that are installed, or %NULL if all files installed.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="445">A strv, or %NULL</doc>
          <array c:type="const char* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="441">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_appdata"
              c:identifier="flatpak_installed_ref_load_appdata"
              version="1.1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="506">Loads the compressed xml appdata for this ref (if it exists).</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="514">a #GBytes containing the compressed appdata file,
    or %NULL if an error occurred</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="508">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="509">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_metadata"
              c:identifier="flatpak_installed_ref_load_metadata"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-installed-ref.c"
             line="471">Loads the metadata file for this ref.</doc>
        <source-position filename="common/flatpak-installed-ref.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-installed-ref.c"
               line="479">a #GBytes containing the metadata file,
    or %NULL if an error occurred</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="473">a #FlatpakInstalledRef</doc>
            <type name="InstalledRef" c:type="FlatpakInstalledRef*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-installed-ref.c"
                 line="474">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="appdata-content-rating"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_content_rating">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <property name="appdata-content-rating-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_content_rating_type"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="appdata-license"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_license"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="appdata-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="appdata-summary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_summary"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="appdata-version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_appdata_version"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="deploy-dir"
                writable="1"
                transfer-ownership="none"
                getter="get_deploy_dir"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="end-of-life"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="end-of-life-rebase"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="installed-size"
                writable="1"
                transfer-ownership="none"
                getter="get_installed_size"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="is-current"
                writable="1"
                transfer-ownership="none"
                getter="get_is_current"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="latest-commit"
                writable="1"
                transfer-ownership="none"
                getter="get_latest_commit"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="origin"
                writable="1"
                transfer-ownership="none"
                getter="get_origin"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subpaths"
                writable="1"
                transfer-ownership="none"
                getter="get_subpaths">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <field name="parent">
        <type name="Ref" c:type="FlatpakRef"/>
      </field>
    </class>
    <record name="InstalledRefClass"
            c:type="FlatpakInstalledRefClass"
            glib:is-gtype-struct-for="InstalledRef">
      <source-position filename="common/flatpak-installed-ref.h" line="49"/>
      <field name="parent_class">
        <type name="RefClass" c:type="FlatpakRefClass"/>
      </field>
    </record>
    <class name="Instance"
           c:symbol-prefix="instance"
           c:type="FlatpakInstance"
           parent="GObject.Object"
           glib:type-name="FlatpakInstance"
           glib:get-type="flatpak_instance_get_type"
           glib:type-struct="InstanceClass">
      <source-position filename="common/flatpak-instance.h" line="48"/>
      <function name="get_all"
                c:identifier="flatpak_instance_get_all"
                version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="1166">Gets FlatpakInstance objects for all running sandboxes in the current session.</doc>
        <source-position filename="common/flatpak-instance.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="1171">a #GPtrArray of
  #FlatpakInstance objects</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Instance"/>
          </array>
        </return-value>
      </function>
      <method name="get_app"
              c:identifier="flatpak_instance_get_app"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="134">Gets the application ID of the application running in the instance.

Note that this may return %NULL for sandboxes that don't have an application.</doc>
        <source-position filename="common/flatpak-instance.h" line="58"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="142">the application ID or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="136">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_arch"
              c:identifier="flatpak_instance_get_arch"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="154">Gets the architecture of the application running in the instance.</doc>
        <source-position filename="common/flatpak-instance.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="160">the architecture</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="156">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branch"
              c:identifier="flatpak_instance_get_branch"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="172">Gets the branch of the application running in the instance.</doc>
        <source-position filename="common/flatpak-instance.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="178">the architecture</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="174">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_pid"
              c:identifier="flatpak_instance_get_child_pid"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="267">Gets the PID of the application process in the sandbox.

See flatpak_instance_get_pid().

Note that this function may return 0 immediately after launching
a sandbox, for a short amount of time.</doc>
        <source-position filename="common/flatpak-instance.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="278">the application process PID</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="269">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_commit"
              c:identifier="flatpak_instance_get_commit"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="190">Gets the commit of the application running in the instance.</doc>
        <source-position filename="common/flatpak-instance.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="196">the commit</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="192">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="flatpak_instance_get_id"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="115">Gets the instance ID. The ID is used by Flatpak for bookkeeping
purposes and has no further relevance.</doc>
        <source-position filename="common/flatpak-instance.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="122">the instance ID</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="117">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="flatpak_instance_get_info"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="293">Gets a keyfile that holds information about the running sandbox.

This file is available as /.flatpak-info inside the sandbox as well.

The most important data in the keyfile is available with separate getters,
but there may be more information in the keyfile.</doc>
        <source-position filename="common/flatpak-instance.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="304">the flatpak-info keyfile</doc>
          <type name="GLib.KeyFile" c:type="GKeyFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="295">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pid"
              c:identifier="flatpak_instance_get_pid"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="244">Gets the PID of the outermost process in the sandbox. This is not the
application process itself, but a bubblewrap 'babysitter' process.

See flatpak_instance_get_child_pid().</doc>
        <source-position filename="common/flatpak-instance.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="253">the outermost process PID</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="246">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_runtime"
              c:identifier="flatpak_instance_get_runtime"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="208">Gets the ref of the runtime used in the instance.</doc>
        <source-position filename="common/flatpak-instance.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="214">the runtime ref</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="210">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_runtime_commit"
              c:identifier="flatpak_instance_get_runtime_commit"
              version="1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="226">Gets the commit of the runtime used in the instance.</doc>
        <source-position filename="common/flatpak-instance.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="232">the runtime commit</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="228">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_running" c:identifier="flatpak_instance_is_running">
        <doc xml:space="preserve"
             filename="common/flatpak-instance.c"
             line="1187">Finds out if the sandbox represented by @self is still running.</doc>
        <source-position filename="common/flatpak-instance.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-instance.c"
               line="1193">%TRUE if the sandbox is still running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-instance.c"
                 line="1189">a #FlatpakInstance</doc>
            <type name="Instance" c:type="FlatpakInstance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="InstanceClass"
            c:type="FlatpakInstanceClass"
            glib:is-gtype-struct-for="Instance">
      <source-position filename="common/flatpak-instance.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <bitfield name="LaunchFlags"
              glib:type-name="FlatpakLaunchFlags"
              glib:get-type="flatpak_launch_flags_get_type"
              c:type="FlatpakLaunchFlags">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="113">Flags to alter the behavior of flatpak_installation_launch_full().</doc>
      <member name="none"
              value="0"
              c:identifier="FLATPAK_LAUNCH_FLAGS_NONE"
              glib:nick="none"
              glib:name="FLATPAK_LAUNCH_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="115">Default</doc>
      </member>
      <member name="do_not_reap"
              value="1"
              c:identifier="FLATPAK_LAUNCH_FLAGS_DO_NOT_REAP"
              glib:nick="do-not-reap"
              glib:name="FLATPAK_LAUNCH_FLAGS_DO_NOT_REAP">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="116">Do not reap the child. Use this if you want to wait
for the child with g_child_watch_add(). (Since: 1.1)</doc>
      </member>
    </bitfield>
    <constant name="MAJOR_VERSION" value="1" c:type="FLATPAK_MAJOR_VERSION">
      <doc xml:space="preserve"
           filename="common/flatpak-version-macros.h"
           line="29">The major version.</doc>
      <source-position filename="common/flatpak-version-macros.h" line="34"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="6" c:type="FLATPAK_MICRO_VERSION">
      <doc xml:space="preserve"
           filename="common/flatpak-version-macros.h"
           line="43">The micro version.</doc>
      <source-position filename="common/flatpak-version-macros.h" line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="15" c:type="FLATPAK_MINOR_VERSION">
      <doc xml:space="preserve"
           filename="common/flatpak-version-macros.h"
           line="36">The minor version.</doc>
      <source-position filename="common/flatpak-version-macros.h" line="41"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <enumeration name="PortalError"
                 glib:type-name="FlatpakPortalError"
                 glib:get-type="flatpak_portal_error_get_type"
                 c:type="FlatpakPortalError"
                 glib:error-domain="flatpak-portal-error-quark">
      <doc xml:space="preserve"
           filename="common/flatpak-portal-error.h"
           line="33">Error codes returned by portal calls.</doc>
      <member name="failed"
              value="0"
              c:identifier="FLATPAK_PORTAL_ERROR_FAILED"
              glib:nick="failed"
              glib:name="FLATPAK_PORTAL_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="35">General portal failure</doc>
      </member>
      <member name="invalid_argument"
              value="1"
              c:identifier="FLATPAK_PORTAL_ERROR_INVALID_ARGUMENT"
              glib:nick="invalid-argument"
              glib:name="FLATPAK_PORTAL_ERROR_INVALID_ARGUMENT">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="36">An argument was invalid</doc>
      </member>
      <member name="not_found"
              value="2"
              c:identifier="FLATPAK_PORTAL_ERROR_NOT_FOUND"
              glib:nick="not-found"
              glib:name="FLATPAK_PORTAL_ERROR_NOT_FOUND">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="37">The object was not found</doc>
      </member>
      <member name="exists"
              value="3"
              c:identifier="FLATPAK_PORTAL_ERROR_EXISTS"
              glib:nick="exists"
              glib:name="FLATPAK_PORTAL_ERROR_EXISTS">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="38">The object already exists</doc>
      </member>
      <member name="not_allowed"
              value="4"
              c:identifier="FLATPAK_PORTAL_ERROR_NOT_ALLOWED"
              glib:nick="not-allowed"
              glib:name="FLATPAK_PORTAL_ERROR_NOT_ALLOWED">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="39">The call was not allowed</doc>
      </member>
      <member name="cancelled"
              value="5"
              c:identifier="FLATPAK_PORTAL_ERROR_CANCELLED"
              glib:nick="cancelled"
              glib:name="FLATPAK_PORTAL_ERROR_CANCELLED">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="40">The call was cancelled by the user</doc>
      </member>
      <member name="window_destroyed"
              value="6"
              c:identifier="FLATPAK_PORTAL_ERROR_WINDOW_DESTROYED"
              glib:nick="window-destroyed"
              glib:name="FLATPAK_PORTAL_ERROR_WINDOW_DESTROYED">
        <doc xml:space="preserve"
             filename="common/flatpak-portal-error.h"
             line="41">The window was destroyed by the user</doc>
      </member>
      <function name="quark" c:identifier="flatpak_portal_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <callback name="ProgressCallback" c:type="FlatpakProgressCallback">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="193">The progress callback is called repeatedly during long-running operations
such as installations or updates, and can be used to update progress information
in a user interface.

The callback occurs in the thread-default context of the caller.</doc>
      <source-position filename="common/flatpak-installation.h" line="206"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="status" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.h"
               line="195">A status string, suitable for display</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="progress" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.h"
               line="196">percentage of completion</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="estimating" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.h"
               line="197">whether @progress is just an estimate</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="3">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.h"
               line="198">User data passed to the caller</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="QueryFlags"
              version="1.3.3"
              glib:type-name="FlatpakQueryFlags"
              glib:get-type="flatpak_query_flags_get_type"
              c:type="FlatpakQueryFlags">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="126">Flags to alter the behavior of e.g flatpak_installation_list_remote_refs_sync_full().</doc>
      <member name="none"
              value="0"
              c:identifier="FLATPAK_QUERY_FLAGS_NONE"
              glib:nick="none"
              glib:name="FLATPAK_QUERY_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="128">Default</doc>
      </member>
      <member name="only_cached"
              value="1"
              c:identifier="FLATPAK_QUERY_FLAGS_ONLY_CACHED"
              glib:nick="only-cached"
              glib:name="FLATPAK_QUERY_FLAGS_ONLY_CACHED">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="129">Don't do any network i/o, but only return cached data.
This can return stale data, or a #FLATPAK_ERROR_NOT_CACHED error, however it is a
lot more efficient if you're doing many requests.</doc>
      </member>
      <member name="only_sideloaded"
              value="2"
              c:identifier="FLATPAK_QUERY_FLAGS_ONLY_SIDELOADED"
              glib:nick="only-sideloaded"
              glib:name="FLATPAK_QUERY_FLAGS_ONLY_SIDELOADED">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="132">Only list refs available from sideload
repos; see flatpak(1). (Since: 1.7)</doc>
      </member>
      <member name="all_arches"
              value="4"
              c:identifier="FLATPAK_QUERY_FLAGS_ALL_ARCHES"
              glib:nick="all-arches"
              glib:name="FLATPAK_QUERY_FLAGS_ALL_ARCHES">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="134">Include refs from all arches, not just the primary ones. (Since: 1.11.2)</doc>
      </member>
    </bitfield>
    <function-macro name="REF" c:identifier="FLATPAK_REF" introspectable="0">
      <source-position filename="common/flatpak-ref.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RELATED_REF"
                    c:identifier="FLATPAK_RELATED_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-related-ref.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REMOTE"
                    c:identifier="FLATPAK_REMOTE"
                    introspectable="0">
      <source-position filename="common/flatpak-remote.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REMOTE_REF"
                    c:identifier="FLATPAK_REMOTE_REF"
                    introspectable="0">
      <source-position filename="common/flatpak-remote-ref.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Ref"
           c:symbol-prefix="ref"
           c:type="FlatpakRef"
           parent="GObject.Object"
           glib:type-name="FlatpakRef"
           glib:get-type="flatpak_ref_get_type"
           glib:type-struct="RefClass">
      <source-position filename="common/flatpak-ref.h" line="48"/>
      <function name="parse" c:identifier="flatpak_ref_parse" throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="399">Tries to parse a full ref name and return a #FlatpakRef (without a
commit set) or fail if the ref is invalid somehow.</doc>
        <source-position filename="common/flatpak-ref.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="407">an #FlatpakRef, or %NULL</doc>
          <type name="Ref" c:type="FlatpakRef*"/>
        </return-value>
        <parameters>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="401">A string ref name, such as "app/org.test.App/x86_64/master"</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <method name="format_ref" c:identifier="flatpak_ref_format_ref">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="344">Convert an FlatpakRef object into a string representation that
can be parsed by flatpak_ref_parse().</doc>
        <source-position filename="common/flatpak-ref.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="351">string representation</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="346">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="format_ref_cached"
              c:identifier="flatpak_ref_format_ref_cached"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="368">Like flatpak_ref_format_ref() but this returns the same string each time
it's called rather than allocating a new one.</doc>
        <source-position filename="common/flatpak-ref.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="375">string representation</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="370">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_arch"
              c:identifier="flatpak_ref_get_arch"
              glib:get-property="arch">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="280">Gets the arch or the ref.</doc>
        <source-position filename="common/flatpak-ref.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="286">the arch</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="282">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branch"
              c:identifier="flatpak_ref_get_branch"
              glib:get-property="branch">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="296">Gets the branch of the ref.</doc>
        <source-position filename="common/flatpak-ref.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="302">the branch</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="298">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_collection_id"
              c:identifier="flatpak_ref_get_collection_id"
              glib:get-property="collection-id">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="426">Gets the collection ID of the ref.</doc>
        <source-position filename="common/flatpak-ref.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="432">the collection ID</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="428">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_commit"
              c:identifier="flatpak_ref_get_commit"
              glib:get-property="commit">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="312">Gets the commit of the ref.</doc>
        <source-position filename="common/flatpak-ref.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="318">the commit</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="314">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="flatpak_ref_get_kind"
              glib:get-property="kind">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="328">Gets the kind of artifact that this ref refers to.</doc>
        <source-position filename="common/flatpak-ref.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="334">the kind of artifact</doc>
          <type name="RefKind" c:type="FlatpakRefKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="330">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="flatpak_ref_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.c"
             line="264">Gets the name of the ref.</doc>
        <source-position filename="common/flatpak-ref.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-ref.c"
               line="270">the name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-ref.c"
                 line="266">a #FlatpakRef</doc>
            <type name="Ref" c:type="FlatpakRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="arch"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_arch"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="branch"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_branch"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="collection-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_collection_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="commit"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_commit"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kind"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_kind"
                default-value="FLATPAK_REF_KIND_APP">
        <type name="RefKind"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RefClass"
            c:type="FlatpakRefClass"
            glib:is-gtype-struct-for="Ref">
      <source-position filename="common/flatpak-ref.h" line="48"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="RefKind"
                 glib:type-name="FlatpakRefKind"
                 glib:get-type="flatpak_ref_kind_get_type"
                 c:type="FlatpakRefKind">
      <doc xml:space="preserve"
           filename="common/flatpak-ref.h"
           line="55">The kind of artifact that a FlatpakRef refers to.</doc>
      <member name="app"
              value="0"
              c:identifier="FLATPAK_REF_KIND_APP"
              glib:nick="app"
              glib:name="FLATPAK_REF_KIND_APP">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.h"
             line="57">An application</doc>
      </member>
      <member name="runtime"
              value="1"
              c:identifier="FLATPAK_REF_KIND_RUNTIME"
              glib:nick="runtime"
              glib:name="FLATPAK_REF_KIND_RUNTIME">
        <doc xml:space="preserve"
             filename="common/flatpak-ref.h"
             line="58">A runtime that applications can use.</doc>
      </member>
    </enumeration>
    <class name="RelatedRef"
           c:symbol-prefix="related_ref"
           c:type="FlatpakRelatedRef"
           parent="Ref"
           glib:type-name="FlatpakRelatedRef"
           glib:get-type="flatpak_related_ref_get_type"
           glib:type-struct="RelatedRefClass">
      <source-position filename="common/flatpak-related-ref.h" line="49"/>
      <method name="get_subpaths"
              c:identifier="flatpak_related_ref_get_subpaths"
              glib:get-property="subpaths"
              version="0.6.7">
        <doc xml:space="preserve"
             filename="common/flatpak-related-ref.c"
             line="238">Returns the subpaths that should be installed/updated for the ref.
This returns %NULL if all files should be installed.</doc>
        <source-position filename="common/flatpak-related-ref.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-related-ref.c"
               line="245">A strv, or %NULL</doc>
          <array c:type="const char* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-related-ref.c"
                 line="240">a #FlatpakRelatedRef</doc>
            <type name="RelatedRef" c:type="FlatpakRelatedRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="should_autoprune"
              c:identifier="flatpak_related_ref_should_autoprune"
              version="0.11.8">
        <doc xml:space="preserve"
             filename="common/flatpak-related-ref.c"
             line="220">Returns whether to delete when pruning unused refs.</doc>
        <source-position filename="common/flatpak-related-ref.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-related-ref.c"
               line="226">%TRUE if the ref should be considered unused when pruning.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-related-ref.c"
                 line="222">a #FlatpakRelatedRef</doc>
            <type name="RelatedRef" c:type="FlatpakRelatedRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="should_delete"
              c:identifier="flatpak_related_ref_should_delete"
              version="0.6.7">
        <doc xml:space="preserve"
             filename="common/flatpak-related-ref.c"
             line="202">Returns whether to auto-delete the ref with the main ref.</doc>
        <source-position filename="common/flatpak-related-ref.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-related-ref.c"
               line="208">%TRUE if the ref should be deleted with the main ref.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-related-ref.c"
                 line="204">a #FlatpakRelatedRef</doc>
            <type name="RelatedRef" c:type="FlatpakRelatedRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="should_download"
              c:identifier="flatpak_related_ref_should_download"
              version="0.6.7">
        <doc xml:space="preserve"
             filename="common/flatpak-related-ref.c"
             line="184">Returns whether to auto-download the ref with the main ref.</doc>
        <source-position filename="common/flatpak-related-ref.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-related-ref.c"
               line="190">%TRUE if the ref should be downloaded with the main ref.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-related-ref.c"
                 line="186">a #FlatpakRelatedRef</doc>
            <type name="RelatedRef" c:type="FlatpakRelatedRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="should-autoprune"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="should-delete"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="should-download"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="subpaths"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_subpaths">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <field name="parent">
        <type name="Ref" c:type="FlatpakRef"/>
      </field>
    </class>
    <record name="RelatedRefClass"
            c:type="FlatpakRelatedRefClass"
            glib:is-gtype-struct-for="RelatedRef">
      <source-position filename="common/flatpak-related-ref.h" line="49"/>
      <field name="parent_class">
        <type name="RefClass" c:type="FlatpakRefClass"/>
      </field>
    </record>
    <class name="Remote"
           c:symbol-prefix="remote"
           c:type="FlatpakRemote"
           parent="GObject.Object"
           glib:type-name="FlatpakRemote"
           glib:get-type="flatpak_remote_get_type"
           glib:type-struct="RemoteClass">
      <source-position filename="common/flatpak-remote.h" line="63"/>
      <constructor name="new" c:identifier="flatpak_remote_new">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="1045">Returns a new remote object which can be used to configure a new remote.

Note: This is a local configuration object, you must commit changes
using flatpak_installation_modify_remote() or flatpak_installation_add_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="1055">a new #FlatpakRemote</doc>
          <type name="Remote" c:type="FlatpakRemote*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1047">a name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_file"
                   c:identifier="flatpak_remote_new_from_file"
                   version="1.3.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="1086">Returns a new pre-filled remote object which can be used to configure a new remote.
The fields in the remote are filled in according to the values in the
passed in flatpakrepo file.

Note: This is a local configuration object, you must commit changes
using flatpak_installation_modify_remote()  or flatpak_installation_add_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="1100">a new #FlatpakRemote, or %NULL on error</doc>
          <type name="Remote" c:type="FlatpakRemote*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1088">a name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1089">The content of a flatpakrepo file</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_appstream_dir"
              c:identifier="flatpak_remote_get_appstream_dir">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="250">Returns the directory where this remote will store locally cached
appstream information for the specified @arch.</doc>
        <source-position filename="common/flatpak-remote.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="258">a #GFile</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="252">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="253">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_appstream_timestamp"
              c:identifier="flatpak_remote_get_appstream_timestamp">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="282">Returns the timestamp file that will be updated whenever the appstream information
has been updated (or tried to update) for the specified @arch.</doc>
        <source-position filename="common/flatpak-remote.h" line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="290">a #GFile</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="284">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="arch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="285">which architecture to fetch (default: current architecture)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_collection_id"
              c:identifier="flatpak_remote_get_collection_id">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="359">Returns the repository collection ID of this remote, if set.</doc>
        <source-position filename="common/flatpak-remote.h" line="82"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="365">the collection ID, or %NULL if unset</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="361">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_comment"
              c:identifier="flatpak_remote_get_comment"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="498">Returns the comment of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="504">the comment</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="500">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_branch"
              c:identifier="flatpak_remote_get_default_branch"
              version="0.6.12">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="690">Returns the default branch configured for the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="696">the default branch, or %NULL</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="692">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="flatpak_remote_get_description"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="546">Returns the description of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="552">the description</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="548">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_disabled" c:identifier="flatpak_remote_get_disabled">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="874">Returns whether this remote is disabled.</doc>
        <source-position filename="common/flatpak-remote.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="880">whether the remote is marked as disabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="876">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filter"
              c:identifier="flatpak_remote_get_filter"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="450">Returns the filter file of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="123"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="456">a pathname to a filter file</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="452">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gpg_verify"
              c:identifier="flatpak_remote_get_gpg_verify">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="959">Returns whether GPG verification is enabled for the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="965">whether GPG verification is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="961">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_homepage"
              c:identifier="flatpak_remote_get_homepage"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="594">Returns the homepage url of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="600">the homepage url</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="596">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="flatpak_remote_get_icon"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="642">Returns the icon url of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="648">the icon url</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="644">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_main_ref"
              c:identifier="flatpak_remote_get_main_ref"
              version="1.1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="738">Returns the main ref of this remote, if set. The main ref is the ref that an
origin remote is created for.</doc>
        <source-position filename="common/flatpak-remote.h" line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="745">the main ref, or %NULL</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="740">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="flatpak_remote_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="234">Returns the name of the remote repository.</doc>
        <source-position filename="common/flatpak-remote.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="240">the name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="236">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nodeps" c:identifier="flatpak_remote_get_nodeps">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="831">Returns whether this remote should be used to find dependencies.</doc>
        <source-position filename="common/flatpak-remote.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="837">whether the remote is marked as "don't use for dependencies"</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="833">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_noenumerate"
              c:identifier="flatpak_remote_get_noenumerate">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="788">Returns whether this remote should be used to list applications.</doc>
        <source-position filename="common/flatpak-remote.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="794">whether the remote is marked as "don't enumerate"</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="790">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_prio" c:identifier="flatpak_remote_get_prio">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="916">Returns the priority for the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="922">the priority</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="918">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote_type"
              c:identifier="flatpak_remote_get_remote_type"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="1291">Get the value of #FlatpakRemote:type.</doc>
        <source-position filename="common/flatpak-remote.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="1297">the type of remote this is</doc>
          <type name="RemoteType" c:type="FlatpakRemoteType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1293">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title" c:identifier="flatpak_remote_get_title">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="406">Returns the title of the remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="85"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="412">the title</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="408">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="flatpak_remote_get_url">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="310">Returns the repository URL of this remote.</doc>
        <source-position filename="common/flatpak-remote.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-remote.c"
               line="316">the URL</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="312">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_collection_id"
              c:identifier="flatpak_remote_set_collection_id">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="381">Sets the repository collection ID of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="383">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="collection_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="384">The new collection ID, or %NULL to unset</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_comment"
              c:identifier="flatpak_remote_set_comment"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="522">Sets the comment of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="524">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="comment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="525">The new comment</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_branch"
              c:identifier="flatpak_remote_set_default_branch"
              version="0.6.12">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="714">Sets the default branch configured for this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="716">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="default_branch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="717">The new default_branch, or %NULL to unset</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="flatpak_remote_set_description"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="570">Sets the description of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="572">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="573">The new description</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disabled" c:identifier="flatpak_remote_set_disabled">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="895">Sets the disabled config of this remote. See flatpak_remote_get_disabled().

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="897">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="disabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="898">a bool</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filter"
              c:identifier="flatpak_remote_set_filter"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="474">Sets a filter for this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="476">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="filter_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="477">The pathname of the new filter file</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gpg_key" c:identifier="flatpak_remote_set_gpg_key">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="1007">Sets the trusted gpg key for this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1009">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="gpg_key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="1010">a #GBytes with gpg binary key data</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gpg_verify"
              c:identifier="flatpak_remote_set_gpg_verify">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="986">Sets the gpg_verify config of this remote. See flatpak_remote_get_gpg_verify().

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="988">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="gpg_verify" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="989">a bool</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homepage"
              c:identifier="flatpak_remote_set_homepage"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="618">Sets the homepage of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="620">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="homepage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="621">The new homepage</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="flatpak_remote_set_icon"
              version="1.4">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="666">Sets the homepage of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="668">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="669">The new homepage</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_main_ref"
              c:identifier="flatpak_remote_set_main_ref"
              version="1.1.1">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="763">Sets the main ref of this remote. The main ref is the ref that an origin
remote is created for.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="765">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="main_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="766">The new main ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_nodeps" c:identifier="flatpak_remote_set_nodeps">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="853">Sets the nodeps config of this remote. See flatpak_remote_get_nodeps().

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="855">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="nodeps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="856">a bool</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_noenumerate"
              c:identifier="flatpak_remote_set_noenumerate">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="810">Sets the noenumeration config of this remote. See flatpak_remote_get_noenumerate().

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="812">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="noenumerate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="813">a bool</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_prio" c:identifier="flatpak_remote_set_prio">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="938">Sets the prio config of this remote. See flatpak_remote_get_prio().

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="940">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="prio" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="941">a bool</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title" c:identifier="flatpak_remote_set_title">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="428">Sets the repository title of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="430">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="431">The new title, or %NULL to unset</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="flatpak_remote_set_url">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="337">Sets the repository URL of this remote.

Note: This is a local modification of this object, you must commit changes
using flatpak_installation_modify_remote() for the changes to take
effect.</doc>
        <source-position filename="common/flatpak-remote.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="339">a #FlatpakRemote</doc>
            <type name="Remote" c:type="FlatpakRemote*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote.c"
                 line="340">The new url</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="192">Name of the remote, as used in configuration files and when interfacing
with OSTree. This is typically human readable, but could be generated, and
must conform to ostree_validate_remote_name(). It should typically not be
presented in the UI.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="type"
                version="0.9.8"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FLATPAK_REMOTE_TYPE_STATIC">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.c"
             line="208">The type of the remote: whether it comes from static configuration files
(@FLATPAK_REMOTE_TYPE_STATIC) or has been dynamically found from the local
network or a mounted USB drive (@FLATPAK_REMOTE_TYPE_LAN,
@FLATPAK_REMOTE_TYPE_USB). Dynamic remotes may be added and removed over
time.</doc>
        <type name="RemoteType"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RemoteClass"
            c:type="FlatpakRemoteClass"
            glib:is-gtype-struct-for="Remote">
      <source-position filename="common/flatpak-remote.h" line="63"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="RemoteRef"
           c:symbol-prefix="remote_ref"
           c:type="FlatpakRemoteRef"
           parent="Ref"
           glib:type-name="FlatpakRemoteRef"
           glib:get-type="flatpak_remote_ref_get_type"
           glib:type-struct="RemoteRefClass">
      <source-position filename="common/flatpak-remote-ref.h" line="49"/>
      <method name="get_download_size"
              c:identifier="flatpak_remote_ref_get_download_size"
              glib:get-property="download-size">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="254">Returns the download size of the ref.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="260">the download size</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="256">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol" c:identifier="flatpak_remote_ref_get_eol">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="287">Returns the end-of-life reason string, or %NULL if the
ref is not end-of-lifed.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="294">the end-of-life reason or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="289">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol_rebase"
              c:identifier="flatpak_remote_ref_get_eol_rebase">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="304">Returns the end-of-life rebased ref, or %NULL if the
ref is not end-of-lifed.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="311">the end-of-life rebased ref or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="306">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installed_size"
              c:identifier="flatpak_remote_ref_get_installed_size"
              glib:get-property="installed-size">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="238">Returns the installed size of the ref.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="244">the installed size</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="240">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="flatpak_remote_ref_get_metadata"
              glib:get-property="metadata">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="270">Returns the app metadata from the metadata cache of the ref.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="54"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="276">a #GBytes with the metadata file
contents or %NULL</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="272">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote_name"
              c:identifier="flatpak_remote_ref_get_remote_name"
              glib:get-property="remote-name">
        <doc xml:space="preserve"
             filename="common/flatpak-remote-ref.c"
             line="222">Gets the remote name of the ref.</doc>
        <source-position filename="common/flatpak-remote-ref.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-remote-ref.c"
               line="228">the remote name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-remote-ref.c"
                 line="224">a #FlatpakRemoteRef</doc>
            <type name="RemoteRef" c:type="FlatpakRemoteRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="download-size"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_download_size"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="end-of-life"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="end-of-life-rebase"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="installed-size"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_installed_size"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="metadata"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_metadata">
        <type name="GLib.Bytes"/>
      </property>
      <property name="remote-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_remote_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="Ref" c:type="FlatpakRef"/>
      </field>
    </class>
    <record name="RemoteRefClass"
            c:type="FlatpakRemoteRefClass"
            glib:is-gtype-struct-for="RemoteRef">
      <source-position filename="common/flatpak-remote-ref.h" line="49"/>
      <field name="parent_class">
        <type name="RefClass" c:type="FlatpakRefClass"/>
      </field>
    </record>
    <enumeration name="RemoteType"
                 glib:type-name="FlatpakRemoteType"
                 glib:get-type="flatpak_remote_type_get_type"
                 c:type="FlatpakRemoteType">
      <doc xml:space="preserve"
           filename="common/flatpak-remote.h"
           line="28">Different types of @FlatpakRemote.</doc>
      <member name="static"
              value="0"
              c:identifier="FLATPAK_REMOTE_TYPE_STATIC"
              glib:nick="static"
              glib:name="FLATPAK_REMOTE_TYPE_STATIC">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.h"
             line="30">Statically configured remote</doc>
      </member>
      <member name="usb"
              value="1"
              c:identifier="FLATPAK_REMOTE_TYPE_USB"
              glib:nick="usb"
              glib:name="FLATPAK_REMOTE_TYPE_USB">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.h"
             line="31">Dynamically detected local pathname remote</doc>
      </member>
      <member name="lan"
              value="2"
              c:identifier="FLATPAK_REMOTE_TYPE_LAN"
              glib:nick="lan"
              glib:name="FLATPAK_REMOTE_TYPE_LAN">
        <doc xml:space="preserve"
             filename="common/flatpak-remote.h"
             line="32">Dynamically detected network remote</doc>
      </member>
    </enumeration>
    <enumeration name="StorageType"
                 version="0.6.15"
                 glib:type-name="FlatpakStorageType"
                 glib:get-type="flatpak_storage_type_get_type"
                 c:type="FlatpakStorageType">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="147">Information about the storage of an installation.</doc>
      <member name="default"
              value="0"
              c:identifier="FLATPAK_STORAGE_TYPE_DEFAULT"
              glib:nick="default"
              glib:name="FLATPAK_STORAGE_TYPE_DEFAULT">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="149">default</doc>
      </member>
      <member name="hard_disk"
              value="1"
              c:identifier="FLATPAK_STORAGE_TYPE_HARD_DISK"
              glib:nick="hard-disk"
              glib:name="FLATPAK_STORAGE_TYPE_HARD_DISK">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="150">installation is on a hard disk</doc>
      </member>
      <member name="sdcard"
              value="2"
              c:identifier="FLATPAK_STORAGE_TYPE_SDCARD"
              glib:nick="sdcard"
              glib:name="FLATPAK_STORAGE_TYPE_SDCARD">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="151">installation is on a SD card</doc>
      </member>
      <member name="mmc"
              value="3"
              c:identifier="FLATPAK_STORAGE_TYPE_MMC"
              glib:nick="mmc"
              glib:name="FLATPAK_STORAGE_TYPE_MMC">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="152">installation is on an MMC</doc>
      </member>
      <member name="network"
              value="4"
              c:identifier="FLATPAK_STORAGE_TYPE_NETWORK"
              glib:nick="network"
              glib:name="FLATPAK_STORAGE_TYPE_NETWORK">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="153">installation is on the network</doc>
      </member>
    </enumeration>
    <class name="Transaction"
           c:symbol-prefix="transaction"
           c:type="FlatpakTransaction"
           parent="GObject.Object"
           glib:type-name="FlatpakTransaction"
           glib:get-type="flatpak_transaction_get_type"
           glib:type-struct="TransactionClass">
      <source-position filename="common/flatpak-transaction.h" line="158"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_for_installation"
                   c:identifier="flatpak_transaction_new_for_installation"
                   throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1523">Creates a new #FlatpakTransaction object that can be used to do installation
and updates of multiple refs, as well as their dependencies, in a single
operation. Set the options you want on the transaction and add the
refs you want to install/update, then start the transaction with
flatpak_transaction_run ().</doc>
        <source-position filename="common/flatpak-transaction.h" line="161"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1535">a #FlatpakTransaction, or %NULL on failure.</doc>
          <type name="Transaction" c:type="FlatpakTransaction*"/>
        </return-value>
        <parameters>
          <parameter name="installation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1525">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1526">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="add_new_remote">
        <source-position filename="common/flatpak-transaction.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="TransactionRemoteReason"
                  c:type="FlatpakTransactionRemoteReason"/>
          </parameter>
          <parameter name="from_id" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="remote_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="basic_auth_start">
        <source-position filename="common/flatpak-transaction.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="realm" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="choose_remote_for_ref">
        <source-position filename="common/flatpak-transaction.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="for_ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="runtime_ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="remotes" transfer-ownership="none">
            <type name="utf8" c:type="const char* const*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_of_lifed">
        <source-position filename="common/flatpak-transaction.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="rebase" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_of_lifed_with_rebase">
        <source-position filename="common/flatpak-transaction.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="rebased_to_ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="previous_ids" transfer-ownership="none">
            <type name="utf8" c:type="const char**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="install_authenticator">
        <source-position filename="common/flatpak-transaction.h" line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="authenticator_ref" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_operation">
        <source-position filename="common/flatpak-transaction.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="operation" transfer-ownership="none">
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="operation_done">
        <source-position filename="common/flatpak-transaction.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="operation" transfer-ownership="none">
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </parameter>
          <parameter name="commit" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="details" transfer-ownership="none">
            <type name="TransactionResult" c:type="FlatpakTransactionResult"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="operation_error">
        <source-position filename="common/flatpak-transaction.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="operation" transfer-ownership="none">
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
          <parameter name="detail" transfer-ownership="none">
            <type name="TransactionErrorDetails"
                  c:type="FlatpakTransactionErrorDetails"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ready">
        <source-position filename="common/flatpak-transaction.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ready_pre_auth">
        <source-position filename="common/flatpak-transaction.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="run" invoker="run" throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4707">Executes the transaction.

During the course of the execution, various signals will get emitted.
The FlatpakTransaction::choose-remote-for-ref  and
#FlatpakTransaction::add-new-remote signals may get emitted while
resolving operations. #FlatpakTransaction::ready is emitted when
the transaction has been fully resolved, and #FlatpakTransaction::new-operation
and #FlatpakTransaction::operation-done are emitted while the operations
are carried out. If an error occurs at any point during the execution,
#FlatpakTransaction::operation-error is emitted.

Note that this call blocks until the transaction is done.</doc>
        <source-position filename="common/flatpak-transaction.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4726">%TRUE on success, %FALSE if an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4709">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4710">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="webflow_done">
        <source-position filename="common/flatpak-transaction.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="webflow_start">
        <source-position filename="common/flatpak-transaction.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="abort_webflow"
              c:identifier="flatpak_transaction_abort_webflow"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="3813">Cancel an ongoing webflow authentication request. This can be call
in the time between #FlatpakTransaction::webflow-start returned
%TRUE, and #FlatpakTransaction::webflow-done is emitted. It will
cancel the ongoing authentication operation.

This is useful for example if you're showing an authenticaion
window with a browser, but the user closed it before it was finished.</doc>
        <source-position filename="common/flatpak-transaction.h" line="293"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3815">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3816">The webflow id, as passed into the webflow-start signal</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_default_dependency_sources"
              c:identifier="flatpak_transaction_add_default_dependency_sources">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="502">Similar to flatpak_transaction_add_dependency_source(), but adds
all the default installations, which means all the defined system-wide
(but not per-user) installations.</doc>
        <source-position filename="common/flatpak-transaction.h" line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="504">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_dependency_source"
              c:identifier="flatpak_transaction_add_dependency_source">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="457">Adds an extra installation as a source for application dependencies.
This means that applications can be installed in this transaction relying
on runtimes from this additional installation (whereas it would normally
install required runtimes that are not installed in the installation
the transaction works on).

Also see flatpak_transaction_add_default_dependency_sources().</doc>
        <source-position filename="common/flatpak-transaction.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="459">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="installation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="460">a #FlatpakInstallation</doc>
            <type name="Installation" c:type="FlatpakInstallation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_install"
              c:identifier="flatpak_transaction_add_install"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="2754">Adds installing the given ref to this transaction.

The @remote can either be a configured remote of the installation,
or a file:// uri pointing at a local repository to install from,
in which case an origin remote is created.</doc>
        <source-position filename="common/flatpak-transaction.h" line="303"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="2769">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2756">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2757">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2758">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2759">subpaths to install, or the
 empty list or %NULL to pull all subpaths</doc>
            <array c:type="const char**">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_install_bundle"
              c:identifier="flatpak_transaction_add_install_bundle"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="2970">Adds installing the given bundle to this transaction.</doc>
        <source-position filename="common/flatpak-transaction.h" line="324"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="2980">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2972">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2973">a #GFile that is an flatpak bundle</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="gpg_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2974">GPG key with which to check bundle signatures, or
 %NULL to use the key embedded in the bundle (if any)</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_install_flatpakref"
              c:identifier="flatpak_transaction_add_install_flatpakref"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="2995">Adds installing the given flatpakref to this transaction.</doc>
        <source-position filename="common/flatpak-transaction.h" line="329"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="3003">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2997">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="flatpakref_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2998">data from a flatpakref file</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_rebase"
              c:identifier="flatpak_transaction_add_rebase"
              version="1.3.3."
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="2804">Adds updating the @previous_ids of the given ref to this transaction, via either
installing the @ref if it was not already present or updating it. This will
treat @ref as the result of following an eol-rebase, and data migration from
the refs in @previous_ids will be set up.

If you want to rebase the ref and uninstall the old version of it, consider
using flatpak_transaction_add_rebase_and_uninstall() instead. It will add
appropriate dependencies between the rebase and uninstall operations.

See flatpak_transaction_add_install() for a description of @remote.</doc>
        <source-position filename="common/flatpak-transaction.h" line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="2826">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2806">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2807">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2808">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2809">the subpaths to include, or %NULL to install the complete ref</doc>
            <type name="utf8" c:type="const char**"/>
          </parameter>
          <parameter name="previous_ids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2810">Previous ids to add to the
    given ref. These should simply be the ids, not the full ref names (e.g. org.foo.Bar,
    not org.foo.Bar/x86_64/master).</doc>
            <array c:type="const char**">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_rebase_and_uninstall"
              c:identifier="flatpak_transaction_add_rebase_and_uninstall"
              version="1.15.4"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="2861">Adds updating the @previous_ids of the given @new_ref to this transaction,
via either installing the @new_ref if it was not already present or updating
it. This will treat @new_ref as the result of following an eol-rebase, and
data migration from the refs in @previous_ids will be set up.

Also adds an operation to uninstall @old_ref to this transaction. This
operation will only be run if the operation to install/update @new_ref
succeeds.

If @old_ref is not already installed (which can happen if requesting to
install an EOLed app, rather than update one which is already installed), the
uninstall operation will silently not be added, and this function will behave
similarly to flatpak_transaction_add_rebase().

See flatpak_transaction_add_install() for a description of @remote.</doc>
        <source-position filename="common/flatpak-transaction.h" line="316"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="2889">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2863">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2864">the name of the remote</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="new_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2865">the ref to rebase to</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="old_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2866">the ref to uninstall</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2867">the subpaths to include, or %NULL to install the complete ref</doc>
            <type name="utf8" c:type="const char**"/>
          </parameter>
          <parameter name="previous_ids"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="2868">Previous ids to add to the
    given ref. These should simply be the ids, not the full ref names (e.g. org.foo.Bar,
    not org.foo.Bar/x86_64/master).</doc>
            <array c:type="const char**">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_sideload_repo"
              c:identifier="flatpak_transaction_add_sideload_repo"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="480">Adds an extra local ostree repo as source for installation. This is
equivalent to using the sideload-repos directories (see flatpak(1)), but can
be done dynamically. Any path added here is used in addition to ones in
those directories.</doc>
        <source-position filename="common/flatpak-transaction.h" line="272"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="482">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="483">a path to a local flatpak repository</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_uninstall"
              c:identifier="flatpak_transaction_add_uninstall"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="3064">Adds uninstalling the given ref to this transaction. If the transaction is
set to not deploy updates, the request is ignored.</doc>
        <source-position filename="common/flatpak-transaction.h" line="339"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="3073">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3066">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3067">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_update"
              c:identifier="flatpak_transaction_add_update"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="3026">Adds updating the given ref to this transaction.</doc>
        <source-position filename="common/flatpak-transaction.h" line="333"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="3038">%TRUE on success; %FALSE with @error set on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3028">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3029">the ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="subpaths"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3030">subpaths to install; %NULL
 to use the current set plus the set of configured languages, or
 `{ NULL }` or `{ "", NULL }` to pull all subpaths.</doc>
            <array c:type="const char**">
              <type name="utf8" c:type="char*"/>
            </array>
          </parameter>
          <parameter name="commit"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3033">the commit to update to, or %NULL to use the latest</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_basic_auth"
              c:identifier="flatpak_transaction_complete_basic_auth"
              version="1.5.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="3850">Finishes (or aborts) an ongoing basic auth request.</doc>
        <source-position filename="common/flatpak-transaction.h" line="296"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3852">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3853">The webflow id, as passed into the webflow-start signal</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="user" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3854">The user name, or %NULL if aborting request</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3855">The password</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="3856">Extra a{sv] variant with options (or %NULL), currently unused.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_install_debug"
              c:identifier="flatpak_transaction_get_auto_install_debug"
              version="1.13.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1956">Gets the value set by
flatpak_transaction_set_auto_install_debug().</doc>
        <source-position filename="common/flatpak-transaction.h" line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1963">%TRUE if auto_install_debug is set, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1958">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_auto_install_sdk"
              c:identifier="flatpak_transaction_get_auto_install_sdk"
              version="1.13.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1917">Gets the value set by
flatpak_transaction_set_auto_install_sdk().</doc>
        <source-position filename="common/flatpak-transaction.h" line="262"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1924">%TRUE if auto_install_sdk is set, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1919">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_current_operation"
              c:identifier="flatpak_transaction_get_current_operation">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4251">Gets the current operation.</doc>
        <source-position filename="common/flatpak-transaction.h" line="281"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4257">the current #FlatpakTransactionOperation</doc>
          <type name="TransactionOperation"
                c:type="FlatpakTransactionOperation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4253">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_include_unused_uninstall_ops"
              c:identifier="flatpak_transaction_get_include_unused_uninstall_ops"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1878">Gets the value set by
flatpak_transaction_set_include_unused_uninstall_ops().</doc>
        <source-position filename="common/flatpak-transaction.h" line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1885">%TRUE if include_unused_uninstall_ops is set, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1880">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installation"
              c:identifier="flatpak_transaction_get_installation"
              glib:get-property="installation">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4335">Gets the installation this transaction was created for.</doc>
        <source-position filename="common/flatpak-transaction.h" line="288"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4341">a #FlatpakInstallation</doc>
          <type name="Installation" c:type="FlatpakInstallation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4337">a #FlatpakTransactionOperation</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_no_deploy"
              c:identifier="flatpak_transaction_get_no_deploy"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1650">Gets whether the transaction is only downloading updates,
and not deploying them.</doc>
        <source-position filename="common/flatpak-transaction.h" line="218"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1657">%TRUE if no_deploy is set, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1652">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_no_interaction"
              c:identifier="flatpak_transaction_get_no_interaction"
              glib:get-property="no-interaction"
              version="1.13.0">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1775">Gets whether the transaction is interactive. See
flatpak_transaction_set_no_interaction().</doc>
        <source-position filename="common/flatpak-transaction.h" line="238"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1782">%TRUE if the transaction is not interactive, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1777">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_no_pull"
              c:identifier="flatpak_transaction_get_no_pull"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1565">Gets whether the transaction should operate only on locally
available data.</doc>
        <source-position filename="common/flatpak-transaction.h" line="213"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1572">%TRUE if no_pull is set, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1567">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_operation_for_ref"
              c:identifier="flatpak_transaction_get_operation_for_ref"
              version="1.13.3"
              throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4270">Gets the operation for @ref, if any match. If @remote is non-%NULL, only an
operation for that remote will be returned. If remote is %NULL and the
transaction has more than one operation for @ref from different remotes, an
error will be returned.</doc>
        <source-position filename="common/flatpak-transaction.h" line="283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4282">the #FlatpakTransactionOperation for @ref, or
  %NULL with @error set</doc>
          <type name="TransactionOperation"
                c:type="FlatpakTransactionOperation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4272">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="remote"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4273">a remote name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4274">a ref</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_operations"
              c:identifier="flatpak_transaction_get_operations">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4225">Gets the list of operations. Skipped operations are not included. The order
of the list is the order in which the operations are executed.</doc>
        <source-position filename="common/flatpak-transaction.h" line="290"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4232">a #GList of operations</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TransactionOperation"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4227">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_window"
              c:identifier="flatpak_transaction_get_parent_window"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1614">Gets the parent window set for this transaction, or %NULL if unset. See
flatpak_transaction_get_parent_window().</doc>
        <source-position filename="common/flatpak-transaction.h" line="252"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1621">a window name, or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1616">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="flatpak_transaction_is_empty">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="971">Returns whether the transaction contains any non-skipped operations.</doc>
        <source-position filename="common/flatpak-transaction.h" line="343"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="977">%TRUE if the transaction is empty</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="973">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="run" c:identifier="flatpak_transaction_run" throws="1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="4707">Executes the transaction.

During the course of the execution, various signals will get emitted.
The FlatpakTransaction::choose-remote-for-ref  and
#FlatpakTransaction::add-new-remote signals may get emitted while
resolving operations. #FlatpakTransaction::ready is emitted when
the transaction has been fully resolved, and #FlatpakTransaction::new-operation
and #FlatpakTransaction::operation-done are emitted while the operations
are carried out. If an error occurs at any point during the execution,
#FlatpakTransaction::operation-error is emitted.

Note that this call blocks until the transaction is done.</doc>
        <source-position filename="common/flatpak-transaction.h" line="277"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="4726">%TRUE on success, %FALSE if an error occurred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4709">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4710">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_install_debug"
              c:identifier="flatpak_transaction_set_auto_install_debug"
              version="1.13.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1936">When this is set to %TRUE, Flatpak will automatically install the debug info
for each app currently being installed or updated, as well as its
dependencies. Does nothing if an uninstall is taking place.</doc>
        <source-position filename="common/flatpak-transaction.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1938">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="auto_install_debug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1939">whether to auto install debug info for apps</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_install_sdk"
              c:identifier="flatpak_transaction_set_auto_install_sdk"
              version="1.13.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1897">When this is set to %TRUE, Flatpak will automatically install the SDK for
each app currently being installed or updated. Does nothing if an uninstall
is taking place.</doc>
        <source-position filename="common/flatpak-transaction.h" line="259"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1899">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="auto_install_sdk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1900">whether to auto install SDKs for apps</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_arch"
              c:identifier="flatpak_transaction_set_default_arch">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1836">Sets the architecture to default to where it is unspecified.</doc>
        <source-position filename="common/flatpak-transaction.h" line="246"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1838">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="arch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1839">the arch to make default</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_auto_pin"
              c:identifier="flatpak_transaction_set_disable_auto_pin"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1703">Normally the transaction pins any explicit installations so they will not
be automatically removed. But this can be disabled if you don't want this
behaviour.</doc>
        <source-position filename="common/flatpak-transaction.h" line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1705">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="disable_pin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1706">whether to disable auto-pinning</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_dependencies"
              c:identifier="flatpak_transaction_set_disable_dependencies">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1723">Sets whether the transaction should ignore runtime dependencies
when resolving operations for applications.</doc>
        <source-position filename="common/flatpak-transaction.h" line="226"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1725">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="disable_dependencies" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1726">whether to disable runtime dependencies</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_prune"
              c:identifier="flatpak_transaction_set_disable_prune">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1686">Sets whether the transaction should avoid pruning the local OSTree
repository after updating.</doc>
        <source-position filename="common/flatpak-transaction.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1688">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="disable_prune" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1689">whether to avoid pruning</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_related"
              c:identifier="flatpak_transaction_set_disable_related">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1740">Sets whether the transaction should avoid adding related refs
when resolving operations. Related refs are extensions that are
suggested by apps, such as locales.</doc>
        <source-position filename="common/flatpak-transaction.h" line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1742">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="disable_related" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1743">whether to avoid adding related refs</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disable_static_deltas"
              c:identifier="flatpak_transaction_set_disable_static_deltas">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1669">Sets whether the transaction should avoid using static
deltas when pulling.</doc>
        <source-position filename="common/flatpak-transaction.h" line="220"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1671">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="disable_static_deltas" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1672">whether to avoid static deltas</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_force_uninstall"
              c:identifier="flatpak_transaction_set_force_uninstall">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1819">Sets whether the transaction should uninstall files even
if they're used by a running application.</doc>
        <source-position filename="common/flatpak-transaction.h" line="243"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1821">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="force_uninstall" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1822">whether to force-uninstall refs</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_include_unused_uninstall_ops"
              c:identifier="flatpak_transaction_set_include_unused_uninstall_ops"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1853">When this is set to %TRUE, Flatpak will add uninstall operations to the
transaction for each runtime it considers unused. This is used by the
"update" CLI command to garbage collect runtimes and free disk space.

No guarantees are made about the exact hueristic used; e.g. only end-of-life
unused runtimes may be uninstalled with this set. To see the full list of
unused runtimes in an installation, use
flatpak_installation_list_unused_refs().</doc>
        <source-position filename="common/flatpak-transaction.h" line="254"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1855">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="include_unused_uninstall_ops"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1856">whether to include unused uninstall ops</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_no_deploy"
              c:identifier="flatpak_transaction_set_no_deploy">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1633">Sets whether the transaction should download updates, but
not deploy them.</doc>
        <source-position filename="common/flatpak-transaction.h" line="215"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1635">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="no_deploy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1636">whether to avoid deploying</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_no_interaction"
              c:identifier="flatpak_transaction_set_no_interaction"
              glib:set-property="no-interaction"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1793">This method can be used to prevent interactive authorization dialogs to appear
for operations on @self. This is useful for background operations that are not
directly triggered by a user action.

By default, the setting from the parent #FlatpakInstallation is used.</doc>
        <source-position filename="common/flatpak-transaction.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1795">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="no_interaction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1796">Whether to disallow interactive authorization for operations</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_no_pull"
              c:identifier="flatpak_transaction_set_no_pull">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1548">Sets whether the transaction should operate only on locally
available data.</doc>
        <source-position filename="common/flatpak-transaction.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1550">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="no_pull" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1551">whether to avoid pulls</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent_window"
              c:identifier="flatpak_transaction_set_parent_window"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1584">Sets the parent window (if any) to use for any UI show by this transaction.
This is used by authenticators if they need to interact with the user during
authentication.

The format of this string depends on the display system in use, and is the
same as used by xdg-desktop-portal.

On X11 it should be of the form x11:$xid where $xid is the hex
version of the xwindows id.

On wayland is should be wayland:$handle where handle is gotten by
using the export call of the xdg-foreign-unstable wayland extension.</doc>
        <source-position filename="common/flatpak-transaction.h" line="249"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1586">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="parent_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1587">whether to avoid pulls</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reinstall"
              c:identifier="flatpak_transaction_set_reinstall">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1758">Sets whether the transaction should uninstall first if a
ref is already installed.</doc>
        <source-position filename="common/flatpak-transaction.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1760">a #FlatpakTransaction</doc>
            <type name="Transaction" c:type="FlatpakTransaction*"/>
          </instance-parameter>
          <parameter name="reinstall" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1761">whether to reinstall refs</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="installation"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_installation">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1135">The installation that the transaction operates on.</doc>
        <type name="Installation"/>
      </property>
      <property name="no-interaction"
                version="1.13.0"
                writable="1"
                transfer-ownership="none"
                setter="set_no_interaction"
                getter="get_no_interaction"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1148">%TRUE if the transaction is not interactive, %FALSE otherwise.

See flatpak_transaction_set_no_interaction().</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="add-new-remote" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1346">The ::add-new-remote signal gets emitted if, as part of the transaction,
it is required or recommended that a new remote is added, for the reason
described in @reason.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1358">%TRUE to add the remote</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1349">A #FlatpakTransactionRemoteReason for this suggestion</doc>
            <type name="TransactionRemoteReason" c:type="gint"/>
          </parameter>
          <parameter name="from_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1350">The id of the app/runtime</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="suggested_remote_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1351">The suggested remote name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1352">The repo url</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="basic-auth-start" when="last" version="1.5.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1450">The ::basic-auth-start signal gets emitted when a basic user/password
authentication is needed during the operation. If the caller handles this
it should ask the user for the user and password and return %TRUE. Once
the information is gathered call flatpak_transaction_complete_basic_auth()
with it.

If the client does not support basic auth then return %FALSE from this signal
(or don't implement it). This will abort the authentication and likely
result in the transaction failing (unless the authentication was somehow
optional).</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1453">The remote we're authenticating with</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="realm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1454">The url to show</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1455">Extra options, currently unused</doc>
            <type name="GLib.Variant"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1456">The id of the operation, can be used to finish it</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="choose-remote-for-ref" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1223">The ::choose-remote-for-ref signal gets emitted when a
remote needs to be selected during the execution of the transaction.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1233">the index of the remote to use, or -1 to not pick one (and fail)</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="for_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1226">The ref we are installing</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="runtime_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1227">The ref we are looking for</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="remotes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1228">the remotes that has the ref, sorted in prio order</doc>
            <array>
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="end-of-lifed" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1244">The ::end-of-lifed signal gets emitted when a ref is found to
be marked as end-of-life during the execution of the transaction.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1247">The ref we are installing</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1248">The eol reason, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="rebase" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1249">The new name, if rebased, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="end-of-lifed-with-rebase" when="last" version="1.3.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1263">The ::end-of-lifed-with-rebase signal gets emitted when a ref is found
to be marked as end-of-life before the transaction begins. Unlike
#FlatpakTransaction::end-of-lifed, this signal allows for the
transaction to be modified in order to e.g. install the rebased
ref.

If the caller wants to install the rebased ref, they should call
flatpak_transaction_add_rebase_and_uninstall() on @rebased_to_ref and @ref,
and return %TRUE. Otherwise %FALSE may be returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1282">%TRUE if the operation on this end-of-lifed ref should
be skipped (e.g. because the rebased ref has been added to the
transaction), %FALSE if it should remain.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1266">The remote for the ref we are processing</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1267">The ref we are processing</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1268">The eol reason, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="rebased_to_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1269">The new name, if rebased, or %NULL</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="previous_ids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1270">The previous names for the rebased ref (if any), including the one from @ref</doc>
            <array>
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="install-authenticator" when="last" version="1.8.0">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1369">The ::install-authenticator signal gets emitted if, as part of
resolving the transaction, we need to use an authenticator, but the authentication
is not installed, but is available to be installed from the ref.

The application can handle this signal, and if so create another transaction
to install the authenticator.

The default handler does nothing, and if the authenticator is not installed when
the signal handler fails the transaction will error out.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1372">The remote name</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="authenticator_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1373">The ref for the authenticator</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="new-operation" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1165">The ::new-operation signal gets emitted during the execution of
the transaction when a new operation is beginning.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1168">The new #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1169">A #FlatpakTransactionProgress for @operation</doc>
            <type name="TransactionProgress"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="operation-done" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1204">The ::operation-done signal gets emitted during the execution of
the transaction when an operation is finished.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1207">The #FlatpakTransactionOperation which finished</doc>
            <type name="TransactionOperation"/>
          </parameter>
          <parameter name="commit"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1208">The commit</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1209">A #FlatpakTransactionResult giving details about the result</doc>
            <type name="TransactionResult" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="operation-error" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1183">The ::operation-error signal gets emitted when an error occurs during the
execution of the transaction.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1193">the %TRUE to continue transaction, %FALSE to stop</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1186">The #FlatpakTransactionOperation which failed</doc>
            <type name="TransactionOperation"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1187">A #GError</doc>
            <type name="GLib.Error"/>
          </parameter>
          <parameter name="details" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1188">A #FlatpakTransactionErrorDetails with details about the error</doc>
            <type name="TransactionErrorDetails" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ready" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1297">The ::ready signal is emitted when all the refs involved in the operation
have been resolved to commits, and the required authentication for all ops is gotten.
At this point flatpak_transaction_get_operations() will return all the operations
that will be executed as part of the transaction.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1306">%TRUE to carry on with the transaction, %FALSE to abort</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </glib:signal>
      <glib:signal name="ready-pre-auth" when="last" version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1317">The ::ready-pre-auth signal is emitted when all the refs involved in the
transaction have been resolved to commits, but we might not necessarily
have asked for authentication for all their required operations. This is
very similar to the ::ready signal, and you can choose which one (or both)
to use depending on how you want to handle authentication in your user
interface.

At this point flatpak_transaction_get_operations() will return all the
operations that will be executed as part of the transaction. You can call
flatpak_transaction_operation_get_requires_authentication() to see which
will require authentication.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="1333">%TRUE to carry on with the transaction, %FALSE to abort</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </glib:signal>
      <glib:signal name="webflow-done" when="last" version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1430">The ::webflow-done signal gets emitted when the authentication
finished the webflow, independent of the reason and results.  If
you for were showing a web-browser window it can now be closed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1433">Extra options, currently unused</doc>
            <type name="GLib.Variant"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1434">The id of the operation</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="webflow-start" when="last" version="1.5.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="1396">The ::webflow-start signal gets emitted when some kind of user
authentication is needed during the operation. If the caller handles this
it should show the url in a webbrowser and return %TRUE. This will
eventually cause the webbrowser to finish the authentication operation and
operation will continue, as signaled by the webflow-done being emitted.

If the client does not support webflow then return %FALSE from this signal
(or don't implement it). This will abort the authentication and likely
result in the transaction failing (unless the authentication was somehow
optional).

During the time between webflow-start and webflow-done the client can call
flatpak_transaction_abort_webflow() to manually abort the authentication.
This is useful if the user aborted the authentication operation some way,
like e.g. closing the browser window.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1399">The remote we're authenticating with</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1400">The url to show</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1401">Extra options, currently unused</doc>
            <type name="GLib.Variant"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="1402">The id of the operation, can be used to cancel it</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TransactionClass"
            c:type="FlatpakTransactionClass"
            glib:is-gtype-struct-for="Transaction">
      <source-position filename="common/flatpak-transaction.h" line="158"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="new_operation">
        <callback name="new_operation">
          <source-position filename="common/flatpak-transaction.h" line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="operation" transfer-ownership="none">
              <type name="TransactionOperation"
                    c:type="FlatpakTransactionOperation*"/>
            </parameter>
            <parameter name="progress" transfer-ownership="none">
              <type name="TransactionProgress"
                    c:type="FlatpakTransactionProgress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="operation_done">
        <callback name="operation_done">
          <source-position filename="common/flatpak-transaction.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="operation" transfer-ownership="none">
              <type name="TransactionOperation"
                    c:type="FlatpakTransactionOperation*"/>
            </parameter>
            <parameter name="commit" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="details" transfer-ownership="none">
              <type name="TransactionResult"
                    c:type="FlatpakTransactionResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="operation_error">
        <callback name="operation_error">
          <source-position filename="common/flatpak-transaction.h" line="107"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="operation" transfer-ownership="none">
              <type name="TransactionOperation"
                    c:type="FlatpakTransactionOperation*"/>
            </parameter>
            <parameter name="error" transfer-ownership="none">
              <type name="GLib.Error" c:type="const GError*"/>
            </parameter>
            <parameter name="detail" transfer-ownership="none">
              <type name="TransactionErrorDetails"
                    c:type="FlatpakTransactionErrorDetails"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="choose_remote_for_ref">
        <callback name="choose_remote_for_ref">
          <source-position filename="common/flatpak-transaction.h" line="111"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="for_ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="runtime_ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="remotes" transfer-ownership="none">
              <type name="utf8" c:type="const char* const*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_of_lifed">
        <callback name="end_of_lifed">
          <source-position filename="common/flatpak-transaction.h" line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="rebase" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ready">
        <callback name="ready">
          <source-position filename="common/flatpak-transaction.h" line="119"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_new_remote">
        <callback name="add_new_remote">
          <source-position filename="common/flatpak-transaction.h" line="121"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="TransactionRemoteReason"
                    c:type="FlatpakTransactionRemoteReason"/>
            </parameter>
            <parameter name="from_id" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="remote_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="run">
        <callback name="run" throws="1">
          <source-position filename="common/flatpak-transaction.h" line="127"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="4726">%TRUE on success, %FALSE if an error occurred</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="common/flatpak-transaction.c"
                   line="4709">a #FlatpakTransaction</doc>
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="common/flatpak-transaction.c"
                   line="4710">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_of_lifed_with_rebase">
        <callback name="end_of_lifed_with_rebase">
          <source-position filename="common/flatpak-transaction.h" line="130"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="remote" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="reason" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="rebased_to_ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="previous_ids" transfer-ownership="none">
              <type name="utf8" c:type="const char**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="webflow_start">
        <callback name="webflow_start">
          <source-position filename="common/flatpak-transaction.h" line="137"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="remote" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="options" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="webflow_done">
        <callback name="webflow_done">
          <source-position filename="common/flatpak-transaction.h" line="142"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="options" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="basic_auth_start">
        <callback name="basic_auth_start">
          <source-position filename="common/flatpak-transaction.h" line="146"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="remote" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="realm" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="options" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="install_authenticator">
        <callback name="install_authenticator">
          <source-position filename="common/flatpak-transaction.h" line="151"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
            <parameter name="remote" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="authenticator_ref" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ready_pre_auth">
        <callback name="ready_pre_auth">
          <source-position filename="common/flatpak-transaction.h" line="155"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="transaction" transfer-ownership="none">
              <type name="Transaction" c:type="FlatpakTransaction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="3">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <bitfield name="TransactionErrorDetails"
              glib:type-name="FlatpakTransactionErrorDetails"
              glib:get-type="flatpak_transaction_error_details_get_type"
              c:type="FlatpakTransactionErrorDetails">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.h"
           line="55">The details for #FlatpakTransaction::operation-error.</doc>
      <member name="fatal"
              value="1"
              c:identifier="FLATPAK_TRANSACTION_ERROR_DETAILS_NON_FATAL"
              glib:nick="fatal"
              glib:name="FLATPAK_TRANSACTION_ERROR_DETAILS_NON_FATAL">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="57">The operation failure was not fatal</doc>
      </member>
    </bitfield>
    <class name="TransactionOperation"
           c:symbol-prefix="transaction_operation"
           c:type="FlatpakTransactionOperation"
           parent="GObject.Object"
           glib:type-name="FlatpakTransactionOperation"
           glib:get-type="flatpak_transaction_operation_get_type"
           glib:type-struct="TransactionOperationClass">
      <source-position filename="common/flatpak-transaction.h" line="91"/>
      <method name="get_bundle_path"
              c:identifier="flatpak_transaction_operation_get_bundle_path">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="800">Gets the path to the bundle.</doc>
        <source-position filename="common/flatpak-transaction.h" line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="806">the bundle #GFile or %NULL</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="802">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_commit"
              c:identifier="flatpak_transaction_operation_get_commit">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="814">Gets the commit ID for the operation.

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="823">the commit ID</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="816">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_download_size"
              c:identifier="flatpak_transaction_operation_get_download_size"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="831">Gets the maximum download size for the operation.

Note that this does not include the size of dependencies, and
the actual download may be smaller, if some of the data is already
available locally.

For uninstall operations, this returns 0.

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="846">the download size, in bytes</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="833">a #flatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installed_size"
              c:identifier="flatpak_transaction_operation_get_installed_size"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="855">Gets the installed size for the operation.

Note that even for a new install, the extra space required on
disk may be smaller than this number, if some of the data is already
available locally.

For uninstall operations, this returns 0.

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="870">the installed size, in bytes</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="857">a #flatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_skipped"
              c:identifier="flatpak_transaction_operation_get_is_skipped"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="743">Gets whether this operation will be skipped when the transaction is run.
Operations are skipped in some transaction situations, for example when an
app has reached end of life and needs a rebase, or when it would have been
updated but no update is available. By default, skipped
operations are not returned by flatpak_transaction_get_operations() — but
they can be accessed by traversing the operation graph using
flatpak_transaction_operation_get_related_to_ops().</doc>
        <source-position filename="common/flatpak-transaction.h" line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="755">%TRUE if the operation has been marked as to skip, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="745">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="flatpak_transaction_operation_get_metadata">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="879">Gets the metadata that will be applicable when the
operation is done.

This can be compared to the current metadata returned
by flatpak_transaction_operation_get_old_metadata()
to find new required permissions and similar changes.

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="893">the metadata #GKeyFile</doc>
          <type name="GLib.KeyFile" c:type="GKeyFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="881">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_old_metadata"
              c:identifier="flatpak_transaction_operation_get_old_metadata">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="901">Gets the metadata current metadata for the ref that @self works on.
Also see flatpak_transaction_operation_get_metadata().

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="911">the old metadata #GKeyFile</doc>
          <type name="GLib.KeyFile" c:type="GKeyFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="903">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_operation_type"
              c:identifier="flatpak_transaction_operation_get_operation_type">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="670">Gets the type of the operation.</doc>
        <source-position filename="common/flatpak-transaction.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="676">the type of operation, as #FlatpakTransactionOperationType</doc>
          <type name="TransactionOperationType"
                c:type="FlatpakTransactionOperationType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="672">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ref"
              c:identifier="flatpak_transaction_operation_get_ref">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="684">Gets the ref that the operation applies to.</doc>
        <source-position filename="common/flatpak-transaction.h" line="183"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="690">the ref</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="686">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_related_to_ops"
              c:identifier="flatpak_transaction_operation_get_related_to_ops"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="704">Gets the operation(s) which caused this operation to be added to the
transaction. In the case of a runtime, it's the app(s) whose runtime it is,
and/or a runtime extension in the special case of an extra-data extension
that doesn't define the "NoRuntime" key. In the case of a related ref such
as an extension, it's the main app or runtime. In the case of a main app or
something added to the transaction by e.g. flatpak_transaction_add_install()
and which is not otherwise needed, %NULL or an empty array will be returned.

Note that an op will be returned even if it’s marked as to be skipped when
the transaction is run. Check that using
flatpak_transaction_operation_get_is_skipped().

Elements in the returned array are only safe to access while the parent
#FlatpakTransaction is alive.</doc>
        <source-position filename="common/flatpak-transaction.h" line="185"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="723">the
  #FlatpakTransactionOperations this one is related to (may be %NULL or an
  empty array, which are equivalent)</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="TransactionOperation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="706">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote"
              c:identifier="flatpak_transaction_operation_get_remote">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="764">Gets the remote that the operation applies to.</doc>
        <source-position filename="common/flatpak-transaction.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="770">the remote</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="766">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_requires_authentication"
              c:identifier="flatpak_transaction_operation_get_requires_authentication"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="951">Gets whether the given operation will require authentication to acquire
needed tokens. See also the documentation for
#FlatpakTransaction::ready-pre-auth.</doc>
        <source-position filename="common/flatpak-transaction.h" line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="959">whether @self requires authentication</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="953">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subpaths"
              c:identifier="flatpak_transaction_operation_get_subpaths"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="919">Gets the set of subpaths that will be pulled from this ref.

Some refs are only partially installed, such as translations. These
are subset by the toplevel directory (typically by translation name).
The subset to install can be specified at install time, but is otherwise
decided based on configurations and things like the current locale and
how the app was previously installed.

If there is no subsetting active, this will always return %NULL
(even though some other APIs also take an empty string to mean no
subsetting).

This information is available when the transaction is resolved,
i.e. when #FlatpakTransaction::ready is emitted.</doc>
        <source-position filename="common/flatpak-transaction.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="938">the set of subpaths that will be pulled, or %NULL if no subsetting.</doc>
          <array c:type="const char* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="921">a #FlatpakTransactionOperation</doc>
            <type name="TransactionOperation"
                  c:type="FlatpakTransactionOperation*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="TransactionOperationClass"
            c:type="FlatpakTransactionOperationClass"
            glib:is-gtype-struct-for="TransactionOperation">
      <source-position filename="common/flatpak-transaction.h" line="91"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="TransactionOperationType"
                 glib:type-name="FlatpakTransactionOperationType"
                 glib:get-type="flatpak_transaction_operation_type_get_type"
                 c:type="FlatpakTransactionOperationType">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.h"
           line="37">The type of a #FlatpakTransactionOperation.</doc>
      <member name="install"
              value="0"
              c:identifier="FLATPAK_TRANSACTION_OPERATION_INSTALL"
              glib:nick="install"
              glib:name="FLATPAK_TRANSACTION_OPERATION_INSTALL">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="39">Install a ref from a remote</doc>
      </member>
      <member name="update"
              value="1"
              c:identifier="FLATPAK_TRANSACTION_OPERATION_UPDATE"
              glib:nick="update"
              glib:name="FLATPAK_TRANSACTION_OPERATION_UPDATE">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="40">Update an installed ref</doc>
      </member>
      <member name="install_bundle"
              value="2"
              c:identifier="FLATPAK_TRANSACTION_OPERATION_INSTALL_BUNDLE"
              glib:nick="install-bundle"
              glib:name="FLATPAK_TRANSACTION_OPERATION_INSTALL_BUNDLE">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="41">Install a bundle from a file</doc>
      </member>
      <member name="uninstall"
              value="3"
              c:identifier="FLATPAK_TRANSACTION_OPERATION_UNINSTALL"
              glib:nick="uninstall"
              glib:name="FLATPAK_TRANSACTION_OPERATION_UNINSTALL">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="42">Uninstall a ref</doc>
      </member>
      <member name="last_type"
              value="4"
              c:identifier="FLATPAK_TRANSACTION_OPERATION_LAST_TYPE"
              glib:nick="last-type"
              glib:name="FLATPAK_TRANSACTION_OPERATION_LAST_TYPE">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="43">The (currently) last operation type</doc>
      </member>
      <function name="to_string"
                c:identifier="flatpak_transaction_operation_type_to_string">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="778">Converts the operation type to a string.</doc>
        <source-position filename="common/flatpak-transaction.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="784">a string representing @kind</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="780">a #FlatpakTransactionOperationType</doc>
            <type name="TransactionOperationType"
                  c:type="FlatpakTransactionOperationType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="TransactionProgress"
           c:symbol-prefix="transaction_progress"
           c:type="FlatpakTransactionProgress"
           parent="GObject.Object"
           glib:type-name="FlatpakTransactionProgress"
           glib:get-type="flatpak_transaction_progress_get_type"
           glib:type-struct="TransactionProgressClass">
      <source-position filename="common/flatpak-transaction.h" line="88"/>
      <method name="get_bytes_transferred"
              c:identifier="flatpak_transaction_progress_get_bytes_transferred"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="335">Gets the number of bytes that have been transferred.</doc>
        <source-position filename="common/flatpak-transaction.h" line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="341">the number of bytes transferred</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="337">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_estimating"
              c:identifier="flatpak_transaction_progress_get_is_estimating">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="307">Gets whether the progress is currently estimating</doc>
        <source-position filename="common/flatpak-transaction.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="313">whether we're estimating</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="309">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="flatpak_transaction_progress_get_progress">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="321">Gets the current progress.</doc>
        <source-position filename="common/flatpak-transaction.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="327">the current progress, as an integer between 0 and 100</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="323">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_time"
              c:identifier="flatpak_transaction_progress_get_start_time"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="355">Gets the time at which this operation has started, as monotonic time.</doc>
        <source-position filename="common/flatpak-transaction.h" line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="361">the start time</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="357">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="flatpak_transaction_progress_get_status">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="293">Gets the current status string</doc>
        <source-position filename="common/flatpak-transaction.h" line="169"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="299">the current status</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="295">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_update_frequency"
              c:identifier="flatpak_transaction_progress_set_update_frequency">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="279">Sets how often progress should be updated.</doc>
        <source-position filename="common/flatpak-transaction.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="281">a #FlatpakTransactionProgress</doc>
            <type name="TransactionProgress"
                  c:type="FlatpakTransactionProgress*"/>
          </instance-parameter>
          <parameter name="update_interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="common/flatpak-transaction.c"
                 line="282">the update interval, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed" when="last">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="387">Emitted when some detail of the progress object changes, you can call the various methods to get the current status.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="TransactionProgressClass"
            c:type="FlatpakTransactionProgressClass"
            glib:is-gtype-struct-for="TransactionProgress">
      <source-position filename="common/flatpak-transaction.h" line="88"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="TransactionRemoteReason"
                 glib:type-name="FlatpakTransactionRemoteReason"
                 glib:get-type="flatpak_transaction_remote_reason_get_type"
                 c:type="FlatpakTransactionRemoteReason">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.h"
           line="75">The reason for #FlatpakTransaction::add-new-remote.</doc>
      <member name="generic_repo"
              value="0"
              c:identifier="FLATPAK_TRANSACTION_REMOTE_GENERIC_REPO"
              glib:nick="generic-repo"
              glib:name="FLATPAK_TRANSACTION_REMOTE_GENERIC_REPO">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="77">The remote specified in the flatpakref has other apps too</doc>
      </member>
      <member name="runtime_deps"
              value="1"
              c:identifier="FLATPAK_TRANSACTION_REMOTE_RUNTIME_DEPS"
              glib:nick="runtime-deps"
              glib:name="FLATPAK_TRANSACTION_REMOTE_RUNTIME_DEPS">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="78">The remote has runtimes needed for the app</doc>
      </member>
    </enumeration>
    <bitfield name="TransactionResult"
              glib:type-name="FlatpakTransactionResult"
              glib:get-type="flatpak_transaction_result_get_type"
              c:type="FlatpakTransactionResult">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.h"
           line="65">The details for #FlatpakTransaction::operation-done.</doc>
      <member name="change"
              value="1"
              c:identifier="FLATPAK_TRANSACTION_RESULT_NO_CHANGE"
              glib:nick="change"
              glib:name="FLATPAK_TRANSACTION_RESULT_NO_CHANGE">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.h"
             line="67">The update caused no changes</doc>
      </member>
    </bitfield>
    <bitfield name="UninstallFlags"
              version="0.11.8"
              glib:type-name="FlatpakUninstallFlags"
              glib:get-type="flatpak_uninstall_flags_get_type"
              c:type="FlatpakUninstallFlags">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="95">Flags to alter the behavior of flatpak_installation_uninstall_full().</doc>
      <member name="none"
              value="0"
              c:identifier="FLATPAK_UNINSTALL_FLAGS_NONE"
              glib:nick="none"
              glib:name="FLATPAK_UNINSTALL_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="97">Default</doc>
      </member>
      <member name="no_prune"
              value="1"
              c:identifier="FLATPAK_UNINSTALL_FLAGS_NO_PRUNE"
              glib:nick="no-prune"
              glib:name="FLATPAK_UNINSTALL_FLAGS_NO_PRUNE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="98">Don't prune the local OSTree repository after uninstalling</doc>
      </member>
      <member name="no_triggers"
              value="2"
              c:identifier="FLATPAK_UNINSTALL_FLAGS_NO_TRIGGERS"
              glib:nick="no-triggers"
              glib:name="FLATPAK_UNINSTALL_FLAGS_NO_TRIGGERS">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="99">Don't call triggers after uninstalling. If used,
the caller must later call flatpak_installation_run_triggers() to update
the exported file. (Since: 1.0.3)</doc>
      </member>
    </bitfield>
    <bitfield name="UpdateFlags"
              glib:type-name="FlatpakUpdateFlags"
              glib:get-type="flatpak_update_flags_get_type"
              c:type="FlatpakUpdateFlags">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.h"
           line="53">Flags to alter the behavior of flatpak_installation_update().</doc>
      <member name="none"
              value="0"
              c:identifier="FLATPAK_UPDATE_FLAGS_NONE"
              glib:nick="none"
              glib:name="FLATPAK_UPDATE_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="55">Fetch remote builds and install the latest one (default)</doc>
      </member>
      <member name="no_deploy"
              value="1"
              c:identifier="FLATPAK_UPDATE_FLAGS_NO_DEPLOY"
              glib:nick="no-deploy"
              glib:name="FLATPAK_UPDATE_FLAGS_NO_DEPLOY">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="56">Don't install any new builds that might be fetched</doc>
      </member>
      <member name="no_pull"
              value="2"
              c:identifier="FLATPAK_UPDATE_FLAGS_NO_PULL"
              glib:nick="no-pull"
              glib:name="FLATPAK_UPDATE_FLAGS_NO_PULL">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="57">Don't try to fetch new builds from the remote repo</doc>
      </member>
      <member name="no_static_deltas"
              value="4"
              c:identifier="FLATPAK_UPDATE_FLAGS_NO_STATIC_DELTAS"
              glib:nick="no-static-deltas"
              glib:name="FLATPAK_UPDATE_FLAGS_NO_STATIC_DELTAS">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="58">Don't use static deltas when pulling</doc>
      </member>
      <member name="no_prune"
              value="8"
              c:identifier="FLATPAK_UPDATE_FLAGS_NO_PRUNE"
              glib:nick="no-prune"
              glib:name="FLATPAK_UPDATE_FLAGS_NO_PRUNE">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="59">Don't prune the local OSTree repository after updating (Since: 0.11.8)</doc>
      </member>
      <member name="no_triggers"
              value="16"
              c:identifier="FLATPAK_UPDATE_FLAGS_NO_TRIGGERS"
              glib:nick="no-triggers"
              glib:name="FLATPAK_UPDATE_FLAGS_NO_TRIGGERS">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.h"
             line="60">Don't call triggers after updating. If used,
the caller must later call flatpak_installation_run_triggers() to update
the exported files. (Since: 1.0.3)</doc>
      </member>
    </bitfield>
    <function name="error_quark"
              c:identifier="flatpak_error_quark"
              moved-to="Error.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="flatpak-bundle-ref">
      <doc xml:space="preserve"
           filename="common/flatpak-bundle-ref.c"
           line="29">A FlatpakBundleRef refers to a single-file bundle containing an
application or runtime.</doc>
    </docsection>
    <docsection name="flatpak-error">
      <doc xml:space="preserve"
           filename="common/flatpak-error.c"
           line="28">The FlatpakError and FlatpakPortalError enumerations contain error codes
for some common errors.</doc>
    </docsection>
    <docsection name="flatpak-installation">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.c"
           line="45">FlatpakInstallation is the toplevel object that software installers
should use to operate on an flatpak applications.

An FlatpakInstallation object provides information about an installation
location for flatpak applications. Typical installation locations are either
system-wide (in $prefix/var/lib/flatpak) or per-user (in ~/.local/share/flatpak).

FlatpakInstallation can list configured remotes as well as installed application
and runtime references (in short: refs), and it can add, remove and modify remotes.

FlatpakInstallation can also run, install, update and uninstall applications and
runtimes, but #FlatpakTransaction is a better, high-level API for these tasks.

To get a list of all configured installations, use flatpak_get_system_installations(),
together with flatpak_installation_new_user().

The FlatpakInstallation API is threadsafe in the sense that it is safe to run two
operations at the same time, in different threads (or processes).</doc>
    </docsection>
    <docsection name="flatpak-installed-ref">
      <doc xml:space="preserve"
           filename="common/flatpak-installed-ref.c"
           line="30">A FlatpakInstalledRef provides information about an installed
application or runtime (in short: ref), such as the available
builds, its size, location, etc.</doc>
    </docsection>
    <docsection name="flatpak-instance">
      <doc xml:space="preserve"
           filename="common/flatpak-instance.c"
           line="36">A FlatpakInstance refers to a running sandbox, and contains
some basic information about the sandbox setup, such as the
application and runtime used inside the sandbox.

Importantly, it also gives access to the PID of the main
processes in the sandbox.

One way to obtain FlatpakInstances is to use flatpak_instance_get_all().
Another way is to use flatpak_installation_launch_full().

Note that process lifecycle tracking is fundamentally racy.
You have to be prepared for the sandbox and the processes
represented by a FlatpakInstance to not be around anymore.

The FlatpakInstance api was added in Flatpak 1.1.</doc>
    </docsection>
    <docsection name="flatpak-ref">
      <doc xml:space="preserve"
           filename="common/flatpak-ref.c"
           line="27">Currently Flatpak manages two types of binary artifacts: applications, and
runtimes. Applications contain a program that desktop users can run, while
runtimes contain only libraries and data. An FlatpakRef object (or short: ref)
can refer to either of these.

Both applications and runtimes are identified by a 4-tuple of strings: kind,
name, arch and branch, e.g. app/org.gnome.evince/x86_64/master. The functions
flatpak_ref_parse() and flatpak_ref_format_ref() can be used to convert
FlatpakRef objects into this string representation and back.

Note that the identifiers must be unique within a repo (e.g. Flathub) based
only on the name, arch, and branch 3-tuple, without regard to the kind. In
other words if app/org.gnome.evince/x86_64/master exists,
runtime/org.gnome.evince/x86_64/master must not exist. This requirement is
not enforced by libflatpak but is enforced by GNOME Software's use of
libappstream, since Appstream IDs are assumed to be unique.

FlatpakRef objects are immutable and can be passed freely between threads.

To uniquely identify a particular version of an application or runtime, you
need a commit.

The subclasses #FlatpakInstalledRef and #FlatpakRemoteRef provide more information
for artifacts that are locally installed or available from a remote repository.</doc>
    </docsection>
    <docsection name="flatpak-related-ref">
      <doc xml:space="preserve"
           filename="common/flatpak-related-ref.c"
           line="30">A FlatpakRelatedRef provides information about a ref that is related
to another ref. For instance, the local extension ref of an app.</doc>
    </docsection>
    <docsection name="flatpak-remote">
      <doc xml:space="preserve"
           filename="common/flatpak-remote.c"
           line="35">A #FlatpakRemote object provides information about a remote
repository (or short: remote) that has been configured.

At its most basic level, a remote has a name and the URL for
the repository. In addition, they provide some additional
information that can be useful when presenting repositories
in a UI, such as a title, a priority or a "don't enumerate"
flags.

To obtain FlatpakRemote objects for the configured remotes
on a system, use flatpak_installation_list_remotes() or
flatpak_installation_get_remote_by_name().</doc>
    </docsection>
    <docsection name="flatpak-remote-ref">
      <doc xml:space="preserve"
           filename="common/flatpak-remote-ref.c"
           line="31">A FlatpakRemoteRef provides information about an application or runtime
(in short: ref) that is available from a remote repository.</doc>
    </docsection>
    <docsection name="flatpak-transaction">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.c"
           line="36">FlatpakTransaction is an object representing an install/update/uninstall
transaction. You create an object like this using flatpak_transaction_new_for_installation()
and then you add all the operations (installs, updates, etc) you wish to do. Then
you start the transaction with flatpak_transaction_run() which will resolve all kinds
of dependencies and report progress and status while downloading and installing these.

The dependency resolution that is the first step of executing a transaction can
be influenced by flatpak_transaction_set_disable_dependencies(),
flatpak_transaction_set_disable_related(), flatpak_transaction_add_dependency_source()
and flatpak_transaction_add_default_dependency_sources().

The underlying operations that get orchestrated by a FlatpakTransaction are: pulling
new data from remote repositories, deploying newer applications or runtimes and pruning
old deployments. Which of these operations are carried out can be controlled with
flatpak_transaction_set_no_pull(), flatpak_transaction_set_no_deploy() and
flatpak_transaction_set_disable_prune().

A transaction is a blocking operation, and all signals are emitted in the same thread.
This means you should either handle the signals directly (say, by doing blocking console
interaction, or by just returning without interaction), or run the operation in a separate
thread and do your own forwarding to the GUI thread.

Despite the name, a FlatpakTransaction is more like a batch operation than a transaction
in the database sense. Individual operations are carried out sequentially, and are atomic.
They become visible to the system as they are completed. When an error occurs, already
completed operations are not rolled back.

For each operation that is executed during a transaction, you first get a
#FlatpakTransaction::new-operation signal, followed by either a
#FlatpakTransaction::operation-done or #FlatpakTransaction::operation-error.

The FlatpakTransaction API is threadsafe in the sense that it is safe to run two
transactions at the same time, in different threads (or processes).

Note: Transactions (or any other install/update operation) to a
system installation rely on the ability to create files that are readable
by other users. Some users set a umask that prohibits this. Unfortunately
there is no good way to work around this in a threadsafe, local way, so
such setups will break by default. The flatpak commandline app works
around this by calling umask(022) in the early setup, and it is recommended
that other apps using libflatpak do this too.</doc>
    </docsection>
    <docsection name="flatpak-transaction-operation">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.c"
           line="581">FlatpakTransactionOperation is an object that represents a single operation
in a transaction. You receive a FlatpakTransactionOperation object with the
#FlatpakTransaction::new-operation signal.</doc>
    </docsection>
    <docsection name="flatpak-transaction-progress">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.c"
           line="267">FlatpakTransactionProgress is an object that represents the progress
of a single operation in a transaction. You obtain a FlatpakTransactionProgress
with the #FlatpakTransaction::new-operation signal.</doc>
    </docsection>
    <docsection name="flatpak-version-macros">
      <doc xml:space="preserve"
           filename="common/flatpak-version-macros.h"
           line="68">These macros can be used to check the library version in use.</doc>
    </docsection>
    <function name="get_default_arch" c:identifier="flatpak_get_default_arch">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.c"
           line="191">Returns the canonical name for the arch of the current machine.</doc>
      <source-position filename="common/flatpak-installation.h" line="172"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="196">an arch string</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
    </function>
    <function name="get_supported_arches"
              c:identifier="flatpak_get_supported_arches">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.c"
           line="204">Returns the canonical names for the arches that are supported (i.e. can run)
on the current machine, in order of priority (default is first).</doc>
      <source-position filename="common/flatpak-installation.h" line="174"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="210">a zero terminated array of arch strings</doc>
        <array c:type="const char* const*">
          <type name="utf8"/>
        </array>
      </return-value>
    </function>
    <function name="get_system_installations"
              c:identifier="flatpak_get_system_installations"
              version="0.8"
              throws="1">
      <doc xml:space="preserve"
           filename="common/flatpak-installation.c"
           line="218">Lists the system installations according to the current configuration and current
availability (e.g. doesn't return a configured installation if not reachable).</doc>
      <source-position filename="common/flatpak-installation.h" line="176"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="common/flatpak-installation.c"
             line="226">a GPtrArray of
  #FlatpakInstallation instances</doc>
        <array name="GLib.PtrArray" c:type="GPtrArray*">
          <type name="Installation"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="cancellable"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="common/flatpak-installation.c"
               line="220">a #GCancellable</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="portal_error_quark"
              c:identifier="flatpak_portal_error_quark"
              moved-to="PortalError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="transaction_operation_type_to_string"
              c:identifier="flatpak_transaction_operation_type_to_string"
              moved-to="TransactionOperationType.to_string">
      <doc xml:space="preserve"
           filename="common/flatpak-transaction.c"
           line="778">Converts the operation type to a string.</doc>
      <source-position filename="common/flatpak-transaction.h" line="207"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="common/flatpak-transaction.c"
             line="784">a string representing @kind</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="common/flatpak-transaction.c"
               line="780">a #FlatpakTransactionOperationType</doc>
          <type name="TransactionOperationType"
                c:type="FlatpakTransactionOperationType"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
