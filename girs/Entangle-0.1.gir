<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GExiv2" version="0.10"/>
  <include name="GObject" version="2.0"/>
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="Gtk" version="3.0"/>
  <include name="Peas" version="1.0"/>
  <namespace name="Entangle"
             version="0.1"
             shared-library=""
             c:identifier-prefixes="Entangle"
             c:symbol-prefixes="entangle">
    <class name="Application"
           c:symbol-prefix="application"
           c:type="EntangleApplication"
           parent="Gtk.Application"
           glib:type-name="EntangleApplication"
           glib:get-type="entangle_application_get_type"
           glib:type-struct="ApplicationClass">
      <source-position filename="src/frontend/entangle-application.h"
                       line="33"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <constructor name="new" c:identifier="entangle_application_new">
        <source-position filename="src/frontend/entangle-application.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <type name="Application" c:type="EntangleApplication*"/>
        </return-value>
      </constructor>
      <method name="get_active_cameras"
              c:identifier="entangle_application_get_active_cameras"
              glib:get-property="active-cameras">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-application.c"
             line="516">Retrieve the active camera list</doc>
        <source-position filename="src/frontend/entangle-application.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-application.c"
               line="522">the camera list</doc>
          <type name="CameraList" c:type="EntangleCameraList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-application.c"
                 line="518">the application</doc>
            <type name="Application" c:type="EntangleApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plugin_engine"
              c:identifier="entangle_application_get_plugin_engine">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-application.c"
             line="564">Retrieve the plugin manager</doc>
        <source-position filename="src/frontend/entangle-application.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-application.c"
               line="570">the plugin engine</doc>
          <type name="Peas.Engine" c:type="PeasEngine*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-application.c"
                 line="566">the application</doc>
            <type name="Application" c:type="EntangleApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_preferences"
              c:identifier="entangle_application_get_preferences"
              glib:get-property="preferences">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-application.c"
             line="548">Retrieve the application preferences object</doc>
        <source-position filename="src/frontend/entangle-application.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-application.c"
               line="554">the application preferences</doc>
          <type name="Preferences" c:type="EntanglePreferences*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-application.c"
                 line="550">the application</doc>
            <type name="Application" c:type="EntangleApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_supported_cameras"
              c:identifier="entangle_application_get_supported_cameras"
              glib:get-property="supported-cameras">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-application.c"
             line="532">Retrieve the supported camera list</doc>
        <source-position filename="src/frontend/entangle-application.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-application.c"
               line="538">the camera list</doc>
          <type name="CameraList" c:type="EntangleCameraList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-application.c"
                 line="534">the application</doc>
            <type name="Application" c:type="EntangleApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="active-cameras"
                transfer-ownership="none"
                getter="get_active_cameras">
        <type name="CameraList"/>
      </property>
      <property name="preferences"
                transfer-ownership="none"
                getter="get_preferences">
        <type name="Preferences"/>
      </property>
      <property name="supported-cameras"
                transfer-ownership="none"
                getter="get_supported_cameras">
        <type name="CameraList"/>
      </property>
    </class>
    <record name="ApplicationClass"
            c:type="EntangleApplicationClass"
            glib:is-gtype-struct-for="Application">
      <source-position filename="src/frontend/entangle-application.h"
                       line="33"/>
      <field name="parent_class">
        <type name="Gtk.ApplicationClass" c:type="GtkApplicationClass"/>
      </field>
    </record>
    <class name="Camera"
           c:symbol-prefix="camera"
           c:type="EntangleCamera"
           parent="GObject.Object"
           glib:type-name="EntangleCamera"
           glib:get-type="entangle_camera_get_type"
           glib:type-struct="CameraClass">
      <source-position filename="src/backend/entangle-camera.h" line="34"/>
      <constructor name="new" c:identifier="entangle_camera_new">
        <source-position filename="src/backend/entangle-camera.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="serial" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="hasCapture" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="hasPreview" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="hasSettings" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="autofocus"
              c:identifier="entangle_camera_autofocus"
              throws="1"
              glib:async-func="autofocus_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2734">Trigger the autofocus mechanism on the camera, waiting
until focus is achieved or fails.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2746">TRUE if autofocus was achieved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2736">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="autofocus_async"
              c:identifier="entangle_camera_autofocus_async"
              glib:finish-func="autofocus_finish"
              glib:sync-func="autofocus">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2842">Trigger the autofocus mechanism on the camera, waiting
until focus is achieved or fails.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_autofocus_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2844">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2845">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2846">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2848">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="autofocus_finish"
              c:identifier="entangle_camera_autofocus_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2873">Check the completion status of a previous call to
entangle_camera_autofocus_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2882">TRUE if autofocus was performed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2875">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2876">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_image"
              c:identifier="entangle_camera_capture_image"
              throws="1"
              glib:async-func="capture_image_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1029">Trigger the camera shutter and download the first resulting
image. If the camera is shooting in multiple formats (eg JPEG
and RAW) this method will only return the first format captured
The caller should watch for signal notifications to detect any
additional images

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="84"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1044">the captured image or NULL</doc>
          <type name="CameraFile" c:type="EntangleCameraFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1031">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_image_async"
              c:identifier="entangle_camera_capture_image_async"
              glib:finish-func="capture_image_finish"
              glib:sync-func="capture_image">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1099">Trigger the camera shutter and download the first resulting
image. If the camera is shooting in multiple formats (eg JPEG
and RAW) this method will only return the first format captured
The caller should watch for signal notifications to detect any
additional images

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_capture_image_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1101">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1102">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1103">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1105">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_image_finish"
              c:identifier="entangle_camera_capture_image_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1133">Check the completion status of a previous call to
entangle_camera_capture_image_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1142">the captured image or NULL</doc>
          <type name="CameraFile" c:type="EntangleCameraFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1135">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1136">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close"
              c:identifier="entangle_camera_close"
              throws="1"
              glib:async-func="close_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="801">Close from the camera, enabling it to be used by
other applications.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="811">TRUE if the camera is closed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="803">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="close_async"
              c:identifier="entangle_camera_close_async"
              glib:finish-func="close_finish"
              glib:sync-func="close">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="889">Close from the camera, enabling it to be used by
other applications.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_open_async
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="891">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="892">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="893">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="895">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="entangle_camera_close_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="918">Check the completion status of a previous call to
entangle_camera_close_async</doc>
        <source-position filename="src/backend/entangle-camera.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="927">TRUE if the camera is closed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="920">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="921">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_file"
              c:identifier="entangle_camera_delete_file"
              throws="1"
              glib:async-func="delete_file_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1464">Delete @file from the camera capture target.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1476">TRUE if the file was deleted, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1466">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1467">the file to delete</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_file_async"
              c:identifier="entangle_camera_delete_file_async"
              glib:finish-func="delete_file_finish"
              glib:sync-func="delete_file">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1538">Delete @file from the camera capture target.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_delete_file_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1540">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1541">the file to delete</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1542">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1543">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1545">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_file_finish"
              c:identifier="entangle_camera_delete_file_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1574">Check the completion status of a previous call to
entangle_camera_delete_file_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1583">TRUE if the file was deleted, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1576">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1577">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_file"
              c:identifier="entangle_camera_download_file"
              throws="1"
              glib:async-func="download_file_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1306">Download the data associated with @file and set the data
on @file.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1319">TRUE if the file was downloaded, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1308">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1309">the file whose contents to download</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_file_async"
              c:identifier="entangle_camera_download_file_async"
              glib:finish-func="download_file_finish"
              glib:sync-func="download_file">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1406">Download the data associated with @file and set the data
on @file.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_download_file_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1408">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1409">the file whose contents to download</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1410">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1411">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1413">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_file_finish"
              c:identifier="entangle_camera_download_file_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1443">Check the completion status of a previous call to
entangle_camera_download_file_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1452">TRUE if the file was downloaded, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1445">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1446">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_controls"
              c:identifier="entangle_camera_get_controls"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2512">Get the configuration controls associated with the camera.

This can only be invoked when the camera is opened.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="274"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2521">the controls, or NULL</doc>
          <type name="ControlGroup" c:type="EntangleControlGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2514">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver"
              c:identifier="entangle_camera_get_driver"
              glib:get-property="driver">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1006">Get the camera driver information text. This is only available
while the camera is opened</doc>
        <source-position filename="src/backend/entangle-camera.h" line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1013">the camera driver information</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1008">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_capture"
              c:identifier="entangle_camera_get_has_capture"
              glib:get-property="has-capture">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3451">Check if the camera supports images capture</doc>
        <source-position filename="src/backend/entangle-camera.h" line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3457">TRUE if the camera supports image capture, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3453">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_preview"
              c:identifier="entangle_camera_get_has_preview"
              glib:get-property="has-preview">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3473">Check if the camera supports images preview</doc>
        <source-position filename="src/backend/entangle-camera.h" line="243"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3479">TRUE if the camera supports image preview, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3475">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_settings"
              c:identifier="entangle_camera_get_has_settings"
              glib:get-property="has-settings">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3495">Check if the camera supports configuration settings</doc>
        <source-position filename="src/backend/entangle-camera.h" line="245"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3501">TRUE if the camera supports configuration settings, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3497">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_viewfinder"
              c:identifier="entangle_camera_get_has_viewfinder"
              glib:get-property="has-viewfinder">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3517">Check if the camera supports view finder control</doc>
        <source-position filename="src/backend/entangle-camera.h" line="247"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3523">TRUE if the camera supports view finder control, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3519">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manual"
              c:identifier="entangle_camera_get_manual"
              glib:get-property="manual">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="983">Get the camera manual text. This is only available
while the camera is opened</doc>
        <source-position filename="src/backend/entangle-camera.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="990">the camera manual</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="985">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="entangle_camera_get_model"
              glib:get-property="model">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="477">Get the camera model name</doc>
        <source-position filename="src/backend/entangle-camera.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="483">the model name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="479">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_opened" c:identifier="entangle_camera_get_opened">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="939">Determine if the camera is currently opened</doc>
        <source-position filename="src/backend/entangle-camera.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="945">TRUE if the camera is opened, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="941">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_port"
              c:identifier="entangle_camera_get_port"
              glib:get-property="port">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="493">Get the camera port name</doc>
        <source-position filename="src/backend/entangle-camera.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="499">the port name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="495">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="entangle_camera_get_progress"
              glib:get-property="progress">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3561">Get the object instance that is receiving operation
progress notifications</doc>
        <source-position filename="src/backend/entangle-camera.h" line="279"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3568">the progress object</doc>
          <type name="Progress" c:type="EntangleProgress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3563">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="entangle_camera_get_summary"
              glib:get-property="summary">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="960">Get the camera summary text. This is only available
while the camera is opened</doc>
        <source-position filename="src/backend/entangle-camera.h" line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="967">the camera summary</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="962">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_mounted" c:identifier="entangle_camera_is_mounted">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3638">Check whether the camera is mounted as a virtual filesystem,
which would prevent opening it.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="282"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3645">TRUE if the camera is mounted, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3640">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_controls"
              c:identifier="entangle_camera_load_controls"
              throws="1"
              glib:async-func="load_controls_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2240">Loads the configuration controls from the camera.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2251">TRUE if the controls were loaded, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2242">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_controls_async"
              c:identifier="entangle_camera_load_controls_async"
              glib:finish-func="load_controls_finish"
              glib:sync-func="load_controls">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2325">Loads the configuration controls from the camera.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_load_controls_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="252"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2327">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2328">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2329">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2331">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_controls_finish"
              c:identifier="entangle_camera_load_controls_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2355">Check the completion status of a previous call to
entangle_camera_load_controls_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2364">TRUE if the controls were loaded, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2357">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2358">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="manualfocus"
              c:identifier="entangle_camera_manualfocus"
              throws="1"
              glib:async-func="manualfocus_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2894">Trigger the focus mechanism on the camera, to move
by @step.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2907">TRUE if autofocus was achieved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2896">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2897">how much to change focus by</doc>
            <type name="CameraManualFocusStep"
                  c:type="EntangleCameraManualFocusStep"/>
          </parameter>
        </parameters>
      </method>
      <method name="manualfocus_async"
              c:identifier="entangle_camera_manualfocus_async"
              glib:finish-func="manualfocus_finish"
              glib:sync-func="manualfocus">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3060">Trigger the focus mechanism on the camera, to move
by @step.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_manualfocus_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3062">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3063">how much to change focus by</doc>
            <type name="CameraManualFocusStep"
                  c:type="EntangleCameraManualFocusStep"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3064">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3065">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3067">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="manualfocus_finish"
              c:identifier="entangle_camera_manualfocus_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3095">Check the completion status of a previous call to
entangle_camera_manualfocus_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3104">TRUE if manual focus was performed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3097">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3098">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_async"
              c:identifier="entangle_camera_mount_async"
              glib:finish-func="mount_finish">
        <source-position filename="src/backend/entangle-camera.h" line="285"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_finish"
              c:identifier="entangle_camera_mount_finish"
              throws="1">
        <source-position filename="src/backend/entangle-camera.h" line="290"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="entangle_camera_open"
              throws="1"
              glib:async-func="open_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="619">Attempt to open to and initialize the camera. This
may fail if the camera is in use by another application,
has gone to sleep or has been disconnected from the port.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="630">TRUE if the camera is connected, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="621">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_async"
              c:identifier="entangle_camera_open_async"
              glib:finish-func="open_finish"
              glib:sync-func="open">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="750">Attempt to open to and initialize the camera. This
may fail if the camera is in use by another application,
has gone to sleep or has been disconnected from the port.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_open_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="752">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="753">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="754">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="756">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_finish"
              c:identifier="entangle_camera_open_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="780">Check the completion status of a previous call to
entangle_camera_open_async</doc>
        <source-position filename="src/backend/entangle-camera.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="789">TRUE if the camera is opened, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="782">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="783">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="preview_image"
              c:identifier="entangle_camera_preview_image"
              throws="1"
              glib:async-func="preview_image_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1154">Enable "live view", if not already enabled, and capture a
low resolution preview image. The "live view" mode will
remain enabled after execution.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1167">the captured image or NULL</doc>
          <type name="CameraFile" c:type="EntangleCameraFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1156">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="preview_image_async"
              c:identifier="entangle_camera_preview_image_async"
              glib:finish-func="preview_image_finish"
              glib:sync-func="preview_image">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1253">Enable "live view", if not already enabled, and capture a
low resolution preview image. The "live view" mode will
remain enabled after execution.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_preview_image_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1255">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1256">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1257">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1259">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="preview_image_finish"
              c:identifier="entangle_camera_preview_image_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1285">Check the completion status of a previous call to
entangle_camera_preview_image_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1294">the captured image or NULL</doc>
          <type name="CameraFile" c:type="EntangleCameraFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1287">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1288">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_events"
              c:identifier="entangle_camera_process_events"
              throws="1"
              glib:async-func="process_events_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1595">Wait upto @waitms milliseconds for events to arrive from
the camera. Signals will be emitted for any interesting
events that arrive. Multiple events will be processed
until @waitms is exceeded.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1610">TRUE if the file was deleted, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1597">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="waitms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1598">the number of milliseconds to wait</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_events_async"
              c:identifier="entangle_camera_process_events_async"
              glib:finish-func="process_events_finish"
              glib:sync-func="process_events">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1745">Wait upto @waitms milliseconds for events to arrive from
the camera. Signals will be emitted for any interesting
events that arrive. Multiple events will be processed
until @waitms is exceeded.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_process_events_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1747">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="waitms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1748">the number of milliseconds to wait</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1749">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1750">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1752">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_events_finish"
              c:identifier="entangle_camera_process_events_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="1784">Check the completion status of a previous call to
entangle_camera_process_events_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="1793">TRUE if events were processed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1786">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="1787">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_controls"
              c:identifier="entangle_camera_save_controls"
              throws="1"
              glib:async-func="save_controls_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2376">Saves the configuration controls to the camera.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="262"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2387">TRUE if the controls were saved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2378">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_controls_async"
              c:identifier="entangle_camera_save_controls_async"
              glib:finish-func="save_controls_finish"
              glib:sync-func="save_controls">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2461">Saves the configuration controls to the camera.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_save_controls_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2463">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2464">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2465">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2467">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_controls_finish"
              c:identifier="entangle_camera_save_controls_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2491">Check the completion status of a previous call to
entangle_camera_save_controls_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="269"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2500">TRUE if the controls were saved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2493">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2494">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_capture_target"
              c:identifier="entangle_camera_set_capture_target"
              throws="1"
              glib:async-func="set_capture_target_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3279">Set the destination for storing captured images
to @target.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3292">TRUE if the capture target was changed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3281">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3282">the capture target</doc>
            <type name="CameraCaptureTarget"
                  c:type="EntangleCameraCaptureTarget"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_capture_target_async"
              c:identifier="entangle_camera_set_capture_target_async"
              glib:finish-func="set_capture_target_finish"
              glib:sync-func="set_capture_target">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3391">Set the destination for storing captured images
to @target.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_set_clock_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="230"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3393">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3394">the capture target</doc>
            <type name="CameraCaptureTarget"
                  c:type="EntangleCameraCaptureTarget"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3395">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3396">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3398">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_capture_target_finish"
              c:identifier="entangle_camera_set_capture_target_finish"
              throws="1">
        <source-position filename="src/backend/entangle-camera.h" line="236"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clock"
              c:identifier="entangle_camera_set_clock"
              throws="1"
              glib:async-func="set_clock_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3116">Update the camera clock to be @epochsecs seconds since
the epoch.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3129">TRUE if the clock was changed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3118">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="epochsecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3119">new time in seconds since the epoch</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clock_async"
              c:identifier="entangle_camera_set_clock_async"
              glib:finish-func="set_clock_finish"
              glib:sync-func="set_clock">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3219">Update the camera clock to be @epochsecs seconds since
the epoch.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_set_clock_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="209"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3221">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="epochsecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3222">new time in seconds since the epoch</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3223">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3224">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3226">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clock_finish"
              c:identifier="entangle_camera_set_clock_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3258">Check the completion status of a previous call to
entangle_camera_set_clock_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="215"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3267">TRUE if the clock was changed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3260">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3261">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_progress"
              c:identifier="entangle_camera_set_progress"
              glib:set-property="progress">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3539">Set the object instance to receive operation progress
notifications</doc>
        <source-position filename="src/backend/entangle-camera.h" line="277"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3541">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="prog"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3542">the progress instance</doc>
            <type name="Progress" c:type="EntangleProgress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_viewfinder"
              c:identifier="entangle_camera_set_viewfinder"
              throws="1"
              glib:async-func="set_viewfinder_async">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2552">If @enabled is TRUE, the view finder will be activated
allowing preview images to be captured. If @enabled is
FALSE, the view finder will be deactivated.

This can only be invoked when the camera is opened.

This block execution of the caller until completion.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="153"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2566">TRUE if the viewer finder state was changed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2554">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2555">TRUE to turn on the view finder</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_viewfinder_async"
              c:identifier="entangle_camera_set_viewfinder_async"
              glib:finish-func="set_viewfinder_finish"
              glib:sync-func="set_viewfinder">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2677">If @enabled is TRUE, the view finder will be activated
allowing preview images to be captured. If @enabled is
FALSE, the view finder will be deactivated.

This can only be invoked when the camera is opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_set_viewfinder_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2679">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2680">TRUE to turn on the view finder</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2681">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2682">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2684">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_viewfinder_finish"
              c:identifier="entangle_camera_set_viewfinder_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="2713">Check the completion status of a previous call to
entangle_camera_set_viewfinder_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="2722">TRUE if the viewfinder state was changed, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2715">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="2716">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_async"
              c:identifier="entangle_camera_unmount_async"
              glib:finish-func="unmount_finish">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3715">Unmount the camera virtual filesystem, allowing it to be
opened.

This will execute in the background, and invoke @callback
when complete, whereupon entangle_camera_unmount_finish
can be used to check the status</doc>
        <source-position filename="src/backend/entangle-camera.h" line="295"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3717">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3718">optional GCancellable object, NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3719">a GAsyncReadyCallback to call when the request is
satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3721">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_finish"
              c:identifier="entangle_camera_unmount_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera.c"
             line="3757">Check the completion status of a previous call to
entangle_camera_unmount_async.</doc>
        <source-position filename="src/backend/entangle-camera.h" line="300"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera.c"
               line="3766">TRUE if the camera was unmounted, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3759">the camera</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera.c"
                 line="3760">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="driver"
                transfer-ownership="none"
                getter="get_driver"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="has-capture"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_has_capture"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-preview"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_has_preview"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-settings"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_has_settings"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-viewfinder"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_has_viewfinder"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="manual"
                transfer-ownership="none"
                getter="get_manual"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="model"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_model"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="port"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_port"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="progress"
                writable="1"
                transfer-ownership="none"
                setter="set_progress"
                getter="get_progress">
        <type name="Progress"/>
      </property>
      <property name="serial"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                transfer-ownership="none"
                getter="get_summary"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <glib:signal name="camera-closed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="camera-controls-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="camera-file-added" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CameraFile"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-file-captured" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CameraFile"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-file-deleted" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CameraFile"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-file-downloaded" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CameraFile"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-file-previewed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="CameraFile"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-opened" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="CameraAutomata"
           c:symbol-prefix="camera_automata"
           c:type="EntangleCameraAutomata"
           parent="GObject.Object"
           glib:type-name="EntangleCameraAutomata"
           glib:get-type="entangle_camera_automata_get_type"
           glib:type-struct="CameraAutomataClass">
      <source-position filename="src/backend/entangle-camera-automata.h"
                       line="33"/>
      <constructor name="new" c:identifier="entangle_camera_automata_new">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
        </return-value>
      </constructor>
      <method name="capture_async"
              c:identifier="entangle_camera_automata_capture_async"
              glib:finish-func="capture_finish">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="cancel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_finish"
              c:identifier="entangle_camera_automata_capture_finish"
              throws="1">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_camera"
              c:identifier="entangle_camera_automata_get_camera"
              glib:get-property="camera">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-automata.c"
             line="626">Get the camera associated with the automata</doc>
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-automata.c"
               line="632">the camera or NULL</doc>
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-automata.c"
                 line="628">the automata object</doc>
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_delete_file"
              c:identifier="entangle_camera_automata_get_delete_file"
              glib:get-property="delete-file">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_session"
              c:identifier="entangle_camera_automata_get_session"
              glib:get-property="session">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-automata.c"
             line="659">Get the session associated with the automata</doc>
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-automata.c"
               line="665">the session or NULL</doc>
          <type name="Session" c:type="EntangleSession*"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-automata.c"
                 line="661">the automata object</doc>
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="preview_async"
              c:identifier="entangle_camera_automata_preview_async"
              glib:finish-func="preview_finish">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="cancel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="confirm"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="preview_finish"
              c:identifier="entangle_camera_automata_preview_finish"
              throws="1">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_camera"
              c:identifier="entangle_camera_automata_set_camera"
              glib:set-property="camera">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="camera" transfer-ownership="none">
            <type name="Camera" c:type="EntangleCamera*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_delete_file"
              c:identifier="entangle_camera_automata_set_delete_file"
              glib:set-property="delete-file">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_session"
              c:identifier="entangle_camera_automata_set_session"
              glib:set-property="session">
        <source-position filename="src/backend/entangle-camera-automata.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </instance-parameter>
          <parameter name="session" transfer-ownership="none">
            <type name="Session" c:type="EntangleSession*"/>
          </parameter>
        </parameters>
      </method>
      <property name="camera"
                writable="1"
                transfer-ownership="none"
                setter="set_camera"
                getter="get_camera">
        <type name="Camera"/>
      </property>
      <property name="delete-file"
                writable="1"
                transfer-ownership="none"
                setter="set_delete_file"
                getter="get_delete_file"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="session"
                writable="1"
                transfer-ownership="none"
                setter="set_session"
                getter="get_session">
        <type name="Session"/>
      </property>
      <glib:signal name="camera-capture-begin" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="camera-capture-end" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CameraAutomataClass"
            c:type="EntangleCameraAutomataClass"
            glib:is-gtype-struct-for="CameraAutomata">
      <source-position filename="src/backend/entangle-camera-automata.h"
                       line="33"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="CameraCaptureTarget"
                 c:type="EntangleCameraCaptureTarget">
      <source-position filename="src/backend/entangle-camera.h" line="223"/>
      <member name="ram"
              value="0"
              c:identifier="ENTANGLE_CAMERA_CAPTURE_TARGET_RAM">
      </member>
      <member name="card"
              value="1"
              c:identifier="ENTANGLE_CAMERA_CAPTURE_TARGET_CARD">
      </member>
    </enumeration>
    <record name="CameraClass"
            c:type="EntangleCameraClass"
            glib:is-gtype-struct-for="Camera">
      <source-position filename="src/backend/entangle-camera.h" line="34"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CameraFile"
           c:symbol-prefix="camera_file"
           c:type="EntangleCameraFile"
           parent="GObject.Object"
           glib:type-name="EntangleCameraFile"
           glib:get-type="entangle_camera_file_get_type"
           glib:type-struct="CameraFileClass">
      <source-position filename="src/backend/entangle-camera-file.h"
                       line="29"/>
      <constructor name="new" c:identifier="entangle_camera_file_new">
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="36"/>
        <return-value transfer-ownership="full">
          <type name="CameraFile" c:type="EntangleCameraFile*"/>
        </return-value>
        <parameters>
          <parameter name="folder" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_data"
              c:identifier="entangle_camera_file_get_data"
              glib:get-property="data">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="351">Get the raw data associated with the camera file</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="357">the camera data</doc>
          <array name="GLib.ByteArray" c:type="GByteArray*">
            <type name="guint8" c:type="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="353">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folder"
              c:identifier="entangle_camera_file_get_folder"
              glib:get-property="folder">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="192">Get the path of the folder on the camera which stores the file</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="198">the folder path</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="194">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mimetype"
              c:identifier="entangle_camera_file_get_mimetype"
              glib:get-property="mimetype">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="390">Get the mimetype of the camera file, as a string</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="396">the mime type or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="392">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="entangle_camera_file_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="208">Gets the name of the camera file, without any folder component</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="214">the file name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="210">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_path"
              c:identifier="entangle_camera_file_save_path"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="224">Saves the content of the camera file to the local
filesystem path identified by @localpath</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="233">TRUE if the file was saved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="226">the camera file</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
          <parameter name="localpath" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="227">path on the local filesystem</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_uri"
              c:identifier="entangle_camera_file_save_uri"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="288">Saves the content of the camera file to the virtual
filesystem location identified by @uri. @uri can be
any scheme for which a GVFS handler is present.</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-file.c"
               line="298">TRUE if the file was saved, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="290">the camera file</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="291">virtual filesystem URI</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_data"
              c:identifier="entangle_camera_file_set_data"
              glib:set-property="data">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="367">Set the raw data for the camera file. If there was pre-existing data
set this will be released. Passing NULL for @data will clear the
data completely. The contents of @data will not be copied, instead a
reference will be acquired. Thus any further changes to @data by the
caller will affect this object</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="369">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="370">the new data</doc>
            <array name="GLib.ByteArray" c:type="GByteArray*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_mimetype"
              c:identifier="entangle_camera_file_set_mimetype"
              glib:set-property="mimetype">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-file.c"
             line="406">Set the mimetype of the data associated with the file.
This replaces any previously set mime type. Passing in
NULL for @mimetype will clear the mime type information.</doc>
        <source-position filename="src/backend/entangle-camera-file.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="408">the camera file instance</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </instance-parameter>
          <parameter name="mimetype"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-file.c"
                 line="409">the new mime type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="data"
                writable="1"
                transfer-ownership="none"
                setter="set_data"
                getter="get_data">
        <array name="GLib.ByteArray">
          <type name="guint8" c:type="guint8"/>
        </array>
      </property>
      <property name="folder"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_folder"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mimetype"
                writable="1"
                transfer-ownership="none"
                setter="set_mimetype"
                getter="get_mimetype"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="CameraFileClass"
            c:type="EntangleCameraFileClass"
            glib:is-gtype-struct-for="CameraFile">
      <source-position filename="src/backend/entangle-camera-file.h"
                       line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CameraList"
           c:symbol-prefix="camera_list"
           c:type="EntangleCameraList"
           parent="GObject.Object"
           glib:type-name="EntangleCameraList"
           glib:get-type="entangle_camera_list_get_type"
           glib:type-struct="CameraListClass">
      <source-position filename="src/backend/entangle-camera-list.h"
                       line="31"/>
      <constructor name="new_active"
                   c:identifier="entangle_camera_list_new_active">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="191">Create a new camera list for enumerating camera
cameras that are connected to the host computer</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="197">the new camera list</doc>
          <type name="CameraList" c:type="EntangleCameraList*"/>
        </return-value>
      </constructor>
      <constructor name="new_supported"
                   c:identifier="entangle_camera_list_new_supported">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="206">Create a new camera list for enumerating camera
models that are supported by the library.</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="212">the new camera list</doc>
          <type name="CameraList" c:type="EntangleCameraList*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="entangle_camera_list_add">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="423">Adds the camera @cam to the list @list</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="425">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
          <parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="426">the camera to add</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </parameter>
        </parameters>
      </method>
      <method name="count" c:identifier="entangle_camera_list_count">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="407">Get the total number of cameras currently detected</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="413">the number of cameras</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="409">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find" c:identifier="entangle_camera_list_find">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="513">Get the camera connected to hardware address @port</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="520">the camera connected to @port, or NULL</doc>
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="515">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="516">the hardware port address</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="entangle_camera_list_get">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="473">Get the camera at position @entry in the list</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="480">the camera at position @entry</doc>
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="475">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="476">the index of the camera to get</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cameras"
              c:identifier="entangle_camera_list_get_cameras">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="493">Get the full list of cameras</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="58"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="499">a list of
#EntangleCamera objects</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Camera"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="495">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="refresh"
              c:identifier="entangle_camera_list_refresh"
              throws="1">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="372">De-intialization the list of cameras</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-camera-list.c"
               line="379">TRUE if the refresh was successful, FALSE on error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="374">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="entangle_camera_list_remove">
        <doc xml:space="preserve"
             filename="src/backend/entangle-camera-list.c"
             line="445">Removes the camera @cam from the list @list</doc>
        <source-position filename="src/backend/entangle-camera-list.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="447">the camera list</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </instance-parameter>
          <parameter name="cam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-camera-list.c"
                 line="448">the camera to remove</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </parameter>
        </parameters>
      </method>
      <property name="active"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="device-manager" transfer-ownership="none">
        <type name="DeviceManager"/>
      </property>
      <glib:signal name="camera-added" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Camera"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="camera-removed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Camera"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CameraListClass"
            c:type="EntangleCameraListClass"
            glib:is-gtype-struct-for="CameraList">
      <source-position filename="src/backend/entangle-camera-list.h"
                       line="31"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CameraManager"
           c:symbol-prefix="camera_manager"
           c:type="EntangleCameraManager"
           parent="Gtk.ApplicationWindow"
           glib:type-name="EntangleCameraManager"
           glib:get-type="entangle_camera_manager_get_type"
           glib:type-struct="CameraManagerClass">
      <source-position filename="src/frontend/entangle-camera-manager.h"
                       line="33"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Progress"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_camera_manager_new">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="CameraManager" c:type="EntangleCameraManager*"/>
        </return-value>
        <parameters>
          <parameter name="app" transfer-ownership="none">
            <type name="Application" c:type="EntangleApplication*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_script"
              c:identifier="entangle_camera_manager_add_script">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <type name="Script" c:type="EntangleScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture" c:identifier="entangle_camera_manager_capture">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_camera"
              c:identifier="entangle_camera_manager_get_camera"
              glib:get-property="camera">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-camera-manager.c"
             line="3034">Get the camera currently being used</doc>
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-camera-manager.c"
               line="3040">the camera or NULL</doc>
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-manager.c"
                 line="3036">the camera manager window</doc>
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_context_menu"
              c:identifier="entangle_camera_manager_get_media_context_menu">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="preview_begin"
              c:identifier="entangle_camera_manager_preview_begin">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="preview_cancel"
              c:identifier="entangle_camera_manager_preview_cancel">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_script"
              c:identifier="entangle_camera_manager_remove_script">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <type name="Script" c:type="EntangleScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_camera"
              c:identifier="entangle_camera_manager_set_camera"
              glib:set-property="camera">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
          <parameter name="cam" transfer-ownership="none">
            <type name="Camera" c:type="EntangleCamera*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_media_context_menu"
              c:identifier="entangle_camera_manager_set_media_context_menu">
        <source-position filename="src/frontend/entangle-camera-manager.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="CameraManager" c:type="EntangleCameraManager*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="camera"
                writable="1"
                transfer-ownership="none"
                setter="set_camera"
                getter="get_camera">
        <type name="Camera"/>
      </property>
      <glib:signal name="closed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CameraManagerClass"
            c:type="EntangleCameraManagerClass"
            glib:is-gtype-struct-for="CameraManager">
      <source-position filename="src/frontend/entangle-camera-manager.h"
                       line="33"/>
      <field name="parent_class">
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
    </record>
    <enumeration name="CameraManualFocusStep"
                 c:type="EntangleCameraManualFocusStep">
      <source-position filename="src/backend/entangle-camera.h" line="187"/>
      <member name="in_coarse"
              value="0"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_IN_COARSE">
      </member>
      <member name="in_medium"
              value="1"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_IN_MEDIUM">
      </member>
      <member name="in_fine"
              value="2"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_IN_FINE">
      </member>
      <member name="out_coarse"
              value="3"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_OUT_COARSE">
      </member>
      <member name="out_medium"
              value="4"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_OUT_MEDIUM">
      </member>
      <member name="out_fine"
              value="5"
              c:identifier="ENTANGLE_CAMERA_MANUAL_FOCUS_STEP_OUT_FINE">
      </member>
    </enumeration>
    <class name="CameraPicker"
           c:symbol-prefix="camera_picker"
           c:type="EntangleCameraPicker"
           parent="Gtk.Dialog"
           glib:type-name="EntangleCameraPicker"
           glib:get-type="entangle_camera_picker_get_type"
           glib:type-struct="CameraPickerClass">
      <source-position filename="src/frontend/entangle-camera-picker.h"
                       line="32"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_camera_picker_new">
        <source-position filename="src/frontend/entangle-camera-picker.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="CameraPicker" c:type="EntangleCameraPicker*"/>
        </return-value>
      </constructor>
      <method name="set_camera_list"
              c:identifier="entangle_camera_picker_set_camera_list">
        <source-position filename="src/frontend/entangle-camera-picker.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="picker" transfer-ownership="none">
            <type name="CameraPicker" c:type="EntangleCameraPicker*"/>
          </instance-parameter>
          <parameter name="cameras" transfer-ownership="none">
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </parameter>
        </parameters>
      </method>
      <property name="cameras" writable="1" transfer-ownership="none">
        <type name="CameraList"/>
      </property>
      <glib:signal name="picker-connect" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="picker-refresh" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CameraPickerClass"
            c:type="EntangleCameraPickerClass"
            glib:is-gtype-struct-for="CameraPicker">
      <source-position filename="src/frontend/entangle-camera-picker.h"
                       line="32"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <class name="CameraPreferences"
           c:symbol-prefix="camera_preferences"
           c:type="EntangleCameraPreferences"
           parent="GObject.Object"
           glib:type-name="EntangleCameraPreferences"
           glib:get-type="entangle_camera_preferences_get_type"
           glib:type-struct="CameraPreferencesClass">
      <source-position filename="src/frontend/entangle-camera-preferences.h"
                       line="32"/>
      <constructor name="new" c:identifier="entangle_camera_preferences_new">
        <source-position filename="src/frontend/entangle-camera-preferences.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <type name="CameraPreferences" c:type="EntangleCameraPreferences*"/>
        </return-value>
      </constructor>
      <method name="get_camera"
              c:identifier="entangle_camera_preferences_get_camera"
              glib:get-property="camera">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-camera-preferences.c"
             line="173">Get the camera whose cameras are displayed</doc>
        <source-position filename="src/frontend/entangle-camera-preferences.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-camera-preferences.c"
               line="179">the camera or NULL</doc>
          <type name="Camera" c:type="EntangleCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preferences" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="175">the camera widget</doc>
            <type name="CameraPreferences"
                  c:type="EntangleCameraPreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_controls"
              c:identifier="entangle_camera_preferences_get_controls">
        <source-position filename="src/frontend/entangle-camera-preferences.h"
                         line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-camera-preferences.c"
               line="193">the list of controls</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="191">the camera preferences</doc>
            <type name="CameraPreferences"
                  c:type="EntangleCameraPreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_camera"
              c:identifier="entangle_camera_preferences_set_camera"
              glib:set-property="camera">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-camera-preferences.c"
             line="130">Set the camera to display cameras for</doc>
        <source-position filename="src/frontend/entangle-camera-preferences.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preferences" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="132">the camera widget</doc>
            <type name="CameraPreferences"
                  c:type="EntangleCameraPreferences*"/>
          </instance-parameter>
          <parameter name="camera"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="133">the camera to display cameras for, or
NULL</doc>
            <type name="Camera" c:type="EntangleCamera*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_controls"
              c:identifier="entangle_camera_preferences_set_controls">
        <source-position filename="src/frontend/entangle-camera-preferences.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="208">the camera preferences</doc>
            <type name="CameraPreferences"
                  c:type="EntangleCameraPreferences*"/>
          </instance-parameter>
          <parameter name="controls" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-preferences.c"
                 line="209">the list of controls</doc>
            <type name="utf8" c:type="const gchar* const*"/>
          </parameter>
        </parameters>
      </method>
      <property name="camera"
                writable="1"
                transfer-ownership="none"
                setter="set_camera"
                getter="get_camera">
        <type name="Camera"/>
      </property>
    </class>
    <record name="CameraPreferencesClass"
            c:type="EntangleCameraPreferencesClass"
            glib:is-gtype-struct-for="CameraPreferences">
      <source-position filename="src/frontend/entangle-camera-preferences.h"
                       line="32"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="CameraSupport"
           c:symbol-prefix="camera_support"
           c:type="EntangleCameraSupport"
           parent="Gtk.Dialog"
           glib:type-name="EntangleCameraSupport"
           glib:get-type="entangle_camera_support_get_type"
           glib:type-struct="CameraSupportClass">
      <source-position filename="src/frontend/entangle-camera-support.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_camera_support_new">
        <source-position filename="src/frontend/entangle-camera-support.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="CameraSupport" c:type="EntangleCameraSupport*"/>
        </return-value>
      </constructor>
      <method name="get_camera_list"
              c:identifier="entangle_camera_support_get_camera_list"
              glib:get-property="camera-list">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-camera-support.c"
             line="234">Get the camera list</doc>
        <source-position filename="src/frontend/entangle-camera-support.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-camera-support.c"
               line="240">the camera list or NULL</doc>
          <type name="CameraList" c:type="EntangleCameraList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="support" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-support.c"
                 line="236">the camera support widget</doc>
            <type name="CameraSupport" c:type="EntangleCameraSupport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_camera_list"
              c:identifier="entangle_camera_support_set_camera_list"
              glib:set-property="camera-list">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-camera-support.c"
             line="211">Set the camera list for the widget</doc>
        <source-position filename="src/frontend/entangle-camera-support.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="support" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-support.c"
                 line="213">the camera support widget</doc>
            <type name="CameraSupport" c:type="EntangleCameraSupport*"/>
          </instance-parameter>
          <parameter name="list"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-camera-support.c"
                 line="214">the list of cameras</doc>
            <type name="CameraList" c:type="EntangleCameraList*"/>
          </parameter>
        </parameters>
      </method>
      <property name="camera-list"
                writable="1"
                transfer-ownership="none"
                setter="set_camera_list"
                getter="get_camera_list">
        <type name="CameraList"/>
      </property>
    </class>
    <record name="CameraSupportClass"
            c:type="EntangleCameraSupportClass"
            glib:is-gtype-struct-for="CameraSupport">
      <source-position filename="src/frontend/entangle-camera-support.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <class name="ColourProfile"
           c:symbol-prefix="colour_profile"
           c:type="EntangleColourProfile"
           parent="GObject.Object"
           glib:type-name="EntangleColourProfile"
           glib:get-type="entangle_colour_profile_get_type"
           glib:type-struct="ColourProfileClass">
      <source-position filename="src/backend/entangle-colour-profile.h"
                       line="32"/>
      <constructor name="new_data"
                   c:identifier="entangle_colour_profile_new_data">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="294">Create a new colour profile initializing from @data. The @data
will not be copied, rather a reference taken, so the contents
should not be changed by the caller</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="302">the colour profile</doc>
          <type name="ColourProfile" c:type="EntangleColourProfile*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="296">the data representing the colour profile</doc>
            <array name="GLib.ByteArray" c:type="GByteArray*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_file"
                   c:identifier="entangle_colour_profile_new_file">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="278">Create a new colour profile initializing from the contents
of @filename.</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="285">the colour profile</doc>
          <type name="ColourProfile" c:type="EntangleColourProfile*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="280">the file holding the profile</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copyright"
              c:identifier="entangle_colour_profile_copyright">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="440">Get the copyright of the profile</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="446">the profile copyright</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="442">the colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="description"
              c:identifier="entangle_colour_profile_description">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="398">Get the description of the profile</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="404">the profile description</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="400">the colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filename" c:identifier="entangle_colour_profile_filename">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="355">Get the filename holding the profile on disk, if any.</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="361">the filename, or NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="357">the colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="manufacturer"
              c:identifier="entangle_colour_profile_manufacturer">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="412">Get the manufacturer of the profile</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="418">the profile manufacturer</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="414">the colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="model" c:identifier="entangle_colour_profile_model">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="426">Get the model of the profile</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="432">the profile model</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="428">the colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="data"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <array name="GLib.ByteArray">
          <type name="guint8" c:type="guint8"/>
        </array>
      </property>
      <property name="filename"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ColourProfileClass"
            c:type="EntangleColourProfileClass"
            glib:is-gtype-struct-for="ColourProfile">
      <source-position filename="src/backend/entangle-colour-profile.h"
                       line="32"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ColourProfileIntent"
                 c:type="EntangleColourProfileIntent">
      <source-position filename="src/backend/entangle-colour-profile.h"
                       line="52"/>
      <member name="perceptual"
              value="0"
              c:identifier="ENTANGLE_COLOUR_PROFILE_INTENT_PERCEPTUAL">
      </member>
      <member name="rel_colourimetric"
              value="1"
              c:identifier="ENTANGLE_COLOUR_PROFILE_INTENT_REL_COLOURIMETRIC">
      </member>
      <member name="saturation"
              value="2"
              c:identifier="ENTANGLE_COLOUR_PROFILE_INTENT_SATURATION">
      </member>
      <member name="abs_colourimetric"
              value="3"
              c:identifier="ENTANGLE_COLOUR_PROFILE_INTENT_ABS_COLOURIMETRIC">
      </member>
    </enumeration>
    <class name="ColourProfileTransform"
           c:symbol-prefix="colour_profile_transform"
           c:type="EntangleColourProfileTransform"
           parent="GObject.Object"
           glib:type-name="EntangleColourProfileTransform"
           glib:get-type="entangle_colour_profile_transform_get_type"
           glib:type-struct="ColourProfileTransformClass">
      <source-position filename="src/backend/entangle-colour-profile.h"
                       line="40"/>
      <constructor name="new"
                   c:identifier="entangle_colour_profile_transform_new">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="470">Create a colour profile transformation that is able to convert
images in the profile @src to be in the profile @dst.</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="479">the colour profile transformation</doc>
          <type name="ColourProfileTransform"
                c:type="EntangleColourProfileTransform*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="472">original colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </parameter>
          <parameter name="dst" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="473">target colour profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </parameter>
          <parameter name="intent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="474">rendering intent</doc>
            <type name="ColourProfileIntent"
                  c:type="EntangleColourProfileIntent"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="apply"
              c:identifier="entangle_colour_profile_transform_apply">
        <doc xml:space="preserve"
             filename="src/backend/entangle-colour-profile.c"
             line="494">Apply the colour profile transformation @trans to the pixbuf
data in @srcpixbuf and return a new pixbuf whose data is
in the target colour profile. The contents of @srcpixbuf will
not be altered in any way.</doc>
        <source-position filename="src/backend/entangle-colour-profile.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-colour-profile.c"
               line="504">the transformed pixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="trans" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="496">the profile transformation</doc>
            <type name="ColourProfileTransform"
                  c:type="EntangleColourProfileTransform*"/>
          </instance-parameter>
          <parameter name="srcpixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-colour-profile.c"
                 line="497">the input pixbuf</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <property name="dst-profile"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ColourProfile"/>
      </property>
      <property name="rendering-intent"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="ENTANGLE_COLOUR_PROFILE_INTENT_PERCEPTUAL">
        <type/>
      </property>
      <property name="src-profile"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ColourProfile"/>
      </property>
    </class>
    <record name="ColourProfileTransformClass"
            c:type="EntangleColourProfileTransformClass"
            glib:is-gtype-struct-for="ColourProfileTransform">
      <source-position filename="src/backend/entangle-colour-profile.h"
                       line="40"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Control"
           c:symbol-prefix="control"
           c:type="EntangleControl"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="EntangleControl"
           glib:get-type="entangle_control_get_type"
           glib:type-struct="ControlClass">
      <source-position filename="src/backend/entangle-control.h" line="38"/>
      <constructor name="new" c:identifier="entangle_control_new">
        <source-position filename="src/backend/entangle-control.h" line="41"/>
        <return-value transfer-ownership="full">
          <type name="Control" c:type="EntangleControl*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_dirty"
              c:identifier="entangle_control_get_dirty"
              glib:get-property="dirty">
        <source-position filename="src/backend/entangle-control.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="entangle_control_get_id"
              glib:get-property="id">
        <source-position filename="src/backend/entangle-control.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="entangle_control_get_info"
              glib:get-property="info">
        <source-position filename="src/backend/entangle-control.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="entangle_control_get_label"
              glib:get-property="label">
        <source-position filename="src/backend/entangle-control.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path"
              c:identifier="entangle_control_get_path"
              glib:get-property="path">
        <source-position filename="src/backend/entangle-control.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_readonly"
              c:identifier="entangle_control_get_readonly"
              glib:get-property="readonly">
        <source-position filename="src/backend/entangle-control.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_dirty" c:identifier="entangle_control_set_dirty">
        <source-position filename="src/backend/entangle-control.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
          <parameter name="dirty" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_readonly" c:identifier="entangle_control_set_readonly">
        <source-position filename="src/backend/entangle-control.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="control" transfer-ownership="none">
            <type name="Control" c:type="EntangleControl*"/>
          </instance-parameter>
          <parameter name="ro" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="dirty"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_dirty"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="info"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_info"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_label"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="path"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_path"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="readonly"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_readonly"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="ControlButton"
           c:symbol-prefix="control_button"
           c:type="EntangleControlButton"
           parent="Control"
           glib:type-name="EntangleControlButton"
           glib:get-type="entangle_control_button_get_type"
           glib:type-struct="ControlButtonClass">
      <source-position filename="src/backend/entangle-control-button.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_button_new">
        <source-position filename="src/backend/entangle-control-button.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlButton" c:type="EntangleControlButton*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="ControlButtonClass"
            c:type="EntangleControlButtonClass"
            glib:is-gtype-struct-for="ControlButton">
      <source-position filename="src/backend/entangle-control-button.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <class name="ControlChoice"
           c:symbol-prefix="control_choice"
           c:type="EntangleControlChoice"
           parent="Control"
           glib:type-name="EntangleControlChoice"
           glib:get-type="entangle_control_choice_get_type"
           glib:type-struct="ControlChoiceClass">
      <source-position filename="src/backend/entangle-control-choice.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_choice_new">
        <source-position filename="src/backend/entangle-control-choice.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlChoice" c:type="EntangleControlChoice*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_entry"
              c:identifier="entangle_control_choice_add_entry">
        <source-position filename="src/backend/entangle-control-choice.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="choice" transfer-ownership="none">
            <type name="ControlChoice" c:type="EntangleControlChoice*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_entries"
              c:identifier="entangle_control_choice_clear_entries">
        <source-position filename="src/backend/entangle-control-choice.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="choice" transfer-ownership="none">
            <type name="ControlChoice" c:type="EntangleControlChoice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="entry_count"
              c:identifier="entangle_control_choice_entry_count">
        <source-position filename="src/backend/entangle-control-choice.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="choice" transfer-ownership="none">
            <type name="ControlChoice" c:type="EntangleControlChoice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="entry_get"
              c:identifier="entangle_control_choice_entry_get">
        <source-position filename="src/backend/entangle-control-choice.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="choice" transfer-ownership="none">
            <type name="ControlChoice" c:type="EntangleControlChoice*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <property name="value"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ControlChoiceClass"
            c:type="EntangleControlChoiceClass"
            glib:is-gtype-struct-for="ControlChoice">
      <source-position filename="src/backend/entangle-control-choice.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <record name="ControlClass"
            c:type="EntangleControlClass"
            glib:is-gtype-struct-for="Control">
      <source-position filename="src/backend/entangle-control.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ControlDate"
           c:symbol-prefix="control_date"
           c:type="EntangleControlDate"
           parent="Control"
           glib:type-name="EntangleControlDate"
           glib:get-type="entangle_control_date_get_type"
           glib:type-struct="ControlDateClass">
      <source-position filename="src/backend/entangle-control-date.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_date_new">
        <source-position filename="src/backend/entangle-control-date.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlDate" c:type="EntangleControlDate*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ControlDateClass"
            c:type="EntangleControlDateClass"
            glib:is-gtype-struct-for="ControlDate">
      <source-position filename="src/backend/entangle-control-date.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <class name="ControlGroup"
           c:symbol-prefix="control_group"
           c:type="EntangleControlGroup"
           parent="Control"
           glib:type-name="EntangleControlGroup"
           glib:get-type="entangle_control_group_get_type"
           glib:type-struct="ControlGroupClass">
      <source-position filename="src/backend/entangle-control-group.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_group_new">
        <source-position filename="src/backend/entangle-control-group.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlGroup" c:type="EntangleControlGroup*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add" c:identifier="entangle_control_group_add">
        <doc xml:space="preserve"
             filename="src/backend/entangle-control-group.c"
             line="87">Adds the @control to @group</doc>
        <source-position filename="src/backend/entangle-control-group.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="89">the group to add to</doc>
            <type name="ControlGroup" c:type="EntangleControlGroup*"/>
          </instance-parameter>
          <parameter name="control" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="90">the child control to add</doc>
            <type name="Control" c:type="EntangleControl*"/>
          </parameter>
        </parameters>
      </method>
      <method name="count" c:identifier="entangle_control_group_count">
        <doc xml:space="preserve"
             filename="src/backend/entangle-control-group.c"
             line="107">Get the number of controls which are immediate
children of this group</doc>
        <source-position filename="src/backend/entangle-control-group.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-control-group.c"
               line="114">the number of child controls</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="109">the control group</doc>
            <type name="ControlGroup" c:type="EntangleControlGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="entangle_control_group_get">
        <source-position filename="src/backend/entangle-control-group.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-control-group.c"
               line="129">the control at index @idx, or NULL</doc>
          <type name="Control" c:type="EntangleControl*"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="126">the control group</doc>
            <type name="ControlGroup" c:type="EntangleControlGroup*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="127">the index of the control to fetch</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_by_path"
              c:identifier="entangle_control_group_get_by_path">
        <doc xml:space="preserve"
             filename="src/backend/entangle-control-group.c"
             line="142">Get the control which has the path @path</doc>
        <source-position filename="src/backend/entangle-control-group.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-control-group.c"
               line="149">the control with path @path, or NULL</doc>
          <type name="Control" c:type="EntangleControl*"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="144">the control group</doc>
            <type name="ControlGroup" c:type="EntangleControlGroup*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-control-group.c"
                 line="145">unique path of the control</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ControlGroupClass"
            c:type="EntangleControlGroupClass"
            glib:is-gtype-struct-for="ControlGroup">
      <source-position filename="src/backend/entangle-control-group.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <class name="ControlPanel"
           c:symbol-prefix="control_panel"
           c:type="EntangleControlPanel"
           parent="Gtk.Expander"
           glib:type-name="EntangleControlPanel"
           glib:get-type="entangle_control_panel_get_type"
           glib:type-struct="ControlPanelClass">
      <source-position filename="src/frontend/entangle-control-panel.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_control_panel_new">
        <source-position filename="src/frontend/entangle-control-panel.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="ControlPanel" c:type="EntangleControlPanel*"/>
        </return-value>
        <parameters>
          <parameter name="prefs" transfer-ownership="none">
            <type name="CameraPreferences"
                  c:type="EntangleCameraPreferences*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_camera_preferences"
              c:identifier="entangle_control_panel_get_camera_preferences">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-control-panel.c"
             line="997">Get the camera preferences whose controls are displayed</doc>
        <source-position filename="src/frontend/entangle-control-panel.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-control-panel.c"
               line="1003">the camera preferences or NULL</doc>
          <type name="CameraPreferences" c:type="EntangleCameraPreferences*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-control-panel.c"
                 line="999">the control widget</doc>
            <type name="ControlPanel" c:type="EntangleControlPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_controls"
              c:identifier="entangle_control_panel_get_has_controls"
              glib:get-property="has-controls">
        <source-position filename="src/frontend/entangle-control-panel.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <type name="ControlPanel" c:type="EntangleControlPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="camera" transfer-ownership="none">
        <type name="Camera"/>
      </property>
      <property name="camera-prefs"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="CameraPreferences"/>
      </property>
      <property name="has-controls"
                transfer-ownership="none"
                getter="get_has_controls"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ControlPanelClass"
            c:type="EntangleControlPanelClass"
            glib:is-gtype-struct-for="ControlPanel">
      <source-position filename="src/frontend/entangle-control-panel.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.ExpanderClass" c:type="GtkExpanderClass"/>
      </field>
    </record>
    <class name="ControlRange"
           c:symbol-prefix="control_range"
           c:type="EntangleControlRange"
           parent="Control"
           glib:type-name="EntangleControlRange"
           glib:get-type="entangle_control_range_get_type"
           glib:type-struct="ControlRangeClass">
      <source-position filename="src/backend/entangle-control-range.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_range_new">
        <source-position filename="src/backend/entangle-control-range.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlRange" c:type="EntangleControlRange*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_max" c:identifier="entangle_control_range_get_max">
        <source-position filename="src/backend/entangle-control-range.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <type name="ControlRange" c:type="EntangleControlRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="entangle_control_range_get_min">
        <source-position filename="src/backend/entangle-control-range.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <type name="ControlRange" c:type="EntangleControlRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_step" c:identifier="entangle_control_range_get_step">
        <source-position filename="src/backend/entangle-control-range.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <type name="ControlRange" c:type="EntangleControlRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="range-max"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="range-min"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="range-step"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="value"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="ControlRangeClass"
            c:type="EntangleControlRangeClass"
            glib:is-gtype-struct-for="ControlRange">
      <source-position filename="src/backend/entangle-control-range.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <class name="ControlText"
           c:symbol-prefix="control_text"
           c:type="EntangleControlText"
           parent="Control"
           glib:type-name="EntangleControlText"
           glib:get-type="entangle_control_text_get_type"
           glib:type-struct="ControlTextClass">
      <source-position filename="src/backend/entangle-control-text.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_text_new">
        <source-position filename="src/backend/entangle-control-text.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlText" c:type="EntangleControlText*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ControlTextClass"
            c:type="EntangleControlTextClass"
            glib:is-gtype-struct-for="ControlText">
      <source-position filename="src/backend/entangle-control-text.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <class name="ControlToggle"
           c:symbol-prefix="control_toggle"
           c:type="EntangleControlToggle"
           parent="Control"
           glib:type-name="EntangleControlToggle"
           glib:get-type="entangle_control_toggle_get_type"
           glib:type-struct="ControlToggleClass">
      <source-position filename="src/backend/entangle-control-toggle.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_control_toggle_new">
        <source-position filename="src/backend/entangle-control-toggle.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ControlToggle" c:type="EntangleControlToggle*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="value"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ControlToggleClass"
            c:type="EntangleControlToggleClass"
            glib:is-gtype-struct-for="ControlToggle">
      <source-position filename="src/backend/entangle-control-toggle.h"
                       line="31"/>
      <field name="parent_class">
        <type name="ControlClass" c:type="EntangleControlClass"/>
      </field>
    </record>
    <function-macro name="DEBUG"
                    c:identifier="ENTANGLE_DEBUG"
                    introspectable="0">
      <source-position filename="src/backend/entangle-debug.h" line="35"/>
      <parameters>
        <parameter name="fmt">
        </parameter>
        <parameter name="...">
        </parameter>
      </parameters>
    </function-macro>
    <class name="DeviceManager"
           c:symbol-prefix="device_manager"
           c:type="EntangleDeviceManager"
           parent="GObject.Object"
           glib:type-name="EntangleDeviceManager"
           glib:get-type="entangle_device_manager_get_type"
           glib:type-struct="DeviceManagerClass">
      <source-position filename="src/backend/entangle-device-manager.h"
                       line="29"/>
      <constructor name="new" c:identifier="entangle_device_manager_new">
        <source-position filename="src/backend/entangle-device-manager.h"
                         line="36"/>
        <return-value transfer-ownership="full">
          <type name="DeviceManager" c:type="EntangleDeviceManager*"/>
        </return-value>
      </constructor>
      <method name="serial_id"
              c:identifier="entangle_device_manager_serial_id">
        <source-position filename="src/backend/entangle-device-manager.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="DeviceManager" c:type="EntangleDeviceManager*"/>
          </instance-parameter>
          <parameter name="devpath" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="device-added" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DeviceManagerClass"
            c:type="EntangleDeviceManagerClass"
            glib:is-gtype-struct-for="DeviceManager">
      <source-position filename="src/backend/entangle-device-manager.h"
                       line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="HelpAbout"
           c:symbol-prefix="help_about"
           c:type="EntangleHelpAbout"
           parent="Gtk.AboutDialog"
           glib:type-name="EntangleHelpAbout"
           glib:get-type="entangle_help_about_get_type"
           glib:type-struct="HelpAboutClass">
      <source-position filename="src/frontend/entangle-help-about.h"
                       line="29"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_help_about_new">
        <source-position filename="src/frontend/entangle-help-about.h"
                         line="36"/>
        <return-value transfer-ownership="none">
          <type name="HelpAbout" c:type="EntangleHelpAbout*"/>
        </return-value>
      </constructor>
    </class>
    <record name="HelpAboutClass"
            c:type="EntangleHelpAboutClass"
            glib:is-gtype-struct-for="HelpAbout">
      <source-position filename="src/frontend/entangle-help-about.h"
                       line="29"/>
      <field name="parent_class">
        <type name="Gtk.AboutDialogClass" c:type="GtkAboutDialogClass"/>
      </field>
    </record>
    <class name="Image"
           c:symbol-prefix="image"
           c:type="EntangleImage"
           parent="Media"
           glib:type-name="EntangleImage"
           glib:get-type="entangle_image_get_type"
           glib:type-struct="ImageClass">
      <source-position filename="src/backend/entangle-image.h" line="31"/>
      <constructor name="new_file" c:identifier="entangle_image_new_file">
        <doc xml:space="preserve"
             filename="src/backend/entangle-image.c"
             line="123">Create a new image instance for the image stored in
@filename.</doc>
        <source-position filename="src/backend/entangle-image.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-image.c"
               line="130">the new image</doc>
          <type name="Image" c:type="EntangleImage*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-image.c"
                 line="125">the filename of the image</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_pixbuf" c:identifier="entangle_image_new_pixbuf">
        <doc xml:space="preserve"
             filename="src/backend/entangle-image.c"
             line="139">Create a new image instance for the image data stored
in @pixbuf</doc>
        <source-position filename="src/backend/entangle-image.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-image.c"
               line="146">the new image</doc>
          <type name="Image" c:type="EntangleImage*"/>
        </return-value>
        <parameters>
          <parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-image.c"
                 line="141">the pixbuf instance</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_pixbuf"
              c:identifier="entangle_image_get_pixbuf"
              glib:get-property="pixbuf">
        <doc xml:space="preserve"
             filename="src/backend/entangle-image.c"
             line="159">Get the pixbuf associated with the image, if it is available</doc>
        <source-position filename="src/backend/entangle-image.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-image.c"
               line="165">the image pixbuf or NULL</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-image.c"
                 line="161">the image instance</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_pixbuf"
              c:identifier="entangle_image_set_pixbuf"
              glib:set-property="pixbuf">
        <doc xml:space="preserve"
             filename="src/backend/entangle-image.c"
             line="175">Set the pixbuf associated with the image</doc>
        <source-position filename="src/backend/entangle-image.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-image.c"
                 line="177">the image instance</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </instance-parameter>
          <parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-image.c"
                 line="178">the new pixbuf</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <property name="pixbuf"
                writable="1"
                transfer-ownership="none"
                setter="set_pixbuf"
                getter="get_pixbuf">
        <type name="GdkPixbuf.Pixbuf"/>
      </property>
    </class>
    <record name="ImageClass"
            c:type="EntangleImageClass"
            glib:is-gtype-struct-for="Image">
      <source-position filename="src/backend/entangle-image.h" line="31"/>
      <field name="parent_class">
        <type name="MediaClass" c:type="EntangleMediaClass"/>
      </field>
    </record>
    <class name="ImageDisplay"
           c:symbol-prefix="image_display"
           c:type="EntangleImageDisplay"
           parent="Gtk.DrawingArea"
           glib:type-name="EntangleImageDisplay"
           glib:get-type="entangle_image_display_get_type"
           glib:type-struct="ImageDisplayClass">
      <source-position filename="src/frontend/entangle-image-display.h"
                       line="32"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_image_display_new">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
        </return-value>
      </constructor>
      <method name="get_aspect_ratio"
              c:identifier="entangle_image_display_get_aspect_ratio"
              glib:get-property="aspect-ratio">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_autoscale"
              c:identifier="entangle_image_display_get_autoscale"
              glib:get-property="autoscale">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background"
              c:identifier="entangle_image_display_get_background">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="51"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flip_horizontally"
              c:identifier="entangle_image_display_get_flip_horizontally"
              glib:get-property="flip-horizontally">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flip_vertically"
              c:identifier="entangle_image_display_get_flip_vertically"
              glib:get-property="flip-vertically">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_focus_point"
              c:identifier="entangle_image_display_get_focus_point"
              glib:get-property="focus-point">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_grid_display"
              c:identifier="entangle_image_display_get_grid_display">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="ImageDisplayGrid" c:type="EntangleImageDisplayGrid"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="entangle_image_display_get_image"
              glib:get-property="image">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-display.c"
             line="956">Retrieve the image being displayed. If there are multiple
images to be displayed, then only the first image is returned.</doc>
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-image-display.c"
               line="963">the image being displayed, or NULL</doc>
          <type name="Image" c:type="EntangleImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="958">the display widget</doc>
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_list"
              c:identifier="entangle_image_display_get_image_list">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-display.c"
             line="1022">Get the list of images being displayed</doc>
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-image-display.c"
               line="1028">the list of images</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Image"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="1024">the display widget</doc>
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_loaded"
              c:identifier="entangle_image_display_get_loaded">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mask_enabled"
              c:identifier="entangle_image_display_get_mask_enabled"
              glib:get-property="mask-enabled">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mask_opacity"
              c:identifier="entangle_image_display_get_mask_opacity"
              glib:get-property="mask-opacity">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_overexposure_highlighting"
              c:identifier="entangle_image_display_get_overexposure_highlighting"
              glib:get-property="overexposure-highlighting">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scale"
              c:identifier="entangle_image_display_get_scale"
              glib:get-property="scale">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_overlay"
              c:identifier="entangle_image_display_get_text_overlay">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_aspect_ratio"
              c:identifier="entangle_image_display_set_aspect_ratio"
              glib:set-property="aspect-ratio">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="aspect" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoscale"
              c:identifier="entangle_image_display_set_autoscale"
              glib:set-property="autoscale">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="displsy" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="autoscale" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background"
              c:identifier="entangle_image_display_set_background">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="background" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flip_horizontally"
              c:identifier="entangle_image_display_set_flip_horizontally"
              glib:set-property="flip-horizontally">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flip_vertically"
              c:identifier="entangle_image_display_set_flip_vertically"
              glib:set-property="flip-vertically">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_focus_point"
              c:identifier="entangle_image_display_set_focus_point"
              glib:set-property="focus-point">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_grid_display"
              c:identifier="entangle_image_display_set_grid_display">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="ImageDisplayGrid" c:type="EntangleImageDisplayGrid"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image"
              c:identifier="entangle_image_display_set_image"
              glib:set-property="image">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-display.c"
             line="932">Set the image to be displayed by the widget. This is a
shortcut for setting an image list of length 1.</doc>
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="934">the display widget</doc>
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="935">the image to display, or NULL</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_list"
              c:identifier="entangle_image_display_set_image_list">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-display.c"
             line="976">Set the list of images to be displayed. If multiple images
are provided they are overlayed with opacity</doc>
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="978">the display widget</doc>
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="images" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="979">the images to display</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Image"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_mask_enabled"
              c:identifier="entangle_image_display_set_mask_enabled"
              glib:set-property="mask-enabled">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mask_opacity"
              c:identifier="entangle_image_display_set_mask_opacity"
              glib:set-property="mask-opacity">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_overexposure_highlighting"
              c:identifier="entangle_image_display_set_overexposure_highlighting"
              glib:set-property="overexposure-highlighting">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale"
              c:identifier="entangle_image_display_set_scale"
              glib:set-property="scale">
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_overlay"
              c:identifier="entangle_image_display_set_text_overlay">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-display.c"
             line="1268">Set a message to render over the top of the image</doc>
        <source-position filename="src/frontend/entangle-image-display.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="1270">the display</doc>
            <type name="ImageDisplay" c:type="EntangleImageDisplay*"/>
          </instance-parameter>
          <parameter name="msg"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-display.c"
                 line="1271">the message to display, or NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="aspect-ratio"
                writable="1"
                transfer-ownership="none"
                setter="set_aspect_ratio"
                getter="get_aspect_ratio"
                default-value="1.690000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="autoscale"
                writable="1"
                transfer-ownership="none"
                setter="set_autoscale"
                getter="get_autoscale"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="flip-horizontally"
                writable="1"
                transfer-ownership="none"
                setter="set_flip_horizontally"
                getter="get_flip_horizontally"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="flip-vertically"
                writable="1"
                transfer-ownership="none"
                setter="set_flip_vertically"
                getter="get_flip_vertically"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="focus-point"
                writable="1"
                transfer-ownership="none"
                setter="set_focus_point"
                getter="get_focus_point"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="grid-display"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="ENTANGLE_IMAGE_DISPLAY_GRID_NONE">
        <type/>
      </property>
      <property name="image"
                writable="1"
                transfer-ownership="none"
                setter="set_image"
                getter="get_image">
        <type name="Image"/>
      </property>
      <property name="mask-enabled"
                writable="1"
                transfer-ownership="none"
                setter="set_mask_enabled"
                getter="get_mask_enabled"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mask-opacity"
                writable="1"
                transfer-ownership="none"
                setter="set_mask_opacity"
                getter="get_mask_opacity"
                default-value="0.500000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="overexposure-highlighting"
                writable="1"
                transfer-ownership="none"
                setter="set_overexposure_highlighting"
                getter="get_overexposure_highlighting"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="scale"
                writable="1"
                transfer-ownership="none"
                setter="set_scale"
                getter="get_scale"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="ImageDisplayClass"
            c:type="EntangleImageDisplayClass"
            glib:is-gtype-struct-for="ImageDisplay">
      <source-position filename="src/frontend/entangle-image-display.h"
                       line="32"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <enumeration name="ImageDisplayGrid" c:type="EntangleImageDisplayGrid">
      <source-position filename="src/frontend/entangle-image-display.h"
                       line="125"/>
      <member name="none"
              value="0"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_NONE">
      </member>
      <member name="center_lines"
              value="1"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_CENTER_LINES">
      </member>
      <member name="rule_of_3rds"
              value="2"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_RULE_OF_3RDS">
      </member>
      <member name="quarters"
              value="3"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_QUARTERS">
      </member>
      <member name="rule_of_5ths"
              value="4"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_RULE_OF_5THS">
      </member>
      <member name="golden_sections"
              value="5"
              c:identifier="ENTANGLE_IMAGE_DISPLAY_GRID_GOLDEN_SECTIONS">
      </member>
    </enumeration>
    <class name="ImageHistogram"
           c:symbol-prefix="image_histogram"
           c:type="EntangleImageHistogram"
           parent="Gtk.DrawingArea"
           glib:type-name="EntangleImageHistogram"
           glib:get-type="entangle_image_histogram_get_type"
           glib:type-struct="ImageHistogramClass">
      <source-position filename="src/frontend/entangle-image-histogram.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_image_histogram_new">
        <source-position filename="src/frontend/entangle-image-histogram.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="ImageHistogram" c:type="EntangleImageHistogram*"/>
        </return-value>
      </constructor>
      <method name="get_histogram_linear"
              c:identifier="entangle_image_histogram_get_histogram_linear">
        <source-position filename="src/frontend/entangle-image-histogram.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="histogram" transfer-ownership="none">
            <type name="ImageHistogram" c:type="EntangleImageHistogram*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="entangle_image_histogram_get_image"
              glib:get-property="image">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-histogram.c"
             line="399">Retrieve the image that the histogram is displayed for</doc>
        <source-position filename="src/frontend/entangle-image-histogram.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-image-histogram.c"
               line="405">the image displayed</doc>
          <type name="Image" c:type="EntangleImage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="histogram" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-histogram.c"
                 line="401">the histogram widget</doc>
            <type name="ImageHistogram" c:type="EntangleImageHistogram*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_histogram_linear"
              c:identifier="entangle_image_histogram_set_histogram_linear">
        <source-position filename="src/frontend/entangle-image-histogram.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="histogram" transfer-ownership="none">
            <type name="ImageHistogram" c:type="EntangleImageHistogram*"/>
          </instance-parameter>
          <parameter name="linear" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image"
              c:identifier="entangle_image_histogram_set_image"
              glib:set-property="image">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-image-histogram.c"
             line="365">Set the image to display the histogram for</doc>
        <source-position filename="src/frontend/entangle-image-histogram.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="histogram" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-histogram.c"
                 line="367">the histogram widget</doc>
            <type name="ImageHistogram" c:type="EntangleImageHistogram*"/>
          </instance-parameter>
          <parameter name="image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-image-histogram.c"
                 line="368">the image to display histogram for, or
NULL</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <property name="image"
                writable="1"
                transfer-ownership="none"
                setter="set_image"
                getter="get_image">
        <type name="Image"/>
      </property>
    </class>
    <record name="ImageHistogramClass"
            c:type="EntangleImageHistogramClass"
            glib:is-gtype-struct-for="ImageHistogram">
      <source-position filename="src/frontend/entangle-image-histogram.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <class name="ImageLoader"
           c:symbol-prefix="image_loader"
           c:type="EntangleImageLoader"
           parent="PixbufLoader"
           glib:type-name="EntangleImageLoader"
           glib:get-type="entangle_image_loader_get_type"
           glib:type-struct="ImageLoaderClass">
      <source-position filename="src/backend/entangle-image-loader.h"
                       line="30"/>
      <constructor name="new" c:identifier="entangle_image_loader_new">
        <source-position filename="src/backend/entangle-image-loader.h"
                         line="37"/>
        <return-value transfer-ownership="full">
          <type name="ImageLoader" c:type="EntangleImageLoader*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="entangle_image_loader_add">
        <source-position filename="src/backend/entangle-image-loader.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="ImageLoader" c:type="EntangleImageLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_embedded_preview"
              c:identifier="entangle_image_loader_get_embedded_preview"
              glib:get-property="embedded-preview">
        <source-position filename="src/backend/entangle-image-loader.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="ImageLoader" c:type="EntangleImageLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="entangle_image_loader_remove">
        <source-position filename="src/backend/entangle-image-loader.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="ImageLoader" c:type="EntangleImageLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_embedded_preview"
              c:identifier="entangle_image_loader_set_embedded_preview">
        <source-position filename="src/backend/entangle-image-loader.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="ImageLoader" c:type="EntangleImageLoader*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="embedded-preview"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_embedded_preview"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ImageLoaderClass"
            c:type="EntangleImageLoaderClass"
            glib:is-gtype-struct-for="ImageLoader">
      <source-position filename="src/backend/entangle-image-loader.h"
                       line="30"/>
      <field name="parent_class">
        <type name="PixbufLoaderClass" c:type="EntanglePixbufLoaderClass"/>
      </field>
    </record>
    <class name="Media"
           c:symbol-prefix="media"
           c:type="EntangleMedia"
           parent="GObject.Object"
           glib:type-name="EntangleMedia"
           glib:get-type="entangle_media_get_type"
           glib:type-struct="MediaClass">
      <source-position filename="src/backend/entangle-media.h" line="45"/>
      <method name="delete" c:identifier="entangle_media_delete" throws="1">
        <source-position filename="src/backend/entangle-media.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_size" c:identifier="entangle_media_get_file_size">
        <doc xml:space="preserve"
             filename="src/backend/entangle-media.c"
             line="214">Get the size of the media on disk, if it is backed by
a file on disk</doc>
        <source-position filename="src/backend/entangle-media.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-media.c"
               line="221">the size in bytes, or 0</doc>
          <type name="off_t" c:type="off_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="216">the media instance</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="entangle_media_get_filename"
              glib:get-property="filename">
        <doc xml:space="preserve"
             filename="src/backend/entangle-media.c"
             line="158">Get the filename associated with the media, if it has one.</doc>
        <source-position filename="src/backend/entangle-media.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-media.c"
               line="164">the filename or NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="160">the media instance</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_modified"
              c:identifier="entangle_media_get_last_modified">
        <doc xml:space="preserve"
             filename="src/backend/entangle-media.c"
             line="192">Get the time at which the media was last modified, if
it is backed by a file on disk</doc>
        <source-position filename="src/backend/entangle-media.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-media.c"
               line="199">the last modification time in seconds since epoch, or 0</doc>
          <type name="time_t" c:type="time_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="194">the media instance</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="entangle_media_get_metadata"
              glib:get-property="metadata">
        <doc xml:space="preserve"
             filename="src/backend/entangle-media.c"
             line="255">Get the metadata associated with the media, if it is available</doc>
        <source-position filename="src/backend/entangle-media.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-media.c"
               line="261">the media metadata or NULL</doc>
          <type name="GExiv2.Metadata" c:type="GExiv2Metadata*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="257">the media instance</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_metadata"
              c:identifier="entangle_media_set_metadata"
              glib:set-property="metadata">
        <doc xml:space="preserve"
             filename="src/backend/entangle-media.c"
             line="272">Set the metadata associated with the media</doc>
        <source-position filename="src/backend/entangle-media.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="274">the media instance</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </instance-parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-media.c"
                 line="275">the new metadata</doc>
            <type name="GExiv2.Metadata" c:type="GExiv2Metadata*"/>
          </parameter>
        </parameters>
      </method>
      <property name="filename"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_filename"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="metadata"
                writable="1"
                transfer-ownership="none"
                setter="set_metadata"
                getter="get_metadata">
        <type name="GExiv2.Metadata"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="MediaClass"
            c:type="EntangleMediaClass"
            glib:is-gtype-struct-for="Media">
      <source-position filename="src/backend/entangle-media.h" line="45"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="MediaPopup"
           c:symbol-prefix="media_popup"
           c:type="EntangleMediaPopup"
           parent="Gtk.Window"
           glib:type-name="EntangleMediaPopup"
           glib:get-type="entangle_media_popup_get_type"
           glib:type-struct="MediaPopupClass">
      <source-position filename="src/frontend/entangle-media-popup.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_media_popup_new">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
        </return-value>
      </constructor>
      <method name="get_background"
              c:identifier="entangle_media_popup_get_background">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media"
              c:identifier="entangle_media_popup_get_media"
              glib:get-property="media">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-media-popup.c"
             line="318">Retrieve the media that the popup is currently displaying</doc>
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-media-popup.c"
               line="324">the media displayed</doc>
          <type name="Media" c:type="EntangleMedia*"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-popup.c"
                 line="320">the popup widget</doc>
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_to_monitor"
              c:identifier="entangle_media_popup_move_to_monitor">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
          <parameter name="monitor" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background"
              c:identifier="entangle_media_popup_set_background">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
          <parameter name="background" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_media"
              c:identifier="entangle_media_popup_set_media"
              glib:set-property="media">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-media-popup.c"
             line="302">Set the media to be displayed by the popup</doc>
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-popup.c"
                 line="304">the popup widget</doc>
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
          <parameter name="media"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-popup.c"
                 line="305">the media to display, or NULL</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="entangle_media_popup_show">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_on_monitor"
              c:identifier="entangle_media_popup_show_on_monitor">
        <source-position filename="src/frontend/entangle-media-popup.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="popup" transfer-ownership="none">
            <type name="MediaPopup" c:type="EntangleMediaPopup*"/>
          </instance-parameter>
          <parameter name="monitor" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="media"
                writable="1"
                transfer-ownership="none"
                setter="set_media"
                getter="get_media">
        <type name="Media"/>
      </property>
      <glib:signal name="popup-close" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="MediaPopupClass"
            c:type="EntangleMediaPopupClass"
            glib:is-gtype-struct-for="MediaPopup">
      <source-position filename="src/frontend/entangle-media-popup.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
    </record>
    <class name="MediaStatusbar"
           c:symbol-prefix="media_statusbar"
           c:type="EntangleMediaStatusbar"
           parent="Gtk.Box"
           glib:type-name="EntangleMediaStatusbar"
           glib:get-type="entangle_media_statusbar_get_type"
           glib:type-struct="MediaStatusbarClass">
      <source-position filename="src/frontend/entangle-media-statusbar.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="entangle_media_statusbar_new">
        <source-position filename="src/frontend/entangle-media-statusbar.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="MediaStatusbar" c:type="EntangleMediaStatusbar*"/>
        </return-value>
      </constructor>
      <method name="get_media"
              c:identifier="entangle_media_statusbar_get_media"
              glib:get-property="media">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-media-statusbar.c"
             line="305">Retrieve the media that status is currently displayed for</doc>
        <source-position filename="src/frontend/entangle-media-statusbar.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-media-statusbar.c"
               line="311">the media displayed</doc>
          <type name="Media" c:type="EntangleMedia*"/>
        </return-value>
        <parameters>
          <instance-parameter name="statusbar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-statusbar.c"
                 line="307">the status bar widget</doc>
            <type name="MediaStatusbar" c:type="EntangleMediaStatusbar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_media"
              c:identifier="entangle_media_statusbar_set_media"
              glib:set-property="media">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-media-statusbar.c"
             line="274">Set the media to display status information for</doc>
        <source-position filename="src/frontend/entangle-media-statusbar.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="statusbar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-statusbar.c"
                 line="276">the status bar widget</doc>
            <type name="MediaStatusbar" c:type="EntangleMediaStatusbar*"/>
          </instance-parameter>
          <parameter name="media"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-media-statusbar.c"
                 line="277">the media to display status for, or NULL</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </parameter>
        </parameters>
      </method>
      <property name="media"
                writable="1"
                transfer-ownership="none"
                setter="set_media"
                getter="get_media">
        <type name="Media"/>
      </property>
    </class>
    <record name="MediaStatusbarClass"
            c:type="EntangleMediaStatusbarClass"
            glib:is-gtype-struct-for="MediaStatusbar">
      <source-position filename="src/frontend/entangle-media-statusbar.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <enumeration name="PixbufImageSlot" c:type="EntanglePixbufImageSlot">
      <source-position filename="src/backend/entangle-pixbuf.h" line="39"/>
      <member name="master"
              value="0"
              c:identifier="ENTANGLE_PIXBUF_IMAGE_SLOT_MASTER">
      </member>
      <member name="preview"
              value="1"
              c:identifier="ENTANGLE_PIXBUF_IMAGE_SLOT_PREVIEW">
      </member>
      <member name="thumbnail"
              value="2"
              c:identifier="ENTANGLE_PIXBUF_IMAGE_SLOT_THUMBNAIL">
      </member>
    </enumeration>
    <class name="PixbufLoader"
           c:symbol-prefix="pixbuf_loader"
           c:type="EntanglePixbufLoader"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="EntanglePixbufLoader"
           glib:get-type="entangle_pixbuf_loader_get_type"
           glib:type-struct="PixbufLoaderClass">
      <source-position filename="src/backend/entangle-pixbuf-loader.h"
                       line="49"/>
      <virtual-method name="pixbuf_load" introspectable="0">
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="46"/>
        <return-value>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
          <parameter name="metadata" transfer-ownership="none">
            <type name="GExiv2.Metadata" c:type="GExiv2Metadata**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_colour_transform"
              c:identifier="entangle_pixbuf_loader_get_colour_transform"
              glib:get-property="colour-transform">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="667">Get the colour transform that will be applied when loading
images</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="77"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="674">the colour profile transform</doc>
          <type name="ColourProfileTransform"
                c:type="EntangleColourProfileTransform*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="669">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="entangle_pixbuf_loader_get_metadata">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="501">Get the loaded metadata for @image, if any. If this is
called before the 'metadata-loaded' signal is emitted
then it will likely return NULL.</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="58"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="510">the metadata</doc>
          <type name="GExiv2.Metadata" c:type="GExiv2Metadata*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="503">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="504">the camera image</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pixbuf"
              c:identifier="entangle_pixbuf_loader_get_pixbuf">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="466">Get the loaded pixbuf for @image, if any. If this is
called before the 'pixbuf-loaded' signal is emitted
then it will likely return NULL.</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="55"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="475">the pixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="468">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="469">the camera image</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_workers"
              c:identifier="entangle_pixbuf_loader_get_workers"
              glib:get-property="workers">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="705">Get the number of worker threads associated with the loader</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="711">the maximum number of worker threads</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="707">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_ready" c:identifier="entangle_pixbuf_loader_is_ready">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="429">Determine if the image has completed loading. Normally it is
better to wait for the 'pixbuf-loaded' or 'metadata-loaded'
signals than to use this method. The return value of this
method may be out of date if another thread concurrently
requests unload of the image</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="440">a true value if the image is currently loaded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="431">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="432">the camera image</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="entangle_pixbuf_loader_load">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="536">Request that @loader have its pixbuf and metadata loaded.
The loading of the data may take place asynchronously
and the 'pixbuf-loaded' and 'metadata-loaded' signals
will be emitted when completed.</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="546">a true value if the image was queued for loading</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="538">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="539">the camera image</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_colour_transform"
              c:identifier="entangle_pixbuf_loader_set_colour_transform"
              glib:set-property="colour-transform">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="637">Set the colour profile transform that will be applied when
loading images. This will trigger a mass-reload of all
existing images to update their colour profile</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="639">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="640">the new colour profile transform</doc>
            <type name="ColourProfileTransform"
                  c:type="EntangleColourProfileTransform*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_workers"
              c:identifier="entangle_pixbuf_loader_set_workers">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="687">Set the maximum number of worker threads for the pixbuf loader</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="689">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="690">the new limit on workers</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="trigger_reload"
              c:identifier="entangle_pixbuf_loader_trigger_reload">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="200">Request a mass reload of the data associated with all
images</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="202">the image loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unload" c:identifier="entangle_pixbuf_loader_unload">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf-loader.c"
             line="587">Indicate that @image is no longer required and can have its
pixbuf / metadata unloaded. The unloading of the data may
take place asynchronously and the 'pixbuf-unloaded' and
'metadata-unloaded' signals will be emitted when completed.</doc>
        <source-position filename="src/backend/entangle-pixbuf-loader.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf-loader.c"
               line="597">a true value if the image was unloaded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="589">the pixbuf loader</doc>
            <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-pixbuf-loader.c"
                 line="590">the camera image</doc>
            <type name="Image" c:type="EntangleImage*"/>
          </parameter>
        </parameters>
      </method>
      <property name="colour-transform"
                writable="1"
                transfer-ownership="none"
                setter="set_colour_transform"
                getter="get_colour_transform">
        <type name="ColourProfileTransform"/>
      </property>
      <property name="with-metadata"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="workers"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_workers"
                default-value="1">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="metadata-loaded" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Image"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="metadata-unloaded" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Image"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pixbuf-loaded" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Image"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pixbuf-unloaded" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Image"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PixbufLoaderClass"
            c:type="EntanglePixbufLoaderClass"
            glib:is-gtype-struct-for="PixbufLoader">
      <source-position filename="src/backend/entangle-pixbuf-loader.h"
                       line="49"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="pixbuf_load" introspectable="0">
        <callback name="pixbuf_load" introspectable="0">
          <source-position filename="src/backend/entangle-pixbuf-loader.h"
                           line="46"/>
          <return-value>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </return-value>
          <parameters>
            <parameter name="loader" transfer-ownership="none">
              <type name="PixbufLoader" c:type="EntanglePixbufLoader*"/>
            </parameter>
            <parameter name="image" transfer-ownership="none">
              <type name="Image" c:type="EntangleImage*"/>
            </parameter>
            <parameter name="metadata" transfer-ownership="none">
              <type name="GExiv2.Metadata" c:type="GExiv2Metadata**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Preferences"
           c:symbol-prefix="preferences"
           c:type="EntanglePreferences"
           parent="GObject.Object"
           glib:type-name="EntanglePreferences"
           glib:get-type="entangle_preferences_get_type"
           glib:type-struct="PreferencesClass">
      <source-position filename="src/frontend/entangle-preferences.h"
                       line="32"/>
      <constructor name="new" c:identifier="entangle_preferences_new">
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <type name="Preferences" c:type="EntanglePreferences*"/>
        </return-value>
      </constructor>
      <function name="ensure_girepository_dir"
                c:identifier="entangle_preferences_ensure_girepository_dir">
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="ensure_gsettings_dir"
                c:identifier="entangle_preferences_ensure_gsettings_dir">
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <method name="capture_get_continuous_preview"
              c:identifier="entangle_preferences_capture_get_continuous_preview">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1121">Determine if the preview mode will continue to operate after each
image is captured.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1128">TRUE if preview mode will continue after capture, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1123">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_get_delete_file"
              c:identifier="entangle_preferences_capture_get_delete_file">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1197">Determine if the file will be deleted from the camera after it
has been downloaded.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1204">TRUE if the files will be deleted after download</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1199">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_get_electronic_shutter"
              c:identifier="entangle_preferences_capture_get_electronic_shutter">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1158">Determines if the capture event will use the next preview output as
capture image, instead of triggering a normal capture, with shutter
mechanically moving.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1166">TRUE if no mechanical shutter action occurs on a capture, FALSE
otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1160">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_get_filename_pattern"
              c:identifier="entangle_preferences_capture_get_filename_pattern">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1082">Get the filename pattern to use for naming images that
are saved after download. In the pattern any repeated
sequence of 'X' characters will be replaced with the
image sequence number</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1091">the filename pattern.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1084">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_get_last_session"
              c:identifier="entangle_preferences_capture_get_last_session">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1038">Get the most recently used directory for the
image session</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1045">the session directory</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1040">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_get_sync_clock"
              c:identifier="entangle_preferences_capture_get_sync_clock">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1234">Determines if the camera clock will be automatically synchronized
to the host computer clock when first connecting</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1241">TRUE if the clock will synchronized, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1236">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="capture_set_continuous_preview"
              c:identifier="entangle_preferences_capture_set_continuous_preview">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1139">If @enabled is set to TRUE, then the preview mode will
continue to run after each image is captured</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1141">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1142">TRUE to make preview mode continue after capture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_set_delete_file"
              c:identifier="entangle_preferences_capture_set_delete_file">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1215">If @enabled is set to TRUE, then files will be deleted from the
camera after they are downloaded.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1217">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1218">TRUE if files should be deleted from camera after capture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_set_electronic_shutter"
              c:identifier="entangle_preferences_capture_set_electronic_shutter">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1178">If @enabled is TRUE, then the camera shutter will not be activated
when capturing an image.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1180">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1181">TRUE if no mechanical shutter action should occur on capture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_set_filename_pattern"
              c:identifier="entangle_preferences_capture_set_filename_pattern">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1102">Set the pattern to use for naming images that are
saved after download.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1104">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="pattern" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1105">the filename pattern</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_set_last_session"
              c:identifier="entangle_preferences_capture_set_last_session">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1063">Record @dir as being the most recently used session
directory</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1065">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1066">the new session</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_set_sync_clock"
              c:identifier="entangle_preferences_capture_set_sync_clock">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1252">If @enabled is TRUE, then the camera clock will be synchronized to
the host computer clock when first connecting</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1254">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1255">TRUE if the clock should be synchronized</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="cms_get_detect_system_profile"
              c:identifier="entangle_preferences_cms_get_detect_system_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1387">Determine if the monitor profile will be automatically
detected, which is usually preferrable since
it copes with multiple monitor scenarios</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1389">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="cms_get_enabled"
              c:identifier="entangle_preferences_cms_get_enabled">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1352">Determine if images should be displayed with colour management
applied</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1359">TRUE if colour management is active</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1354">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="cms_get_monitor_profile"
              c:identifier="entangle_preferences_cms_get_monitor_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1311">Get the profile associated with the display, if any.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1317">the colour profile</doc>
          <type name="ColourProfile" c:type="EntangleColourProfile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1313">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="cms_get_rendering_intent"
              c:identifier="entangle_preferences_cms_get_rendering_intent">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1423">Determine the rendering intent for displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1429">the image rendering intent</doc>
          <type name="ColourProfileIntent"
                c:type="EntangleColourProfileIntent"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1425">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="cms_get_rgb_profile"
              c:identifier="entangle_preferences_cms_get_rgb_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1271">Get the colour profile that represents the RGB working space</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1277">the colour space</doc>
          <type name="ColourProfile" c:type="EntangleColourProfile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1273">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="cms_set_detect_system_profile"
              c:identifier="entangle_preferences_cms_set_detect_system_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1404">If @enabled is TRUE then the monitor profile will be
automatically detected</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1406">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1407">TRUE to automatically detect the monitor profile</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="cms_set_enabled"
              c:identifier="entangle_preferences_cms_set_enabled">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1369">If @enabled is TRUE, colour management will be applied when
displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1371">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1372">TRUE to enable colour management</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="cms_set_monitor_profile"
              c:identifier="entangle_preferences_cms_set_monitor_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1332">If @prof is not NULL, it will be used as the current monitor
profile. This is only honoured if automatic detection of
the monitor profile is disabled.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1334">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="prof"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1335">the new monitor profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cms_set_rendering_intent"
              c:identifier="entangle_preferences_cms_set_rendering_intent">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1440">Set the rendering intent for displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1442">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="intent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1443">the new rendering intent</doc>
            <type name="ColourProfileIntent"
                  c:type="EntangleColourProfileIntent"/>
          </parameter>
        </parameters>
      </method>
      <method name="cms_set_rgb_profile"
              c:identifier="entangle_preferences_cms_set_rgb_profile">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1293">Set the colour profile that represents the RGB working space</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1295">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="prof"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1296">the new rgb profile</doc>
            <type name="ColourProfile" c:type="EntangleColourProfile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_get_aspect_ratio"
              c:identifier="entangle_preferences_img_get_aspect_ratio">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1459">Get the aspect ratio for any mask to apply to the image</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="124"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1465">the aspect ratio for the mask</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1461">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_background"
              c:identifier="entangle_preferences_img_get_background">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1846">Get the colour used as the background when displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="181"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1852">the background colour</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1848">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_embedded_preview"
              c:identifier="entangle_preferences_img_get_embedded_preview">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1739">Determine whether to use the embedded preview from files
for thumbnails.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1746">TRUE if embedded preview should be used</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1741">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_flip_horizontally"
              c:identifier="entangle_preferences_img_get_flip_horizontally">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1635">Determine if the image display should be flipped horizontally</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1641">TRUE if image display should be flipped horizontally</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1637">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_flip_vertically"
              c:identifier="entangle_preferences_img_get_flip_vertically">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1600">Determine if the image display should be flipped vertically</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1606">TRUE if image display should be flipped vertically</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1602">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_focus_point"
              c:identifier="entangle_preferences_img_get_focus_point">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1670">Determine if the center focus point should be displayed in
preview mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1677">TRUE if a focus point is to be rendered</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1672">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_grid_lines"
              c:identifier="entangle_preferences_img_get_grid_lines">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1706">Determine what grid lines to display in preview mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1712">the grid lines to display</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1708">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_highlight"
              c:identifier="entangle_preferences_img_get_highlight">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1879">Get the colour to use when highlighting images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="186"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1885">the highlight colour</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1881">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_mask_enabled"
              c:identifier="entangle_preferences_img_get_mask_enabled">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1525">Determine if an aspect ratio mask to be applied to the
image display</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1532">TRUE if an aspect ratio mask should be applied</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1527">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_mask_opacity"
              c:identifier="entangle_preferences_img_get_mask_opacity">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1492">Get the opacity of any mask to apply to the image</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1498">the opacity between 0 and 100</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1494">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_onion_layers"
              c:identifier="entangle_preferences_img_get_onion_layers">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1777">Determine how many images to overlay in onion skinning mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1783">the number of image overlays</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1779">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_onion_skin"
              c:identifier="entangle_preferences_img_get_onion_skin">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1811">Determine if onion skinning should be used when displaying
images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1818">TRUE if onion skinning is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1813">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_get_overexposure_highlighting"
              c:identifier="entangle_preferences_img_get_overexposure_highlighting">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1561">Determine if areas of overexposure should be highlighted on
the image display</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="1568">TRUE if overexposure should be highlighted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1563">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="img_set_aspect_ratio"
              c:identifier="entangle_preferences_img_set_aspect_ratio">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1475">Set the aspect ratio for any mask to apply to the image</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1477">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="aspect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1478">the new aspect ratio</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_background"
              c:identifier="entangle_preferences_img_set_background">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1862">Set the colour used as the background when displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1864">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="bkg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1865">the background colour</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_embedded_preview"
              c:identifier="entangle_preferences_img_set_embedded_preview">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1757">If @enabled is TRUE, any embedded preview will be used
when generating thumbnails rather than loading the full
resolution image</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1759">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1760">TRUE to use the embedded preview</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_flip_horizontally"
              c:identifier="entangle_preferences_img_set_flip_horizontally">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1652">If @enabled is TRUE the image display will be flipped horizontally</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1654">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1655">TRUE to flip horizontally</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_flip_vertically"
              c:identifier="entangle_preferences_img_set_flip_vertically">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1617">If @enabled is TRUE the image display will be flipped vertically</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1619">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1620">TRUE to flip vertically</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_focus_point"
              c:identifier="entangle_preferences_img_set_focus_point">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1687">If @enabled is TRUE then a focus point will be display in
preview mode.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1689">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1690">TRUE to render a focus point</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_grid_lines"
              c:identifier="entangle_preferences_img_set_grid_lines">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1722">Set the grid lines to display when in image preview mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1724">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="gridLines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1725">the grid lines to display</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_highlight"
              c:identifier="entangle_preferences_img_set_highlight">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1895">Set the colour to use when highlighting images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1897">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="bkg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1898">the highlight colour</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_mask_enabled"
              c:identifier="entangle_preferences_img_set_mask_enabled">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1542">If @enabled is TRUE an aspect ratio mask will be applied
to the image display</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1544">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1545">TRUE to apply an aspect ratio mask</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_mask_opacity"
              c:identifier="entangle_preferences_img_set_mask_opacity">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1508">Set the opacity to use when rendering the image mask</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1510">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1511">the opacity of the mask between 0 and 100</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_onion_layers"
              c:identifier="entangle_preferences_img_set_onion_layers">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1793">Set the number of images to overlay when in onion skinning
mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1795">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="layers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1796">the number of image overlays</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_onion_skin"
              c:identifier="entangle_preferences_img_set_onion_skin">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1828">If @enabled is TRUE then onion skinning will be enabled
when displaying images</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1830">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1831">TRUE to enable onion skinning</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="img_set_overexposure_highlighting"
              c:identifier="entangle_preferences_img_set_overexposure_highlighting">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1580">If @enabled is TRUE areas of overexposure will be highlighted on
the image display</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1582">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1583">TRUE to highlight overeposure</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="interface_add_plugin"
              c:identifier="entangle_preferences_interface_add_plugin">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="972">Add the plugin called @name to the active list</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="974">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="975">the plugin to add</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="interface_get_auto_connect"
              c:identifier="entangle_preferences_interface_get_auto_connect">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="841">Determine whether the application will attempt to automatically
connect to cameras at startup</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="848">TRUE if cameras will be automatically connected, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="843">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="interface_get_histogram_linear"
              c:identifier="entangle_preferences_interface_get_histogram_linear">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="916">Determine if the histogram will be displayed in
linear or logarithmic mode</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="923">TRUE if the histogram is linear, FALSE for logarithmic</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="918">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="interface_get_plugins"
              c:identifier="entangle_preferences_interface_get_plugins">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="953">Get the names of the plugins that are enabled for the
application</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="960">the list of plugin names,
NULL terminated</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="955">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="interface_get_screen_blank"
              c:identifier="entangle_preferences_interface_get_screen_blank">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="878">Determine if the screen wil be blanked prior to capturing
the image</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-preferences.c"
               line="885">TRUE if the screen will blank at time of capture</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="880">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="interface_remove_plugin"
              c:identifier="entangle_preferences_interface_remove_plugin">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="1005">Remove the plugin called @name from the active list</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1007">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="1008">the plugin to remove</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="interface_set_auto_connect"
              c:identifier="entangle_preferences_interface_set_auto_connect">
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="autoconn" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="interface_set_histogram_linear"
              c:identifier="entangle_preferences_interface_set_histogram_linear">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="934">If @enabled is TRUE then the histogram will be displayed in
linear mode, otherwise logarithmic mode will be used</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="936">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="937">TRUE to set the histogram to linear mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="interface_set_screen_blank"
              c:identifier="entangle_preferences_interface_set_screen_blank">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-preferences.c"
             line="896">If @blank is set to TRUE, the screen will be blanked
during capture to avoid light from the screen influencing
the scene being shot.</doc>
        <source-position filename="src/frontend/entangle-preferences.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prefs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="898">the preferences store</doc>
            <type name="Preferences" c:type="EntanglePreferences*"/>
          </instance-parameter>
          <parameter name="blank" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-preferences.c"
                 line="899">TRUE to make the screen blank during capture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="capture-continuous-preview"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="capture-delete-file"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="capture-electronic-shutter"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="capture-filename-pattern"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="capture-last-session"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="capture-sync-clock"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="cms-detect-system-profile"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="cms-enabled"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="cms-monitor-profile"
                writable="1"
                transfer-ownership="none">
        <type name="ColourProfile"/>
      </property>
      <property name="cms-rendering-intent"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="ENTANGLE_COLOUR_PROFILE_INTENT_PERCEPTUAL">
        <type/>
      </property>
      <property name="cms-rgb-profile" writable="1" transfer-ownership="none">
        <type name="ColourProfile"/>
      </property>
      <property name="img-aspect-ratio"
                writable="1"
                transfer-ownership="none"
                default-value="1.33">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="img-background"
                writable="1"
                transfer-ownership="none"
                default-value="#000000">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="img-embedded-preview"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-flip-horizontally"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-flip-vertically"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-focus-point"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-grid-lines"
                writable="1"
                transfer-ownership="none"
                default-value="4">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="img-highlight"
                writable="1"
                transfer-ownership="none"
                default-value="#FFFFFF">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="img-mask-enabled"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-mask-opacity"
                writable="1"
                transfer-ownership="none"
                default-value="90">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="img-onion-layers"
                writable="1"
                transfer-ownership="none"
                default-value="3">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="img-onion-skin"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="img-overexposure-highlighting"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interface-auto-connect"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interface-histogram-linear"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interface-screen-blank"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="PreferencesClass"
            c:type="EntanglePreferencesClass"
            glib:is-gtype-struct-for="Preferences">
      <source-position filename="src/frontend/entangle-preferences.h"
                       line="32"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="PreferencesDisplay"
           c:symbol-prefix="preferences_display"
           c:type="EntanglePreferencesDisplay"
           parent="Gtk.Dialog"
           glib:type-name="EntanglePreferencesDisplay"
           glib:get-type="entangle_preferences_display_get_type"
           glib:type-struct="PreferencesDisplayClass">
      <source-position filename="src/frontend/entangle-preferences-display.h"
                       line="32"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="entangle_preferences_display_new">
        <source-position filename="src/frontend/entangle-preferences-display.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="PreferencesDisplay"
                c:type="EntanglePreferencesDisplay*"/>
        </return-value>
      </constructor>
    </class>
    <record name="PreferencesDisplayClass"
            c:type="EntanglePreferencesDisplayClass"
            glib:is-gtype-struct-for="PreferencesDisplay">
      <source-position filename="src/frontend/entangle-preferences-display.h"
                       line="32"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
    </record>
    <interface name="Progress"
               c:symbol-prefix="progress"
               c:type="EntangleProgress"
               glib:type-name="EntangleProgress"
               glib:get-type="entangle_progress_get_type"
               glib:type-struct="ProgressInterface">
      <source-position filename="src/backend/entangle-progress.h" line="46"/>
      <virtual-method name="start" invoker="start">
        <source-position filename="src/backend/entangle-progress.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="msg" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop" invoker="stop">
        <source-position filename="src/backend/entangle-progress.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update" invoker="update">
        <source-position filename="src/backend/entangle-progress.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
          <parameter name="current" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="start" c:identifier="entangle_progress_start">
        <source-position filename="src/backend/entangle-progress.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="msg" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop" c:identifier="entangle_progress_stop">
        <source-position filename="src/backend/entangle-progress.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update" c:identifier="entangle_progress_update">
        <source-position filename="src/backend/entangle-progress.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="prog" transfer-ownership="none">
            <type name="Progress" c:type="EntangleProgress*"/>
          </instance-parameter>
          <parameter name="current" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ProgressInterface"
            c:type="EntangleProgressInterface"
            glib:is-gtype-struct-for="Progress">
      <source-position filename="src/backend/entangle-progress.h" line="46"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="start">
        <callback name="start">
          <source-position filename="src/backend/entangle-progress.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prog" transfer-ownership="none">
              <type name="Progress" c:type="EntangleProgress*"/>
            </parameter>
            <parameter name="target" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="msg" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update">
        <callback name="update">
          <source-position filename="src/backend/entangle-progress.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prog" transfer-ownership="none">
              <type name="Progress" c:type="EntangleProgress*"/>
            </parameter>
            <parameter name="current" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop">
          <source-position filename="src/backend/entangle-progress.h"
                           line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="prog" transfer-ownership="none">
              <type name="Progress" c:type="EntangleProgress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Script"
           c:symbol-prefix="script"
           c:type="EntangleScript"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="EntangleScript"
           glib:get-type="entangle_script_get_type"
           glib:type-struct="ScriptClass">
      <source-position filename="src/frontend/entangle-script.h" line="52"/>
      <virtual-method name="execute_async"
                      invoker="execute_async"
                      glib:finish-func="execute_finish">
        <source-position filename="src/frontend/entangle-script.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="142">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
          <parameter name="automata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="143">the camera automata</doc>
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </parameter>
          <parameter name="cancel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="144">cancellation handler</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="145">a #GAsyncReadyCallback to call when the script has
finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="147">the data to pass to the callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="execute_finish"
                      invoker="execute_finish"
                      throws="1">
        <source-position filename="src/frontend/entangle-script.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script.c"
               line="169">TRUE on success, false otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="165">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="166">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_config_widget" invoker="get_config_widget">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script.c"
             line="122">Get the configuration controls for the script</doc>
        <source-position filename="src/frontend/entangle-script.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script.c"
               line="128">the config widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="124">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="execute_async"
              c:identifier="entangle_script_execute_async"
              glib:finish-func="execute_finish">
        <source-position filename="src/frontend/entangle-script.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="142">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
          <parameter name="automata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="143">the camera automata</doc>
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </parameter>
          <parameter name="cancel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="144">cancellation handler</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="145">a #GAsyncReadyCallback to call when the script has
finished</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="147">the data to pass to the callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute_finish"
              c:identifier="entangle_script_execute_finish"
              throws="1">
        <source-position filename="src/frontend/entangle-script.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script.c"
               line="169">TRUE on success, false otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="165">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="166">a GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config_widget"
              c:identifier="entangle_script_get_config_widget">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script.c"
             line="122">Get the configuration controls for the script</doc>
        <source-position filename="src/frontend/entangle-script.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script.c"
               line="128">the config widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="124">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="entangle_script_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script.c"
             line="104">Get the title of the script</doc>
        <source-position filename="src/frontend/entangle-script.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script.c"
               line="110">the title of the script</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="106">the script object</doc>
            <type name="Script" c:type="EntangleScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                getter="get_title"
                default-value="Untitled script">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ScriptClass"
            c:type="EntangleScriptClass"
            glib:is-gtype-struct-for="Script">
      <source-position filename="src/frontend/entangle-script.h" line="52"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_config_widget">
        <callback name="get_config_widget">
          <source-position filename="src/frontend/entangle-script.h"
                           line="43"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="128">the config widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="124">the script object</doc>
              <type name="Script" c:type="EntangleScript*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="execute_async">
        <callback name="execute_async">
          <source-position filename="src/frontend/entangle-script.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="142">the script object</doc>
              <type name="Script" c:type="EntangleScript*"/>
            </parameter>
            <parameter name="automata" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="143">the camera automata</doc>
              <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
            </parameter>
            <parameter name="cancel"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="144">cancellation handler</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="145">a #GAsyncReadyCallback to call when the script has
finished</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="147">the data to pass to the callback function</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="execute_finish">
        <callback name="execute_finish" throws="1">
          <source-position filename="src/frontend/entangle-script.h"
                           line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script.c"
                 line="169">TRUE on success, false otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="165">the script object</doc>
              <type name="Script" c:type="EntangleScript*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script.c"
                   line="166">a GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ScriptConfig"
           c:symbol-prefix="script_config"
           c:type="EntangleScriptConfig"
           parent="Gtk.Box"
           glib:type-name="EntangleScriptConfig"
           glib:get-type="entangle_script_config_get_type"
           glib:type-struct="ScriptConfigClass">
      <source-position filename="src/frontend/entangle-script-config.h"
                       line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="entangle_script_config_new">
        <source-position filename="src/frontend/entangle-script-config.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="ScriptConfig" c:type="EntangleScriptConfig*"/>
        </return-value>
      </constructor>
      <method name="add_script"
              c:identifier="entangle_script_config_add_script">
        <source-position filename="src/frontend/entangle-script-config.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="ScriptConfig" c:type="EntangleScriptConfig*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <type name="Script" c:type="EntangleScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected"
              c:identifier="entangle_script_config_get_selected">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script-config.c"
             line="213">Retrieve the script that the config is displayed for</doc>
        <source-position filename="src/frontend/entangle-script-config.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script-config.c"
               line="219">the script displayed</doc>
          <type name="Script" c:type="EntangleScript*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-config.c"
                 line="215">the config widget</doc>
            <type name="ScriptConfig" c:type="EntangleScriptConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_scripts"
              c:identifier="entangle_script_config_has_scripts">
        <source-position filename="src/frontend/entangle-script-config.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="ScriptConfig" c:type="EntangleScriptConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_script"
              c:identifier="entangle_script_config_remove_script">
        <source-position filename="src/frontend/entangle-script-config.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="ScriptConfig" c:type="EntangleScriptConfig*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <type name="Script" c:type="EntangleScript*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ScriptConfigClass"
            c:type="EntangleScriptConfigClass"
            glib:is-gtype-struct-for="ScriptConfig">
      <source-position filename="src/frontend/entangle-script-config.h"
                       line="31"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <class name="ScriptSimple"
           c:symbol-prefix="script_simple"
           c:type="EntangleScriptSimple"
           parent="Script"
           glib:type-name="EntangleScriptSimple"
           glib:get-type="entangle_script_simple_get_type"
           glib:type-struct="ScriptSimpleClass">
      <source-position filename="src/frontend/entangle-script-simple.h"
                       line="62"/>
      <virtual-method name="execute">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script-simple.h"
             line="37">Runs the logic for the script. The implementation should
 use the @automata object to perform capture/preview operations on
 the camera. @cancel will indicate whether the script should be
 aborted early. @result should be set when the script completes
 or aborts.</doc>
        <source-position filename="src/frontend/entangle-script-simple.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
          </instance-parameter>
          <parameter name="automata" transfer-ownership="none">
            <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
          </parameter>
          <parameter name="cancel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.Task" c:type="GTask*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_task_data" invoker="init_task_data">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script-simple.h"
             line="42">create a data object that will be associated
 with the #GTask passed to the @execute method.</doc>
        <source-position filename="src/frontend/entangle-script-simple.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script-simple.c"
               line="90">the data</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-simple.c"
                 line="88">the script object</doc>
            <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_task_data"
              c:identifier="entangle_script_simple_get_task_data">
        <source-position filename="src/frontend/entangle-script-simple.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script-simple.c"
               line="108">the data</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-simple.c"
                 line="105">a script object</doc>
            <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-simple.c"
                 line="106">the task object</doc>
            <type name="Gio.Task" c:type="GTask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_task_data"
              c:identifier="entangle_script_simple_init_task_data">
        <source-position filename="src/frontend/entangle-script-simple.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-script-simple.c"
               line="90">the data</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-simple.c"
                 line="88">the script object</doc>
            <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="return_task_error"
              c:identifier="entangle_script_simple_return_task_error">
        <source-position filename="src/frontend/entangle-script-simple.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.Task" c:type="GTask*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Script" c:type="EntangleScript"/>
      </field>
    </class>
    <record name="ScriptSimpleClass"
            c:type="EntangleScriptSimpleClass"
            glib:is-gtype-struct-for="ScriptSimple">
      <doc xml:space="preserve"
           filename="src/frontend/entangle-script-simple.h"
           line="35">The #EntangleScriptSimpleClass abstract class is a simplification
of the #EntangleScriptClass to workaround limitations of the
Python GObject introspection bindings propagating GErrors to/from
the C layer, and dealing with async ready callbacks.</doc>
      <source-position filename="src/frontend/entangle-script-simple.h"
                       line="62"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ScriptClass" c:type="EntangleScriptClass"/>
      </field>
      <field name="execute">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script-simple.h"
             line="37">Runs the logic for the script. The implementation should
 use the @automata object to perform capture/preview operations on
 the camera. @cancel will indicate whether the script should be
 aborted early. @result should be set when the script completes
 or aborts.</doc>
        <callback name="execute">
          <source-position filename="src/frontend/entangle-script-simple.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
            </parameter>
            <parameter name="automata" transfer-ownership="none">
              <type name="CameraAutomata" c:type="EntangleCameraAutomata*"/>
            </parameter>
            <parameter name="cancel"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="Gio.Task" c:type="GTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_task_data">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-script-simple.h"
             line="42">create a data object that will be associated
 with the #GTask passed to the @execute method.</doc>
        <callback name="init_task_data">
          <source-position filename="src/frontend/entangle-script-simple.h"
                           line="61"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-script-simple.c"
                 line="90">the data</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/frontend/entangle-script-simple.c"
                   line="88">the script object</doc>
              <type name="ScriptSimple" c:type="EntangleScriptSimple*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Session"
           c:symbol-prefix="session"
           c:type="EntangleSession"
           parent="GObject.Object"
           glib:type-name="EntangleSession"
           glib:get-type="entangle_session_get_type"
           glib:type-struct="SessionClass">
      <source-position filename="src/backend/entangle-session.h" line="32"/>
      <constructor name="new" c:identifier="entangle_session_new">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="194">Create a new sesssion tracking media files present in
@directory. The @filenamePattern is used to generate
filenames for newly created files</doc>
        <source-position filename="src/backend/entangle-session.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="203">the new session</doc>
          <type name="Session" c:type="EntangleSession*"/>
        </return-value>
        <parameters>
          <parameter name="directory" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="196">the directory associated witht session</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="filenamePattern" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="197">the filename generator pattern</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_media" c:identifier="entangle_session_add_media">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="464">Add @media to the @session</doc>
        <source-position filename="src/backend/entangle-session.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="466">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="467">the media file to add to the session</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="directory" c:identifier="entangle_session_directory">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="219">Get the directory associated with the session</doc>
        <source-position filename="src/backend/entangle-session.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="225">the session directory</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="221">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filename_pattern"
              c:identifier="entangle_session_filename_pattern">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="235">Get the filename generator pattern</doc>
        <source-position filename="src/backend/entangle-session.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="241">the filename pattern</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="237">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media" c:identifier="entangle_session_get_media">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="609">Get the media file at position @idx in the session</doc>
        <source-position filename="src/backend/entangle-session.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="616">the media file</doc>
          <type name="Media" c:type="EntangleMedia*"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="611">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="612">index of the media file to fetch</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_media_count"
              c:identifier="entangle_session_get_media_count">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="593">Get the total number of media files in the session</doc>
        <source-position filename="src/backend/entangle-session.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="599">the file count</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="595">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="entangle_session_load">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="509">Load all the files present in the directory associated
with the session</doc>
        <source-position filename="src/backend/entangle-session.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="516">TRUE if the session was loaded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="511">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next_filename"
              c:identifier="entangle_session_next_filename">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="391">Generate a new unique filename for @file, taking into
account its file extension and any previously generated
filename.</doc>
        <source-position filename="src/backend/entangle-session.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-session.c"
               line="400">the new filename</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="393">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="394">the file to obtain a filename for</doc>
            <type name="CameraFile" c:type="EntangleCameraFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_media" c:identifier="entangle_session_remove_media">
        <doc xml:space="preserve"
             filename="src/backend/entangle-session.c"
             line="485">Remove @media from the @session</doc>
        <source-position filename="src/backend/entangle-session.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="487">the session instance</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-session.c"
                 line="488">the media to remove from the session</doc>
            <type name="Media" c:type="EntangleMedia*"/>
          </parameter>
        </parameters>
      </method>
      <property name="directory"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="filename-pattern"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <glib:signal name="session-media-added" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Media"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="session-media-removed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Media"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <class name="SessionBrowser"
           c:symbol-prefix="session_browser"
           c:type="EntangleSessionBrowser"
           parent="Gtk.DrawingArea"
           glib:type-name="EntangleSessionBrowser"
           glib:get-type="entangle_session_browser_get_type"
           glib:type-struct="SessionBrowserClass">
      <source-position filename="src/frontend/entangle-session-browser.h"
                       line="33"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="entangle_session_browser_new">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
        </return-value>
      </constructor>
      <method name="get_background"
              c:identifier="entangle_session_browser_get_background">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_earlier_images"
              c:identifier="entangle_session_browser_get_earlier_images">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="928">Get a list of images prior to the currently selected image.
If @include_selected is true, then the currently selected
image will be included in the returned list</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-session-browser.c"
               line="938">the list of images</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Image"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="930">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="include_selected" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="931">true to include the current image in the list</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="932">maximum number of images to return</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_highlight"
              c:identifier="entangle_session_browser_get_highlight">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_at_coords"
              c:identifier="entangle_session_browser_get_media_at_coords">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="471">Retrieve the media displayed at the co-ordinates (@x, @y)</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-session-browser.c"
               line="479">the media, or NULL</doc>
          <type name="Media" c:type="EntangleMedia*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="473">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="474">the horizontal co-ordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="475">the vertical co-ordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_media"
              c:identifier="entangle_session_browser_get_selected_media">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-session-browser.c"
               line="914">the selected media or NULL</doc>
          <type name="Media" c:type="EntangleMedia*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="912">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_session"
              c:identifier="entangle_session_browser_get_session"
              glib:get-property="session">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="1042">Get the session being displayed</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-session-browser.c"
               line="1048">the session</doc>
          <type name="Session" c:type="EntangleSession*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="1044">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnail_loader"
              c:identifier="entangle_session_browser_get_thumbnail_loader"
              glib:get-property="thumbnail-loader">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="999">Get the thumbnail loader used by the session browser</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/frontend/entangle-session-browser.c"
               line="1005">the session browser</doc>
          <type name="ThumbnailLoader" c:type="EntangleThumbnailLoader*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="1001">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_background"
              c:identifier="entangle_session_browser_set_background">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="background" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_highlight"
              c:identifier="entangle_session_browser_set_highlight">
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="highlight" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_session"
              c:identifier="entangle_session_browser_set_session"
              glib:set-property="session">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="1015">Set the session to be displayed</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="1017">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="session" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="1018">the session to display</doc>
            <type name="Session" c:type="EntangleSession*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_thumbnail_loader"
              c:identifier="entangle_session_browser_set_thumbnail_loader"
              glib:set-property="thumbnail-loader">
        <doc xml:space="preserve"
             filename="src/frontend/entangle-session-browser.c"
             line="970">Set the thumbnail loader to use for generating image
thumbnails</doc>
        <source-position filename="src/frontend/entangle-session-browser.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="972">the session browser</doc>
            <type name="SessionBrowser" c:type="EntangleSessionBrowser*"/>
          </instance-parameter>
          <parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/frontend/entangle-session-browser.c"
                 line="973">the thumbnail loader to use</doc>
            <type name="ThumbnailLoader" c:type="EntangleThumbnailLoader*"/>
          </parameter>
        </parameters>
      </method>
      <property name="session"
                writable="1"
                transfer-ownership="none"
                setter="set_session"
                getter="get_session">
        <type name="Session"/>
      </property>
      <property name="thumbnail-loader"
                writable="1"
                transfer-ownership="none"
                setter="set_thumbnail_loader"
                getter="get_thumbnail_loader">
        <type name="ThumbnailLoader"/>
      </property>
      <glib:signal name="selection-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="SessionBrowserClass"
            c:type="EntangleSessionBrowserClass"
            glib:is-gtype-struct-for="SessionBrowser">
      <source-position filename="src/frontend/entangle-session-browser.h"
                       line="33"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <record name="SessionClass"
            c:type="EntangleSessionClass"
            glib:is-gtype-struct-for="Session">
      <source-position filename="src/backend/entangle-session.h" line="32"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ThumbnailLoader"
           c:symbol-prefix="thumbnail_loader"
           c:type="EntangleThumbnailLoader"
           parent="PixbufLoader"
           glib:type-name="EntangleThumbnailLoader"
           glib:get-type="entangle_thumbnail_loader_get_type"
           glib:type-struct="ThumbnailLoaderClass">
      <source-position filename="src/backend/entangle-thumbnail-loader.h"
                       line="31"/>
      <constructor name="new" c:identifier="entangle_thumbnail_loader_new">
        <source-position filename="src/backend/entangle-thumbnail-loader.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="ThumbnailLoader" c:type="EntangleThumbnailLoader*"/>
        </return-value>
        <parameters>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="height"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="128">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="width"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="128">
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ThumbnailLoaderClass"
            c:type="EntangleThumbnailLoaderClass"
            glib:is-gtype-struct-for="ThumbnailLoader">
      <source-position filename="src/backend/entangle-thumbnail-loader.h"
                       line="31"/>
      <field name="parent_class">
        <type name="PixbufLoaderClass" c:type="EntanglePixbufLoaderClass"/>
      </field>
    </record>
    <class name="Video"
           c:symbol-prefix="video"
           c:type="EntangleVideo"
           parent="Media"
           glib:type-name="EntangleVideo"
           glib:get-type="entangle_video_get_type"
           glib:type-struct="VideoClass">
      <source-position filename="src/backend/entangle-video.h" line="31"/>
      <constructor name="new_file" c:identifier="entangle_video_new_file">
        <doc xml:space="preserve"
             filename="src/backend/entangle-video.c"
             line="123">Create a new video instance for the video stored in
@filename.</doc>
        <source-position filename="src/backend/entangle-video.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/backend/entangle-video.c"
               line="130">the new video</doc>
          <type name="Video" c:type="EntangleVideo*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-video.c"
                 line="125">the filename of the video</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_source" c:identifier="entangle_video_new_source">
        <source-position filename="src/backend/entangle-video.h" line="40"/>
        <return-value transfer-ownership="full">
          <type name="Video" c:type="EntangleVideo*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="GstBase.BaseSrc" c:type="GstBaseSrc*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_source"
              c:identifier="entangle_video_get_source"
              glib:get-property="source">
        <doc xml:space="preserve"
             filename="src/backend/entangle-video.c"
             line="150">Get the live video source element</doc>
        <source-position filename="src/backend/entangle-video.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-video.c"
               line="156">the video source</doc>
          <type name="GstBase.BaseSrc" c:type="GstBaseSrc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-video.c"
                 line="152">the video to get the source for</doc>
            <type name="Video" c:type="EntangleVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="entangle_video_set_source"
              glib:set-property="source">
        <doc xml:space="preserve"
             filename="src/backend/entangle-video.c"
             line="164">Set the live video source element</doc>
        <source-position filename="src/backend/entangle-video.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-video.c"
                 line="166">the video to set the source for</doc>
            <type name="Video" c:type="EntangleVideo*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/backend/entangle-video.c"
                 line="167">the new video source or NULL</doc>
            <type name="GstBase.BaseSrc" c:type="GstBaseSrc*"/>
          </parameter>
        </parameters>
      </method>
      <property name="source"
                writable="1"
                transfer-ownership="none"
                setter="set_source"
                getter="get_source">
        <type name="GstBase.BaseSrc"/>
      </property>
    </class>
    <record name="VideoClass"
            c:type="EntangleVideoClass"
            glib:is-gtype-struct-for="Video">
      <source-position filename="src/backend/entangle-video.h" line="31"/>
      <field name="parent_class">
        <type name="MediaClass" c:type="EntangleMediaClass"/>
      </field>
    </record>
    <function name="debug_setup" c:identifier="entangle_debug_setup">
      <source-position filename="src/backend/entangle-debug.h" line="33"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="debug_app" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="debug_gphoto" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="dpms_set_blanking"
              c:identifier="entangle_dpms_set_blanking"
              throws="1">
      <source-position filename="src/frontend/entangle-dpms.h" line="27"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="enabled" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="entangle-application">
      <doc xml:space="preserve"
           filename="src/frontend/entangle-application.c"
           line="36">EntangleApplication maintains some global application state. At this time,
the list of currently attached cameras, the application preferences
and the plugin manager.</doc>
    </docsection>
    <docsection name="entangle-camera">
      <doc xml:space="preserve"
           filename="src/backend/entangle-camera.c"
           line="43">The #EntangleCamera object provides a way to control a digital
SLR camera device.</doc>
    </docsection>
    <docsection name="entangle-camera-automata">
      <doc xml:space="preserve"
           filename="src/backend/entangle-camera-automata.c"
           line="27">The #EntangleCameraAutomata object provides a simpler way to drive
the capture operations for the camera, automating the steps for
downloading the images after capture.</doc>
    </docsection>
    <docsection name="entangle-camera-file">
      <doc xml:space="preserve"
           filename="src/backend/entangle-camera-file.c"
           line="31">The #EntangleCameraFile object contains the metadata and payload
of a file downloaded from the camera device.</doc>
    </docsection>
    <docsection name="entangle-camera-list">
      <doc xml:space="preserve"
           filename="src/backend/entangle-camera-list.c"
           line="33">The #EntangleCameraList object provides a way to enumerate
camera devices on the system.</doc>
    </docsection>
    <docsection name="entangle-colour-profile">
      <doc xml:space="preserve"
           filename="src/backend/entangle-colour-profile.c"
           line="31">The #EntangleColourProfile object provides colour management
profile for a device.</doc>
    </docsection>
    <docsection name="entangle-control">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control.c"
           line="28">The #EntangleControl object is a common base for all device
control types.</doc>
    </docsection>
    <docsection name="entangle-control-button">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-button.c"
           line="27">The #EntangleControlButton object provides a device control
that acts like a momentary push button.</doc>
    </docsection>
    <docsection name="entangle-control-choice">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-choice.c"
           line="28">The #EntangleControlChoice object provides a device control that allows
selection between a range of choices.</doc>
    </docsection>
    <docsection name="entangle-control-date">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-date.c"
           line="27">The #EntangleControlDate object provides a device control that represents
a date string.</doc>
    </docsection>
    <docsection name="entangle-control-group">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-group.c"
           line="27">The #EntangleControlGroup object provides a device control that is a
container for a further set of device controls.</doc>
    </docsection>
    <docsection name="entangle-control-range">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-range.c"
           line="28">The #EntangleControlRange object provides a device control that allows
adjustment of a setting through a range of values.</doc>
    </docsection>
    <docsection name="entangle-control-text">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-text.c"
           line="28">The #EntangleControlText object provides a device control allowing the
entry of free format text</doc>
    </docsection>
    <docsection name="entangle-control-toggle">
      <doc xml:space="preserve"
           filename="src/backend/entangle-control-toggle.c"
           line="27">The #EntangleControlToggle object provides a device control that toggles
between two states.</doc>
    </docsection>
    <docsection name="entangle-device-manager">
      <doc xml:space="preserve"
           filename="src/backend/entangle-device-manager.c"
           line="32">The #EntangleDeviceManager provides a way to monitor devices on the
host.</doc>
    </docsection>
    <docsection name="entangle-image">
      <doc xml:space="preserve"
           filename="src/backend/entangle-image.c"
           line="30">The #EntangleImage object provides a media file that represents a static
image.</doc>
    </docsection>
    <docsection name="entangle-image-loader">
      <doc xml:space="preserve"
           filename="src/backend/entangle-image-loader.c"
           line="26">The #EntangleImageLoader object provides a way to load the full resolution
image data.</doc>
    </docsection>
    <docsection name="entangle-media">
      <doc xml:space="preserve"
           filename="src/backend/entangle-media.c"
           line="30">The #EntangleMedia object is a base class providing
common functionality for various types of media file</doc>
    </docsection>
    <docsection name="entangle-pixbuf-loader">
      <doc xml:space="preserve"
           filename="src/backend/entangle-pixbuf-loader.c"
           line="28">The #EntanglePixbufLoader object provides common functionality needed
when loading image data.</doc>
    </docsection>
    <docsection name="entangle-progress">
      <doc xml:space="preserve"
           filename="src/backend/entangle-progress.c"
           line="25">The #EntangleProgress interface provides a way to monitor the progress
of operations performed by the camera.</doc>
    </docsection>
    <docsection name="entangle-session">
      <doc xml:space="preserve"
           filename="src/backend/entangle-session.c"
           line="36">The #EntangleSession object represents a collection of media files
used during the current capture session.</doc>
    </docsection>
    <docsection name="entangle-thumbnail-loader">
      <doc xml:space="preserve"
           filename="src/backend/entangle-thumbnail-loader.c"
           line="36">The #EntangleThumbnailLoader object can load thumbnails from #EntangleImage
media files.</doc>
    </docsection>
    <docsection name="entangle-video">
      <doc xml:space="preserve"
           filename="src/backend/entangle-video.c"
           line="30">The #EntangleVideo object presents a media file containing a
video stream.</doc>
    </docsection>
    <function name="pixbuf_auto_rotate"
              c:identifier="entangle_pixbuf_auto_rotate">
      <doc xml:space="preserve"
           filename="src/backend/entangle-pixbuf.c"
           line="27">Automatically rotate the pixbuf @src so that it is in its
"natural" orientation. Will first try to apply the orientation
associated in the GdkPixbuf object. If this doesn't apply any
rotation, then will use the exiv metadata to identify the
orientation</doc>
      <source-position filename="src/backend/entangle-pixbuf.h" line="32"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf.c"
             line="38">the rotated pixbuf</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="29">the pixbuf to be rotated</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
        <parameter name="metadata"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="30">the exiv2 metadata for the pixbuf</doc>
          <type name="GExiv2.Metadata" c:type="GExiv2Metadata*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pixbuf_open_image"
              c:identifier="entangle_pixbuf_open_image">
      <doc xml:space="preserve"
           filename="src/backend/entangle-pixbuf.c"
           line="485">If @slot is ENTANGLE_PIXBUF_IMAGE_SLOT_MASTER then the primary
image data is loaded.

If @slot is ENTANGLE_PIXBUF_IMAGE_SLOT_PREVIEW and the image is
a raw file, any embedded preview data is loaded. For non-raw
files the primary image data is loaded.

If @slot is ENTANGLE_PIXBUF_IMAGE_SLOT_THUMBNAIL and the image is
a raw file, any embedded thumbnail data is loaded. For non-raw
files any thumbnail in the exiv2 metadata is loaded. If no thumbnail
is available, the primary image data is loaded.</doc>
      <source-position filename="src/backend/entangle-pixbuf.h" line="42"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/backend/entangle-pixbuf.c"
             line="504">the pixbuf for the image slot</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="487">the camera image to open</doc>
          <type name="Image" c:type="EntangleImage*"/>
        </parameter>
        <parameter name="slot" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="488">the type of image data to open</doc>
          <type name="PixbufImageSlot" c:type="EntanglePixbufImageSlot"/>
        </parameter>
        <parameter name="applyOrientation" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="489">whether to rotate to natural orientation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="metadata"
                   transfer-ownership="full"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/backend/entangle-pixbuf.c"
               line="490">filled with metadata object instance</doc>
          <type name="GExiv2.Metadata" c:type="GExiv2Metadata**"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
