<?xml version="1.0"?>
<!-- Midori-0.6.gir generated by valac 0.56.9, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="Gtk" version="3.0"/>
<include name="Gio" version="2.0"/>
<include name="WebKit2" version="4.0"/>
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="cairo" version="1.0"/>
<include name="Peas" version="1.0"/>
<package name="midori-core"/>
<c:include name="midori-core.h"/>
<namespace name="Midori" version="0.6" c:prefix="Midori" c:identifier-prefixes="Midori" c:symbol-prefixes="midori">
	<enumeration name="DebugFlags" c:type="MidoriDebugFlags" glib:type-name="MidoriDebugFlags" glib:get-type="midori_debug_flags_get_type">
		<member name="none" c:identifier="MIDORI_DEBUG_FLAGS_NONE" value="0"/>
		<member name="history" c:identifier="MIDORI_DEBUG_FLAGS_HISTORY" value="1"/>
	</enumeration>
	<enumeration name="StartupType" c:type="MidoriStartupType" glib:type-name="MidoriStartupType" glib:get-type="midori_startup_type_get_type">
		<member name="speed_dial" c:identifier="MIDORI_STARTUP_SPEED_DIAL" value="0"/>
		<member name="homepage" c:identifier="MIDORI_STARTUP_HOMEPAGE" value="1"/>
		<member name="last_open_pages" c:identifier="MIDORI_STARTUP_LAST_OPEN_PAGES" value="2"/>
		<member name="delayed_pages" c:identifier="MIDORI_STARTUP_DELAYED_PAGES" value="3"/>
	</enumeration>
	<enumeration name="ProxyType" c:type="MidoriProxyType" glib:type-name="MidoriProxyType" glib:get-type="midori_proxy_type_get_type">
		<member name="automatic" c:identifier="MIDORI_PROXY_AUTOMATIC" value="0"/>
		<member name="http" c:identifier="MIDORI_PROXY_HTTP" value="1"/>
		<member name="none" c:identifier="MIDORI_PROXY_NONE" value="2"/>
	</enumeration>
	<enumeration name="DatabaseError" c:type="MidoriDatabaseError" glib:type-name="MidoriDatabaseError" glib:get-type="midori_database_error_get_type" glib:error-domain="midori-database-error-quark">
		<member name="open" c:identifier="MIDORI_DATABASE_ERROR_OPEN" value="0"/>
		<member name="naming" c:identifier="MIDORI_DATABASE_ERROR_NAMING" value="1"/>
		<member name="filename" c:identifier="MIDORI_DATABASE_ERROR_FILENAME" value="2"/>
		<member name="execute" c:identifier="MIDORI_DATABASE_ERROR_EXECUTE" value="3"/>
		<member name="compile" c:identifier="MIDORI_DATABASE_ERROR_COMPILE" value="4"/>
		<member name="type" c:identifier="MIDORI_DATABASE_ERROR_TYPE" value="5"/>
	</enumeration>
	<class name="App" c:type="MidoriApp" c:symbol-prefix="app" glib:type-name="MidoriApp" glib:get-type="midori_app_get_type" glib:type-struct="AppClass" parent="Gtk.Application">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Application" c:type="GtkApplication"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AppPrivate" c:type="MidoriAppPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_app_new">
			<return-value transfer-ownership="full">
				<type name="Midori.App" c:type="MidoriApp*"/>
			</return-value>
		</constructor>
		<property name="exec-path" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_exec_path" c:identifier="midori_app_get_exec_path">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_exec_path" c:identifier="midori_app_set_exec_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="AppClass" c:type="MidoriAppClass" glib:is-gtype-struct-for="App">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ApplicationClass" c:type="GtkApplicationClass"/>
		</field>
	</record>
	<record name="AppPrivate" c:type="MidoriAppPrivate" disguised="1"/>
	<class name="Browser" c:type="MidoriBrowser" c:symbol-prefix="browser" glib:type-name="MidoriBrowser" glib:get-type="midori_browser_get_type" glib:type-struct="BrowserClass" parent="Gtk.ApplicationWindow">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BrowserPrivate" c:type="MidoriBrowserPrivate*"/>
		</field>
		<field name="tabs" writable="1">
			<type name="Gtk.Stack" c:type="GtkStack*"/>
		</field>
		<field name="overlay" writable="1">
			<type name="Gtk.Overlay" c:type="GtkOverlay*"/>
		</field>
		<field name="statusbar" writable="1">
			<type name="Midori.Statusbar" c:type="MidoriStatusbar*"/>
		</field>
		<method name="add_button" c:identifier="midori_browser_add_button">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="button" transfer-ownership="none">
					<type name="Gtk.Button" c:type="GtkButton*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_panel" c:identifier="midori_browser_add_panel">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="midori_browser_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Browser" c:type="MidoriBrowser*"/>
			</return-value>
			<parameters>
				<parameter name="app" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</parameter>
				<parameter name="is_locked" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="incognito" c:identifier="midori_browser_new_incognito">
			<return-value transfer-ownership="none">
				<type name="Midori.Browser" c:type="MidoriBrowser*"/>
			</return-value>
			<parameters>
				<parameter name="app" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add" c:identifier="midori_browser_add">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="tab" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</method>
		<property name="web-context" writable="1" construct="1">
			<type name="WebKit2.WebContext" c:type="WebKitWebContext*"/>
		</property>
		<method name="get_web_context" c:identifier="midori_browser_get_web_context">
			<return-value transfer-ownership="none">
				<type name="WebKit2.WebContext" c:type="WebKitWebContext*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_web_context" c:identifier="midori_browser_set_web_context">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="WebKit2.WebContext" c:type="WebKitWebContext*"/>
				</parameter>
			</parameters>
		</method>
		<property name="is-loading" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_loading" c:identifier="midori_browser_get_is_loading">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_is_loading" c:identifier="midori_browser_set_is_loading">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="midori_browser_get_uri">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_uri" c:identifier="midori_browser_set_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="tab" writable="1">
			<type name="Midori.Tab" c:type="MidoriTab*"/>
		</property>
		<method name="get_tab" c:identifier="midori_browser_get_tab">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Midori.Tab" c:type="MidoriTab*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_tab" c:identifier="midori_browser_set_tab">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</method>
		<property name="trash" writable="1">
			<type name="Gio.ListStore" c:type="GListStore*"/>
		</property>
		<method name="get_trash" c:identifier="midori_browser_get_trash">
			<return-value transfer-ownership="none">
				<type name="Gio.ListStore" c:type="GListStore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_trash" c:identifier="midori_browser_set_trash">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.ListStore" c:type="GListStore*"/>
				</parameter>
			</parameters>
		</method>
		<property name="is-fullscreen" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_fullscreen" c:identifier="midori_browser_get_is_fullscreen">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_is_fullscreen" c:identifier="midori_browser_set_is_fullscreen">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="is-locked" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_locked" c:identifier="midori_browser_get_is_locked">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_is_locked" c:identifier="midori_browser_set_is_locked">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="default-tab">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="BrowserClass" c:type="MidoriBrowserClass" glib:is-gtype-struct-for="Browser">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ApplicationWindowClass" c:type="GtkApplicationWindowClass"/>
		</field>
	</record>
	<record name="BrowserPrivate" c:type="MidoriBrowserPrivate" disguised="1"/>
	<class name="ClearPrivateData" c:type="MidoriClearPrivateData" c:symbol-prefix="clear_private_data" glib:type-name="MidoriClearPrivateData" glib:get-type="midori_clear_private_data_get_type" glib:type-struct="ClearPrivateDataClass" parent="Gtk.Dialog">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Dialog" c:type="GtkDialog"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ClearPrivateDataPrivate" c:type="MidoriClearPrivateDataPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_clear_private_data_new">
			<return-value transfer-ownership="none">
				<type name="Midori.ClearPrivateData" c:type="MidoriClearPrivateData*"/>
			</return-value>
			<parameters>
				<parameter name="parent" transfer-ownership="none">
					<type name="Gtk.Window" c:type="GtkWindow*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="ClearPrivateDataClass" c:type="MidoriClearPrivateDataClass" glib:is-gtype-struct-for="ClearPrivateData">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
		</field>
	</record>
	<record name="ClearPrivateDataPrivate" c:type="MidoriClearPrivateDataPrivate" disguised="1"/>
	<class name="SuggestionItem" c:type="MidoriSuggestionItem" c:symbol-prefix="suggestion_item" glib:type-name="MidoriSuggestionItem" glib:get-type="midori_suggestion_item_get_type" glib:type-struct="SuggestionItemClass" parent="Midori.DatabaseItem">
		<field name="parent_instance" readable="0" private="1">
			<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SuggestionItemPrivate" c:type="MidoriSuggestionItemPrivate*"/>
		</field>
		<constructor name="for_input" c:identifier="midori_suggestion_item_new_for_input">
			<return-value transfer-ownership="full">
				<type name="Midori.SuggestionItem" c:type="MidoriSuggestionItem*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="title" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="search" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_search" c:identifier="midori_suggestion_item_get_search">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionItem" c:type="MidoriSuggestionItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_search" c:identifier="midori_suggestion_item_set_search">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionItem" c:type="MidoriSuggestionItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SuggestionItemClass" c:type="MidoriSuggestionItemClass" glib:is-gtype-struct-for="SuggestionItem">
		<field name="parent_class" readable="0" private="1">
			<type name="Midori.DatabaseItemClass" c:type="MidoriDatabaseItemClass"/>
		</field>
	</record>
	<record name="SuggestionItemPrivate" c:type="MidoriSuggestionItemPrivate" disguised="1"/>
	<class name="Completion" c:type="MidoriCompletion" c:symbol-prefix="completion" glib:type-name="MidoriCompletion" glib:get-type="midori_completion_get_type" glib:type-struct="CompletionClass" parent="GObject.Object">
		<implements name="Gio.ListModel"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CompletionPrivate" c:type="MidoriCompletionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_completion_new">
			<return-value transfer-ownership="full">
				<type name="Midori.Completion" c:type="MidoriCompletion*"/>
			</return-value>
			<parameters>
				<parameter name="incognito" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add" c:identifier="midori_completion_add">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</instance-parameter>
				<parameter name="model" transfer-ownership="none">
					<type name="Gio.ListModel" c:type="GListModel*"/>
				</parameter>
			</parameters>
		</method>
		<property name="incognito" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_incognito" c:identifier="midori_completion_get_incognito">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_incognito" c:identifier="midori_completion_set_incognito">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_key" c:identifier="midori_completion_get_key">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_key" c:identifier="midori_completion_set_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CompletionClass" c:type="MidoriCompletionClass" glib:is-gtype-struct-for="Completion">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CompletionPrivate" c:type="MidoriCompletionPrivate" disguised="1"/>
	<class name="DatabaseStatement" c:type="MidoriDatabaseStatement" c:symbol-prefix="database_statement" glib:type-name="MidoriDatabaseStatement" glib:get-type="midori_database_statement_get_type" glib:type-struct="DatabaseStatementClass" parent="GObject.Object">
		<implements name="Gio.Initable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DatabaseStatementPrivate" c:type="MidoriDatabaseStatementPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_database_statement_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
			</return-value>
			<parameters>
				<parameter name="database" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="init" c:identifier="midori_database_statement_init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init" invoker="init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="bind" c:identifier="midori_database_statement_bind" throws="1" introspectable="0">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="pname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</method>
		<method name="exec" c:identifier="midori_database_statement_exec" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="step" c:identifier="midori_database_statement_step" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="row_id" c:identifier="midori_database_statement_row_id" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="midori_database_statement_get_string" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_int64" c:identifier="midori_database_statement_get_int64" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_double" c:identifier="midori_database_statement_get_double" throws="1">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="database" writable="1" construct="1">
			<type name="Midori.Database" c:type="MidoriDatabase*"/>
		</property>
		<method name="get_database" c:identifier="midori_database_statement_get_database">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Midori.Database" c:type="MidoriDatabase*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_database" c:identifier="midori_database_statement_set_database">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</parameter>
			</parameters>
		</method>
		<property name="query" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_query" c:identifier="midori_database_statement_get_query">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_query" c:identifier="midori_database_statement_set_query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DatabaseStatementClass" c:type="MidoriDatabaseStatementClass" glib:is-gtype-struct-for="DatabaseStatement">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="init">
			<callback name="init" c:type="init" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="DatabaseStatementPrivate" c:type="MidoriDatabaseStatementPrivate" disguised="1"/>
	<class name="DatabaseItem" c:type="MidoriDatabaseItem" c:symbol-prefix="database_item" glib:type-name="MidoriDatabaseItem" glib:get-type="midori_database_item_get_type" glib:type-struct="DatabaseItemClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DatabaseItemPrivate" c:type="MidoriDatabaseItemPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_database_item_new">
			<return-value transfer-ownership="full">
				<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="title" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="date" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="delete" c:identifier="midori_database_item_delete">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_finish" c:identifier="midori_database_item_delete_finish">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="database" writable="1">
			<type name="Midori.Database" c:type="MidoriDatabase*"/>
		</property>
		<method name="get_database" c:identifier="midori_database_item_get_database">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Midori.Database" c:type="MidoriDatabase*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_database" c:identifier="midori_database_item_set_database">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_id" c:identifier="midori_database_item_get_id">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_id" c:identifier="midori_database_item_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
		<property name="uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="midori_database_item_get_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_uri" c:identifier="midori_database_item_set_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="title" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="midori_database_item_get_title">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_title" c:identifier="midori_database_item_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="date" writable="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_date" c:identifier="midori_database_item_get_date">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_date" c:identifier="midori_database_item_set_date">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DatabaseItemClass" c:type="MidoriDatabaseItemClass" glib:is-gtype-struct-for="DatabaseItem">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DatabaseItemPrivate" c:type="MidoriDatabaseItemPrivate" disguised="1"/>
	<class name="Database" c:type="MidoriDatabase" c:symbol-prefix="database" glib:type-name="MidoriDatabase" glib:get-type="midori_database_get_type" glib:type-struct="DatabaseClass" parent="GObject.Object">
		<implements name="Gio.Initable"/>
		<implements name="Gio.ListModel"/>
		<implements name="Midori.Loggable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DatabasePrivate" c:type="MidoriDatabasePrivate*"/>
		</field>
		<field name="db" writable="1" nullable="1">
			<type name="Sqlite.Database" c:type="sqlite3*"/>
		</field>
		<constructor name="new" c:identifier="midori_database_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Midori.Database" c:type="MidoriDatabase*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="init" c:identifier="midori_database_init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init" invoker="init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="exists" c:identifier="midori_database_exists">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="exec_script" c:identifier="midori_database_exec_script" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="filename" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="transaction" c:identifier="midori_database_transaction" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="callback" transfer-ownership="none" closure="1" scope="call">
					<type name="Midori.DatabaseCallback" c:type="MidoriDatabaseCallback"/>
				</parameter>
				<parameter name="callback_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="exec" c:identifier="midori_database_exec" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="prepare" c:identifier="midori_database_prepare" throws="1" introspectable="0">
			<return-value transfer-ownership="full">
				<type name="Midori.DatabaseStatement" c:type="MidoriDatabaseStatement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</method>
		<method name="delete" c:identifier="midori_database_delete">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_finish" c:identifier="midori_database_delete_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="delete" invoker="delete">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="delete_finish" invoker="delete_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="lookup" c:identifier="midori_database_lookup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_finish" c:identifier="midori_database_lookup_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup" invoker="lookup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="lookup_finish" invoker="lookup_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="contains" c:identifier="midori_database_contains" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query" c:identifier="midori_database_query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="filter" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="max_items" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_finish" c:identifier="midori_database_query_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.List" c:type="GList*">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query" invoker="query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="filter" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="max_items" transfer-ownership="none">
					<type name="gint64" c:type="gint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="query_finish" invoker="query_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.List" c:type="GList*">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="update" c:identifier="midori_database_update">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="update_finish" c:identifier="midori_database_update_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="update" invoker="update">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="update_finish" invoker="update_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert" c:identifier="midori_database_insert">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="insert_finish" c:identifier="midori_database_insert_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert" invoker="insert">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="insert_finish" invoker="insert_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clear" c:identifier="midori_database_clear">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="timespan" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_finish" c:identifier="midori_database_clear_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="clear" invoker="clear">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="timespan" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="clear_finish" invoker="clear_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="table" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_table" c:identifier="midori_database_get_table">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_table" c:identifier="midori_database_set_table">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="path" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="midori_database_get_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_path" c:identifier="midori_database_set_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_key" c:identifier="midori_database_get_key">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_key" c:identifier="midori_database_set_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="readonly" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_readonly" c:identifier="midori_database_get_readonly">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_readonly" c:identifier="midori_database_set_readonly">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="first-use" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_first_use" c:identifier="midori_database_get_first_use">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_first_use" c:identifier="midori_database_set_first_use">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="last-row-id">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_last_row_id" c:identifier="midori_database_get_last_row_id">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="errmsg">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_errmsg" c:identifier="midori_database_get_errmsg">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Database" c:type="MidoriDatabase*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="DatabaseClass" c:type="MidoriDatabaseClass" glib:is-gtype-struct-for="Database">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="init">
			<callback name="init" c:type="init" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete">
			<callback name="delete" c:type="delete">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="item" transfer-ownership="none">
						<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete_finish">
			<callback name="delete_finish" c:type="delete_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup">
			<callback name="lookup" c:type="lookup">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup_finish">
			<callback name="lookup_finish" c:type="lookup_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="query">
			<callback name="query" c:type="query">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="filter" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="max_items" transfer-ownership="none">
						<type name="gint64" c:type="gint64"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="query_finish">
			<callback name="query_finish" c:type="query_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GLib.List" c:type="GList*">
						<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="update">
			<callback name="update" c:type="update">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="item" transfer-ownership="none">
						<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="update_finish">
			<callback name="update_finish" c:type="update_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert">
			<callback name="insert" c:type="insert">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="item" transfer-ownership="none">
						<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_finish">
			<callback name="insert_finish" c:type="insert_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear">
			<callback name="clear" c:type="clear">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="timespan" transfer-ownership="none">
						<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear_finish">
			<callback name="clear_finish" c:type="clear_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.Database" c:type="MidoriDatabase*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="DatabasePrivate" c:type="MidoriDatabasePrivate" disguised="1"/>
	<class name="DownloadButton" c:type="MidoriDownloadButton" c:symbol-prefix="download_button" glib:type-name="MidoriDownloadButton" glib:get-type="midori_download_button_get_type" glib:type-struct="DownloadButtonClass" parent="Gtk.Button">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Button" c:type="GtkButton"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DownloadButtonPrivate" c:type="MidoriDownloadButtonPrivate*"/>
		</field>
		<field name="popover" writable="1">
			<type name="Gtk.Popover" c:type="GtkPopover*"/>
		</field>
		<field name="clear" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="listbox" writable="1">
			<type name="Gtk.ListBox" c:type="GtkListBox*"/>
		</field>
		<method name="create_row" c:identifier="midori_download_button_create_row">
			<return-value transfer-ownership="full">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadButton" c:type="MidoriDownloadButton*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="GObject.Object" c:type="GObject*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="midori_download_button_new">
			<return-value transfer-ownership="none">
				<type name="Midori.DownloadButton" c:type="MidoriDownloadButton*"/>
			</return-value>
		</constructor>
		<virtual-method name="show_downloads" invoker="show_downloads">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadButton" c:type="MidoriDownloadButton*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="show-downloads">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="DownloadButtonClass" c:type="MidoriDownloadButtonClass" glib:is-gtype-struct-for="DownloadButton">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ButtonClass" c:type="GtkButtonClass"/>
		</field>
		<field name="show_downloads">
			<callback name="download_button_show_downloads" c:type="download_button_show_downloads">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.DownloadButton" c:type="MidoriDownloadButton*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="DownloadButtonPrivate" c:type="MidoriDownloadButtonPrivate" disguised="1"/>
	<class name="DownloadItem" c:type="MidoriDownloadItem" c:symbol-prefix="download_item" glib:type-name="MidoriDownloadItem" glib:get-type="midori_download_item_get_type" glib:type-struct="DownloadItemClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DownloadItemPrivate" c:type="MidoriDownloadItemPrivate*"/>
		</field>
		<field name="mime_type" writable="1" nullable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="cancel" c:identifier="midori_download_item_cancel">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="midori_download_item_new">
			<return-value transfer-ownership="full">
				<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
			</return-value>
			<parameters>
				<parameter name="filename" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_download" c:identifier="midori_download_item_new_with_download">
			<return-value transfer-ownership="full">
				<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
			</return-value>
			<parameters>
				<parameter name="download" transfer-ownership="none">
					<type name="WebKit2.Download" c:type="WebKitDownload*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="content-type">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content_type" c:identifier="midori_download_item_get_content_type">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon">
			<type name="Gio.Icon" c:type="GIcon*"/>
		</property>
		<method name="get_icon" c:identifier="midori_download_item_get_icon">
			<return-value transfer-ownership="full">
				<type name="Gio.Icon" c:type="GIcon*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="filename" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_filename" c:identifier="midori_download_item_get_filename">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_filename" c:identifier="midori_download_item_set_filename">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="basename" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_basename" c:identifier="midori_download_item_get_basename">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_basename" c:identifier="midori_download_item_set_basename">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="progress" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_progress" c:identifier="midori_download_item_get_progress">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_progress" c:identifier="midori_download_item_set_progress">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="download" writable="1">
			<type name="WebKit2.Download" c:type="WebKitDownload*"/>
		</property>
		<method name="get_download" c:identifier="midori_download_item_get_download">
			<return-value transfer-ownership="none" nullable="1">
				<type name="WebKit2.Download" c:type="WebKitDownload*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_download" c:identifier="midori_download_item_set_download">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="WebKit2.Download" c:type="WebKitDownload*"/>
				</parameter>
			</parameters>
		</method>
		<property name="loading" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_loading" c:identifier="midori_download_item_get_loading">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_loading" c:identifier="midori_download_item_set_loading">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="error" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_error" c:identifier="midori_download_item_get_error">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_error" c:identifier="midori_download_item_set_error">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="DownloadItemClass" c:type="MidoriDownloadItemClass" glib:is-gtype-struct-for="DownloadItem">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DownloadItemPrivate" c:type="MidoriDownloadItemPrivate" disguised="1"/>
	<class name="DownloadRow" c:type="MidoriDownloadRow" c:symbol-prefix="download_row" glib:type-name="MidoriDownloadRow" glib:get-type="midori_download_row_get_type" glib:type-struct="DownloadRowClass" parent="Gtk.ListBoxRow">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DownloadRowPrivate" c:type="MidoriDownloadRowPrivate*"/>
		</field>
		<field name="icon" writable="1">
			<type name="Gtk.Image" c:type="GtkImage*"/>
		</field>
		<field name="filename" writable="1">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="progress" writable="1">
			<type name="Gtk.ProgressBar" c:type="GtkProgressBar*"/>
		</field>
		<field name="cancel" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="open" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="error" writable="1">
			<type name="Gtk.Image" c:type="GtkImage*"/>
		</field>
		<field name="status" writable="1">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<constructor name="new" c:identifier="midori_download_row_new">
			<return-value transfer-ownership="none">
				<type name="Midori.DownloadRow" c:type="MidoriDownloadRow*"/>
			</return-value>
			<parameters>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="item" writable="1">
			<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
		</property>
		<method name="get_item" c:identifier="midori_download_row_get_item">
			<return-value transfer-ownership="none">
				<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadRow" c:type="MidoriDownloadRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_item" c:identifier="midori_download_row_set_item">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.DownloadRow" c:type="MidoriDownloadRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.DownloadItem" c:type="MidoriDownloadItem*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DownloadRowClass" c:type="MidoriDownloadRowClass" glib:is-gtype-struct-for="DownloadRow">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
		</field>
	</record>
	<record name="DownloadRowPrivate" c:type="MidoriDownloadRowPrivate" disguised="1"/>
	<class name="Favicon" c:type="MidoriFavicon" c:symbol-prefix="favicon" glib:type-name="MidoriFavicon" glib:get-type="midori_favicon_get_type" glib:type-struct="FaviconClass" parent="Gtk.Image">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Image" c:type="GtkImage"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FaviconPrivate" c:type="MidoriFaviconPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_favicon_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Favicon" c:type="MidoriFavicon*"/>
			</return-value>
		</constructor>
		<property name="surface" readable="0" writable="1">
			<type name="cairo.Surface" c:type="cairo_surface_t*"/>
		</property>
		<method name="set_surface" c:identifier="midori_favicon_set_surface">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Favicon" c:type="MidoriFavicon*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="cairo.Surface" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</method>
		<property name="uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="midori_favicon_get_uri">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Favicon" c:type="MidoriFavicon*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_uri" c:identifier="midori_favicon_set_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Favicon" c:type="MidoriFavicon*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="FaviconClass" c:type="MidoriFaviconClass" glib:is-gtype-struct-for="Favicon">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ImageClass" c:type="GtkImageClass"/>
		</field>
	</record>
	<record name="FaviconPrivate" c:type="MidoriFaviconPrivate" disguised="1"/>
	<class name="HistoryDatabase" c:type="MidoriHistoryDatabase" c:symbol-prefix="history_database" glib:type-name="MidoriHistoryDatabase" glib:get-type="midori_history_database_get_type" glib:type-struct="HistoryDatabaseClass" parent="Midori.Database">
		<field name="parent_instance" readable="0" private="1">
			<type name="Midori.Database" c:type="MidoriDatabase"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HistoryDatabasePrivate" c:type="MidoriHistoryDatabasePrivate*"/>
		</field>
		<function name="get_default" c:identifier="midori_history_database_get_default" throws="1">
			<return-value transfer-ownership="full">
				<type name="Midori.HistoryDatabase" c:type="MidoriHistoryDatabase*"/>
			</return-value>
			<parameters>
				<parameter name="incognito" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
	</class>
	<record name="HistoryDatabaseClass" c:type="MidoriHistoryDatabaseClass" glib:is-gtype-struct-for="HistoryDatabase">
		<field name="parent_class" readable="0" private="1">
			<type name="Midori.DatabaseClass" c:type="MidoriDatabaseClass"/>
		</field>
	</record>
	<record name="HistoryDatabasePrivate" c:type="MidoriHistoryDatabasePrivate" disguised="1"/>
	<class name="Navigationbar" c:type="MidoriNavigationbar" c:symbol-prefix="navigationbar" glib:type-name="MidoriNavigationbar" glib:get-type="midori_navigationbar_get_type" glib:type-struct="NavigationbarClass" parent="Gtk.ActionBar">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ActionBar" c:type="GtkActionBar"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="NavigationbarPrivate" c:type="MidoriNavigationbarPrivate*"/>
		</field>
		<field name="actionbox" writable="1">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</field>
		<field name="go_back" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="go_forward" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="reload" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="stop_loading" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="homepage" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<field name="urlbar" writable="1">
			<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
		</field>
		<field name="restore" writable="1">
			<type name="Gtk.Button" c:type="GtkButton*"/>
		</field>
		<constructor name="new" c:identifier="midori_navigationbar_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Navigationbar" c:type="MidoriNavigationbar*"/>
			</return-value>
		</constructor>
	</class>
	<record name="NavigationbarClass" c:type="MidoriNavigationbarClass" glib:is-gtype-struct-for="Navigationbar">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ActionBarClass" c:type="GtkActionBarClass"/>
		</field>
	</record>
	<record name="NavigationbarPrivate" c:type="MidoriNavigationbarPrivate" disguised="1"/>
	<class name="NetworkCheck" c:type="MidoriNetworkCheck" c:symbol-prefix="network_check" glib:type-name="MidoriNetworkCheck" glib:get-type="midori_network_check_get_type" glib:type-struct="NetworkCheckClass" parent="Gtk.ActionBar">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ActionBar" c:type="GtkActionBar"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="NetworkCheckPrivate" c:type="MidoriNetworkCheckPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_network_check_new">
			<return-value transfer-ownership="none">
				<type name="Midori.NetworkCheck" c:type="MidoriNetworkCheck*"/>
			</return-value>
		</constructor>
	</class>
	<record name="NetworkCheckClass" c:type="MidoriNetworkCheckClass" glib:is-gtype-struct-for="NetworkCheck">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ActionBarClass" c:type="GtkActionBarClass"/>
		</field>
	</record>
	<record name="NetworkCheckPrivate" c:type="MidoriNetworkCheckPrivate" disguised="1"/>
	<class name="Plugins" c:type="MidoriPlugins" c:symbol-prefix="plugins" glib:type-name="MidoriPlugins" glib:get-type="midori_plugins_get_type" glib:type-struct="PluginsClass" parent="Peas.Engine">
		<implements name="Midori.Loggable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Peas.Engine" c:type="PeasEngine"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PluginsPrivate" c:type="MidoriPluginsPrivate*"/>
		</field>
		<method name="plug" c:identifier="midori_plugins_plug">
			<return-value transfer-ownership="full">
				<type name="Peas.ExtensionSet" c:type="PeasExtensionSet*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Plugins" c:type="MidoriPlugins*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="object" transfer-ownership="none">
					<type name="GObject.Object" c:type="GObject*"/>
				</parameter>
			</parameters>
		</method>
		<property name="builtin-path" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_builtin_path" c:identifier="midori_plugins_get_builtin_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Plugins" c:type="MidoriPlugins*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_builtin_path" c:identifier="midori_plugins_set_builtin_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Plugins" c:type="MidoriPlugins*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="PluginsClass" c:type="MidoriPluginsClass" glib:is-gtype-struct-for="Plugins">
		<field name="parent_class" readable="0" private="1">
			<type name="Peas.EngineClass" c:type="PeasEngineClass"/>
		</field>
	</record>
	<record name="PluginsPrivate" c:type="MidoriPluginsPrivate" disguised="1"/>
	<class name="LabelWidget" c:type="MidoriLabelWidget" c:symbol-prefix="label_widget" glib:type-name="MidoriLabelWidget" glib:get-type="midori_label_widget_get_type" glib:type-struct="LabelWidgetClass" parent="Gtk.Box">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Box" c:type="GtkBox"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LabelWidgetPrivate" c:type="MidoriLabelWidgetPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_label_widget_new">
			<return-value transfer-ownership="none">
				<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="widget" transfer-ownership="none" nullable="1">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="title" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="midori_label_widget_get_title">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_title" c:identifier="midori_label_widget_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="label" writable="1">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</property>
		<method name="get_label" c:identifier="midori_label_widget_get_label">
			<return-value transfer-ownership="none">
				<type name="Gtk.Label" c:type="GtkLabel*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_label" c:identifier="midori_label_widget_set_label">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</method>
		<property name="widget" writable="1" construct="1">
			<type name="Gtk.Widget" c:type="GtkWidget*"/>
		</property>
		<method name="get_widget" c:identifier="midori_label_widget_get_widget">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_widget" c:identifier="midori_label_widget_set_widget">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.LabelWidget" c:type="MidoriLabelWidget*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LabelWidgetClass" c:type="MidoriLabelWidgetClass" glib:is-gtype-struct-for="LabelWidget">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
		</field>
	</record>
	<record name="LabelWidgetPrivate" c:type="MidoriLabelWidgetPrivate" disguised="1"/>
	<class name="Preferences" c:type="MidoriPreferences" c:symbol-prefix="preferences" glib:type-name="MidoriPreferences" glib:get-type="midori_preferences_get_type" glib:type-struct="PreferencesClass" parent="Gtk.Dialog">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Dialog" c:type="GtkDialog"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PreferencesPrivate" c:type="MidoriPreferencesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_preferences_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
			</return-value>
			<parameters>
				<parameter name="parent" transfer-ownership="none">
					<type name="Gtk.Window" c:type="GtkWindow*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add" c:identifier="midori_preferences_add">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
				</instance-parameter>
				<parameter name="label" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="widget" transfer-ownership="none">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="PreferencesClass" c:type="MidoriPreferencesClass" glib:is-gtype-struct-for="Preferences">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
		</field>
	</record>
	<record name="PreferencesPrivate" c:type="MidoriPreferencesPrivate" disguised="1"/>
	<class name="CoreSettings" c:type="MidoriCoreSettings" c:symbol-prefix="core_settings" glib:type-name="MidoriCoreSettings" glib:get-type="midori_core_settings_get_type" glib:type-struct="CoreSettingsClass" parent="Midori.Settings">
		<field name="parent_instance" readable="0" private="1">
			<type name="Midori.Settings" c:type="MidoriSettings"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CoreSettingsPrivate" c:type="MidoriCoreSettingsPrivate*"/>
		</field>
		<function name="get_default" c:identifier="midori_core_settings_get_default">
			<return-value transfer-ownership="full">
				<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
			</return-value>
		</function>
		<method name="get_plugin_enabled" c:identifier="midori_core_settings_get_plugin_enabled">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="plugin" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_plugin_enabled" c:identifier="midori_core_settings_set_plugin_enabled">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="plugin" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="enabled" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="uri_for_search" c:identifier="midori_core_settings_uri_for_search">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="keywords" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="search" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="last-window-width" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_last_window_width" c:identifier="midori_core_settings_get_last_window_width">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_last_window_width" c:identifier="midori_core_settings_set_last_window_width">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="last-window-height" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_last_window_height" c:identifier="midori_core_settings_get_last_window_height">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_last_window_height" c:identifier="midori_core_settings_set_last_window_height">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="load-on-startup" writable="1">
			<type name="Midori.StartupType" c:type="MidoriStartupType"/>
		</property>
		<method name="get_load_on_startup" c:identifier="midori_core_settings_get_load_on_startup">
			<return-value transfer-ownership="none">
				<type name="Midori.StartupType" c:type="MidoriStartupType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_load_on_startup" c:identifier="midori_core_settings_set_load_on_startup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.StartupType" c:type="MidoriStartupType"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-spell-checking" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_spell_checking" c:identifier="midori_core_settings_get_enable_spell_checking">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_spell_checking" c:identifier="midori_core_settings_set_enable_spell_checking">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="auto-load-images" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_auto_load_images" c:identifier="midori_core_settings_get_auto_load_images">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_auto_load_images" c:identifier="midori_core_settings_set_auto_load_images">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-javascript" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_javascript" c:identifier="midori_core_settings_get_enable_javascript">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_javascript" c:identifier="midori_core_settings_set_enable_javascript">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-plugins" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_plugins" c:identifier="midori_core_settings_get_enable_plugins">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_plugins" c:identifier="midori_core_settings_set_enable_plugins">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-caret-browsing" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_caret_browsing" c:identifier="midori_core_settings_get_enable_caret_browsing">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_caret_browsing" c:identifier="midori_core_settings_set_enable_caret_browsing">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="close-buttons-on-tabs" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_close_buttons_on_tabs" c:identifier="midori_core_settings_get_close_buttons_on_tabs">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_close_buttons_on_tabs" c:identifier="midori_core_settings_set_close_buttons_on_tabs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="location-entry-search" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_location_entry_search" c:identifier="midori_core_settings_get_location_entry_search">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_location_entry_search" c:identifier="midori_core_settings_set_location_entry_search">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="homepage" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_homepage" c:identifier="midori_core_settings_get_homepage">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_homepage" c:identifier="midori_core_settings_set_homepage">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="proxy-type" writable="1">
			<type name="Midori.ProxyType" c:type="MidoriProxyType"/>
		</property>
		<method name="get_proxy_type" c:identifier="midori_core_settings_get_proxy_type">
			<return-value transfer-ownership="none">
				<type name="Midori.ProxyType" c:type="MidoriProxyType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_proxy_type" c:identifier="midori_core_settings_set_proxy_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.ProxyType" c:type="MidoriProxyType"/>
				</parameter>
			</parameters>
		</method>
		<property name="http-proxy" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_http_proxy" c:identifier="midori_core_settings_get_http_proxy">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_http_proxy" c:identifier="midori_core_settings_set_http_proxy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="http-proxy-port" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_http_proxy_port" c:identifier="midori_core_settings_get_http_proxy_port">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_http_proxy_port" c:identifier="midori_core_settings_set_http_proxy_port">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="first-party-cookies-only" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_first_party_cookies_only" c:identifier="midori_core_settings_get_first_party_cookies_only">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_first_party_cookies_only" c:identifier="midori_core_settings_set_first_party_cookies_only">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="maximum-history-age" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_maximum_history_age" c:identifier="midori_core_settings_get_maximum_history_age">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_maximum_history_age" c:identifier="midori_core_settings_set_maximum_history_age">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CoreSettings" c:type="MidoriCoreSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CoreSettingsClass" c:type="MidoriCoreSettingsClass" glib:is-gtype-struct-for="CoreSettings">
		<field name="parent_class" readable="0" private="1">
			<type name="Midori.SettingsClass" c:type="MidoriSettingsClass"/>
		</field>
	</record>
	<record name="CoreSettingsPrivate" c:type="MidoriCoreSettingsPrivate" disguised="1"/>
	<class name="Settings" c:type="MidoriSettings" c:symbol-prefix="settings" glib:type-name="MidoriSettings" glib:get-type="midori_settings_get_type" glib:type-struct="SettingsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SettingsPrivate" c:type="MidoriSettingsPrivate*"/>
		</field>
		<method name="set_boolean" c:identifier="midori_settings_set_boolean">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
				<parameter name="group" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="_default_" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_boolean" c:identifier="midori_settings_get_boolean">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
				<parameter name="group" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_default_" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_string" c:identifier="midori_settings_set_string">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
				<parameter name="group" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_default_" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="midori_settings_get_string">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
				<parameter name="group" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_default_" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="midori_settings_new">
			<return-value transfer-ownership="full">
				<type name="Midori.Settings" c:type="MidoriSettings*"/>
			</return-value>
		</constructor>
		<property name="filename" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_filename" c:identifier="midori_settings_get_filename">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_filename" c:identifier="midori_settings_set_filename">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Settings" c:type="MidoriSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SettingsClass" c:type="MidoriSettingsClass" glib:is-gtype-struct-for="Settings">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SettingsPrivate" c:type="MidoriSettingsPrivate" disguised="1"/>
	<class name="Statusbar" c:type="MidoriStatusbar" c:symbol-prefix="statusbar" glib:type-name="MidoriStatusbar" glib:get-type="midori_statusbar_get_type" glib:type-struct="StatusbarClass" parent="Gtk.Statusbar">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Statusbar" c:type="GtkStatusbar"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="StatusbarPrivate" c:type="MidoriStatusbarPrivate*"/>
		</field>
		<field name="has_children" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<constructor name="new" c:identifier="midori_statusbar_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Statusbar" c:type="MidoriStatusbar*"/>
			</return-value>
		</constructor>
		<property name="label" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_label" c:identifier="midori_statusbar_get_label">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Statusbar" c:type="MidoriStatusbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_label" c:identifier="midori_statusbar_set_label">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Statusbar" c:type="MidoriStatusbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="StatusbarClass" c:type="MidoriStatusbarClass" glib:is-gtype-struct-for="Statusbar">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.StatusbarClass" c:type="GtkStatusbarClass"/>
		</field>
	</record>
	<record name="StatusbarPrivate" c:type="MidoriStatusbarPrivate" disguised="1"/>
	<class name="SuggestionRow" c:type="MidoriSuggestionRow" c:symbol-prefix="suggestion_row" glib:type-name="MidoriSuggestionRow" glib:get-type="midori_suggestion_row_get_type" glib:type-struct="SuggestionRowClass" parent="Gtk.ListBoxRow">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SuggestionRowPrivate" c:type="MidoriSuggestionRowPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_suggestion_row_new">
			<return-value transfer-ownership="none">
				<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
			</return-value>
			<parameters>
				<parameter name="item" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="item" writable="1">
			<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
		</property>
		<method name="get_item" c:identifier="midori_suggestion_row_get_item">
			<return-value transfer-ownership="none">
				<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_item" c:identifier="midori_suggestion_row_set_item">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_location" c:identifier="midori_suggestion_row_get_location">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_location" c:identifier="midori_suggestion_row_set_location">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="regex" writable="1">
			<type name="GLib.Regex" c:type="GRegex*"/>
		</property>
		<method name="get_regex" c:identifier="midori_suggestion_row_get_regex">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Regex" c:type="GRegex*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_regex" c:identifier="midori_suggestion_row_set_regex">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GLib.Regex" c:type="GRegex*"/>
				</parameter>
			</parameters>
		</method>
		<property name="key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_key" c:identifier="midori_suggestion_row_get_key">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_key" c:identifier="midori_suggestion_row_set_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.SuggestionRow" c:type="MidoriSuggestionRow*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SuggestionRowClass" c:type="MidoriSuggestionRowClass" glib:is-gtype-struct-for="SuggestionRow">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
		</field>
	</record>
	<record name="SuggestionRowPrivate" c:type="MidoriSuggestionRowPrivate" disguised="1"/>
	<class name="Switcher" c:type="MidoriSwitcher" c:symbol-prefix="switcher" glib:type-name="MidoriSwitcher" glib:get-type="midori_switcher_get_type" glib:type-struct="SwitcherClass" parent="Gtk.Box">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Box" c:type="GtkBox"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SwitcherPrivate" c:type="MidoriSwitcherPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_switcher_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Switcher" c:type="MidoriSwitcher*"/>
			</return-value>
		</constructor>
		<property name="stack" writable="1">
			<type name="Gtk.Stack" c:type="GtkStack*"/>
		</property>
		<method name="get_stack" c:identifier="midori_switcher_get_stack">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gtk.Stack" c:type="GtkStack*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Switcher" c:type="MidoriSwitcher*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_stack" c:identifier="midori_switcher_set_stack">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Switcher" c:type="MidoriSwitcher*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gtk.Stack" c:type="GtkStack*"/>
				</parameter>
			</parameters>
		</method>
		<property name="show-close-buttons" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_show_close_buttons" c:identifier="midori_switcher_get_show_close_buttons">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Switcher" c:type="MidoriSwitcher*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_show_close_buttons" c:identifier="midori_switcher_set_show_close_buttons">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Switcher" c:type="MidoriSwitcher*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SwitcherClass" c:type="MidoriSwitcherClass" glib:is-gtype-struct-for="Switcher">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
		</field>
	</record>
	<record name="SwitcherPrivate" c:type="MidoriSwitcherPrivate" disguised="1"/>
	<class name="Tab" c:type="MidoriTab" c:symbol-prefix="tab" glib:type-name="MidoriTab" glib:get-type="midori_tab_get_type" glib:type-struct="TabClass" parent="WebKit2.WebView">
		<field name="parent_instance" readable="0" private="1">
			<type name="WebKit2.WebView" c:type="WebKitWebView"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TabPrivate" c:type="MidoriTabPrivate*"/>
		</field>
		<field name="popover" writable="1">
			<type name="Gtk.Popover" c:type="GtkPopover*"/>
		</field>
		<constructor name="new" c:identifier="midori_tab_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Tab" c:type="MidoriTab*"/>
			</return-value>
			<parameters>
				<parameter name="related" transfer-ownership="none" nullable="1">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
				<parameter name="web_context" transfer-ownership="none">
					<type name="WebKit2.WebContext" c:type="WebKitWebContext*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="title" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="midori_tab_get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="progress" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_progress" c:identifier="midori_tab_get_progress">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_progress" c:identifier="midori_tab_set_progress">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="can-go-back" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_can_go_back" c:identifier="midori_tab_get_can_go_back">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_can_go_back" c:identifier="midori_tab_set_can_go_back">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="can-go-forward" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_can_go_forward" c:identifier="midori_tab_get_can_go_forward">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_can_go_forward" c:identifier="midori_tab_set_can_go_forward">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="item" writable="1">
			<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
		</property>
		<method name="get_item" c:identifier="midori_tab_get_item">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_item" c:identifier="midori_tab_set_item">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Midori.DatabaseItem" c:type="MidoriDatabaseItem*"/>
				</parameter>
			</parameters>
		</method>
		<property name="display-uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_uri" c:identifier="midori_tab_get_display_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_display_uri" c:identifier="midori_tab_set_display_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="display-title" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_title" c:identifier="midori_tab_get_display_title">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_display_title" c:identifier="midori_tab_set_display_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="color" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_color" c:identifier="midori_tab_get_color">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_color" c:identifier="midori_tab_set_color">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="pinned" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_pinned" c:identifier="midori_tab_get_pinned">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pinned" c:identifier="midori_tab_set_pinned">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="secure" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_secure" c:identifier="midori_tab_get_secure">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_secure" c:identifier="midori_tab_set_secure">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="link-uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_link_uri" c:identifier="midori_tab_get_link_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_link_uri" c:identifier="midori_tab_set_link_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="TabClass" c:type="MidoriTabClass" glib:is-gtype-struct-for="Tab">
		<field name="parent_class" readable="0" private="1">
			<type name="WebKit2.WebViewClass" c:type="WebKitWebViewClass"/>
		</field>
	</record>
	<record name="TabPrivate" c:type="MidoriTabPrivate" disguised="1"/>
	<class name="Tally" c:type="MidoriTally" c:symbol-prefix="tally" glib:type-name="MidoriTally" glib:get-type="midori_tally_get_type" glib:type-struct="TallyClass" parent="Gtk.EventBox">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.EventBox" c:type="GtkEventBox"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TallyPrivate" c:type="MidoriTallyPrivate*"/>
		</field>
		<constructor name="new" c:identifier="midori_tally_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Tally" c:type="MidoriTally*"/>
			</return-value>
			<parameters>
				<parameter name="tab" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="tab" writable="1">
			<type name="Midori.Tab" c:type="MidoriTab*"/>
		</property>
		<method name="get_tab" c:identifier="midori_tally_get_tab">
			<return-value transfer-ownership="none">
				<type name="Midori.Tab" c:type="MidoriTab*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_tab" c:identifier="midori_tally_set_tab">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</method>
		<property name="uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="midori_tally_get_uri">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_uri" c:identifier="midori_tally_set_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="title" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="midori_tally_get_title">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_title" c:identifier="midori_tally_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="show-close" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_show_close" c:identifier="midori_tally_get_show_close">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_show_close" c:identifier="midori_tally_set_show_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="active" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_active" c:identifier="midori_tally_get_active">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_active" c:identifier="midori_tally_set_active">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Tally" c:type="MidoriTally*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="clicked">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="TallyClass" c:type="MidoriTallyClass" glib:is-gtype-struct-for="Tally">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
		</field>
	</record>
	<record name="TallyPrivate" c:type="MidoriTallyPrivate" disguised="1"/>
	<class name="Urlbar" c:type="MidoriUrlbar" c:symbol-prefix="urlbar" glib:type-name="MidoriUrlbar" glib:get-type="midori_urlbar_get_type" glib:type-struct="UrlbarClass" parent="Gtk.Entry">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Entry" c:type="GtkEntry"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="UrlbarPrivate" c:type="MidoriUrlbarPrivate*"/>
		</field>
		<method name="create_row" c:identifier="midori_urlbar_create_row">
			<return-value transfer-ownership="full">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="item" transfer-ownership="none">
					<type name="GObject.Object" c:type="GObject*"/>
				</parameter>
			</parameters>
		</method>
		<method name="popdown" c:identifier="midori_urlbar_popdown">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="midori_urlbar_new">
			<return-value transfer-ownership="none">
				<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
			</return-value>
		</constructor>
		<property name="key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_key" c:identifier="midori_urlbar_get_key">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_key" c:identifier="midori_urlbar_set_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="regex" writable="1">
			<type name="GLib.Regex" c:type="GRegex*"/>
		</property>
		<method name="get_regex" c:identifier="midori_urlbar_get_regex">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Regex" c:type="GRegex*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_regex" c:identifier="midori_urlbar_set_regex">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GLib.Regex" c:type="GRegex*"/>
				</parameter>
			</parameters>
		</method>
		<property name="location" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_location" c:identifier="midori_urlbar_get_location">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_location" c:identifier="midori_urlbar_set_location">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="midori_urlbar_get_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_uri" c:identifier="midori_urlbar_set_uri">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="secure" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_secure" c:identifier="midori_urlbar_get_secure">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_secure" c:identifier="midori_urlbar_set_secure">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Urlbar" c:type="MidoriUrlbar*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="UrlbarClass" c:type="MidoriUrlbarClass" glib:is-gtype-struct-for="Urlbar">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
		</field>
	</record>
	<record name="UrlbarPrivate" c:type="MidoriUrlbarPrivate" disguised="1"/>
	<interface name="AppActivatable" c:type="MidoriAppActivatable" c:symbol-prefix="app_activatable" glib:type-name="MidoriAppActivatable" glib:get-type="midori_app_activatable_get_type" glib:type-struct="AppActivatableIface">
		<prerequisite name="Peas.ExtensionBase"/>
		<method name="activate" c:identifier="midori_app_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="app" writable="1">
			<type name="Midori.App" c:type="MidoriApp*"/>
		</property>
		<method name="get_app" c:identifier="midori_app_activatable_get_app">
			<return-value transfer-ownership="full">
				<type name="Midori.App" c:type="MidoriApp*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_app" invoker="get_app">
			<return-value transfer-ownership="full">
				<type name="Midori.App" c:type="MidoriApp*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_app" c:identifier="midori_app_activatable_set_app">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_app" invoker="set_app">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="AppActivatableIface" c:type="MidoriAppActivatableIface" glib:is-gtype-struct-for="AppActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_app">
			<callback name="get_app" c:type="get_app">
				<return-value transfer-ownership="full">
					<type name="Midori.App" c:type="MidoriApp*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_app">
			<callback name="set_app" c:type="set_app">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.AppActivatable" c:type="MidoriAppActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Midori.App" c:type="MidoriApp*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="BrowserActivatable" c:type="MidoriBrowserActivatable" c:symbol-prefix="browser_activatable" glib:type-name="MidoriBrowserActivatable" glib:get-type="midori_browser_activatable_get_type" glib:type-struct="BrowserActivatableIface">
		<prerequisite name="GObject.Object"/>
		<method name="activate" c:identifier="midori_browser_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="browser" writable="1">
			<type name="Midori.Browser" c:type="MidoriBrowser*"/>
		</property>
		<method name="get_browser" c:identifier="midori_browser_activatable_get_browser">
			<return-value transfer-ownership="full">
				<type name="Midori.Browser" c:type="MidoriBrowser*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_browser" invoker="get_browser">
			<return-value transfer-ownership="full">
				<type name="Midori.Browser" c:type="MidoriBrowser*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_browser" c:identifier="midori_browser_activatable_set_browser">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_browser" invoker="set_browser">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="deactivate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="BrowserActivatableIface" c:type="MidoriBrowserActivatableIface" glib:is-gtype-struct-for="BrowserActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_browser">
			<callback name="get_browser" c:type="get_browser">
				<return-value transfer-ownership="full">
					<type name="Midori.Browser" c:type="MidoriBrowser*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_browser">
			<callback name="set_browser" c:type="set_browser">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.BrowserActivatable" c:type="MidoriBrowserActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Midori.Browser" c:type="MidoriBrowser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable" c:symbol-prefix="clear_private_data_activatable" glib:type-name="MidoriClearPrivateDataActivatable" glib:get-type="midori_clear_private_data_activatable_get_type" glib:type-struct="ClearPrivateDataActivatableIface">
		<prerequisite name="GObject.Object"/>
		<method name="activate" c:identifier="midori_clear_private_data_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="clear" c:identifier="midori_clear_private_data_activatable_clear">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="timespan" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="clear_finish" c:identifier="midori_clear_private_data_activatable_clear_finish">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="clear" invoker="clear">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="timespan" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="clear_finish" invoker="clear_finish">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="box" writable="1">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</property>
		<method name="get_box" c:identifier="midori_clear_private_data_activatable_get_box">
			<return-value transfer-ownership="full">
				<type name="Gtk.Box" c:type="GtkBox*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_box" invoker="get_box">
			<return-value transfer-ownership="full">
				<type name="Gtk.Box" c:type="GtkBox*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_box" c:identifier="midori_clear_private_data_activatable_set_box">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gtk.Box" c:type="GtkBox*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_box" invoker="set_box">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gtk.Box" c:type="GtkBox*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ClearPrivateDataActivatableIface" c:type="MidoriClearPrivateDataActivatableIface" glib:is-gtype-struct-for="ClearPrivateDataActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear">
			<callback name="clear" c:type="clear">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
					</parameter>
					<parameter name="timespan" transfer-ownership="none">
						<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear_finish">
			<callback name="clear_finish" c:type="clear_finish">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_box">
			<callback name="get_box" c:type="get_box">
				<return-value transfer-ownership="full">
					<type name="Gtk.Box" c:type="GtkBox*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_box">
			<callback name="set_box" c:type="set_box">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.ClearPrivateDataActivatable" c:type="MidoriClearPrivateDataActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gtk.Box" c:type="GtkBox*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CompletionActivatable" c:type="MidoriCompletionActivatable" c:symbol-prefix="completion_activatable" glib:type-name="MidoriCompletionActivatable" glib:get-type="midori_completion_activatable_get_type" glib:type-struct="CompletionActivatableIface">
		<prerequisite name="Peas.ExtensionBase"/>
		<method name="activate" c:identifier="midori_completion_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="completion" writable="1">
			<type name="Midori.Completion" c:type="MidoriCompletion*"/>
		</property>
		<method name="get_completion" c:identifier="midori_completion_activatable_get_completion">
			<return-value transfer-ownership="full">
				<type name="Midori.Completion" c:type="MidoriCompletion*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_completion" invoker="get_completion">
			<return-value transfer-ownership="full">
				<type name="Midori.Completion" c:type="MidoriCompletion*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_completion" c:identifier="midori_completion_activatable_set_completion">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_completion" invoker="set_completion">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CompletionActivatableIface" c:type="MidoriCompletionActivatableIface" glib:is-gtype-struct-for="CompletionActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_completion">
			<callback name="get_completion" c:type="get_completion">
				<return-value transfer-ownership="full">
					<type name="Midori.Completion" c:type="MidoriCompletion*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_completion">
			<callback name="set_completion" c:type="set_completion">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.CompletionActivatable" c:type="MidoriCompletionActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Midori.Completion" c:type="MidoriCompletion*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Loggable" c:type="MidoriLoggable" c:symbol-prefix="loggable" glib:type-name="MidoriLoggable" glib:get-type="midori_loggable_get_type" glib:type-struct="LoggableIface">
		<prerequisite name="GObject.Object"/>
		<method name="debug" c:identifier="midori_loggable_debug" introspectable="0">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Loggable" c:type="MidoriLoggable*"/>
				</instance-parameter>
				<parameter name="format" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</method>
		<method name="get_domain" c:identifier="midori_loggable_get_domain">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Loggable" c:type="MidoriLoggable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_logging" c:identifier="midori_loggable_get_logging">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.Loggable" c:type="MidoriLoggable*"/>
				</instance-parameter>
			</parameters>
		</method>
	</interface>
	<record name="LoggableIface" c:type="MidoriLoggableIface" glib:is-gtype-struct-for="Loggable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="PreferencesActivatable" c:type="MidoriPreferencesActivatable" c:symbol-prefix="preferences_activatable" glib:type-name="MidoriPreferencesActivatable" glib:get-type="midori_preferences_activatable_get_type" glib:type-struct="PreferencesActivatableIface">
		<prerequisite name="GObject.Object"/>
		<method name="activate" c:identifier="midori_preferences_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="preferences" writable="1">
			<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
		</property>
		<method name="get_preferences" c:identifier="midori_preferences_activatable_get_preferences">
			<return-value transfer-ownership="full">
				<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_preferences" invoker="get_preferences">
			<return-value transfer-ownership="full">
				<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_preferences" c:identifier="midori_preferences_activatable_set_preferences">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_preferences" invoker="set_preferences">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="deactivate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="PreferencesActivatableIface" c:type="MidoriPreferencesActivatableIface" glib:is-gtype-struct-for="PreferencesActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_preferences">
			<callback name="get_preferences" c:type="get_preferences">
				<return-value transfer-ownership="full">
					<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_preferences">
			<callback name="set_preferences" c:type="set_preferences">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.PreferencesActivatable" c:type="MidoriPreferencesActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Midori.Preferences" c:type="MidoriPreferences*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="TabActivatable" c:type="MidoriTabActivatable" c:symbol-prefix="tab_activatable" glib:type-name="MidoriTabActivatable" glib:get-type="midori_tab_activatable_get_type" glib:type-struct="TabActivatableIface">
		<prerequisite name="Peas.ExtensionBase"/>
		<method name="activate" c:identifier="midori_tab_activatable_activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="tab" writable="1">
			<type name="Midori.Tab" c:type="MidoriTab*"/>
		</property>
		<method name="get_tab" c:identifier="midori_tab_activatable_get_tab">
			<return-value transfer-ownership="full">
				<type name="Midori.Tab" c:type="MidoriTab*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_tab" invoker="get_tab">
			<return-value transfer-ownership="full">
				<type name="Midori.Tab" c:type="MidoriTab*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_tab" c:identifier="midori_tab_activatable_set_tab">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_tab" invoker="set_tab">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="deactivate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="TabActivatableIface" c:type="MidoriTabActivatableIface" glib:is-gtype-struct-for="TabActivatable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_tab">
			<callback name="get_tab" c:type="get_tab">
				<return-value transfer-ownership="full">
					<type name="Midori.Tab" c:type="MidoriTab*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_tab">
			<callback name="set_tab" c:type="set_tab">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Midori.TabActivatable" c:type="MidoriTabActivatable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Midori.Tab" c:type="MidoriTab*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="DatabaseCallback" c:type="MidoriDatabaseCallback" throws="1">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
	</callback>
	<constant name="keys" c:identifier="MIDORI_keys" value="(null)">
		<array c:type="GDebugKey*">
			<type name="GLib.DebugKey" c:type="GDebugKey"/>
		</array>
	</constant>
</namespace>
</repository>
