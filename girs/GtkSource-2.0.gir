<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="2.0"/>
  <package name="gtksourceview-2.0"/>
  <namespace name="GtkSource"
             version="2.0"
             shared-library="libgtksourceview-2.0.so.0"
             c:identifier-prefixes="GtkSource"
             c:symbol-prefixes="gtk_source">
    <function-macro name="BUFFER"
                    c:identifier="GTK_SOURCE_BUFFER"
                    introspectable="0">
      <source-position filename="gtksourcebuffer.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_CLASS"
                    c:identifier="GTK_SOURCE_BUFFER_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcebuffer.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUFFER_GET_CLASS"
                    c:identifier="GTK_SOURCE_BUFFER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcebuffer.h" line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="BracketMatchType" c:type="GtkSourceBracketMatchType">
      <source-position filename="gtksourcebuffer.h" line="62"/>
      <member name="none"
              value="0"
              c:identifier="GTK_SOURCE_BRACKET_MATCH_NONE">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.h"
             line="50">there is no bracket to match.</doc>
      </member>
      <member name="out_of_range"
              value="1"
              c:identifier="GTK_SOURCE_BRACKET_MATCH_OUT_OF_RANGE">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.h"
             line="51">matching a bracket
 failed because the maximum range was reached.</doc>
      </member>
      <member name="not_found"
              value="2"
              c:identifier="GTK_SOURCE_BRACKET_MATCH_NOT_FOUND">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.h"
             line="53">a matching bracket was not found.</doc>
      </member>
      <member name="found"
              value="3"
              c:identifier="GTK_SOURCE_BRACKET_MATCH_FOUND">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.h"
             line="54">a matching bracket was found.</doc>
      </member>
    </enumeration>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="GtkSourceBuffer"
           parent="Gtk.TextBuffer"
           glib:type-name="GtkSourceBuffer"
           glib:get-type="gtk_source_buffer_get_type"
           glib:type-struct="BufferClass">
      <source-position filename="gtksourcebuffer.h" line="87"/>
      <constructor name="new" c:identifier="gtk_source_buffer_new">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="635">Creates a new source buffer.</doc>
        <source-position filename="gtksourcebuffer.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="641">a new source buffer.</doc>
          <type name="Buffer" c:type="GtkSourceBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="table"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="637">a #GtkTextTagTable, or %NULL to create a new one.</doc>
            <type name="Gtk.TextTagTable" c:type="GtkTextTagTable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_language"
                   c:identifier="gtk_source_buffer_new_with_language">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="651">Creates a new source buffer using the highlighting patterns in
@language.  This is equivalent to creating a new source buffer with
a new tag table and then calling gtk_source_buffer_set_language().</doc>
        <source-position filename="gtksourcebuffer.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="659">a new source buffer which will highlight text
according to the highlighting patterns in @language.</doc>
          <type name="Buffer" c:type="GtkSourceBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="653">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="bracket_matched">
        <source-position filename="gtksourcebuffer.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="BracketMatchType" c:type="GtkSourceBracketMatchType*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="redo" invoker="redo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1239">Redoes the last undo operation.  Use gtk_source_buffer_can_redo()
to check whether a call to this function will have any effect.</doc>
        <source-position filename="gtksourcebuffer.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1241">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="undo" invoker="undo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1218">Undoes the last user action which modified the buffer.  Use
gtk_source_buffer_can_undo() to check whether a call to this
function will have any effect.

Actions are defined as groups of operations between a call to
gtk_text_buffer_begin_user_action() and
gtk_text_buffer_end_user_action(), or sequences of similar edits
(inserts or deletes) on the same line.</doc>
        <source-position filename="gtksourcebuffer.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1220">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="backward_iter_to_source_mark"
              c:identifier="gtk_source_buffer_backward_iter_to_source_mark"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2004">Moves @iter to the position of the previous #GtkSourceMark of the given
category. Returns %TRUE if @iter was moved. If @category is NULL, the
previous source mark can be of any category.</doc>
        <source-position filename="gtksourcebuffer.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2014">whether @iter was moved.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2006">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2007">an iterator.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2008">category to search for, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="begin_not_undoable_action"
              c:identifier="gtk_source_buffer_begin_not_undoable_action">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1312">Marks the beginning of a not undoable action on the buffer,
disabling the undo manager.  Typically you would call this function
before initially setting the contents of the buffer (e.g. when
loading a file in a text editor).

You may nest gtk_source_buffer_begin_not_undoable_action() /
gtk_source_buffer_end_not_undoable_action() blocks.</doc>
        <source-position filename="gtksourcebuffer.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1314">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_redo"
              c:identifier="gtk_source_buffer_can_redo"
              glib:get-property="can-redo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1201">Determines whether a source buffer can redo the last action
(i.e. if the last operation was an undo).</doc>
        <source-position filename="gtksourcebuffer.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1208">%TRUE if a redo is possible.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1203">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_undo"
              c:identifier="gtk_source_buffer_can_undo"
              glib:get-property="can-undo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1185">Determines whether a source buffer can undo the last action.</doc>
        <source-position filename="gtksourcebuffer.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1191">%TRUE if it's possible to undo the last action.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1187">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_source_mark"
              c:identifier="gtk_source_buffer_create_source_mark"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1812">Creates a source mark in the @buffer of category @category.  A source mark is
a #GtkTextMark but organised into categories. Depending on the category
a pixbuf can be specified that will be displayed along the line of the mark.

Like a #GtkTextMark, a #GtkSourceMark can be anonymous if the
passed @name is %NULL.  Also, the buffer owns the marks so you
shouldn't unreference it.

Marks always have left gravity and are moved to the beginning of
the line when the user deletes the line they were in.

Typical uses for a source mark are bookmarks, breakpoints, current
executing instruction indication in a source file, etc..</doc>
        <source-position filename="gtksourcebuffer.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1833">a new #GtkSourceMark, owned by the buffer.</doc>
          <type name="Mark" c:type="GtkSourceMark*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1814">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1815">the name of the mark, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1816">a string defining the mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="where" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1817">location to place the mark.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="end_not_undoable_action"
              c:identifier="gtk_source_buffer_end_not_undoable_action">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1332">Marks the end of a not undoable action on the buffer.  When the
last not undoable block is closed through the call to this
function, the list of undo actions is cleared and the undo manager
is re-enabled.</doc>
        <source-position filename="gtksourcebuffer.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1334">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ensure_highlight"
              c:identifier="gtk_source_buffer_ensure_highlight">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1552">Forces buffer to analyze and highlight the given area synchronously.

&lt;note&gt;
  &lt;para&gt;
    This is a potentially slow operation and should be used only
    when you need to make sure that some text not currently
    visible is highlighted, for instance before printing.
  &lt;/para&gt;
&lt;/note&gt;</doc>
        <source-position filename="gtksourcebuffer.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1554">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1555">start of the area to highlight.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1556">end of the area to highlight.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="forward_iter_to_source_mark"
              c:identifier="gtk_source_buffer_forward_iter_to_source_mark"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1945">Moves @iter to the position of the next #GtkSourceMark of the given
@category. Returns %TRUE if @iter was moved. If @category is NULL, the
next source mark can be of any category.</doc>
        <source-position filename="gtksourcebuffer.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1955">whether @iter was moved.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1947">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1948">an iterator.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1949">category to search for, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_context_classes_at_iter"
              c:identifier="gtk_source_buffer_get_context_classes_at_iter"
              version="2.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2259">Get all defined context classes at @iter.</doc>
        <source-position filename="gtksourcebuffer.h" line="165"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2266">a new %NULL terminated array of context
class names. Use #g_strfreev to free the array if it is no longer needed.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2261">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2262">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_highlight_matching_brackets"
              c:identifier="gtk_source_buffer_get_highlight_matching_brackets"
              glib:get-property="highlight-matching-brackets">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1349">Determines whether bracket match highlighting is activated for the
source buffer.</doc>
        <source-position filename="gtksourcebuffer.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1356">%TRUE if the source buffer will highlight matching
brackets.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1351">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_highlight_syntax"
              c:identifier="gtk_source_buffer_get_highlight_syntax"
              glib:get-property="highlight-syntax">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1409">Determines whether syntax highlighting is activated in the source
buffer.</doc>
        <source-position filename="gtksourcebuffer.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1416">%TRUE if syntax highlighting is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1411">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language"
              c:identifier="gtk_source_buffer_get_language"
              glib:get-property="language">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1510">Returns the #GtkSourceLanguage associated with the buffer,
see gtk_source_buffer_set_language().  The returned object should not be
unreferenced by the user.</doc>
        <source-position filename="gtksourcebuffer.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1518">the #GtkSourceLanguage associated with the buffer, or %NULL.</doc>
          <type name="Language" c:type="GtkSourceLanguage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1512">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_undo_levels"
              c:identifier="gtk_source_buffer_get_max_undo_levels"
              glib:get-property="max-undo-levels">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1254">Determines the number of undo levels the buffer will track for
buffer edits.</doc>
        <source-position filename="gtksourcebuffer.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1261">the maximum number of possible undo levels or
              -1 if no limit is set.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1256">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_marks_at_iter"
              c:identifier="gtk_source_buffer_get_source_marks_at_iter"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2062">Returns the list of marks of the given category at @iter. If @category
is %NULL it returns all marks at @iter.</doc>
        <source-position filename="gtksourcebuffer.h" line="147"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2071">a newly allocated #GSList.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Mark"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2064">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2065">an iterator.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2066">category to search for, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source_marks_at_line"
              c:identifier="gtk_source_buffer_get_source_marks_at_line"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2107">Returns the list of marks of the given category at @line.
If @category is NULL, all marks at @line are returned.</doc>
        <source-position filename="gtksourcebuffer.h" line="151"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2116">a newly allocated #GSList.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Mark"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2109">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="line" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2110">a line number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2111">category to search for, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_style_scheme"
              c:identifier="gtk_source_buffer_get_style_scheme"
              glib:get-property="style-scheme">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1610">Returns the #GtkSourceStyleScheme associated with the buffer,
see gtk_source_buffer_set_style_scheme().
The returned object should not be unreferenced by the user.</doc>
        <source-position filename="gtksourcebuffer.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="1618">the #GtkSourceStyleScheme associated
with the buffer, or %NULL.</doc>
          <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1612">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_undo_manager"
              c:identifier="gtk_source_buffer_get_undo_manager"
              glib:get-property="undo-manager">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2423">Returns the #GtkSourceUndoManager associated with the buffer,
see gtk_source_buffer_set_undo_manager().  The returned object should not be
unreferenced by the user.</doc>
        <source-position filename="gtksourcebuffer.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2431">the #GtkSourceUndoManager associated with the buffer, or %NULL.</doc>
          <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2425">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="iter_backward_to_context_class_toggle"
              c:identifier="gtk_source_buffer_iter_backward_to_context_class_toggle"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2345">Moves backward to the next toggle (on or off) of the context class. If no
matching context class toggles are found, returns %FALSE, otherwise %TRUE.
Does not return toggles located at @iter, only toggles after @iter. Sets
@iter to the location of the toggle, or to the end of the buffer if no
toggle is found.</doc>
        <source-position filename="gtksourcebuffer.h" line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2357">whether we found a context class toggle before @iter</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2347">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2348">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="context_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2349">the context class.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="iter_forward_to_context_class_toggle"
              c:identifier="gtk_source_buffer_iter_forward_to_context_class_toggle"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2300">Moves forward to the next toggle (on or off) of the context class. If no
matching context class toggles are found, returns %FALSE, otherwise %TRUE.
Does not return toggles located at @iter, only toggles after @iter. Sets
@iter to the location of the toggle, or to the end of the buffer if no
toggle is found.</doc>
        <source-position filename="gtksourcebuffer.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcebuffer.c"
               line="2312">whether we found a context class toggle after @iter</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2302">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2303">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="context_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2304">the context class.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="iter_has_context_class"
              c:identifier="gtk_source_buffer_iter_has_context_class"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2220">Check if the class @context_klass is set on @iter.</doc>
        <source-position filename="gtksourcebuffer.h" line="160"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2222">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2223">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
          <parameter name="context_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2224">class to search for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="redo" c:identifier="gtk_source_buffer_redo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1239">Redoes the last undo operation.  Use gtk_source_buffer_can_redo()
to check whether a call to this function will have any effect.</doc>
        <source-position filename="gtksourcebuffer.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1241">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_source_marks"
              c:identifier="gtk_source_buffer_remove_source_marks"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2160">Remove all marks of @category between @start and @end from the buffer.
If @category is NULL, all marks in the range will be removed.</doc>
        <source-position filename="gtksourcebuffer.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2162">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2163">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2164">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2165">category to search for, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_highlight_matching_brackets"
              c:identifier="gtk_source_buffer_set_highlight_matching_brackets"
              glib:set-property="highlight-matching-brackets">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1367">Controls the bracket match highlighting function in the buffer.  If
activated, when you position your cursor over a bracket character
(a parenthesis, a square bracket, etc.) the matching opening or
closing bracket character will be highlighted.  You can specify the
style with the gtk_source_buffer_set_bracket_match_style()
function.</doc>
        <source-position filename="gtksourcebuffer.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1369">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="highlight" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1370">%TRUE if you want matching brackets highlighted.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_highlight_syntax"
              c:identifier="gtk_source_buffer_set_highlight_syntax"
              glib:set-property="highlight-syntax">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1426">Controls whether syntax is highlighted in the buffer. If @highlight
is %TRUE, the text will be highlighted according to the syntax
patterns specified in the language set with
gtk_source_buffer_set_language(). If @highlight is %FALSE, syntax highlighting
is disabled and all the GtkTextTag objects that have been added by the
syntax highlighting engine are removed from the buffer.</doc>
        <source-position filename="gtksourcebuffer.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1428">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="highlight" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1429">%TRUE to enable syntax highlighting, %FALSE to disable it.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_language"
              c:identifier="gtk_source_buffer_set_language"
              glib:set-property="language">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1453">Associate a #GtkSourceLanguage with the buffer. If @language is
not-%NULL and syntax highlighting is enabled (see gtk_source_buffer_set_highlight_syntax()),
the syntax patterns defined in @language will be used to highlight the text
contained in the buffer. If @language is %NULL, the text contained in the
buffer is not highlighted.

The buffer holds a reference to @language.</doc>
        <source-position filename="gtksourcebuffer.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1455">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="language"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1456">a #GtkSourceLanguage to set, or %NULL.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_undo_levels"
              c:identifier="gtk_source_buffer_set_max_undo_levels"
              glib:set-property="max-undo-levels">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1272">Sets the number of undo levels for user actions the buffer will
track.  If the number of user actions exceeds the limit set by this
function, older actions will be discarded.

If @max_undo_levels is -1, no limit is set.

A new action is started whenever the function
gtk_text_buffer_begin_user_action() is called.  In general, this
happens whenever the user presses any key which modifies the
buffer, but the undo manager will try to merge similar consecutive
actions, such as multiple character insertions into one action.
But, inserting a newline does start a new action.</doc>
        <source-position filename="gtksourcebuffer.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1274">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="max_undo_levels" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1275">the desired maximum number of undo levels.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_style_scheme"
              c:identifier="gtk_source_buffer_set_style_scheme"
              glib:set-property="style-scheme">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1579">Sets style scheme used by the buffer. If @scheme is %NULL no
style scheme is used.</doc>
        <source-position filename="gtksourcebuffer.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1581">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="scheme"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1582">a #GtkSourceStyleScheme or %NULL.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_undo_manager"
              c:identifier="gtk_source_buffer_set_undo_manager"
              glib:set-property="undo-manager">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="2390">Set the buffer undo manager. If @manager is %NULL the default undo manager
will be set.</doc>
        <source-position filename="gtksourcebuffer.h" line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2392">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
          <parameter name="manager"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="2393">A #GtkSourceUndoManager or %NULL.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </parameter>
        </parameters>
      </method>
      <method name="undo" c:identifier="gtk_source_buffer_undo">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="1218">Undoes the last user action which modified the buffer.  Use
gtk_source_buffer_can_undo() to check whether a call to this
function will have any effect.

Actions are defined as groups of operations between a call to
gtk_text_buffer_begin_user_action() and
gtk_text_buffer_end_user_action(), or sequences of similar edits
(inserts or deletes) on the same line.</doc>
        <source-position filename="gtksourcebuffer.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="1220">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="can-redo"
                transfer-ownership="none"
                getter="can_redo"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-undo"
                transfer-ownership="none"
                getter="can_undo"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="highlight-matching-brackets"
                writable="1"
                transfer-ownership="none"
                setter="set_highlight_matching_brackets"
                getter="get_highlight_matching_brackets"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="230">Whether to highlight matching brackets in the buffer.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="highlight-syntax"
                writable="1"
                transfer-ownership="none"
                setter="set_highlight_syntax"
                getter="get_highlight_syntax"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="216">Whether to highlight syntax in the buffer.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="language"
                writable="1"
                transfer-ownership="none"
                setter="set_language"
                getter="get_language">
        <type name="Language"/>
      </property>
      <property name="max-undo-levels"
                writable="1"
                transfer-ownership="none"
                setter="set_max_undo_levels"
                getter="get_max_undo_levels"
                default-value="1000">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="243">Number of undo levels for the buffer. -1 means no limit. This property
will only affect the default undo manager.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="style-scheme"
                writable="1"
                transfer-ownership="none"
                setter="set_style_scheme"
                getter="get_style_scheme">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="287">Style scheme. It contains styles for syntax highlighting, optionally
foreground, background, cursor color, current line color, and matching
brackets style.</doc>
        <type name="StyleScheme"/>
      </property>
      <property name="undo-manager"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_undo_manager"
                getter="get_undo_manager">
        <type name="UndoManager"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.TextBuffer" c:type="GtkTextBuffer"/>
      </field>
      <field name="priv">
        <type name="BufferPrivate" c:type="GtkSourceBufferPrivate*"/>
      </field>
      <glib:signal name="bracket-matched"
                   when="last"
                   version="2.12"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="359">Sets @iter to a valid iterator pointing to the matching bracket
if @state is #GTK_SOURCE_BRACKET_MATCH_FOUND.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="362">iterator to initialize.</doc>
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcebuffer.c"
                 line="363">state of bracket matching</doc>
            <type/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="highlight-updated" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="Gtk.TextIter"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="redo" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="source-mark-updated" when="last">
        <doc xml:space="preserve"
             filename="gtksourcebuffer.c"
             line="322">The ::source_mark_updated signal is emitted each time
a mark is added to, moved or removed from the @buffer.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gtk.TextMark"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="undo" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="BufferClass"
            c:type="GtkSourceBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <source-position filename="gtksourcebuffer.h" line="87"/>
      <field name="parent_class">
        <type name="Gtk.TextBufferClass" c:type="GtkTextBufferClass"/>
      </field>
      <field name="undo">
        <callback name="undo">
          <source-position filename="gtksourcebuffer.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcebuffer.c"
                   line="1220">a #GtkSourceBuffer.</doc>
              <type name="Buffer" c:type="GtkSourceBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="redo">
        <callback name="redo">
          <source-position filename="gtksourcebuffer.h" line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcebuffer.c"
                   line="1241">a #GtkSourceBuffer.</doc>
              <type name="Buffer" c:type="GtkSourceBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="bracket_matched">
        <callback name="bracket_matched">
          <source-position filename="gtksourcebuffer.h" line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GtkSourceBuffer*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <type name="BracketMatchType"
                    c:type="GtkSourceBracketMatchType*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcebuffer.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcebuffer.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved3" introspectable="0">
        <callback name="_gtk_source_reserved3">
          <source-position filename="gtksourcebuffer.h" line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BufferPrivate"
            c:type="GtkSourceBufferPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcebuffer.h" line="46"/>
    </record>
    <function-macro name="COMPLETION"
                    c:identifier="GTK_SOURCE_COMPLETION"
                    introspectable="0">
      <source-position filename="gtksourcecompletion.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="COMPLETION_CAPABILITY_AUTOMATIC"
              value="standard::automatic"
              c:type="GTK_SOURCE_COMPLETION_CAPABILITY_AUTOMATIC">
      <source-position filename="gtksourcecompletionprovider.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="COMPLETION_CAPABILITY_INTERACTIVE"
              value="standard::interactive"
              c:type="GTK_SOURCE_COMPLETION_CAPABILITY_INTERACTIVE">
      <source-position filename="gtksourcecompletionprovider.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="COMPLETION_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletion.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_CONTEXT"
                    c:identifier="GTK_SOURCE_COMPLETION_CONTEXT"
                    introspectable="0">
      <source-position filename="gtksourcecompletioncontext.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_CONTEXT_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_CONTEXT_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletioncontext.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_CONTEXT_CONST"
                    c:identifier="GTK_SOURCE_COMPLETION_CONTEXT_CONST"
                    introspectable="0">
      <source-position filename="gtksourcecompletioncontext.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_CONTEXT_GET_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_CONTEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletioncontext.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_GET_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletion.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_INFO"
                    c:identifier="GTK_SOURCE_COMPLETION_INFO"
                    introspectable="0">
      <source-position filename="gtksourcecompletioninfo.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_INFO_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_INFO_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletioninfo.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_INFO_GET_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletioninfo.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_ITEM"
                    c:identifier="GTK_SOURCE_COMPLETION_ITEM"
                    introspectable="0">
      <source-position filename="gtksourcecompletionitem.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_ITEM_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_ITEM_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletionitem.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_ITEM_CONST"
                    c:identifier="GTK_SOURCE_COMPLETION_ITEM_CONST"
                    introspectable="0">
      <source-position filename="gtksourcecompletionitem.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_ITEM_GET_CLASS"
                    c:identifier="GTK_SOURCE_COMPLETION_ITEM_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcecompletionitem.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_PROPOSAL"
                    c:identifier="GTK_SOURCE_COMPLETION_PROPOSAL"
                    introspectable="0">
      <source-position filename="gtksourcecompletionproposal.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_PROPOSAL_GET_INTERFACE"
                    c:identifier="GTK_SOURCE_COMPLETION_PROPOSAL_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="gtksourcecompletionproposal.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_PROVIDER"
                    c:identifier="GTK_SOURCE_COMPLETION_PROVIDER"
                    introspectable="0">
      <source-position filename="gtksourcecompletionprovider.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COMPLETION_PROVIDER_GET_INTERFACE"
                    c:identifier="GTK_SOURCE_COMPLETION_PROVIDER_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="gtksourcecompletionprovider.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Completion"
           c:symbol-prefix="completion"
           c:type="GtkSourceCompletion"
           parent="Gtk.Object"
           glib:type-name="GtkSourceCompletion"
           glib:get-type="gtk_source_completion_get_type"
           glib:type-struct="CompletionClass">
      <source-position filename="gtksourcecompletion.h" line="85"/>
      <function name="error_quark"
                c:identifier="gtk_source_completion_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="activate_proposal">
        <source-position filename="gtksourcecompletion.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide" invoker="hide">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3493">Hides the completion if it is active (visible).</doc>
        <source-position filename="gtksourcecompletion.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3495">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_cursor">
        <source-position filename="gtksourcecompletion.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="Gtk.ScrollStep" c:type="GtkScrollStep"/>
          </parameter>
          <parameter name="num" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_page">
        <source-position filename="gtksourcecompletion.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="Gtk.ScrollStep" c:type="GtkScrollStep"/>
          </parameter>
          <parameter name="num" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="populate_context">
        <source-position filename="gtksourcecompletion.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="proposal_activated">
        <source-position filename="gtksourcecompletion.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="provider" transfer-ownership="none">
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </parameter>
          <parameter name="proposal" transfer-ownership="none">
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show">
        <source-position filename="gtksourcecompletion.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_provider"
              c:identifier="gtk_source_completion_add_provider"
              throws="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3361">Add a new #GtkSourceCompletionProvider to the completion object. This will
add a reference @provider, so make sure to unref your own copy when you
no longer need it.</doc>
        <source-position filename="gtksourcecompletion.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3371">%TRUE if @provider was successfully added, otherwise if @error
         is provided, it will be set with the error and %FALSE is returned.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3363">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3364">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="block_interactive"
              c:identifier="gtk_source_completion_block_interactive">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3601">Block interactive completion. This can be used to disable interactive
completion when inserting or deleting text from the buffer associated with
the completion. Use #gtk_source_completion_unblock_interactive to enable
interactive completion again.</doc>
        <source-position filename="gtksourcecompletion.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3603">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_context"
              c:identifier="gtk_source_completion_create_context"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3543">Create a new #GtkSourceCompletionContext for @completion. The position at
which the completion using the new context will consider completion can
be provider by @position. If @position is %NULL, the current cursor
position will be used.</doc>
        <source-position filename="gtksourcecompletion.h" line="114"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3553">a new #GtkSourceCompletionContext. The reference being returned
is a 'floating' reference, so if you invoke #gtk_source_completion_show
with this context you don't need to unref it.</doc>
          <type name="CompletionContext" c:type="GtkSourceCompletionContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3545">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="position"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3546">a #GtkTextIter, or %NULL.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_info_window"
              c:identifier="gtk_source_completion_get_info_window">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3511">The info widget is the window where the completion displays optional extra
information of the proposal.</doc>
        <source-position filename="gtksourcecompletion.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3518">The #GtkSourceCompletionInfo window
                          associated with @completion.</doc>
          <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3513">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_providers"
              c:identifier="gtk_source_completion_get_providers"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3314">Get list of providers registered on @completion. The returned list is owned
by the completion and should not be freed.</doc>
        <source-position filename="gtksourcecompletion.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3321">list of #GtkSourceCompletionProvider.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3316">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view"
              c:identifier="gtk_source_completion_get_view"
              glib:get-property="view">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3527">The #GtkSourceView associated with @completion.</doc>
        <source-position filename="gtksourcecompletion.h" line="111"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3533">The #GtkSourceView associated with @completion.</doc>
          <type name="gpointer" c:type="_GtkSourceView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3529">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="gtk_source_completion_hide">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3493">Hides the completion if it is active (visible).</doc>
        <source-position filename="gtksourcecompletion.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3495">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_window"
              c:identifier="gtk_source_completion_move_window">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3577">Move the completion window to a specific iter.</doc>
        <source-position filename="gtksourcecompletion.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3579">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3580">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_provider"
              c:identifier="gtk_source_completion_remove_provider"
              throws="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3426">Remove @provider from the completion.</doc>
        <source-position filename="gtksourcecompletion.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3434">%TRUE if @provider was successfully removed, otherwise if @error
         is provided, it will be set with the error and %FALSE is returned.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3428">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3429">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show"
              c:identifier="gtk_source_completion_show"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3252">Starts a new completion with the specified #GtkSourceCompletionContext and
a list of potential candidate providers for completion.</doc>
        <source-position filename="gtksourcecompletion.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletion.c"
               line="3261">%TRUE if it was possible to the show completion window.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3254">z #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
          <parameter name="providers"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3255">z list of #GtkSourceCompletionProvider, or %NULL.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3256">The #GtkSourceCompletionContext with which to start the completion.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unblock_interactive"
              c:identifier="gtk_source_completion_unblock_interactive">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="3621">Unblock interactive completion. This can be used after using
#gtk_source_completion_block_interactive to enable interactive completion
again.</doc>
        <source-position filename="gtksourcecompletion.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="completion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="3623">a #GtkSourceCompletion.</doc>
            <type name="Completion" c:type="GtkSourceCompletion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="accelerators"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="5">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2298">Number of accelerators to show for the first proposals.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="auto-complete-delay"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="250">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2314">Determines the popup delay (in milliseconds) at which the completion
will be shown for interactive completion.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="proposal-page-size"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="5">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2347">The scroll page size of the proposals in the completion window.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="provider-page-size"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="5">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2331">The scroll page size of the provider pages in the completion window.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="remember-info-visibility"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2238">Determines whether the visibility of the info window should be
saved when the completion is hidden, and restored when the completion
is shown again.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="select-on-show"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2253">Determines whether the first proposal should be selected when the
completion is first shown.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-headers"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2268">Determines whether provider headers should be shown in the proposal
list if there is more than one provider with proposals.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-icons"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2283">Determines whether provider and proposal icons should be shown in
the completion popup.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="view"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_view">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2224">The #GtkSourceView bound to the completion object.</doc>
        <type name="View"/>
      </property>
      <field name="parent">
        <type name="Gtk.Object" c:type="GtkObject"/>
      </field>
      <field name="priv">
        <type name="CompletionPrivate" c:type="GtkSourceCompletionPrivate*"/>
      </field>
      <glib:signal name="activate-proposal" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2480">The ::activate-proposal signal is a keybinding signal which gets
emitted when the user initiates a proposal activation.

Applications should not connect to it, but may emit it with
#g_signal_emit_by_name if they need to control the proposal activation
programmatically.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="hide" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2383">Emitted when the completion window is hidden. The default handler
will actually hide the window.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="move-cursor" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2425">The ::move-cursor signal is a keybinding signal which gets emitted when
the user initiates a cursor movement.

Applications should not connect to it, but may emit it with
#g_signal_emit_by_name if they need to control the cursor
programmatically.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="2428">The #GtkScrollStep by which to move the cursor</doc>
            <type name="Gtk.ScrollStep"/>
          </parameter>
          <parameter name="num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="2429">The amount of steps to move the cursor</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-page" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2452">The ::move-page signal is a keybinding signal which gets emitted when
the user initiates a page movement (i.e. switches between provider
pages).

Applications should not connect to it, but may emit it with
#g_signal_emit_by_name if they need to control the page selection
programmatically.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="2455">The #GtkScrollStep by which to move the page</doc>
            <type name="Gtk.ScrollStep"/>
          </parameter>
          <parameter name="num" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="2456">The amount of steps to move the page</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="populate-context" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2402">Emitted just before starting to populate the completion with providers.
You can use this signal to add additional attributes in the context.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletion.c"
                 line="2405">The #GtkSourceCompletionContext for the current completion</doc>
            <type name="CompletionContext"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletion.c"
             line="2363">Emitted when the completion window is shown. The default handler
will actually show the window.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <bitfield name="CompletionActivation"
              c:type="GtkSourceCompletionActivation">
      <source-position filename="gtksourcecompletioncontext.h" line="54"/>
      <member name="none"
              value="0"
              c:identifier="GTK_SOURCE_COMPLETION_ACTIVATION_NONE">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.h"
             line="44">none.</doc>
      </member>
      <member name="interactive"
              value="1"
              c:identifier="GTK_SOURCE_COMPLETION_ACTIVATION_INTERACTIVE">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.h"
             line="45">interactive activation</doc>
      </member>
      <member name="user_requested"
              value="2"
              c:identifier="GTK_SOURCE_COMPLETION_ACTIVATION_USER_REQUESTED">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.h"
             line="46">user requested activation
(e.g. through a keyboard accelerator from the view)</doc>
      </member>
    </bitfield>
    <record name="CompletionClass"
            c:type="GtkSourceCompletionClass"
            glib:is-gtype-struct-for="Completion">
      <source-position filename="gtksourcecompletion.h" line="85"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="proposal_activated">
        <callback name="proposal_activated">
          <source-position filename="gtksourcecompletion.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
            <parameter name="provider" transfer-ownership="none">
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="proposal" transfer-ownership="none">
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="gtksourcecompletion.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide">
        <callback name="hide">
          <source-position filename="gtksourcecompletion.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletion.c"
                   line="3495">a #GtkSourceCompletion.</doc>
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="populate_context">
        <callback name="populate_context">
          <source-position filename="gtksourcecompletion.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="CompletionContext"
                    c:type="GtkSourceCompletionContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_cursor">
        <callback name="move_cursor">
          <source-position filename="gtksourcecompletion.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
            <parameter name="step" transfer-ownership="none">
              <type name="Gtk.ScrollStep" c:type="GtkScrollStep"/>
            </parameter>
            <parameter name="num" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_page">
        <callback name="move_page">
          <source-position filename="gtksourcecompletion.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
            <parameter name="step" transfer-ownership="none">
              <type name="Gtk.ScrollStep" c:type="GtkScrollStep"/>
            </parameter>
            <parameter name="num" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate_proposal">
        <callback name="activate_proposal">
          <source-position filename="gtksourcecompletion.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="completion" transfer-ownership="none">
              <type name="Completion" c:type="GtkSourceCompletion*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="CompletionContext"
           c:symbol-prefix="completion_context"
           c:type="GtkSourceCompletionContext"
           parent="GObject.InitiallyUnowned"
           glib:type-name="GtkSourceCompletionContext"
           glib:get-type="gtk_source_completion_context_get_type"
           glib:type-struct="CompletionContextClass">
      <source-position filename="gtksourcecompletioncontext.h" line="75"/>
      <virtual-method name="cancelled">
        <source-position filename="gtksourcecompletioncontext.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_proposals"
              c:identifier="gtk_source_completion_context_add_proposals"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="286">Providers can use this function to add proposals to the completion. They
can do so asynchronously by means of the @finished argument. Providers must
ensure that they always call this function with @finished set to %TRUE
once each population (even if no proposals need to be added).</doc>
        <source-position filename="gtksourcecompletioncontext.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="288">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </instance-parameter>
          <parameter name="provider"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="289">a #GtkSourceCompletionProvider.</doc>
            <type name="gpointer" c:type="_GtkSourceCompletionProvider*"/>
          </parameter>
          <parameter name="proposals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="290">The list of proposals to add.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="finished" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="291">Whether the provider is finished adding proposals.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activation"
              c:identifier="gtk_source_completion_context_get_activation">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="344">Get the context activation.</doc>
        <source-position filename="gtksourcecompletioncontext.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletioncontext.c"
               line="350">The context activation.</doc>
          <type name="CompletionActivation"
                c:type="GtkSourceCompletionActivation"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="346">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_iter"
              c:identifier="gtk_source_completion_context_get_iter"
              glib:get-property="iter">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="314">Get the iter at which the completion was invoked. Providers can use this
to determine how and if to match proposals.</doc>
        <source-position filename="gtksourcecompletioncontext.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="316">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioncontext.c"
                 line="317">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <property name="activation"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="GTK_SOURCE_COMPLETION_ACTIVATION_NONE">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="263">The completion activation</doc>
        <type/>
      </property>
      <property name="completion"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="236">The #GtkSourceCompletion associated with the context.</doc>
        <type name="Completion"/>
      </property>
      <property name="iter"
                writable="1"
                transfer-ownership="none"
                getter="get_iter">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="249">The #GtkTextIter at which the completion is invoked.</doc>
        <type name="Gtk.TextIter"/>
      </property>
      <field name="parent">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv">
        <type name="CompletionContextPrivate"
              c:type="GtkSourceCompletionContextPrivate*"/>
      </field>
      <glib:signal name="cancelled" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletioncontext.c"
             line="218">Emitted when the current population of proposals has been cancelled.
Providers adding proposals asynchronously should connect to this signal
to know when to cancel running proposal queries.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CompletionContextClass"
            c:type="GtkSourceCompletionContextClass"
            glib:is-gtype-struct-for="CompletionContext">
      <source-position filename="gtksourcecompletioncontext.h" line="75"/>
      <field name="parent_class">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="cancelled">
        <callback name="cancelled">
          <source-position filename="gtksourcecompletioncontext.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="CompletionContext"
                    c:type="GtkSourceCompletionContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcecompletioncontext.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcecompletioncontext.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved3" introspectable="0">
        <callback name="_gtk_source_reserved3">
          <source-position filename="gtksourcecompletioncontext.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CompletionContextPrivate"
            c:type="GtkSourceCompletionContextPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcecompletioncontext.h" line="40"/>
    </record>
    <enumeration name="CompletionError" c:type="GtkSourceCompletionError">
      <source-position filename="gtksourcecompletion.h" line="53"/>
      <member name="already_bound"
              value="0"
              c:identifier="GTK_SOURCE_COMPLETION_ERROR_ALREADY_BOUND">
      </member>
      <member name="not_bound"
              value="1"
              c:identifier="GTK_SOURCE_COMPLETION_ERROR_NOT_BOUND">
      </member>
    </enumeration>
    <class name="CompletionInfo"
           c:symbol-prefix="completion_info"
           c:type="GtkSourceCompletionInfo"
           parent="Gtk.Window"
           glib:type-name="GtkSourceCompletionInfo"
           glib:get-type="gtk_source_completion_info_get_type"
           glib:type-struct="CompletionInfoClass">
      <source-position filename="gtksourcecompletioninfo.h" line="56"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gtk_source_completion_info_new">
        <source-position filename="gtksourcecompletioninfo.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletioninfo.c"
               line="391">a new GtkSourceCompletionInfo.</doc>
          <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
        </return-value>
      </constructor>
      <virtual-method name="before_show">
        <source-position filename="gtksourcecompletioninfo.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_widget"
              c:identifier="gtk_source_completion_info_get_widget">
        <doc xml:space="preserve"
             filename="gtksourcecompletioninfo.c"
             line="610">Get the current content widget.</doc>
        <source-position filename="gtksourcecompletioninfo.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletioninfo.c"
               line="616">The current content widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="612">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_to_iter"
              c:identifier="gtk_source_completion_info_move_to_iter">
        <doc xml:space="preserve"
             filename="gtksourcecompletioninfo.c"
             line="401">Moves the #GtkSourceCompletionInfo to @iter. If @iter is %NULL @info is
moved to the cursor position. Moving will respect the #GdkGravity setting
of the info window and will ensure the line at @iter is not occluded by
the window.</doc>
        <source-position filename="gtksourcecompletioninfo.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="403">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
          <parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="404">a #GtkTextView on which the info window should be positioned.</doc>
            <type name="Gtk.TextView" c:type="GtkTextView*"/>
          </parameter>
          <parameter name="iter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="405">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_resize"
              c:identifier="gtk_source_completion_info_process_resize">
        <source-position filename="gtksourcecompletioninfo.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_sizing"
              c:identifier="gtk_source_completion_info_set_sizing">
        <doc xml:space="preserve"
             filename="gtksourcecompletioninfo.c"
             line="440">Set sizing information for the info window. If @shrink_width or
@shrink_height is %TRUE, the info window will try to resize to fit the
window contents, with a maximum size given by @width and @height. Setting
@width or @height to -1 removes the maximum size of respectively the width
and height of the window.</doc>
        <source-position filename="gtksourcecompletioninfo.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="442">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="443">The maximum/requested width of the window (-1 to default).</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="444">The maximum/requested height of the window (-1 to default).</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="shrink_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="445">Whether to shrink the width of the window to fit its contents.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="shrink_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="446">Whether to shrink the height of the window to fit its
                contents.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_widget"
              c:identifier="gtk_source_completion_info_set_widget">
        <doc xml:space="preserve"
             filename="gtksourcecompletioninfo.c"
             line="530">Sets the content widget of the info window. If @widget does not fit within
the size requirements of the window, a #GtkScrolledWindow will automatically
be created and added to the window.</doc>
        <source-position filename="gtksourcecompletioninfo.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="532">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletioninfo.c"
                 line="533">a #GtkWidget.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <property name="max-height"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="-1">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-width"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="-1">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="shrink-height"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="shrink-width"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
      <field name="priv">
        <type name="CompletionInfoPrivate"
              c:type="GtkSourceCompletionInfoPrivate*"/>
      </field>
      <glib:signal name="before-show" when="last" action="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CompletionInfoClass"
            c:type="GtkSourceCompletionInfoClass"
            glib:is-gtype-struct-for="CompletionInfo">
      <source-position filename="gtksourcecompletioninfo.h" line="56"/>
      <field name="parent_class">
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="before_show">
        <callback name="before_show">
          <source-position filename="gtksourcecompletioninfo.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="CompletionInfoPrivate"
            c:type="GtkSourceCompletionInfoPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcecompletioninfo.h" line="38"/>
    </record>
    <class name="CompletionItem"
           c:symbol-prefix="completion_item"
           c:type="GtkSourceCompletionItem"
           parent="GObject.Object"
           glib:type-name="GtkSourceCompletionItem"
           glib:get-type="gtk_source_completion_item_get_type"
           glib:type-struct="CompletionItemClass">
      <source-position filename="gtksourcecompletionitem.h" line="50"/>
      <implements name="CompletionProposal"/>
      <constructor name="new" c:identifier="gtk_source_completion_item_new">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="295">Create a new #GtkSourceCompletionItem with label @label, icon @icon and
extra information @info. Both @icon and @info can be %NULL in which case
there will be no icon shown and no extra information available.</doc>
        <source-position filename="gtksourcecompletionitem.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionitem.c"
               line="306">a new #GtkSourceCompletionItem.</doc>
          <type name="CompletionItem" c:type="GtkSourceCompletionItem*"/>
        </return-value>
        <parameters>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="297">The item label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="298">The item text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="299">The item icon.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="info"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="300">The item extra information.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_stock"
                   c:identifier="gtk_source_completion_item_new_from_stock">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="349">Creates a new #GtkSourceCompletionItem from a stock item. If @label is %NULL,
the stock label will be used.</doc>
        <source-position filename="gtksourcecompletionitem.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionitem.c"
               line="359">a new #GtkSourceCompletionItem.</doc>
          <type name="CompletionItem" c:type="GtkSourceCompletionItem*"/>
        </return-value>
        <parameters>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="351">The item label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="352">The item text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="stock" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="353">The stock icon.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="info"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="354">The item extra information.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_markup"
                   c:identifier="gtk_source_completion_item_new_with_markup">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="322">Create a new #GtkSourceCompletionItem with markup label @markup, icon
@icon and extra information @info. Both @icon and @info can be %NULL in
which case there will be no icon shown and no extra information available.</doc>
        <source-position filename="gtksourcecompletionitem.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionitem.c"
               line="333">a new #GtkSourceCompletionItem.</doc>
          <type name="CompletionItem" c:type="GtkSourceCompletionItem*"/>
        </return-value>
        <parameters>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="324">The item markup label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="325">The item text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="326">The item icon.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="info"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionitem.c"
                 line="327">The item extra information.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="icon" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="260">Icon to be shown for this proposal.</doc>
        <type name="GdkPixbuf.Pixbuf"/>
      </property>
      <property name="info"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="273">Optional extra information to be shown for this proposal.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="221">Label to be shown for this proposal.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="markup"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="234">Label with markup to be shown for this proposal.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="text"
                writable="1"
                transfer-ownership="none"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcecompletionitem.c"
             line="247">Proposal text.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CompletionItemPrivate"
              c:type="GtkSourceCompletionItemPrivate*"/>
      </field>
    </class>
    <record name="CompletionItemClass"
            c:type="GtkSourceCompletionItemClass"
            glib:is-gtype-struct-for="CompletionItem">
      <source-position filename="gtksourcecompletionitem.h" line="50"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="CompletionItemPrivate"
            c:type="GtkSourceCompletionItemPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcecompletionitem.h" line="40"/>
    </record>
    <record name="CompletionPrivate"
            c:type="GtkSourceCompletionPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcecompletion.h" line="45"/>
    </record>
    <interface name="CompletionProposal"
               c:symbol-prefix="completion_proposal"
               c:type="GtkSourceCompletionProposal"
               glib:type-name="GtkSourceCompletionProposal"
               glib:get-type="gtk_source_completion_proposal_get_type"
               glib:type-struct="CompletionProposalIface">
      <source-position filename="gtksourcecompletionproposal.h" line="57"/>
      <virtual-method name="changed" invoker="changed">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="292">Emits the "changed" signal on @proposal. This should be called by
implementations whenever the name, icon or info of the proposal has
changed.</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="294">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="271">Get whether two proposal objects are the same.  This is used to (together
with #gtk_source_completion_proposal_hash) to match proposals in the
completion model. By default, it uses direct equality (#g_direct_equal).</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="280">%TRUE if @proposal and @object are the same proposal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="273">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="274">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon" introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="218">Gets the icon of @proposal.</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="48"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="224">The icon of @proposal.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="220">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_info" invoker="get_info">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="234">Gets extra information associated to the proposal. This information will be
used to present the user with extra, detailed information about the
selected proposal. The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="242">a new string containing extra information of @proposal or %NULL if
         no extra information is associated to @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="236">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_label" invoker="get_label">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="161">Gets the label of @proposal. The label is shown in the list of proposals as
plain text. If you need any markup (such as bold or italic text), you have
to implement #gtk_source_completion_proposal_get_markup. The returned string
must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="170">a new string containing the label of @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="163">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_markup" invoker="get_markup">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="180">Gets the label of @proposal with markup. The label is shown in the list of
proposals and may contain markup. This will be used instead of
#gtk_source_completion_proposal_get_label if implemented. The returned string
must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="189">a new string containing the label of @proposal with markup.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="182">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_text" invoker="get_text">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="199">Gets the text of @proposal. The text that is inserted into
the text buffer when the proposal is activated by the default activation.
You are free to implement a custom activation handler in the provider and
not implement this function. The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="208">a new string containing the text of @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="201">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hash" invoker="hash">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="253">Get the hash value of @proposal. This is used to (together with
#gtk_source_completion_proposal_equal) to match proposals in the completion
model. By default, it uses a direct hash (#g_direct_hash).</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="261">The hash value of @proposal.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="255">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="changed"
              c:identifier="gtk_source_completion_proposal_changed">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="292">Emits the "changed" signal on @proposal. This should be called by
implementations whenever the name, icon or info of the proposal has
changed.</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="294">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="gtk_source_completion_proposal_equal">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="271">Get whether two proposal objects are the same.  This is used to (together
with #gtk_source_completion_proposal_hash) to match proposals in the
completion model. By default, it uses direct equality (#g_direct_equal).</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="280">%TRUE if @proposal and @object are the same proposal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="273">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
          <parameter name="other" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="274">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gtk_source_completion_proposal_get_icon"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="218">Gets the icon of @proposal.</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="65"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="224">The icon of @proposal.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="220">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="gtk_source_completion_proposal_get_info">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="234">Gets extra information associated to the proposal. This information will be
used to present the user with extra, detailed information about the
selected proposal. The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="242">a new string containing extra information of @proposal or %NULL if
         no extra information is associated to @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="236">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gtk_source_completion_proposal_get_label">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="161">Gets the label of @proposal. The label is shown in the list of proposals as
plain text. If you need any markup (such as bold or italic text), you have
to implement #gtk_source_completion_proposal_get_markup. The returned string
must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="170">a new string containing the label of @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="163">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_markup"
              c:identifier="gtk_source_completion_proposal_get_markup">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="180">Gets the label of @proposal with markup. The label is shown in the list of
proposals and may contain markup. This will be used instead of
#gtk_source_completion_proposal_get_label if implemented. The returned string
must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="189">a new string containing the label of @proposal with markup.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="182">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="gtk_source_completion_proposal_get_text">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="199">Gets the text of @proposal. The text that is inserted into
the text buffer when the proposal is activated by the default activation.
You are free to implement a custom activation handler in the provider and
not implement this function. The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="208">a new string containing the text of @proposal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="201">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hash" c:identifier="gtk_source_completion_proposal_hash">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="253">Get the hash value of @proposal. This is used to (together with
#gtk_source_completion_proposal_equal) to match proposals in the completion
model. By default, it uses a direct hash (#g_direct_hash).</doc>
        <source-position filename="gtksourcecompletionproposal.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionproposal.c"
               line="261">The hash value of @proposal.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="255">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="changed" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourcecompletionproposal.c"
             line="105">Emitted when the proposal has changed. The completion popup
will react to this by updating the shown information.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="CompletionProposalIface"
            c:type="GtkSourceCompletionProposalIface"
            glib:is-gtype-struct-for="CompletionProposal">
      <source-position filename="gtksourcecompletionproposal.h" line="57"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_label">
        <callback name="get_label">
          <source-position filename="gtksourcecompletionproposal.h" line="44"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="170">a new string containing the label of @proposal.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="163">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_markup">
        <callback name="get_markup">
          <source-position filename="gtksourcecompletionproposal.h" line="45"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="189">a new string containing the label of @proposal with markup.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="182">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_text">
        <callback name="get_text">
          <source-position filename="gtksourcecompletionproposal.h" line="46"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="208">a new string containing the text of @proposal.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="201">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon" introspectable="0">
        <callback name="get_icon" introspectable="0">
          <source-position filename="gtksourcecompletionproposal.h" line="48"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="224">The icon of @proposal.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="220">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_info">
        <callback name="get_info">
          <source-position filename="gtksourcecompletionproposal.h" line="49"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="242">a new string containing extra information of @proposal or %NULL if
         no extra information is associated to @proposal.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="236">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hash">
        <callback name="hash">
          <source-position filename="gtksourcecompletionproposal.h" line="51"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="261">The hash value of @proposal.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="255">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal">
          <source-position filename="gtksourcecompletionproposal.h" line="52"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionproposal.c"
                 line="280">%TRUE if @proposal and @object are the same proposal</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="273">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
            <parameter name="other" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="274">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="gtksourcecompletionproposal.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionproposal.c"
                   line="294">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="CompletionProvider"
               c:symbol-prefix="completion_provider"
               c:type="GtkSourceCompletionProvider"
               glib:type-name="GtkSourceCompletionProvider"
               glib:get-type="gtk_source_completion_provider_get_type"
               glib:type-struct="CompletionProviderIface">
      <source-position filename="gtksourcecompletionprovider.h" line="78"/>
      <virtual-method name="activate_proposal" invoker="activate_proposal">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="340">Activate @proposal at @iter. When this functions returns %FALSE, the default
activation of @proposal will take place which replaces the word at @iter
with the label of @proposal.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="350">%TRUE to indicate that the proposal activation has been handled,
         %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="342">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="343">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="344">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_activation" invoker="get_activation">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="224">Get with what kind of activation the provider should be activated.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="230">a combination of #GtkSourceCompletionActivation.</doc>
          <type name="CompletionActivation"
                c:type="GtkSourceCompletionActivation"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="226">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon" introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="191">Get the icon of the provider.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="52"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="197">The icon to be used for the provider, or %NULL if the provider does
         not have a special icon.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="193">The #GtkSourceCompletionProvider</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_info_widget"
                      invoker="get_info_widget"
                      introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="260">Get a customized info widget to show extra information of a proposal.
This allows for customized widgets on a proposal basis, although in general
providers will have the same custom widget for all their proposals and
@proposal can be ignored. The implementation of this function is optional.
If implemented, #gtk_source_completion_provider_update_info MUST also be
implemented. If not implemented, the default
#gtk_source_completion_proposal_get_info will be used to display extra
information about a #GtkSourceCompletionProposal.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="62"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="274">a custom #GtkWidget to show extra information about @proposal.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="262">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="263">a currently selected #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_interactive_delay"
                      invoker="get_interactive_delay">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="366">Get the delay in milliseconds before starting interactive completion for
this provider. A value of -1 indicates to use the default value as set
by #GtkSourceCompletion::auto-complete-delay.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="374">the interactive delay in milliseconds.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="368">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="173">Get the name of the provider. This should be a translatable name for
display to the user. For example: _("Document word completion provider"). The
returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="181">a new string containing the name of the provider.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="175">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_priority" invoker="get_priority">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="384">Get the provider priority. The priority determines the order in which
proposals appear in the completion popup. Higher priorities are sorted
before lower priorities. The default priority is 0.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="392">the provider priority.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="386">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_start_iter" invoker="get_start_iter">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="309">Get the #GtkTextIter at which the completion for @proposal starts. When
implemented, the completion can use this information to position the
completion window accordingly when a proposal is selected in the completion
window.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="321">%TRUE if @iter was set for @proposal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="311">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="313">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="312">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="314">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="match" invoker="match">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="240">Get whether the provider match the context of completion detailed in
@context.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="248">%TRUE if @provider matches the completion context, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="242">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="243">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="populate" invoker="populate">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="208">Populate @context with proposals from @provider.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="210">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="211">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_info" invoker="update_info">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="286">Update extra information shown in @info for @proposal. This should be
implemented if your provider sets a custom info widget for @proposal.
This function MUST be implemented when
#gtk_source_completion_provider_get_info_widget is implemented.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="288">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="289">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="290">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate_proposal"
              c:identifier="gtk_source_completion_provider_activate_proposal">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="340">Activate @proposal at @iter. When this functions returns %FALSE, the default
activation of @proposal will take place which replaces the word at @iter
with the label of @proposal.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="350">%TRUE to indicate that the proposal activation has been handled,
         %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="342">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="343">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="344">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activation"
              c:identifier="gtk_source_completion_provider_get_activation">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="224">Get with what kind of activation the provider should be activated.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="230">a combination of #GtkSourceCompletionActivation.</doc>
          <type name="CompletionActivation"
                c:type="GtkSourceCompletionActivation"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="226">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gtk_source_completion_provider_get_icon"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="191">Get the icon of the provider.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="85"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="197">The icon to be used for the provider, or %NULL if the provider does
         not have a special icon.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="193">The #GtkSourceCompletionProvider</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_info_widget"
              c:identifier="gtk_source_completion_provider_get_info_widget"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="260">Get a customized info widget to show extra information of a proposal.
This allows for customized widgets on a proposal basis, although in general
providers will have the same custom widget for all their proposals and
@proposal can be ignored. The implementation of this function is optional.
If implemented, #gtk_source_completion_provider_update_info MUST also be
implemented. If not implemented, the default
#gtk_source_completion_proposal_get_info will be used to display extra
information about a #GtkSourceCompletionProposal.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="96"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="274">a custom #GtkWidget to show extra information about @proposal.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="262">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="263">a currently selected #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interactive_delay"
              c:identifier="gtk_source_completion_provider_get_interactive_delay">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="366">Get the delay in milliseconds before starting interactive completion for
this provider. A value of -1 indicates to use the default value as set
by #GtkSourceCompletion::auto-complete-delay.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="374">the interactive delay in milliseconds.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="368">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gtk_source_completion_provider_get_name">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="173">Get the name of the provider. This should be a translatable name for
display to the user. For example: _("Document word completion provider"). The
returned string must be freed with g_free().</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="181">a new string containing the name of the provider.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="175">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="gtk_source_completion_provider_get_priority">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="384">Get the provider priority. The priority determines the order in which
proposals appear in the completion popup. Higher priorities are sorted
before lower priorities. The default priority is 0.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="392">the provider priority.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="386">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_iter"
              c:identifier="gtk_source_completion_provider_get_start_iter">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="309">Get the #GtkTextIter at which the completion for @proposal starts. When
implemented, the completion can use this information to position the
completion window accordingly when a proposal is selected in the completion
window.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="321">%TRUE if @iter was set for @proposal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="311">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="313">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="312">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="314">a #GtkTextIter.</doc>
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match" c:identifier="gtk_source_completion_provider_match">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="240">Get whether the provider match the context of completion detailed in
@context.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcecompletionprovider.c"
               line="248">%TRUE if @provider matches the completion context, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="242">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="243">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="populate"
              c:identifier="gtk_source_completion_provider_populate">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="208">Populate @context with proposals from @provider.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="210">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="211">a #GtkSourceCompletionContext.</doc>
            <type name="CompletionContext"
                  c:type="GtkSourceCompletionContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_info"
              c:identifier="gtk_source_completion_provider_update_info">
        <doc xml:space="preserve"
             filename="gtksourcecompletionprovider.c"
             line="286">Update extra information shown in @info for @proposal. This should be
implemented if your provider sets a custom info widget for @proposal.
This function MUST be implemented when
#gtk_source_completion_provider_get_info_widget is implemented.</doc>
        <source-position filename="gtksourcecompletionprovider.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="288">a #GtkSourceCompletionProvider.</doc>
            <type name="CompletionProvider"
                  c:type="GtkSourceCompletionProvider*"/>
          </instance-parameter>
          <parameter name="proposal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="289">a #GtkSourceCompletionProposal.</doc>
            <type name="CompletionProposal"
                  c:type="GtkSourceCompletionProposal*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="290">a #GtkSourceCompletionInfo.</doc>
            <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="CompletionProviderIface"
            c:type="GtkSourceCompletionProviderIface"
            glib:is-gtype-struct-for="CompletionProvider">
      <source-position filename="gtksourcecompletionprovider.h" line="78"/>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_name">
        <callback name="get_name">
          <source-position filename="gtksourcecompletionprovider.h" line="51"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="181">a new string containing the name of the provider.</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="175">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon" introspectable="0">
        <callback name="get_icon" introspectable="0">
          <source-position filename="gtksourcecompletionprovider.h" line="52"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="197">The icon to be used for the provider, or %NULL if the provider does
         not have a special icon.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="193">The #GtkSourceCompletionProvider</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="populate">
        <callback name="populate">
          <source-position filename="gtksourcecompletionprovider.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="210">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="211">a #GtkSourceCompletionContext.</doc>
              <type name="CompletionContext"
                    c:type="GtkSourceCompletionContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="match">
        <callback name="match">
          <source-position filename="gtksourcecompletionprovider.h" line="56"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="248">%TRUE if @provider matches the completion context, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="242">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="243">a #GtkSourceCompletionContext.</doc>
              <type name="CompletionContext"
                    c:type="GtkSourceCompletionContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_activation">
        <callback name="get_activation">
          <source-position filename="gtksourcecompletionprovider.h" line="60"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="230">a combination of #GtkSourceCompletionActivation.</doc>
            <type name="CompletionActivation"
                  c:type="GtkSourceCompletionActivation"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="226">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_info_widget" introspectable="0">
        <callback name="get_info_widget" introspectable="0">
          <source-position filename="gtksourcecompletionprovider.h" line="62"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="274">a custom #GtkWidget to show extra information about @proposal.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="262">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="263">a currently selected #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_info">
        <callback name="update_info">
          <source-position filename="gtksourcecompletionprovider.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="288">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="289">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="290">a #GtkSourceCompletionInfo.</doc>
              <type name="CompletionInfo" c:type="GtkSourceCompletionInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_start_iter">
        <callback name="get_start_iter">
          <source-position filename="gtksourcecompletionprovider.h" line="68"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="321">%TRUE if @iter was set for @proposal, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="311">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="313">a #GtkSourceCompletionContext.</doc>
              <type name="CompletionContext"
                    c:type="GtkSourceCompletionContext*"/>
            </parameter>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="312">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="314">a #GtkTextIter.</doc>
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate_proposal">
        <callback name="activate_proposal">
          <source-position filename="gtksourcecompletionprovider.h" line="72"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="350">%TRUE to indicate that the proposal activation has been handled,
         %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="342">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
            <parameter name="proposal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="343">a #GtkSourceCompletionProposal.</doc>
              <type name="CompletionProposal"
                    c:type="GtkSourceCompletionProposal*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="344">a #GtkTextIter.</doc>
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_interactive_delay">
        <callback name="get_interactive_delay">
          <source-position filename="gtksourcecompletionprovider.h" line="76"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="374">the interactive delay in milliseconds.</doc>
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="368">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_priority">
        <callback name="get_priority">
          <source-position filename="gtksourcecompletionprovider.h" line="77"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcecompletionprovider.c"
                 line="392">the provider priority.</doc>
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourcecompletionprovider.c"
                   line="386">a #GtkSourceCompletionProvider.</doc>
              <type name="CompletionProvider"
                    c:type="GtkSourceCompletionProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <bitfield name="DrawSpacesFlags" c:type="GtkSourceDrawSpacesFlags">
      <doc xml:space="preserve"
           filename="gtksourceview.h"
           line="107">GtkSourceDrawSpacesFlags determine what kind of spaces whould be drawn. If none
of GTK_SOURCE_DRAW_SPACES_LEADING, GTK_SOURCE_DRAW_SPACES_TEXT or
GTK_SOURCE_DRAW_SPACES_TRAILING is specified, whitespaces at any position in
the line will be drawn (i.e. it has the same effect as specifying all of them).</doc>
      <source-position filename="gtksourceview.h" line="139"/>
      <member name="space"
              value="1"
              c:identifier="GTK_SOURCE_DRAW_SPACES_SPACE">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="109">whether the space character should be drawn.</doc>
      </member>
      <member name="tab" value="2" c:identifier="GTK_SOURCE_DRAW_SPACES_TAB">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="110">whether the tab character should be drawn.</doc>
      </member>
      <member name="newline"
              value="4"
              c:identifier="GTK_SOURCE_DRAW_SPACES_NEWLINE">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="111">whether the line breaks should be drawn.</doc>
      </member>
      <member name="nbsp" value="8" c:identifier="GTK_SOURCE_DRAW_SPACES_NBSP">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="112">whether the non-breaking whitespaces should be drawn.</doc>
      </member>
      <member name="leading"
              value="16"
              c:identifier="GTK_SOURCE_DRAW_SPACES_LEADING">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="113">whether leading whitespaces should be drawn.</doc>
      </member>
      <member name="text"
              value="32"
              c:identifier="GTK_SOURCE_DRAW_SPACES_TEXT">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="114">whether whitespaces inside text should be drawn.</doc>
      </member>
      <member name="trailing"
              value="64"
              c:identifier="GTK_SOURCE_DRAW_SPACES_TRAILING">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="115">whether trailing whitespaces should be drawn.</doc>
      </member>
      <member name="all" value="127" c:identifier="GTK_SOURCE_DRAW_SPACES_ALL">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="116">wheter all kind of spaces should be drawn.</doc>
      </member>
    </bitfield>
    <function-macro name="GUTTER"
                    c:identifier="GTK_SOURCE_GUTTER"
                    introspectable="0">
      <source-position filename="gtksourcegutter.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GUTTER_CLASS"
                    c:identifier="GTK_SOURCE_GUTTER_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcegutter.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GUTTER_GET_CLASS"
                    c:identifier="GTK_SOURCE_GUTTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcegutter.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Gutter"
           c:symbol-prefix="gutter"
           c:type="GtkSourceGutter"
           parent="GObject.Object"
           glib:type-name="GtkSourceGutter"
           glib:get-type="gtk_source_gutter_get_type"
           glib:type-struct="GutterClass">
      <source-position filename="gtksourcegutter.h" line="61"/>
      <virtual-method name="cell_activated">
        <source-position filename="gtksourcegutter.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_tooltip">
        <source-position filename="gtksourcegutter.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="tooltip" transfer-ownership="none">
            <type name="Gtk.Tooltip" c:type="GtkTooltip*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_window"
              c:identifier="gtk_source_gutter_get_window"
              version="2.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="492">Get the #GdkWindow of the gutter. The window will only be available when the
gutter has at least one, non-zero width, cell renderer packed.</doc>
        <source-position filename="gtksourcegutter.h" line="75"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcegutter.c"
               line="499">the #GdkWindow of the gutter, or %NULL if the gutter has no window.</doc>
          <type name="Gdk.Window" c:type="GdkWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="494">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert"
              c:identifier="gtk_source_gutter_insert"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="513">Inserts @renderer into @gutter at @position.</doc>
        <source-position filename="gtksourcegutter.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="515">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="516">a #GtkCellRenderer.</doc>
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="517">the renderers position.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_draw"
              c:identifier="gtk_source_gutter_queue_draw"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="703">Invalidates the drawable area of the gutter. You can use this to force a
redraw of the gutter if something has changed and needs to be redrawn.</doc>
        <source-position filename="gtksourcegutter.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="705">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="gtk_source_gutter_remove"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="590">Removes @renderer from @gutter.</doc>
        <source-position filename="gtksourcegutter.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="592">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="593">a #GtkCellRenderer.</doc>
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder"
              c:identifier="gtk_source_gutter_reorder"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="561">Reorders @renderer in @gutter to new @position.</doc>
        <source-position filename="gtksourcegutter.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="563">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="564">a #GtkCellRenderer.</doc>
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="565">the new renderer position.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cell_data_func"
              c:identifier="gtk_source_gutter_set_cell_data_func"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="618">Sets the #GtkSourceGutterDataFunc to use for @renderer. This function is
used to setup the cell renderer properties for rendering the current cell.</doc>
        <source-position filename="gtksourcegutter.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="620">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="621">a #GtkCellRenderer.</doc>
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="622">the #GtkSourceGutterDataFunc to use.</doc>
            <type name="GutterDataFunc" c:type="GtkSourceGutterDataFunc"/>
          </parameter>
          <parameter name="func_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="623">the user data for @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="624">the destroy notification for @func_data.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cell_size_func"
              c:identifier="gtk_source_gutter_set_cell_size_func"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="660">Sets the #GtkSourceGutterSizeFunc to use for @renderer. This function is
used to setup the cell renderer properties for measuring the maximum size
of the cell.</doc>
        <source-position filename="gtksourcegutter.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gutter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="662">a #GtkSourceGutter.</doc>
            <type name="Gutter" c:type="GtkSourceGutter*"/>
          </instance-parameter>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="663">a #GtkCellRenderer.</doc>
            <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="664">the #GtkSourceGutterSizeFunc to use.</doc>
            <type name="GutterSizeFunc" c:type="GtkSourceGutterSizeFunc"/>
          </parameter>
          <parameter name="func_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="665">the user data for @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="666">the destroy notification for @func_data.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="view"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="361">The #GtkSourceView of the gutter</doc>
        <type name="View"/>
      </property>
      <property name="window-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="GTK_TEXT_WINDOW_PRIVATE">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="374">The text window type on which the window is placed</doc>
        <type name="Gtk.TextWindowType"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="GutterPrivate" c:type="GtkSourceGutterPrivate*"/>
      </field>
      <glib:signal name="cell-activated" when="last">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="389">Emitted when a cell has been activated (for instance when there was
a button press on the cell). The signal is only emitted for cells
that have the #activatable property set to %TRUE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="392">the #GtkCellRenderer which was activated</doc>
            <type name="Gtk.CellRenderer"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="393">the #GtkTextIter at which the cell was activated</doc>
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="394">the #GdkEvent with which the cell was activated</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="query-tooltip" when="last">
        <doc xml:space="preserve"
             filename="gtksourcegutter.c"
             line="414">Emitted when a tooltip is requested for a specific cell. Signal
handlers can return %TRUE to notify the tooltip has been handled.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="renderer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="417">the #GtkCellRenderer which was activated</doc>
            <type name="Gtk.CellRenderer"/>
          </parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="418">the #GtkTextIter at which the cell was activated</doc>
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="tooltip" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcegutter.c"
                 line="419">the #GtkTooltip</doc>
            <type name="Gtk.Tooltip"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="GutterClass"
            c:type="GtkSourceGutterClass"
            glib:is-gtype-struct-for="Gutter">
      <source-position filename="gtksourcegutter.h" line="61"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="cell_activated">
        <callback name="cell_activated">
          <source-position filename="gtksourcegutter.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gutter" transfer-ownership="none">
              <type name="Gutter" c:type="GtkSourceGutter*"/>
            </parameter>
            <parameter name="renderer" transfer-ownership="none">
              <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_tooltip">
        <callback name="query_tooltip">
          <source-position filename="gtksourcegutter.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="gutter" transfer-ownership="none">
              <type name="Gutter" c:type="GtkSourceGutter*"/>
            </parameter>
            <parameter name="renderer" transfer-ownership="none">
              <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="tooltip" transfer-ownership="none">
              <type name="Gtk.Tooltip" c:type="GtkTooltip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="GutterDataFunc" c:type="GtkSourceGutterDataFunc">
      <source-position filename="gtksourcegutter.h" line="63"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="gutter" transfer-ownership="none">
          <type name="Gutter" c:type="GtkSourceGutter*"/>
        </parameter>
        <parameter name="cell" transfer-ownership="none">
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </parameter>
        <parameter name="line_number" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="current_line" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="GutterPrivate"
            c:type="GtkSourceGutterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcegutter.h" line="41"/>
    </record>
    <callback name="GutterSizeFunc" c:type="GtkSourceGutterSizeFunc">
      <source-position filename="gtksourcegutter.h" line="69"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="gutter" transfer-ownership="none">
          <type name="Gutter" c:type="GtkSourceGutter*"/>
        </parameter>
        <parameter name="cell" transfer-ownership="none">
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="LANGUAGE"
                    c:identifier="GTK_SOURCE_LANGUAGE"
                    introspectable="0">
      <source-position filename="gtksourcelanguage.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LANGUAGE_CLASS"
                    c:identifier="GTK_SOURCE_LANGUAGE_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcelanguage.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LANGUAGE_GET_CLASS"
                    c:identifier="GTK_SOURCE_LANGUAGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcelanguage.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LANGUAGE_MANAGER"
                    c:identifier="GTK_SOURCE_LANGUAGE_MANAGER"
                    introspectable="0">
      <source-position filename="gtksourcelanguagemanager.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LANGUAGE_MANAGER_CLASS"
                    c:identifier="GTK_SOURCE_LANGUAGE_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcelanguagemanager.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LANGUAGE_MANAGER_GET_CLASS"
                    c:identifier="GTK_SOURCE_LANGUAGE_MANAGER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcelanguagemanager.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Language"
           c:symbol-prefix="language"
           c:type="GtkSourceLanguage"
           parent="GObject.Object"
           glib:type-name="GtkSourceLanguage"
           glib:get-type="gtk_source_language_get_type"
           glib:type-struct="LanguageClass">
      <source-position filename="gtksourcelanguage.h" line="56"/>
      <method name="get_globs"
              c:identifier="gtk_source_language_get_globs"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="596">Returns the globs associated to this language. This is just
an utility wrapper around gtk_source_language_get_metadata() to
retrieve the "globs" metadata property and split it into an array.</doc>
        <source-position filename="gtksourcelanguage.h" line="73"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="604">a newly-allocated %NULL terminated array containing
the globs or %NULL if no globs are found.
The returned array must be freed with g_strfreev().</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="598">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hidden"
              c:identifier="gtk_source_language_get_hidden"
              glib:get-property="hidden">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="532">Returns whether the language should be hidden from the user.</doc>
        <source-position filename="gtksourcelanguage.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="538">%TRUE if the language should be hidden, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="534">a #GtkSourceLanguage</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gtk_source_language_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="473">Returns the ID of the language. The ID is not locale-dependent.
The returned string is owned by @language and should not be freed
or modified.</doc>
        <source-position filename="gtksourcelanguage.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="481">the ID of @language.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="475">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="gtk_source_language_get_metadata">
        <source-position filename="gtksourcelanguage.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="553">value of property @name stored in the metadata of @language
or %NULL if language doesn't contain that metadata property.
The returned string is owned by @language and should not be freed
or modified.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="550">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="551">metadata property name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mime_types"
              c:identifier="gtk_source_language_get_mime_types"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="568">Returns the mime types associated to this language. This is just
an utility wrapper around gtk_source_language_get_metadata() to
retrieve the "mimetypes" metadata property and split it into an
array.</doc>
        <source-position filename="gtksourcelanguage.h" line="71"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="577">a newly-allocated %NULL
terminated array containing the mime types or %NULL if no
mime types are found.
The returned array must be freed with g_strfreev().</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="570">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gtk_source_language_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="492">Returns the localized name of the language.
The returned string is owned by @language and should not be freed
or modified.</doc>
        <source-position filename="gtksourcelanguage.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="500">the name of @language.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="494">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_section"
              c:identifier="gtk_source_language_get_section"
              glib:get-property="section">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="511">Returns the localized section of the language.
Each language belong to a section (ex. HTML belogs to the
Markup section).
The returned string is owned by @language and should not be freed
or modified.</doc>
        <source-position filename="gtksourcelanguage.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="521">the section of @language.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="513">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_style_ids"
              c:identifier="gtk_source_language_get_style_ids"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="832">Returns the ids of the styles defined by this @language.</doc>
        <source-position filename="gtksourcelanguage.h" line="75"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="838">a  %NULL terminated array containing
ids of the styles defined by this @language or %NULL if no style is
defined.  The returned array must be freed with g_strfreev().</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="834">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_style_name"
              c:identifier="gtk_source_language_get_style_name">
        <doc xml:space="preserve"
             filename="gtksourcelanguage.c"
             line="869">Returns the name of the style with ID @style_id defined by this @language.</doc>
        <source-position filename="gtksourcelanguage.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguage.c"
               line="876">the name of the style with ID @style_id defined by this @language or
%NULL if the style has no name or there is no style with ID @style_id defined
by this @language. The returned string is owned by the @language and must
not be modified.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="871">a #GtkSourceLanguage.</doc>
            <type name="Language" c:type="GtkSourceLanguage*"/>
          </instance-parameter>
          <parameter name="style_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguage.c"
                 line="872">a style ID.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="hidden"
                transfer-ownership="none"
                getter="get_hidden"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="id"
                transfer-ownership="none"
                getter="get_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="section"
                transfer-ownership="none"
                getter="get_section"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="LanguagePrivate" c:type="GtkSourceLanguagePrivate*"/>
      </field>
    </class>
    <record name="LanguageClass"
            c:type="GtkSourceLanguageClass"
            glib:is-gtype-struct-for="Language">
      <source-position filename="gtksourcelanguage.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcelanguage.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcelanguage.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="LanguageManager"
           c:symbol-prefix="language_manager"
           c:type="GtkSourceLanguageManager"
           parent="GObject.Object"
           glib:type-name="GtkSourceLanguageManager"
           glib:get-type="gtk_source_language_manager_get_type"
           glib:type-struct="LanguageManagerClass">
      <source-position filename="gtksourcelanguagemanager.h" line="56"/>
      <constructor name="new" c:identifier="gtk_source_language_manager_new">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="179">Creates a new language manager. If you do not need more than one language
manager or a private language manager instance then use
gtk_source_language_manager_get_default() instead.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="186">a new #GtkSourceLanguageManager.</doc>
          <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
        </return-value>
      </constructor>
      <function name="get_default"
                c:identifier="gtk_source_language_manager_get_default"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="194">Returns the default #GtkSourceLanguageManager instance.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="63"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="199">a #GtkSourceLanguageManager. Return value is owned
by GtkSourceView library and must not be unref'ed.</doc>
          <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
        </return-value>
      </function>
      <method name="get_language"
              c:identifier="gtk_source_language_manager_get_language">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="405">Gets the #GtkSourceLanguage identified by the given @id in the language
manager.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="413">a #GtkSourceLanguage, or %NULL if there is no language
identified by the given @id. Return value is owned by @lm and should not
be freed.</doc>
          <type name="Language" c:type="GtkSourceLanguage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="lm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="407">a #GtkSourceLanguageManager.</doc>
            <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="408">a language id.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_language_ids"
              c:identifier="gtk_source_language_manager_get_language_ids"
              glib:get-property="language-ids">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="385">Returns the ids of the available languages.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="391">a %NULL-terminated array of string containing the ids of the
available languages or %NULL if no language is available. The array
is owned by @lm and must not be modified.</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="lm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="387">a #GtkSourceLanguageManager.</doc>
            <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_path"
              c:identifier="gtk_source_language_manager_get_search_path"
              glib:get-property="search-path">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="267">Gets the list directories where @lm looks for language files.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="273">%NULL-terminated array
containg a list of language files directories.
The array is owned by @lm and must not be modified.</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="lm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="269">a #GtkSourceLanguageManager.</doc>
            <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="guess_language"
              c:identifier="gtk_source_language_manager_guess_language"
              version="2.4">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="573">Picks a #GtkSourceLanguage for given file name and content type,
according to the information in lang files. Either @filename or
@content_type may be %NULL. This function can be used as follows:

&lt;informalexample&gt;&lt;programlisting&gt;
  GtkSourceLanguage *lang;
  lang = gtk_source_language_manager_guess_language (filename, NULL);
  gtk_source_buffer_set_language (buffer, lang);
&lt;/programlisting&gt;&lt;/informalexample&gt;

or

&lt;informalexample&gt;&lt;programlisting&gt;
  GtkSourceLanguage *lang = NULL;
  gboolean result_uncertain;
  gchar *content_type;

  content_type = g_content_type_guess (filename, NULL, 0, &amp;result_uncertain);
  if (result_uncertain)
    {
      g_free (content_type);
      content_type = NULL;
    }

  lang = gtk_source_language_manager_guess_language (manager, filename, content_type);
  gtk_source_buffer_set_language (buffer, lang);

  g_free (content_type);
&lt;/programlisting&gt;&lt;/informalexample&gt;

etc. Use gtk_source_language_get_mime_types() and gtk_source_language_get_globs()
if you need full control over file -&gt; language mapping.</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcelanguagemanager.c"
               line="612">a #GtkSourceLanguage, or %NULL if there is no suitable language
for given @filename and/or @content_type. Return value is owned by @lm
and should not be freed.</doc>
          <type name="Language" c:type="GtkSourceLanguage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="lm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="575">a #GtkSourceLanguageManager.</doc>
            <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
          </instance-parameter>
          <parameter name="filename"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="576">a filename in Glib filename encoding, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="content_type"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="577">a content type (as in GIO API), or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_path"
              c:identifier="gtk_source_language_manager_set_search_path"
              glib:set-property="search-path">
        <doc xml:space="preserve"
             filename="gtksourcelanguagemanager.c"
             line="224">Sets the list of directories where the @lm looks for
language files.
If @dirs is %NULL, the search path is reset to default.

&lt;note&gt;
  &lt;para&gt;
    At the moment this function can be called only before the
    language files are loaded for the first time. In practice
    to set a custom search path for a #GtkSourceLanguageManager,
    you have to call this function right after creating it.
  &lt;/para&gt;
&lt;/note&gt;</doc>
        <source-position filename="gtksourcelanguagemanager.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="lm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="226">a #GtkSourceLanguageManager.</doc>
            <type name="LanguageManager" c:type="GtkSourceLanguageManager*"/>
          </instance-parameter>
          <parameter name="dirs"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcelanguagemanager.c"
                 line="227">
a %NULL-terminated array of strings or %NULL.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <property name="language-ids"
                transfer-ownership="none"
                getter="get_language_ids">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="search-path"
                writable="1"
                transfer-ownership="none"
                setter="set_search_path"
                getter="get_search_path">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="LanguageManagerPrivate"
              c:type="GtkSourceLanguageManagerPrivate*"/>
      </field>
    </class>
    <record name="LanguageManagerClass"
            c:type="GtkSourceLanguageManagerClass"
            glib:is-gtype-struct-for="LanguageManager">
      <source-position filename="gtksourcelanguagemanager.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcelanguagemanager.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcelanguagemanager.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved3" introspectable="0">
        <callback name="_gtk_source_reserved3">
          <source-position filename="gtksourcelanguagemanager.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved4" introspectable="0">
        <callback name="_gtk_source_reserved4">
          <source-position filename="gtksourcelanguagemanager.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="LanguageManagerPrivate"
            c:type="GtkSourceLanguageManagerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcelanguagemanager.h" line="38"/>
    </record>
    <record name="LanguagePrivate"
            c:type="GtkSourceLanguagePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcelanguage.h" line="40"/>
    </record>
    <function-macro name="MARK"
                    c:identifier="GTK_SOURCE_MARK"
                    introspectable="0">
      <source-position filename="gtksourcemark.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MARK_CLASS"
                    c:identifier="GTK_SOURCE_MARK_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcemark.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MARK_GET_CLASS"
                    c:identifier="GTK_SOURCE_MARK_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcemark.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Mark"
           c:symbol-prefix="mark"
           c:type="GtkSourceMark"
           parent="Gtk.TextMark"
           glib:type-name="GtkSourceMark"
           glib:get-type="gtk_source_mark_get_type"
           glib:type-struct="MarkClass">
      <source-position filename="gtksourcemark.h" line="55"/>
      <constructor name="new" c:identifier="gtk_source_mark_new" version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcemark.c"
             line="155">Creates a text mark. Add it to a buffer using gtk_text_buffer_add_mark().
If name is NULL, the mark is anonymous; otherwise, the mark can be retrieved
by name using gtk_text_buffer_get_mark().
Normally marks are created using the utility function
gtk_source_buffer_create_mark().</doc>
        <source-position filename="gtksourcemark.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcemark.c"
               line="169">a new #GtkSourceMark that can be added using gtk_text_buffer_add_mark().</doc>
          <type name="Mark" c:type="GtkSourceMark*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="157">Name of the #GtkSourceMark, can be NULL when not using a name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="158">is used to classify marks according to common characteristics
(e.g. all the marks representing a bookmark could belong to the "bookmark"
category, or all the marks representing a compilation error could belong to
"error" category).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_category"
              c:identifier="gtk_source_mark_get_category"
              glib:get-property="category"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourcemark.c"
             line="186">Returns the mark category.</doc>
        <source-position filename="gtksourcemark.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcemark.c"
               line="192">the category of the #GtkSourceMark.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mark" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="188">a #GtkSourceMark.</doc>
            <type name="Mark" c:type="GtkSourceMark*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="gtk_source_mark_next"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcemark.c"
             line="204">Returns the next #GtkSourceMark in the buffer or %NULL if the mark
was not added to a buffer. If there is no next mark, %NULL will be returned.

If @category is %NULL, looks for marks of any category.</doc>
        <source-position filename="gtksourcemark.h" line="64"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcemark.c"
               line="214">the next #GtkSourceMark, or %NULL.</doc>
          <type name="Mark" c:type="GtkSourceMark*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mark" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="206">a #GtkSourceMark.</doc>
            <type name="Mark" c:type="GtkSourceMark*"/>
          </instance-parameter>
          <parameter name="category"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="207">a string specifying the mark category, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prev"
              c:identifier="gtk_source_mark_prev"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcemark.c"
             line="234">Returns the previous #GtkSourceMark in the buffer or %NULL if the mark
was not added to a buffer. If there is no previous mark, %NULL is returned.

If @category is %NULL, looks for marks of any category</doc>
        <source-position filename="gtksourcemark.h" line="66"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcemark.c"
               line="244">the previous #GtkSourceMark, or %NULL.</doc>
          <type name="Mark" c:type="GtkSourceMark*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mark" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="236">a #GtkSourceMark.</doc>
            <type name="Mark" c:type="GtkSourceMark*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcemark.c"
                 line="237">a string specifying the mark category, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="category"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_category"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcemark.c"
             line="131">The category of the #GtkSourceMark, classifies the mark and controls
which pixbuf is used and with which priority it is drawn.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.TextMark" c:type="GtkTextMark"/>
      </field>
      <field name="priv">
        <type name="MarkPrivate" c:type="GtkSourceMarkPrivate*"/>
      </field>
    </class>
    <record name="MarkClass"
            c:type="GtkSourceMarkClass"
            glib:is-gtype-struct-for="Mark">
      <source-position filename="gtksourcemark.h" line="55"/>
      <field name="parent_class">
        <type name="Gtk.TextMarkClass" c:type="GtkTextMarkClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcemark.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcemark.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MarkPrivate"
            c:type="GtkSourceMarkPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcemark.h" line="39"/>
    </record>
    <function-macro name="PRINT_COMPOSITOR"
                    c:identifier="GTK_SOURCE_PRINT_COMPOSITOR"
                    introspectable="0">
      <source-position filename="gtksourceprintcompositor.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PRINT_COMPOSITOR_CLASS"
                    c:identifier="GTK_SOURCE_PRINT_COMPOSITOR_CLASS"
                    introspectable="0">
      <source-position filename="gtksourceprintcompositor.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PRINT_COMPOSITOR_GET_CLASS"
                    c:identifier="GTK_SOURCE_PRINT_COMPOSITOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourceprintcompositor.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="PrintCompositor"
           c:symbol-prefix="print_compositor"
           c:type="GtkSourcePrintCompositor"
           parent="GObject.Object"
           glib:type-name="GtkSourcePrintCompositor"
           glib:get-type="gtk_source_print_compositor_get_type"
           glib:type-struct="PrintCompositorClass">
      <source-position filename="gtksourceprintcompositor.h" line="57"/>
      <constructor name="new"
                   c:identifier="gtk_source_print_compositor_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="760">Creates a new print compositor that can be used to print @buffer.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="766">a new print compositor object.</doc>
          <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="762">the #GtkSourceBuffer to print.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_view"
                   c:identifier="gtk_source_print_compositor_new_from_view"
                   version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="780">Creates a new print compositor that can be used to print the buffer
associated with @view.
This constructor sets some configuration properties to make the
printed output match @view as much as possible.  The properties set are
#GtkSourcePrintCompositor:tab-width, #GtkSourcePrintCompositor:highlight-syntax,
#GtkSourcePrintCompositor:wrap-mode, #GtkSourcePrintCompositor:body-font-name and
#GtkSourcePrintCompositor:print-line-numbers.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="792">a new print compositor object.</doc>
          <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
        </return-value>
        <parameters>
          <parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="782">a #GtkSourceView to get configuration from.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="draw_page"
              c:identifier="gtk_source_print_compositor_draw_page">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="3093">Draw page @page_nr for printing on the the Cairo context encapsuled in @context.

This method has been designed to be called in the handler of the #GtkPrintOperation::draw_page signal
as shown in the following example:

&lt;informalexample&gt;&lt;programlisting&gt;
// Signal handler for the GtkPrintOperation::draw_page signal

static void
draw_page (GtkPrintOperation *operation,
           GtkPrintContext   *context,
           gint               page_nr,
           gpointer           user_data)
{
    GtkSourcePrintCompositor *compositor;

    compositor = GTK_SOURCE_PRINT_COMPOSITOR (user_data);

    gtk_source_print_compositor_draw_page (compositor,
                                           context,
                                           page_nr);
}
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="gtksourceprintcompositor.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="3095">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="3096">the #GtkPrintContext encapsulating the context information that is required when
          drawing the page for printing.</doc>
            <type name="Gtk.PrintContext" c:type="GtkPrintContext*"/>
          </parameter>
          <parameter name="page_nr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="3098">the number of the page to print.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_body_font_name"
              c:identifier="gtk_source_print_compositor_get_body_font_name"
              glib:get-property="body-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1320">Returns the name of the font used to print the text body. The returned string
must be freed with g_free().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1327">a new string containing the name of the font used to print the
text body.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1322">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bottom_margin"
              c:identifier="gtk_source_print_compositor_get_bottom_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1585">Gets the bottom margin in units of @unit.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1592">the bottom margin.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1587">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1588">the unit for the return value.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_buffer"
              c:identifier="gtk_source_print_compositor_get_buffer"
              glib:get-property="buffer"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="829">Gets the #GtkSourceBuffer associated with the compositor. The returned
object reference is owned by the compositor object and
should not be unreferenced.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="837">the #GtkSourceBuffer associated with the compositor.</doc>
          <type name="Buffer" c:type="GtkSourceBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="831">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_footer_font_name"
              c:identifier="gtk_source_print_compositor_get_footer_font_name"
              glib:get-property="footer-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1499">Returns the name of the font used to print the page footer.
The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="112"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1506">a new string containing the name of the font used to print
the page footer.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1501">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_font_name"
              c:identifier="gtk_source_print_compositor_get_header_font_name"
              glib:get-property="header-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1437">Returns the name of the font used to print the page header.
The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1444">a new string containing the name of the font used to print
the page header.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1439">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_highlight_syntax"
              c:identifier="gtk_source_print_compositor_get_highlight_syntax"
              glib:get-property="highlight-syntax"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="970">Determines whether the printed text will be highlighted according to the
buffer rules.  Note that highlighting will happen
only if the buffer to print has highlighting activated.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="978">%TRUE if the printed output will be highlighted.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="972">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_left_margin"
              c:identifier="gtk_source_print_compositor_get_left_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1625">Gets the left margin in units of @unit.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1632">the left margin</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1627">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1628">the unit for the return value.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_line_numbers_font_name"
              c:identifier="gtk_source_print_compositor_get_line_numbers_font_name"
              glib:get-property="line-numbers-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1375">Returns the name of the font used to print line numbers on the left margin.
The returned string must be freed with g_free().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1382">a new string containing the name of the font used to print
line numbers on the left margin.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1377">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages"
              c:identifier="gtk_source_print_compositor_get_n_pages"
              glib:get-property="n-pages"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1685">Returns the number of pages in the document or &lt;code&gt;-1&lt;/code&gt; if the
document has not been completely paginated.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1692">the number of pages in the document or &lt;code&gt;-1&lt;/code&gt; if the
document has not been completely paginated.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1687">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pagination_progress"
              c:identifier="gtk_source_print_compositor_get_pagination_progress"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="2818">Returns the current fraction of the document pagination that has been completed.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="2824">a fraction from 0.0 to 1.0 inclusive.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="2820">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_footer"
              c:identifier="gtk_source_print_compositor_get_print_footer"
              glib:get-property="print-footer"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1113">Determines if a footer is set to be printed for each page.  A
footer will be printed if this function returns %TRUE
&lt;emphasis&gt;and&lt;/emphasis&gt; some format strings have been specified
with gtk_source_print_compositor_set_footer_format().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1122">%TRUE if the footer is set to be printed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1115">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_header"
              c:identifier="gtk_source_print_compositor_get_print_header"
              glib:get-property="print-header"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1057">Determines if a header is set to be printed for each page.  A
header will be printed if this function returns %TRUE
&lt;emphasis&gt;and&lt;/emphasis&gt; some format strings have been specified
with gtk_source_print_compositor_set_header_format().</doc>
        <source-position filename="gtksourceprintcompositor.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1066">%TRUE if the header is set to be printed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1059">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_line_numbers"
              c:identifier="gtk_source_print_compositor_get_print_line_numbers"
              glib:get-property="print-line-numbers"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1236">Returns the interval used for line number printing.  If the
value is 0, no line numbers will be printed.  The default value is
1 (i.e. numbers printed in all lines).</doc>
        <source-position filename="gtksourceprintcompositor.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1244">the interval of printed line numbers.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1238">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_right_margin"
              c:identifier="gtk_source_print_compositor_get_right_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1665">Gets the right margin in units of @unit.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1672">the right margin.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1667">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1668">the unit for the return value.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tab_width"
              c:identifier="gtk_source_print_compositor_get_tab_width"
              glib:get-property="tab-width"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="877">Returns the width of tabulation in characters for printed text.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="883">width of tab.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="879">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_top_margin"
              c:identifier="gtk_source_print_compositor_get_top_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1545">Gets the top margin in units of @unit.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="1552">the top margin.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1547">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1548">the unit for the return value.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_wrap_mode"
              c:identifier="gtk_source_print_compositor_get_wrap_mode"
              glib:get-property="wrap-mode"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="922">Gets the line wrapping mode for the printed text.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="928">the line wrap mode.</doc>
          <type name="Gtk.WrapMode" c:type="GtkWrapMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="924">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="paginate"
              c:identifier="gtk_source_print_compositor_paginate"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="2507">Paginate the document associated with the @compositor.

In order to support non-blocking pagination, document is paginated in small chunks.
Each time gtk_source_print_compositor_paginate() is invoked, a chunk of the document
is paginated. To paginate the entire document, gtk_source_print_compositor_paginate()
must be invoked multiple times.
It returns %TRUE if the document has been completely paginated, otherwise it returns %FALSE.

This method has been designed to be invoked in the handler of the #GtkPrintOperation::paginate signal,
as shown in the following example:

&lt;informalexample&gt;&lt;programlisting&gt;
// Signal handler for the GtkPrintOperation::paginate signal

static gboolean
paginate (GtkPrintOperation *operation,
          GtkPrintContext   *context,
          gpointer           user_data)
{
    GtkSourcePrintCompositor *compositor;

    compositor = GTK_SOURCE_PRINT_COMPOSITOR (user_data);

    if (gtk_source_print_compositor_paginate (compositor, context))
    {
        gint n_pages;
        
        n_pages = gtk_source_print_compositor_get_n_pages (compositor);
        gtk_print_operation_set_n_pages (operation, n_pages);

        return TRUE;
    }
     
    return FALSE;
}
&lt;/programlisting&gt;&lt;/informalexample&gt;

If you don't need to do pagination in chunks, you can simply do it all in the
#GtkPrintOperation::begin-print handler, and set the number of pages from there, like
in the following example:

&lt;informalexample&gt;&lt;programlisting&gt;
// Signal handler for the GtkPrintOperation::begin-print signal

static void
begin_print (GtkPrintOperation *operation,
             GtkPrintContext   *context,
             gpointer           user_data)
{
    GtkSourcePrintCompositor *compositor;
    gint n_pages;

    compositor = GTK_SOURCE_PRINT_COMPOSITOR (user_data);

    while (!gtk_source_print_compositor_paginate (compositor, context));

    n_pages = gtk_source_print_compositor_get_n_pages (compositor);
    gtk_print_operation_set_n_pages (operation, n_pages);
}
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="gtksourceprintcompositor.h" line="162"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceprintcompositor.c"
               line="2574">%TRUE if the document has been completely paginated, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="2509">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="2510">the #GtkPrintContext whose parameters (e.g. paper size, print margins, etc.)
are used by the the @compositor to paginate the document.</doc>
            <type name="Gtk.PrintContext" c:type="GtkPrintContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_body_font_name"
              c:identifier="gtk_source_print_compositor_set_body_font_name"
              glib:set-property="body-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1287">Sets the default font for the printed text.

@font_name should be a
string representation of a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1289">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1290">the name of the default font for the body text.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bottom_margin"
              c:identifier="gtk_source_print_compositor_set_bottom_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1565">Sets the bottom margin used by @compositor.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1567">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1568">the new bottom margin in units of @unit.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1569">the units for @margin.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_footer_font_name"
              c:identifier="gtk_source_print_compositor_set_footer_font_name"
              glib:set-property="footer-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1463">Sets the font for printing the page footer. If
%NULL is supplied, the default font (i.e. the one being used for the
text) will be used instead.

@font_name should be a
string representation of a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1465">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1466">the name of the font for the footer text, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_footer_format"
              c:identifier="gtk_source_print_compositor_set_footer_format"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1185">Sets strftime like header format strings, to be printed on the
left, center and right of the bottom of each page. The strings may
include strftime(3) codes which will be expanded at print time.
All strftime() codes are accepted, with the addition of %N for the
page number and %Q for the page count.

@separator specifies if a solid line should be drawn to separate
the footer from the document text.

If %NULL is given for any of the three arguments, that particular
string will not be printed.

For the footer to be printed, in
addition to specifying format strings, you need to enable footer
printing with gtk_source_print_compositor_set_print_footer().

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1187">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="separator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1188">%TRUE if you want a separator line to be printed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="left"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1189">a format string to print on the left of the footer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="center"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1190">a format string to print on the center of the footer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="right"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1191">a format string to print on the right of the footer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_header_font_name"
              c:identifier="gtk_source_print_compositor_set_header_font_name"
              glib:set-property="header-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1401">Sets the font for printing the page header. If
%NULL is supplied, the default font (i.e. the one being used for the
text) will be used instead.

@font_name should be a
string representation of a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1403">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1404">the name of the font for header text, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_header_format"
              c:identifier="gtk_source_print_compositor_set_header_format"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1134">Sets strftime like header format strings, to be printed on the
left, center and right of the top of each page.  The strings may
include strftime(3) codes which will be expanded at print time.
All strftime() codes are accepted, with the addition of %N for the
page number and %Q for the page count.

@separator specifies if a solid line should be drawn to separate
the header from the document text.

If %NULL is given for any of the three arguments, that particular
string will not be printed.

For the header to be printed, in
addition to specifying format strings, you need to enable header
printing with gtk_source_print_compositor_set_print_header().

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1136">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="separator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1137">%TRUE if you want a separator line to be printed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="left"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1138">a format string to print on the left of the header.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="center"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1139">a format string to print on the center of the header.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="right"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1140">a format string to print on the right of the header.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_highlight_syntax"
              c:identifier="gtk_source_print_compositor_set_highlight_syntax"
              glib:set-property="highlight-syntax"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="940">Sets whether the printed text will be highlighted according to the
buffer rules.  Both color and font style are applied.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="942">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="highlight" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="943">whether syntax should be highlighted.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_left_margin"
              c:identifier="gtk_source_print_compositor_set_left_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1605">Sets the left margin used by @compositor.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1607">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1608">the new left margin in units of @unit.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1609">the units for @margin.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line_numbers_font_name"
              c:identifier="gtk_source_print_compositor_set_line_numbers_font_name"
              glib:set-property="line-numbers-font-name"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1340">Sets the font for printing line numbers on the left margin.  If
%NULL is supplied, the default font (i.e. the one being used for the
text) will be used instead.

@font_name should be a
string representation of a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1342">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1343">the name of the font for line numbers, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_print_footer"
              c:identifier="gtk_source_print_compositor_set_print_footer"
              glib:set-property="print-footer"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1078">Sets whether you want to print a footer in each page.  The
footer consists of three pieces of text and an optional line
separator, configurable with
gtk_source_print_compositor_set_footer_format().

Note that by default the footer format is unspecified, and if it's
empty it will not be printed, regardless of this setting.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1080">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="print" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1081">%TRUE if you want the footer to be printed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_print_header"
              c:identifier="gtk_source_print_compositor_set_print_header"
              glib:set-property="print-header"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1022">Sets whether you want to print a header in each page.  The
header consists of three pieces of text and an optional line
separator, configurable with
gtk_source_print_compositor_set_header_format().

Note that by default the header format is unspecified, and if it's
empty it will not be printed, regardless of this setting.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1024">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="print" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1025">%TRUE if you want the header to be printed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_print_line_numbers"
              c:identifier="gtk_source_print_compositor_set_print_line_numbers"
              glib:set-property="print-line-numbers"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="990">Sets the interval for printed line numbers.  If @interval is 0 no
numbers will be printed.  If greater than 0, a number will be
printed every @interval lines (i.e. 1 will print all line numbers).

Maximum accepted value for @interval is 100.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="992">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="993">interval for printed line numbers.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_right_margin"
              c:identifier="gtk_source_print_compositor_set_right_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1645">Sets the right margin used by @compositor.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1647">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1648">the new right margin in units of @unit.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1649">the units for @margin.</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tab_width"
              c:identifier="gtk_source_print_compositor_set_tab_width"
              glib:set-property="tab-width"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="849">Sets the width of tabulation in characters for printed text.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="851">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="852">width of tab in characters.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_top_margin"
              c:identifier="gtk_source_print_compositor_set_top_margin"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="1525">Sets the top margin used by @compositor.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1527">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1528">the new top margin in units of @unit</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="1529">the units for @margin</doc>
            <type name="Gtk.Unit" c:type="GtkUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_wrap_mode"
              c:identifier="gtk_source_print_compositor_set_wrap_mode"
              glib:set-property="wrap-mode"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="895">Sets the line wrapping mode for the printed text.

This function cannot be called anymore after the first call to the
gtk_source_print_compositor_paginate() function.</doc>
        <source-position filename="gtksourceprintcompositor.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="897">a #GtkSourcePrintCompositor.</doc>
            <type name="PrintCompositor" c:type="GtkSourcePrintCompositor*"/>
          </instance-parameter>
          <parameter name="wrap_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceprintcompositor.c"
                 line="898">a #GtkWrapMode.</doc>
            <type name="Gtk.WrapMode" c:type="GtkWrapMode"/>
          </parameter>
        </parameters>
      </method>
      <property name="body-font-name"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_body_font_name"
                getter="get_body_font_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="580">Name of the font used for the text body.

Accepted values are strings representing a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="buffer"
                version="2.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_buffer">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="436">The GtkSourceBuffer object to print.</doc>
        <type name="Buffer"/>
      </property>
      <property name="footer-font-name"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_footer_font_name"
                getter="get_footer_font_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="651">Name of the font used to print page footer.
If this property is unspecified, the text body font is used.

Accepted values are strings representing a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="header-font-name"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_header_font_name"
                getter="get_header_font_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="627">Name of the font used to print page header.
If this property is unspecified, the text body font is used.

Accepted values are strings representing a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="highlight-syntax"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_highlight_syntax"
                getter="get_highlight_syntax"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="493">Whether to print the document with highlighted syntax.
 
The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="line-numbers-font-name"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_line_numbers_font_name"
                getter="get_line_numbers_font_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="603">Name of the font used to print line numbers on the left margin.
If this property is unspecified, the text body font is used.

Accepted values are strings representing a font description Pango can understand.
(e.g. &amp;quot;Monospace 10&amp;quot;). See pango_font_description_from_string()
for a description of the format of the string representation.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="n-pages"
                version="2.2"
                transfer-ownership="none"
                getter="get_n_pages"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="675">The number of pages in the document or &lt;code&gt;-1&lt;/code&gt; if the
document has not been completely paginated.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="print-footer"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_print_footer"
                getter="get_print_footer"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="557">Whether to print a footer in each page.

Note that by default the footer format is unspecified, and if it is
unspecified the footer will not be printed, regardless of the value of
this property.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="print-header"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_print_header"
                getter="get_print_header"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="534">Whether to print a header in each page.

Note that by default the header format is unspecified, and if it is
unspecified the header will not be printed, regardless of the value of
this property.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="print-line-numbers"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_print_line_numbers"
                getter="get_print_line_numbers"
                default-value="1">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="513">Interval of printed line numbers. If this property is set to 0 no
numbers will be printed.  If greater than 0, a number will be
printed every "print-line-numbers" lines (i.e. 1 will print all line numbers).

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="tab-width"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_tab_width"
                getter="get_tab_width"
                default-value="8">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="451">Width of a tab character expressed in spaces.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="wrap-mode"
                version="2.2"
                writable="1"
                transfer-ownership="none"
                setter="set_wrap_mode"
                getter="get_wrap_mode"
                default-value="GTK_WRAP_NONE">
        <doc xml:space="preserve"
             filename="gtksourceprintcompositor.c"
             line="472">Whether to wrap lines never, at word boundaries, or at character boundaries.

The value of this property cannot be changed anymore after the first
call to the gtk_source_print_compositor_paginate() function.</doc>
        <type name="Gtk.WrapMode"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="PrintCompositorPrivate"
              c:type="GtkSourcePrintCompositorPrivate*"/>
      </field>
    </class>
    <record name="PrintCompositorClass"
            c:type="GtkSourcePrintCompositorClass"
            glib:is-gtype-struct-for="PrintCompositor">
      <source-position filename="gtksourceprintcompositor.h" line="57"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourceprintcompositor.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourceprintcompositor.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PrintCompositorPrivate"
            c:type="GtkSourcePrintCompositorPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourceprintcompositor.h" line="41"/>
    </record>
    <function-macro name="STYLE"
                    c:identifier="GTK_SOURCE_STYLE"
                    introspectable="0">
      <source-position filename="gtksourcestyle.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME"
                    introspectable="0">
      <source-position filename="gtksourcestylescheme.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME_CLASS"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcestylescheme.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME_GET_CLASS"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcestylescheme.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME_MANAGER"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME_MANAGER"
                    introspectable="0">
      <source-position filename="gtksourcestyleschememanager.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME_MANAGER_CLASS"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcestyleschememanager.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STYLE_SCHEME_MANAGER_GET_CLASS"
                    c:identifier="GTK_SOURCE_STYLE_SCHEME_MANAGER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourcestyleschememanager.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="SearchFlags" c:type="GtkSourceSearchFlags">
      <source-position filename="gtksourceiter.h" line="35"/>
      <member name="visible_only"
              value="1"
              c:identifier="GTK_SOURCE_SEARCH_VISIBLE_ONLY">
      </member>
      <member name="text_only"
              value="2"
              c:identifier="GTK_SOURCE_SEARCH_TEXT_ONLY">
      </member>
      <member name="case_insensitive"
              value="4"
              c:identifier="GTK_SOURCE_SEARCH_CASE_INSENSITIVE">
      </member>
    </bitfield>
    <enumeration name="SmartHomeEndType" c:type="GtkSourceSmartHomeEndType">
      <source-position filename="gtksourceview.h" line="105"/>
      <member name="disabled"
              value="0"
              c:identifier="GTK_SOURCE_SMART_HOME_END_DISABLED">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="89">smart-home-end disabled.</doc>
      </member>
      <member name="before"
              value="1"
              c:identifier="GTK_SOURCE_SMART_HOME_END_BEFORE">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="90">move to the first/last
non-whitespace character on the first press of the HOME/END keys and
to the beginning/end of the line on the second press.</doc>
      </member>
      <member name="after"
              value="2"
              c:identifier="GTK_SOURCE_SMART_HOME_END_AFTER">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="93">move to the beginning/end of the
line on the first press of the HOME/END keys and to the first/last
non-whitespace character on the second press.</doc>
      </member>
      <member name="always"
              value="3"
              c:identifier="GTK_SOURCE_SMART_HOME_END_ALWAYS">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="96">always move to the first/last
non-whitespace character when the HOME/END keys are pressed.</doc>
      </member>
    </enumeration>
    <class name="Style"
           c:symbol-prefix="style"
           c:type="GtkSourceStyle"
           parent="GObject.Object"
           glib:type-name="GtkSourceStyle"
           glib:get-type="gtk_source_style_get_type">
      <method name="copy"
              c:identifier="gtk_source_style_copy"
              version="2.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcestyle.c"
             line="370">Creates a copy of @style, that is a new #GtkSourceStyle instance which
has the same attributes set.</doc>
        <source-position filename="gtksourcestyle.h" line="36"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcestyle.c"
               line="377">copy of @style, call g_object_unref() when you are done with it.</doc>
          <type name="Style" c:type="GtkSourceStyle*"/>
        </return-value>
        <parameters>
          <instance-parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyle.c"
                 line="372">a #GtkSourceStyle structure to copy.</doc>
            <type name="Style" c:type="const GtkSourceStyle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="background"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="background-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="bold"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="bold-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="foreground"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="foreground-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="italic"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="italic-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="line-background"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="line-background-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="strikethrough"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="strikethrough-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="underline"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="underline-set"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <class name="StyleScheme"
           c:symbol-prefix="style_scheme"
           c:type="GtkSourceStyleScheme"
           parent="GObject.Object"
           glib:type-name="GtkSourceStyleScheme"
           glib:get-type="gtk_source_style_scheme_get_type"
           glib:type-struct="StyleSchemeClass">
      <source-position filename="gtksourcestylescheme.h" line="53"/>
      <method name="get_authors"
              c:identifier="gtk_source_style_scheme_get_authors"
              version="2.0">
        <source-position filename="gtksourcestylescheme.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="308">a %NULL-terminated array containing
the @scheme authors or %NULL if no author is specified by the style scheme.</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="306">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gtk_source_style_scheme_get_description"
              glib:get-property="description"
              version="2.0">
        <source-position filename="gtksourcestylescheme.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="292">@scheme description (if defined), or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="290">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="gtk_source_style_scheme_get_filename"
              glib:get-property="filename"
              version="2.0">
        <source-position filename="gtksourcestylescheme.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="328">@scheme file name if the scheme was created parsing a
style scheme file or %NULL in the other cases.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="326">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gtk_source_style_scheme_get_id"
              glib:get-property="id"
              version="2.0">
        <source-position filename="gtksourcestylescheme.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="258">@scheme id.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="256">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gtk_source_style_scheme_get_name"
              glib:get-property="name"
              version="2.0">
        <source-position filename="gtksourcestylescheme.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="275">@scheme name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="273">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_style"
              c:identifier="gtk_source_style_scheme_get_style"
              version="2.0"
              introspectable="0">
        <source-position filename="gtksourcestylescheme.h" line="68"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcestylescheme.c"
               line="451">style which corresponds to @style_id in the @scheme,
or %NULL when no style with this name found. It is owned by @scheme
and may not be unref'ed.</doc>
          <type name="Style" c:type="GtkSourceStyle*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="448">a #GtkSourceStyleScheme.</doc>
            <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
          </instance-parameter>
          <parameter name="style_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestylescheme.c"
                 line="449">id of the style to retrieve.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                transfer-ownership="none"
                getter="get_description"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="filename"
                transfer-ownership="none"
                getter="get_filename"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcestylescheme.c"
             line="218">Style scheme filename or NULL.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcestylescheme.c"
             line="178">Style scheme id, a unique string used to identify the style scheme
in #GtkSourceStyleSchemeManager.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="gtksourcestylescheme.c"
             line="205">Style scheme name, a translatable string to present to user.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="base">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="StyleSchemePrivate" c:type="GtkSourceStyleSchemePrivate*"/>
      </field>
    </class>
    <record name="StyleSchemeClass"
            c:type="GtkSourceStyleSchemeClass"
            glib:is-gtype-struct-for="StyleScheme">
      <source-position filename="gtksourcestylescheme.h" line="53"/>
      <field name="base_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcestylescheme.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcestylescheme.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="StyleSchemeManager"
           c:symbol-prefix="style_scheme_manager"
           c:type="GtkSourceStyleSchemeManager"
           parent="GObject.Object"
           glib:type-name="GtkSourceStyleSchemeManager"
           glib:get-type="gtk_source_style_scheme_manager_get_type"
           glib:type-struct="StyleSchemeManagerClass">
      <source-position filename="gtksourcestyleschememanager.h" line="56"/>
      <constructor name="new"
                   c:identifier="gtk_source_style_scheme_manager_new">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="181">Creates a new style manager. If you do not need more than one style
manager then use gtk_source_style_scheme_manager_get_default() instead.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gtksourcestyleschememanager.c"
               line="187">a new #GtkSourceStyleSchemeManager.</doc>
          <type name="StyleSchemeManager"
                c:type="GtkSourceStyleSchemeManager*"/>
        </return-value>
      </constructor>
      <function name="get_default"
                c:identifier="gtk_source_style_scheme_manager_get_default"
                introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="195">Returns the default #GtkSourceStyleSchemeManager instance.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="65"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourcestyleschememanager.c"
               line="200">a #GtkSourceStyleSchemeManager. Return value
is owned by GtkSourceView library and must not be unref'ed.</doc>
          <type name="StyleSchemeManager"
                c:type="GtkSourceStyleSchemeManager*"/>
        </return-value>
      </function>
      <method name="append_search_path"
              c:identifier="gtk_source_style_scheme_manager_append_search_path">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="436">Appends @path to the list of directories where the @manager looks for
style scheme files.
See gtk_source_style_scheme_manager_set_search_path() for details.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="438">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="439">a directory or a filename.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="force_rescan"
              c:identifier="gtk_source_style_scheme_manager_force_rescan">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="529">Mark any currently cached information about the available style scehems
as invalid. All the available style schemes will be reloaded next time
the @manager is accessed.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="531">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scheme"
              c:identifier="gtk_source_style_scheme_manager_get_scheme">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="567">Looks up style scheme by id.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestyleschememanager.c"
               line="574">a #GtkSourceStyleScheme object. Returned value is owned by
@manager and must not be unref'ed.</doc>
          <type name="StyleScheme" c:type="GtkSourceStyleScheme*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="569">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
          <parameter name="scheme_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="570">style scheme id to find.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scheme_ids"
              c:identifier="gtk_source_style_scheme_manager_get_scheme_ids"
              glib:get-property="scheme-ids">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="547">Returns the ids of the available style schemes.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestyleschememanager.c"
               line="553">a %NULL-terminated array
of string containing the ids of the available style schemes or %NULL if no
style scheme is available. The array is owned by the @manager and must not be modified.</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="549">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_path"
              c:identifier="gtk_source_style_scheme_manager_get_search_path"
              glib:get-property="search-path">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="507">Returns the current search path for the @manager.
See gtk_source_style_scheme_manager_set_search_path() for details.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourcestyleschememanager.c"
               line="514">a %NULL-terminated array
of string containing the search path.
The array is owned by the @manager and must not be modified.</doc>
          <array c:type="const gchar* const*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="509">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="prepend_search_path"
              c:identifier="gtk_source_style_scheme_manager_prepend_search_path">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="471">Prepends @path to the list of directories where the @manager looks
for style scheme files.
See gtk_source_style_scheme_manager_set_search_path() for details.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="473">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="474">a directory or a filename.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_path"
              c:identifier="gtk_source_style_scheme_manager_set_search_path"
              glib:set-property="search-path">
        <doc xml:space="preserve"
             filename="gtksourcestyleschememanager.c"
             line="406">Sets the list of directories where the @manager looks for
style scheme files.
If @path is %NULL, the search path is reset to default.</doc>
        <source-position filename="gtksourcestyleschememanager.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="408">a #GtkSourceStyleSchemeManager.</doc>
            <type name="StyleSchemeManager"
                  c:type="GtkSourceStyleSchemeManager*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourcestyleschememanager.c"
                 line="409">
a %NULL-terminated array of strings or %NULL.</doc>
            <array c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <property name="scheme-ids"
                transfer-ownership="none"
                getter="get_scheme_ids">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="search-path"
                writable="1"
                transfer-ownership="none"
                setter="set_search_path"
                getter="get_search_path">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="StyleSchemeManagerPrivate"
              c:type="GtkSourceStyleSchemeManagerPrivate*"/>
      </field>
    </class>
    <record name="StyleSchemeManagerClass"
            c:type="GtkSourceStyleSchemeManagerClass"
            glib:is-gtype-struct-for="StyleSchemeManager">
      <source-position filename="gtksourcestyleschememanager.h" line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gtk_source_reserved1" introspectable="0">
        <callback name="_gtk_source_reserved1">
          <source-position filename="gtksourcestyleschememanager.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved2" introspectable="0">
        <callback name="_gtk_source_reserved2">
          <source-position filename="gtksourcestyleschememanager.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved3" introspectable="0">
        <callback name="_gtk_source_reserved3">
          <source-position filename="gtksourcestyleschememanager.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gtk_source_reserved4" introspectable="0">
        <callback name="_gtk_source_reserved4">
          <source-position filename="gtksourcestyleschememanager.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="StyleSchemeManagerPrivate"
            c:type="GtkSourceStyleSchemeManagerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcestyleschememanager.h" line="38"/>
    </record>
    <record name="StyleSchemePrivate"
            c:type="GtkSourceStyleSchemePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourcestylescheme.h" line="37"/>
    </record>
    <function-macro name="UNDO_MANAGER"
                    c:identifier="GTK_SOURCE_UNDO_MANAGER"
                    introspectable="0">
      <source-position filename="gtksourceundomanager.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNDO_MANAGER_GET_INTERFACE"
                    c:identifier="GTK_SOURCE_UNDO_MANAGER_GET_INTERFACE"
                    introspectable="0">
      <source-position filename="gtksourceundomanager.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="UndoManager"
               c:symbol-prefix="undo_manager"
               c:type="GtkSourceUndoManager"
               glib:type-name="GtkSourceUndoManager"
               glib:get-type="gtk_source_undo_manager_get_type"
               glib:type-struct="UndoManagerIface">
      <source-position filename="gtksourceundomanager.h" line="57"/>
      <virtual-method name="begin_not_undoable_action"
                      invoker="begin_not_undoable_action"
                      version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="261">Begin a not undoable action on the buffer. All changes between this call
and the call to #gtk_source_undo_manager_end_not_undoable_action cannot
be undone. This function should be re-entrant.</doc>
        <source-position filename="gtksourceundomanager.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="263">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_redo" invoker="can_redo" version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="207">Get whether there are redo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceundomanager.c"
               line="213">%TRUE if there are redo operations available, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="209">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_redo_changed"
                      invoker="can_redo_changed"
                      version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="311">Emits the #GtkSourceUndoManager::can-redo-changed signal.</doc>
        <source-position filename="gtksourceundomanager.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="313">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_undo" invoker="can_undo" version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="189">Get whether there are undo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceundomanager.c"
               line="195">%TRUE if there are undo operations available, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="191">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_undo_changed"
                      invoker="can_undo_changed"
                      version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="295">Emits the #GtkSourceUndoManager::can-undo-changed signal.</doc>
        <source-position filename="gtksourceundomanager.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="297">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_not_undoable_action"
                      invoker="end_not_undoable_action"
                      version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="279">Ends a not undoable action on the buffer.</doc>
        <source-position filename="gtksourceundomanager.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="281">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="redo" invoker="redo" version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="243">Perform a single redo. Calling this function when there are no redo operations
available is an error. Use #gtk_source_undo_manager_can_redo to find out
if there are redo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="245">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="undo" invoker="undo" version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="225">Perform a single undo. Calling this function when there are no undo operations
available is an error. Use #gtk_source_undo_manager_can_undo to find out
if there are undo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="227">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="begin_not_undoable_action"
              c:identifier="gtk_source_undo_manager_begin_not_undoable_action"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="261">Begin a not undoable action on the buffer. All changes between this call
and the call to #gtk_source_undo_manager_end_not_undoable_action cannot
be undone. This function should be re-entrant.</doc>
        <source-position filename="gtksourceundomanager.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="263">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_redo"
              c:identifier="gtk_source_undo_manager_can_redo"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="207">Get whether there are redo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceundomanager.c"
               line="213">%TRUE if there are redo operations available, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="209">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_redo_changed"
              c:identifier="gtk_source_undo_manager_can_redo_changed"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="311">Emits the #GtkSourceUndoManager::can-redo-changed signal.</doc>
        <source-position filename="gtksourceundomanager.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="313">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_undo"
              c:identifier="gtk_source_undo_manager_can_undo"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="189">Get whether there are undo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceundomanager.c"
               line="195">%TRUE if there are undo operations available, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="191">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="can_undo_changed"
              c:identifier="gtk_source_undo_manager_can_undo_changed"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="295">Emits the #GtkSourceUndoManager::can-undo-changed signal.</doc>
        <source-position filename="gtksourceundomanager.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="297">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="end_not_undoable_action"
              c:identifier="gtk_source_undo_manager_end_not_undoable_action"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="279">Ends a not undoable action on the buffer.</doc>
        <source-position filename="gtksourceundomanager.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="281">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="redo"
              c:identifier="gtk_source_undo_manager_redo"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="243">Perform a single redo. Calling this function when there are no redo operations
available is an error. Use #gtk_source_undo_manager_can_redo to find out
if there are redo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="245">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="undo"
              c:identifier="gtk_source_undo_manager_undo"
              version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="225">Perform a single undo. Calling this function when there are no undo operations
available is an error. Use #gtk_source_undo_manager_can_undo to find out
if there are undo operations available.</doc>
        <source-position filename="gtksourceundomanager.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="227">a #GtkSourceUndoManager.</doc>
            <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="can-redo-changed"
                   when="last"
                   action="1"
                   version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="132">Emitted when the ability to redo has changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="can-undo-changed"
                   when="last"
                   action="1"
                   version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceundomanager.c"
             line="112">Emitted when the ability to undo has changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="UndoManagerIface"
            c:type="GtkSourceUndoManagerIface"
            glib:is-gtype-struct-for="UndoManager">
      <source-position filename="gtksourceundomanager.h" line="57"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="can_undo">
        <callback name="can_undo">
          <source-position filename="gtksourceundomanager.h" line="45"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="195">%TRUE if there are undo operations available, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="191">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_redo">
        <callback name="can_redo">
          <source-position filename="gtksourceundomanager.h" line="46"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceundomanager.c"
                 line="213">%TRUE if there are redo operations available, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="209">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="undo">
        <callback name="undo">
          <source-position filename="gtksourceundomanager.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="227">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="redo">
        <callback name="redo">
          <source-position filename="gtksourceundomanager.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="245">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="begin_not_undoable_action">
        <callback name="begin_not_undoable_action">
          <source-position filename="gtksourceundomanager.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="263">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_not_undoable_action">
        <callback name="end_not_undoable_action">
          <source-position filename="gtksourceundomanager.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="281">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_undo_changed">
        <callback name="can_undo_changed">
          <source-position filename="gtksourceundomanager.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="297">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_redo_changed">
        <callback name="can_redo_changed">
          <source-position filename="gtksourceundomanager.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gtksourceundomanager.c"
                   line="313">a #GtkSourceUndoManager.</doc>
              <type name="UndoManager" c:type="GtkSourceUndoManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <function-macro name="VIEW"
                    c:identifier="GTK_SOURCE_VIEW"
                    introspectable="0">
      <source-position filename="gtksourceview.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VIEW_CLASS"
                    c:identifier="GTK_SOURCE_VIEW_CLASS"
                    introspectable="0">
      <source-position filename="gtksourceview.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VIEW_GET_CLASS"
                    c:identifier="GTK_SOURCE_VIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="gtksourceview.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="View"
           c:symbol-prefix="view"
           c:type="GtkSourceView"
           parent="Gtk.TextView"
           glib:type-name="GtkSourceView"
           glib:get-type="gtk_source_view_get_type"
           glib:type-struct="ViewClass">
      <source-position filename="gtksourceview.h" line="85"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gtk_source_view_new">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3132">Creates a new #GtkSourceView. An empty default buffer will be
created for you. If you want to specify your own buffer, consider
gtk_source_view_new_with_buffer().</doc>
        <source-position filename="gtksourceview.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3139">a new #GtkSourceView.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_buffer"
                   c:identifier="gtk_source_view_new_with_buffer">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3153">Creates a new #GtkSourceView widget displaying the buffer
@buffer. One buffer can be shared among many widgets.</doc>
        <source-position filename="gtksourceview.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3160">a new #GtkSourceView.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3155">a #GtkSourceBuffer.</doc>
            <type name="Buffer" c:type="GtkSourceBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="line_mark_activated">
        <source-position filename="gtksourceview.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_lines">
        <source-position filename="gtksourceview.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="copy" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_words">
        <source-position filename="gtksourceview.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="redo">
        <source-position filename="gtksourceview.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_completion">
        <source-position filename="gtksourceview.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="undo">
        <source-position filename="gtksourceview.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_auto_indent"
              c:identifier="gtk_source_view_get_auto_indent"
              glib:get-property="auto-indent">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4612">Returns whether auto indentation of text is enabled.</doc>
        <source-position filename="gtksourceview.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4618">%TRUE if auto indentation is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4614">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_completion"
              c:identifier="gtk_source_view_get_completion"
              glib:get-property="completion"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="5276">Gets the #GtkSourceCompletion associated with @view.</doc>
        <source-position filename="gtksourceview.h" line="275"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="5282">the #GtkSourceCompletion associated with @view.</doc>
          <type name="Completion" c:type="GtkSourceCompletion*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="5278">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_draw_spaces"
              c:identifier="gtk_source_view_get_draw_spaces">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4987">Returns the #GtkSourceDrawSpacesFlags specifying if and how spaces
should be displayed for this @view.</doc>
        <source-position filename="gtksourceview.h" line="271"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4994">the #GtkSourceDrawSpacesFlags, 0 if no spaces should be drawn.</doc>
          <type name="DrawSpacesFlags" c:type="GtkSourceDrawSpacesFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4989">a #GtkSourceView</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gutter"
              c:identifier="gtk_source_view_get_gutter"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="5298">Returns the #GtkSourceGutter object associated with @window_type for @view.
Only GTK_TEXT_WINDOW_LEFT and GTK_TEXT_WINDOW_RIGHT are supported,
respectively corresponding to the left and right gutter. The line numbers
and mark category icons are rendered in the gutter corresponding to
GTK_TEXT_WINDOW_LEFT.</doc>
        <source-position filename="gtksourceview.h" line="277"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="5311">the #GtkSourceGutter.</doc>
          <type name="Gutter" c:type="GtkSourceGutter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="5300">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="window_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="5301">the gutter window type.</doc>
            <type name="Gtk.TextWindowType" c:type="GtkTextWindowType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_highlight_current_line"
              c:identifier="gtk_source_view_get_highlight_current_line"
              glib:get-property="highlight-current-line">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4801">Returns whether the current line is highlighted.</doc>
        <source-position filename="gtksourceview.h" line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4807">%TRUE if the current line is highlighted.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4803">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_indent_on_tab"
              c:identifier="gtk_source_view_get_indent_on_tab"
              glib:get-property="indent-on-tab"
              version="1.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4690">Returns whether when the tab key is pressed the current selection
should get indented instead of replaced with the \t character.</doc>
        <source-position filename="gtksourceview.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4697">%TRUE if the selection is indented when tab is pressed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4692">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_indent_width"
              c:identifier="gtk_source_view_get_indent_width"
              glib:get-property="indent-width">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3388">Returns the number of spaces to use for each step of indent.
See gtk_source_view_set_indent_width() for details.</doc>
        <source-position filename="gtksourceview.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3395">indent width.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3390">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_insert_spaces_instead_of_tabs"
              c:identifier="gtk_source_view_get_insert_spaces_instead_of_tabs"
              glib:get-property="insert-spaces-instead-of-tabs">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4650">Returns whether when inserting a tabulator character it should
be replaced by a group of space characters.</doc>
        <source-position filename="gtksourceview.h" line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4657">%TRUE if spaces are inserted instead of tabs.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4652">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mark_category_background"
              c:identifier="gtk_source_view_get_mark_category_background"
              version="2.4">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3802">Gets the background color associated with given @category.</doc>
        <source-position filename="gtksourceview.h" line="227"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3810">%TRUE if background color for @category was set
and @dest is set to a valid color, or %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3804">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3805">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3806">destination #GdkColor structure to fill in.</doc>
            <type name="Gdk.Color" c:type="GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mark_category_pixbuf"
              c:identifier="gtk_source_view_get_mark_category_pixbuf"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3636">Gets the pixbuf which is associated with the given mark @category.</doc>
        <source-position filename="gtksourceview.h" line="218"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3643">the associated #GdkPixbuf, or %NULL if not found.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3638">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3639">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mark_category_priority"
              c:identifier="gtk_source_view_get_mark_category_priority"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3867">Gets the priority which is associated with the given @category.</doc>
        <source-position filename="gtksourceview.h" line="259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3874">the priority or if @category
exists but no priority was set, it defaults to 0.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3869">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3870">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_right_margin_position"
              c:identifier="gtk_source_view_get_right_margin_position"
              glib:get-property="right-margin-position">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4881">Gets the position of the right margin in the given @view.</doc>
        <source-position filename="gtksourceview.h" line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4887">the position of the right margin.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4883">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_line_marks"
              c:identifier="gtk_source_view_get_show_line_marks"
              glib:get-property="show-line-marks"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3232">Returns whether line marks are displayed beside the text.</doc>
        <source-position filename="gtksourceview.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3238">%TRUE if the line marks are displayed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3234">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_line_numbers"
              c:identifier="gtk_source_view_get_show_line_numbers"
              glib:get-property="show-line-numbers">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3175">Returns whether line numbers are displayed beside the text.</doc>
        <source-position filename="gtksourceview.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3181">%TRUE if the line numbers are displayed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3177">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_right_margin"
              c:identifier="gtk_source_view_get_show_right_margin"
              glib:get-property="show-right-margin">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4841">Returns whether a right margin is displayed.</doc>
        <source-position filename="gtksourceview.h" line="183"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4847">%TRUE if the right margin is shown.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4843">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_smart_home_end"
              c:identifier="gtk_source_view_get_smart_home_end">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4945">Returns a #GtkSourceSmartHomeEndType end value specifying
how the cursor will move when HOME and END keys are pressed.</doc>
        <source-position filename="gtksourceview.h" line="266"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="4952">a #GtkSourceSmartHomeEndTypeend value.</doc>
          <type name="SmartHomeEndType" c:type="GtkSourceSmartHomeEndType"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4947">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tab_width"
              c:identifier="gtk_source_view_get_tab_width"
              glib:get-property="tab-width">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3349">Returns the width of tabulation in characters.</doc>
        <source-position filename="gtksourceview.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="3355">width of tab.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3351">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visual_column"
              c:identifier="gtk_source_view_get_visual_column">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="5004">Determines the visual column at @iter taking into
consideration the indent width of @view.</doc>
        <source-position filename="gtksourceview.h" line="272"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.c"
               line="5012">the visual column at @iter.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="5006">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="5007">a position in @view.</doc>
            <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_indent"
              c:identifier="gtk_source_view_set_auto_indent"
              glib:set-property="auto-indent">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4628">If %TRUE auto indentation of text is enabled.</doc>
        <source-position filename="gtksourceview.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4630">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4631">whether to enable auto indentation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_spaces"
              c:identifier="gtk_source_view_set_draw_spaces">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4962">Set if and how the spaces should be visualized. Specifying @flags as 0 will
disable display of spaces.</doc>
        <source-position filename="gtksourceview.h" line="268"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4964">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4965">#GtkSourceDrawSpacesFlags specifing how white spaces should
be displayed</doc>
            <type name="DrawSpacesFlags" c:type="GtkSourceDrawSpacesFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_highlight_current_line"
              c:identifier="gtk_source_view_set_highlight_current_line"
              glib:set-property="highlight-current-line">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4817">If @show is %TRUE the current line is highlighted.</doc>
        <source-position filename="gtksourceview.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4819">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4820">whether to highlight the current line.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indent_on_tab"
              c:identifier="gtk_source_view_set_indent_on_tab"
              glib:set-property="indent-on-tab"
              version="1.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4709">If %TRUE, when the tab key is pressed and there is a selection, the
selected text is indented of one level instead of being replaced with
the \t characters. Shift+Tab unindents the selection.</doc>
        <source-position filename="gtksourceview.h" line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4711">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4712">whether to indent a block when tab is pressed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indent_width"
              c:identifier="gtk_source_view_set_indent_width"
              glib:set-property="indent-width">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3365">Sets the number of spaces to use for each step of indent.
If @width is -1, the value of the GtkSourceView::tab-width property
will be used.</doc>
        <source-position filename="gtksourceview.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3367">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3368">indent width in characters.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_insert_spaces_instead_of_tabs"
              c:identifier="gtk_source_view_set_insert_spaces_instead_of_tabs"
              glib:set-property="insert-spaces-instead-of-tabs">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4667">If %TRUE any tabulator character inserted is replaced by a group
of space characters.</doc>
        <source-position filename="gtksourceview.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4669">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4670">whether to insert spaces instead of tabs.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_background"
              c:identifier="gtk_source_view_set_mark_category_background"
              version="2.4">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3774">Sets given background @color for mark @category.
If @color is %NULL, the background color is unset.</doc>
        <source-position filename="gtksourceview.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3776">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3777">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3778">background color or %NULL to unset it.</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_icon_from_icon_name"
              c:identifier="gtk_source_view_set_mark_category_icon_from_icon_name"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3529">Sets the icon to be used for @category to the named theme item @name.
If @name is %NULL, the icon is unset.</doc>
        <source-position filename="gtksourceview.h" line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3531">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3532">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3533">the themed icon name, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_icon_from_pixbuf"
              c:identifier="gtk_source_view_set_mark_category_icon_from_pixbuf"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3486">Sets the icon to be used for @category to @pixbuf.
If @pixbuf is %NULL, the icon is unset.</doc>
        <source-position filename="gtksourceview.h" line="202"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3488">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3489">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="pixbuf"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3490">a #GdkPixbuf, or %NULL.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_icon_from_stock"
              c:identifier="gtk_source_view_set_mark_category_icon_from_stock"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3571">Sets the icon to be used for @category to the stock item @stock_id.
If @stock_id is %NULL, the icon is unset.</doc>
        <source-position filename="gtksourceview.h" line="207"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3573">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3574">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="stock_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3575">the stock id, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_pixbuf"
              c:identifier="gtk_source_view_set_mark_category_pixbuf"
              version="2.2"
              deprecated="1">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3613">Associates a given @pixbuf with a given mark @category.
If @pixbuf is %NULL, the pixbuf is unset.</doc>
        <doc-deprecated xml:space="preserve">Use #gtk_source_view_set_mark_category_icon_from_pixbuf instead.</doc-deprecated>
        <source-position filename="gtksourceview.h" line="196"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3615">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3616">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="pixbuf"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3617">a #GdkPixbuf, or %NULL.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_priority"
              c:identifier="gtk_source_view_set_mark_category_priority"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3838">Set the @priority for the given mark @category. When there are
multiple marks on the same line, marks of categories with
higher priorities will be drawn on top.</doc>
        <source-position filename="gtksourceview.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3840">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3841">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3842">the priority for the category</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_tooltip_func"
              c:identifier="gtk_source_view_set_mark_category_tooltip_func"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3701">Set a #GtkSourceViewMarkTooltipFunc used to set tooltip on marks from the
given mark @category.
If you also specified a function with
gtk_source_view_set_mark_category_tooltip_markup_func()  the markup
variant takes precedence.

&lt;informalexample&gt;&lt;programlisting&gt;&lt;![CDATA[
static gchar *
tooltip_func (GtkSourceMark *mark,
              gpointer       user_data)
{
  gchar *text;

  text = get_tooltip_for_mark (mark, user_data);

  return text;
}

...

GtkSourceView *view;

gtk_source_view_set_mark_category_tooltip_func (view, "other-mark",
                                                tooltip_func,
                                                NULL, NULL);
]]&gt;&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="gtksourceview.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3703">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3704">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3705">a #GtkSourceViewMarkTooltipFunc or %NULL.</doc>
            <type name="ViewMarkTooltipFunc"
                  c:type="GtkSourceViewMarkTooltipFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3706">user data which will be passed to @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3707">a function to free the memory allocated
for @user_data or %NULL if you do not want to supply such a function.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mark_category_tooltip_markup_func"
              c:identifier="gtk_source_view_set_mark_category_tooltip_markup_func"
              version="2.8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3750">See gtk_source_view_set_mark_category_tooltip_func() for more information.</doc>
        <source-position filename="gtksourceview.h" line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3752">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3753">a mark category.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="markup_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3754">a #GtkSourceViewMarkTooltipFunc or %NULL.</doc>
            <type name="ViewMarkTooltipFunc"
                  c:type="GtkSourceViewMarkTooltipFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3755">user data which will be passed to @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3756">a function to free the memory allocated
for @user_data or %NULL if you do not want to supply such a function.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_right_margin_position"
              c:identifier="gtk_source_view_set_right_margin_position"
              glib:set-property="right-margin-position">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4898">Sets the position of the right margin in the given @view.</doc>
        <source-position filename="gtksourceview.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4900">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4901">the width in characters where to position the right margin.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_line_marks"
              c:identifier="gtk_source_view_set_show_line_marks"
              glib:set-property="show-line-marks"
              version="2.2">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3250">If %TRUE line marks will be displayed beside the text.</doc>
        <source-position filename="gtksourceview.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3252">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3253">whether line marks should be displayed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_line_numbers"
              c:identifier="gtk_source_view_set_show_line_numbers"
              glib:set-property="show-line-numbers">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3192">If %TRUE line numbers will be displayed beside the text.</doc>
        <source-position filename="gtksourceview.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3194">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3195">whether line numbers should be displayed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_right_margin"
              c:identifier="gtk_source_view_set_show_right_margin"
              glib:set-property="show-right-margin">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4857">If %TRUE a right margin is displayed.</doc>
        <source-position filename="gtksourceview.h" line="181"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4859">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4860">whether to show a right margin.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_smart_home_end"
              c:identifier="gtk_source_view_set_smart_home_end">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="4923">Set the desired movement of the cursor when HOME and END keys
are pressed.</doc>
        <source-position filename="gtksourceview.h" line="263"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4925">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="smart_he" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="4926">the desired behavior among #GtkSourceSmartHomeEndType.</doc>
            <type name="SmartHomeEndType" c:type="GtkSourceSmartHomeEndType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tab_width"
              c:identifier="gtk_source_view_set_tab_width"
              glib:set-property="tab-width">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="3315">Sets the width of tabulation in characters.</doc>
        <source-position filename="gtksourceview.h" line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3317">a #GtkSourceView.</doc>
            <type name="View" c:type="GtkSourceView*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="3318">width of tab in characters.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="auto-indent"
                writable="1"
                transfer-ownership="none"
                setter="set_auto_indent"
                getter="get_auto_indent"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="completion"
                transfer-ownership="none"
                getter="get_completion">
        <type name="Completion"/>
      </property>
      <property name="draw-spaces"
                version="2.4"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="468">Set if and how the spaces should be visualized.</doc>
        <type/>
      </property>
      <property name="highlight-current-line"
                writable="1"
                transfer-ownership="none"
                setter="set_highlight_current_line"
                getter="get_highlight_current_line"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="indent-on-tab"
                writable="1"
                transfer-ownership="none"
                setter="set_indent_on_tab"
                getter="get_indent_on_tab"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="indent-width"
                writable="1"
                transfer-ownership="none"
                setter="set_indent_width"
                getter="get_indent_width"
                default-value="-1">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="375">Width of an indentation step expressed in number of spaces.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="insert-spaces-instead-of-tabs"
                writable="1"
                transfer-ownership="none"
                setter="set_insert_spaces_instead_of_tabs"
                getter="get_insert_spaces_instead_of_tabs"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="right-margin-position"
                writable="1"
                transfer-ownership="none"
                setter="set_right_margin_position"
                getter="get_right_margin_position"
                default-value="80">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="419">Position of the right margin.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="show-line-marks"
                writable="1"
                transfer-ownership="none"
                setter="set_show_line_marks"
                getter="get_show_line_marks"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="347">Whether to display line mark pixbufs</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-line-numbers"
                writable="1"
                transfer-ownership="none"
                setter="set_show_line_numbers"
                getter="get_show_line_numbers"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="335">Whether to display line numbers</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-right-margin"
                writable="1"
                transfer-ownership="none"
                setter="set_show_right_margin"
                getter="get_show_right_margin"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="406">Whether to display the right margin.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="smart-home-end"
                version="2.0"
                introspectable="0"
                writable="1"
                transfer-ownership="none"
                default-value="GTK_SOURCE_SMART_HOME_END_DISABLED">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="434">Set the behavior of the HOME and END keys.</doc>
        <type/>
      </property>
      <property name="tab-width"
                writable="1"
                transfer-ownership="none"
                setter="set_tab_width"
                getter="get_tab_width"
                default-value="8">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="360">Width of an tab character expressed in number of spaces.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="Gtk.TextView" c:type="GtkTextView"/>
      </field>
      <field name="priv">
        <type name="ViewPrivate" c:type="GtkSourceViewPrivate*"/>
      </field>
      <glib:signal name="line-mark-activated" when="last">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="529">Emitted when a line mark has been activated (for instance when there
was a button press in the line marks gutter). You can use @iter to
determine on which line the activation took place.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="532">a #GtkTextIter</doc>
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="533">the #GdkEvent that activated the event</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-lines" when="last" action="1" version="2.10">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="552">The ::move-lines signal is a keybinding which gets emitted
when the user initiates moving a line. The default binding key
is Alt+Up/Down arrow. And moves the currently selected lines,
or the current line by @count. For the moment, only
@count of -1 or 1 is valid.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="copy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="555">%TRUE if the line should be copied,
       %FALSE if it should be moved</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="557">the number of lines to move over.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-words" when="last" action="1" version="3.0">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="580">The ::move-words signal is a keybinding which gets emitted
when the user initiates moving a word. The default binding key
is Alt+Left/Right Arrow and moves the current selection, or the current
word by one word.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="583">the number of words to move over</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="redo" when="last" action="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="show-completion" when="last" action="1">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="506">The ::show-completion signal is a keybinding signal which gets
emitted when the user initiates a completion in default mode.

Applications should not connect to it, but may emit it with
#g_signal_emit_by_name if they need to control the default mode
completion activation.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="smart-home-end" when="last" version="3.0">
        <doc xml:space="preserve"
             filename="gtksourceview.c"
             line="603">Emitted when a the cursor was moved according to the smart home
end setting. The signal is emitted after the cursor is moved, but
during the GtkTextView::move-cursor action. This can be used to find
out whether the cursor was moved by a normal home/end or by a smart
home/end.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="606">a #GtkTextIter</doc>
            <type name="Gtk.TextIter"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gtksourceview.c"
                 line="607">the count</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="undo" when="last" action="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ViewClass"
            c:type="GtkSourceViewClass"
            glib:is-gtype-struct-for="View">
      <source-position filename="gtksourceview.h" line="85"/>
      <field name="parent_class">
        <type name="Gtk.TextViewClass" c:type="GtkTextViewClass"/>
      </field>
      <field name="undo">
        <callback name="undo">
          <source-position filename="gtksourceview.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="redo">
        <callback name="redo">
          <source-position filename="gtksourceview.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="line_mark_activated">
        <callback name="line_mark_activated">
          <source-position filename="gtksourceview.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
            <parameter name="iter" transfer-ownership="none">
              <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Gdk.Event" c:type="GdkEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_completion">
        <callback name="show_completion">
          <source-position filename="gtksourceview.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_lines">
        <callback name="move_lines">
          <source-position filename="gtksourceview.h" line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
            <parameter name="copy" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="step" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_words">
        <callback name="move_words">
          <source-position filename="gtksourceview.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="GtkSourceView*"/>
            </parameter>
            <parameter name="step" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="ViewGutterPosition"
                 c:type="GtkSourceViewGutterPosition">
      <source-position filename="gtksourceview.h" line="53"/>
      <member name="lines"
              value="-30"
              c:identifier="GTK_SOURCE_VIEW_GUTTER_POSITION_LINES">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="44">the gutter position of the lines
renderer</doc>
      </member>
      <member name="marks"
              value="-20"
              c:identifier="GTK_SOURCE_VIEW_GUTTER_POSITION_MARKS">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="46">the gutter position of the marks
renderer</doc>
      </member>
    </enumeration>
    <callback name="ViewMarkTooltipFunc" c:type="GtkSourceViewMarkTooltipFunc">
      <doc xml:space="preserve"
           filename="gtksourceview.h"
           line="232">Function type for setting up a tooltip for #GtkSourceMark.</doc>
      <source-position filename="gtksourceview.h" line="240"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="gtksourceview.h"
             line="238">a newly-allocated string that is going to be shown as tooltip text.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mark" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceview.h"
               line="234">the #GtkSourceMark</doc>
          <type name="Mark" c:type="GtkSourceMark*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="gtksourceview.h"
               line="235">user data pointer which was passed to gtk_source_view_set_mark_category_tooltip_func()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ViewPrivate"
            c:type="GtkSourceViewPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="gtksourceview.h" line="58"/>
    </record>
    <docsection name="buffer">
      <doc xml:space="preserve"
           filename="gtksourcebuffer.c"
           line="45">The #GtkSourceBuffer object is the model for #GtkSourceView widgets.
It extends the #GtkTextBuffer object by adding features useful to display
and edit source code as syntax highlighting and bracket matching. It
also implements support for undo/redo operations.

To create a #GtkSourceBuffer use gtk_source_buffer_new() or
gtk_source_buffer_new_with_language(). The second form is just a convenience
function which allows you to initially set a #GtkSourceLanguage.

By default highlighting is enabled, but you can disable it with
gtk_source_buffer_set_highlight_syntax().</doc>
    </docsection>
    <docsection name="completioninfo">
      <doc xml:space="preserve"
           filename="gtksourcecompletioninfo.c"
           line="23">This object can be used to show a calltip or help for the
current completion proposal.</doc>
    </docsection>
    <docsection name="completionproposal">
      <doc xml:space="preserve"
           filename="gtksourcecompletionproposal.c"
           line="23">The proposal interface represents a completion item in the completion window.
It provides information on how to display the completion item and what action
should be taken when the completion item is activated.</doc>
    </docsection>
    <docsection name="completionprovider">
      <doc xml:space="preserve"
           filename="gtksourcecompletionprovider.c"
           line="23">You must implement this interface to provide proposals to #GtkSourceCompletion</doc>
    </docsection>
    <docsection name="gutter">
      <doc xml:space="preserve"
           filename="gtksourcegutter.c"
           line="28">The #GtkSourceGutter object represents the left and right gutters of the text
view. It is used by #GtkSourceView to draw the line numbers and category
marks that might be present on a line. By packing additional #GtkCellRenderer
objects in the gutter, you can extend the gutter with your own custom
drawings.

The gutter works very much the same way as cells rendered in a #GtkTreeView.
The concept is similar, with the exception that the gutter does not have an
underlying #GtkTreeModel. Instead, you should use
#gtk_source_gutter_set_cell_data_func to set a callback to fill in any of the
cell renderers properties, given the line for which the cell is to be
rendered. Renderers are inserted into the gutter at a certain position. The
builtin line number renderer is at position

#GTK_SOURCE_VIEW_GUTTER_POSITION_LINES (-30) and the marks renderer is at
#GTK_SOURCE_VIEW_GUTTER_POSITION_MARKS (-20). You can use these values to
position custom renderers accordingly. The width of a cell renderer can be
specified as either fixed (using

#gtk_cell_renderer_set_fixed_size) or dynamic, in which case you
&lt;emphasis&gt;must&lt;/emphasis&gt; set #gtk_source_gutter_set_cell_size_func. This
callback is used to set the properties of the renderer such that
#gtk_cell_renderer_get_size yields the maximum width of the cell.</doc>
    </docsection>
    <function name="iter_backward_search"
              c:identifier="gtk_source_iter_backward_search">
      <doc xml:space="preserve"
           filename="gtksourceiter.c"
           line="689">Same as gtk_text_iter_backward_search(), but supports case insensitive
searching.</doc>
      <source-position filename="gtksourceiter.h" line="44"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gtksourceiter.c"
             line="701">whether a match was found.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="iter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="691">a #GtkTextIter where the search begins.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="692">search string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="693">bitmask of flags affecting the search.</doc>
          <type name="SearchFlags" c:type="GtkSourceSearchFlags"/>
        </parameter>
        <parameter name="match_start" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="694">(allow-none) return location for start of match, or %NULL.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="match_end"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="695">return location for end of match, or %NULL.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="limit"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="696">location of last possible @match_start, or %NULL for start of buffer.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
      </parameters>
    </function>
    <function name="iter_forward_search"
              c:identifier="gtk_source_iter_forward_search">
      <doc xml:space="preserve"
           filename="gtksourceiter.c"
           line="569">Searches forward for @str. Any match is returned by setting
@match_start to the first character of the match and @match_end to the
first character after the match. The search will not continue past
@limit. Note that a search is a linear or O(n) operation, so you
may wish to use @limit to avoid locking up your UI on large
buffers.

If the #GTK_SOURCE_SEARCH_VISIBLE_ONLY flag is present, the match may
have invisible text interspersed in @str. i.e. @str will be a
possibly-noncontiguous subsequence of the matched range. similarly,
if you specify #GTK_SOURCE_SEARCH_TEXT_ONLY, the match may have
pixbufs or child widgets mixed inside the matched range. If these
flags are not given, the match must be exact; the special 0xFFFC
character in @str will match embedded pixbufs or child widgets.
If you specify the #GTK_SOURCE_SEARCH_CASE_INSENSITIVE flag, the text will
be matched regardless of what case it is in.

Same as gtk_text_iter_forward_search(), but supports case insensitive
searching.</doc>
      <source-position filename="gtksourceiter.h" line="37"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gtksourceiter.c"
             line="598">whether a match was found.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="iter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="571">start of search.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="572">a search string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="573">flags affecting how the search is done.</doc>
          <type name="SearchFlags" c:type="GtkSourceSearchFlags"/>
        </parameter>
        <parameter name="match_start"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="574">return location for start of match, or %NULL.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="match_end"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="575">return location for end of match, or %NULL.</doc>
          <type name="Gtk.TextIter" c:type="GtkTextIter*"/>
        </parameter>
        <parameter name="limit"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="gtksourceiter.c"
               line="576">bound for the search, or %NULL for the end of the buffer.</doc>
          <type name="Gtk.TextIter" c:type="const GtkTextIter*"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="language">
      <doc xml:space="preserve"
           filename="gtksourcelanguage.c"
           line="42">#GtkSourceLanguage encapsulates syntax and highlighting styles for a
particular language. Use #GtkSourceLanguageManager to obtain a
#GtkSourceLanguage instance, and gtk_source_buffer_set_language() to apply it
to a #GtkSourceBuffer.</doc>
    </docsection>
    <docsection name="languagemanager">
      <doc xml:space="preserve"
           filename="gtksourcelanguagemanager.c"
           line="32">#GtkSourceLanguageManager is an object which processes language description
files and creates and stores #GtkSourceLanguage objects, and provides API to
access them.
Use gtk_source_language_manager_get_default() to retrieve the default
instance of #GtkSourceLanguageManager, and
gtk_source_language_manager_guess_language() to get a #GtkSourceLanguage for
given file name and content type.</doc>
    </docsection>
    <docsection name="mark">
      <doc xml:space="preserve"
           filename="gtksourcemark.c"
           line="26">A #GtkSourceMark marks a position in the text where you want to display
additional info. It is based on #GtkTextMark and thus is still valid after
the text has changed though its position may change.

#GtkSourceMark&lt;!-- --&gt;s are organised in categories which you have to set
when you create the mark. Each category can have a pixbuf and a priority
associated using #gtk_source_view_set_mark_category_pixbuf and
#gtk_source_view_set_mark_category_priority. The pixbuf will be displayed in
the margin at the line where the mark residents if the
#GtkSourceView::show-line-marks property is set to TRUE. If there are
multiple marks in the same line, the pixbufs will be drawn on top of each
other. The mark with the highest priority will be drawn on top.</doc>
    </docsection>
    <docsection name="printcompositor">
      <doc xml:space="preserve"
           filename="gtksourceprintcompositor.c"
           line="37">The #GtkSourcePrintCompositor object is used to compose a #GtkSourceBuffer
for printing. You can set various configuration options to customize the
printed output. #GtkSourcePrintCompositor is designed to be used with the
high-level printing API of gtk+, i.e. #GtkPrintOperation.

The margins specified in this object are the layout margins: they define the
blank space bordering the printed area of the pages. They must not be
confused with the "print margins", i.e. the parts of the page that the
printer cannot print on, defined in the #GtkPageSetup objects. If the
specified layout margins are smaller than the "print margins", the latter
ones are used as a fallback by the #GtkSourcePrintCompositor object, so that
the printed area is not clipped.</doc>
    </docsection>
    <docsection name="style">
      <doc xml:space="preserve"
           filename="gtksourcestyle.c"
           line="24">The #GtkSourceStyle structure is used to describe text attributes
which are set when given style is used.</doc>
    </docsection>
    <docsection name="stylescheme">
      <doc xml:space="preserve"
           filename="gtksourcestylescheme.c"
           line="30">#GtkSourceStyleScheme contains all the text styles to be used in
#GtkSourceView and #GtkSourceBuffer. For instance, it contains text styles
for syntax highlighting, it may contain foreground and background color for
non-highlighted text, color for the line numbers, etc.

Style schemes are stored in XML files. The format of a scheme file is
the documented in the
&lt;link linkend="style-reference"&gt;style scheme reference&lt;/link&gt;.</doc>
    </docsection>
    <docsection name="undomanager">
      <doc xml:space="preserve"
           filename="gtksourceundomanager.c"
           line="36">The #GtkSourceUndoManager interface can be implemented to provide custom
undo management to a #GtkSourceBuffer. Use
#gtk_source_buffer_set_undo_manager to install a custom undo manager for
a particular source buffer.

Use #gtk_source_undo_manager_can_undo_changed and
#gtk_source_undo_manager_can_redo_changed when respectively the undo state
or redo state of the undo stack has changed.</doc>
    </docsection>
    <docsection name="view">
      <doc xml:space="preserve"
           filename="gtksourceview.c"
           line="47">GtkSourceView is the main object of the gtksourceview library. It provides
a text view which syntax highlighting, undo/redo and text marks. Use a
#GtkSourceBuffer to display text with a GtkSourceView.</doc>
    </docsection>
  </namespace>
</repository>
