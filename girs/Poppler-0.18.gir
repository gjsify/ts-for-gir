<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="cairo" version="1.0"/>
  <package name="poppler-glib"/>
  <c:include name="poppler.h"/>
  <namespace name="Poppler"
             version="0.18"
             shared-library="libpoppler-glib.so.8,libpoppler.so.126"
             c:identifier-prefixes="Poppler"
             c:symbol-prefixes="poppler">
    <function-macro name="ACTION"
                    c:identifier="POPPLER_ACTION"
                    introspectable="0">
      <source-position filename="glib/poppler-action.h" line="427"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT"
                    c:identifier="POPPLER_ANNOT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_CIRCLE"
                    c:identifier="POPPLER_ANNOT_CIRCLE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="68"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_FILE_ATTACHMENT"
                    c:identifier="POPPLER_ANNOT_FILE_ATTACHMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_FREE_TEXT"
                    c:identifier="POPPLER_ANNOT_FREE_TEXT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="46"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_LINE"
                    c:identifier="POPPLER_ANNOT_LINE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="62"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_MARKUP"
                    c:identifier="POPPLER_ANNOT_MARKUP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_MOVIE"
                    c:identifier="POPPLER_ANNOT_MOVIE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="54"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_SCREEN"
                    c:identifier="POPPLER_ANNOT_SCREEN"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="58"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_SQUARE"
                    c:identifier="POPPLER_ANNOT_SQUARE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="72"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_STAMP"
                    c:identifier="POPPLER_ANNOT_STAMP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="76"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANNOT_TEXT"
                    c:identifier="POPPLER_ANNOT_TEXT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="ANNOT_TEXT_ICON_CIRCLE"
              value="Circle"
              c:type="POPPLER_ANNOT_TEXT_ICON_CIRCLE">
      <source-position filename="glib/poppler-annot.h" line="144"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_COMMENT"
              value="Comment"
              c:type="POPPLER_ANNOT_TEXT_ICON_COMMENT">
      <source-position filename="glib/poppler-annot.h" line="137"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_CROSS"
              value="Cross"
              c:type="POPPLER_ANNOT_TEXT_ICON_CROSS">
      <source-position filename="glib/poppler-annot.h" line="143"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_HELP"
              value="Help"
              c:type="POPPLER_ANNOT_TEXT_ICON_HELP">
      <source-position filename="glib/poppler-annot.h" line="139"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_INSERT"
              value="Insert"
              c:type="POPPLER_ANNOT_TEXT_ICON_INSERT">
      <source-position filename="glib/poppler-annot.h" line="142"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_KEY"
              value="Key"
              c:type="POPPLER_ANNOT_TEXT_ICON_KEY">
      <source-position filename="glib/poppler-annot.h" line="138"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_NEW_PARAGRAPH"
              value="NewParagraph"
              c:type="POPPLER_ANNOT_TEXT_ICON_NEW_PARAGRAPH">
      <source-position filename="glib/poppler-annot.h" line="140"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_NOTE"
              value="Note"
              c:type="POPPLER_ANNOT_TEXT_ICON_NOTE">
      <source-position filename="glib/poppler-annot.h" line="136"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ANNOT_TEXT_ICON_PARAGRAPH"
              value="Paragraph"
              c:type="POPPLER_ANNOT_TEXT_ICON_PARAGRAPH">
      <source-position filename="glib/poppler-annot.h" line="141"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="ANNOT_TEXT_MARKUP"
                    c:identifier="POPPLER_ANNOT_TEXT_MARKUP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ATTACHMENT"
                    c:identifier="POPPLER_ATTACHMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-attachment.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <union name="Action"
           c:type="PopplerAction"
           glib:type-name="PopplerAction"
           glib:get-type="poppler_action_get_type"
           c:symbol-prefix="action">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="406">A generic wrapper for actions that exposes only #PopplerActionType.</doc>
      <source-position filename="glib/poppler-action.h" line="424"/>
      <field name="type" writable="1">
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="any" writable="1">
        <type name="ActionAny" c:type="PopplerActionAny"/>
      </field>
      <field name="goto_dest" writable="1">
        <type name="ActionGotoDest" c:type="PopplerActionGotoDest"/>
      </field>
      <field name="goto_remote" writable="1">
        <type name="ActionGotoRemote" c:type="PopplerActionGotoRemote"/>
      </field>
      <field name="launch" writable="1">
        <type name="ActionLaunch" c:type="PopplerActionLaunch"/>
      </field>
      <field name="uri" writable="1">
        <type name="ActionUri" c:type="PopplerActionUri"/>
      </field>
      <field name="named" writable="1">
        <type name="ActionNamed" c:type="PopplerActionNamed"/>
      </field>
      <field name="movie" writable="1">
        <type name="ActionMovie" c:type="PopplerActionMovie"/>
      </field>
      <field name="rendition" writable="1">
        <type name="ActionRendition" c:type="PopplerActionRendition"/>
      </field>
      <field name="ocg_state" writable="1">
        <type name="ActionOCGState" c:type="PopplerActionOCGState"/>
      </field>
      <field name="javascript" writable="1">
        <type name="ActionJavascript" c:type="PopplerActionJavascript"/>
      </field>
      <field name="reset_form" writable="1">
        <type name="ActionResetForm" c:type="PopplerActionResetForm"/>
      </field>
      <method name="copy" c:identifier="poppler_action_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-action.cc"
             line="162">Copies @action, creating an identical #PopplerAction.</doc>
        <source-position filename="glib/poppler-action.h" line="435"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-action.cc"
               line="168">a new action identical to @action</doc>
          <type name="Action" c:type="PopplerAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-action.cc"
                 line="164">a #PopplerAction</doc>
            <type name="Action" c:type="PopplerAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_action_free">
        <doc xml:space="preserve"
             filename="glib/poppler-action.cc"
             line="98">Frees @action</doc>
        <source-position filename="glib/poppler-action.h" line="433"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-action.cc"
                 line="100">a #PopplerAction</doc>
            <type name="Action" c:type="PopplerAction*"/>
          </instance-parameter>
        </parameters>
      </method>
    </union>
    <record name="ActionAny" c:type="PopplerActionAny">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="208">Fields common to all #PopplerAction&lt;!-- --&gt;s</doc>
      <source-position filename="glib/poppler-action.h" line="219"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="210">action type</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="211">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="ActionGotoDest" c:type="PopplerActionGotoDest">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="221">Go to destination</doc>
      <source-position filename="glib/poppler-action.h" line="235"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="223">action type (%POPPLER_ACTION_GOTO_DEST)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="224">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="dest" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="225">destination</doc>
        <type name="Dest" c:type="PopplerDest*"/>
      </field>
    </record>
    <record name="ActionGotoRemote" c:type="PopplerActionGotoRemote">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="237">Go to destination in another document</doc>
      <source-position filename="glib/poppler-action.h" line="253"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="239">action type (%POPPLER_ACTION_GOTO_REMOTE)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="240">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="file_name" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="241">file name</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="dest" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="242">destination</doc>
        <type name="Dest" c:type="PopplerDest*"/>
      </field>
    </record>
    <record name="ActionJavascript"
            c:type="PopplerActionJavascript"
            version="0.18">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="363">Javascript.</doc>
      <source-position filename="glib/poppler-action.h" line="379"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="365">action type (%POPPLER_ACTION_JAVASCRIPT)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="366">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="script" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="367">javascript</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="ActionLaunch" c:type="PopplerActionLaunch">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="255">Launch app (or open document)</doc>
      <source-position filename="glib/poppler-action.h" line="271"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="257">action type (%POPPLER_ACTION_LAUNCH)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="258">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="file_name" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="259">file name</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="params" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="260">parameters</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="ActionLayer" c:type="PopplerActionLayer">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="195">Action to perform over a list of layers</doc>
      <source-position filename="glib/poppler-action.h" line="206"/>
      <field name="action" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="197">a #PopplerActionLayerAction</doc>
        <type name="ActionLayerAction" c:type="PopplerActionLayerAction"/>
      </field>
      <field name="layers" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="198">list of #PopplerLayer&lt;!-- --&gt;s</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="Layer"/>
        </type>
      </field>
    </record>
    <enumeration name="ActionLayerAction"
                 version="0.14"
                 glib:type-name="PopplerActionLayerAction"
                 glib:get-type="poppler_action_layer_action_get_type"
                 c:type="PopplerActionLayerAction">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="125">Layer actions</doc>
      <member name="on"
              value="0"
              c:identifier="POPPLER_ACTION_LAYER_ON"
              glib:nick="on"
              glib:name="POPPLER_ACTION_LAYER_ON">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="127">set layer visibility on</doc>
      </member>
      <member name="off"
              value="1"
              c:identifier="POPPLER_ACTION_LAYER_OFF"
              glib:nick="off"
              glib:name="POPPLER_ACTION_LAYER_OFF">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="128">set layer visibility off</doc>
      </member>
      <member name="toggle"
              value="2"
              c:identifier="POPPLER_ACTION_LAYER_TOGGLE"
              glib:nick="toggle"
              glib:name="POPPLER_ACTION_LAYER_TOGGLE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="129">reverse the layer visibility state</doc>
      </member>
    </enumeration>
    <record name="ActionMovie" c:type="PopplerActionMovie" version="0.14">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="305">Play movies.</doc>
      <source-position filename="glib/poppler-action.h" line="323"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="307">action type (%POPPLER_ACTION_MOVIE)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="308">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="operation" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="309">operation</doc>
        <type name="ActionMovieOperation"
              c:type="PopplerActionMovieOperation"/>
      </field>
      <field name="movie" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="310">movie</doc>
        <type name="Movie" c:type="PopplerMovie*"/>
      </field>
    </record>
    <enumeration name="ActionMovieOperation"
                 version="0.14"
                 glib:type-name="PopplerActionMovieOperation"
                 glib:get-type="poppler_action_movie_operation_get_type"
                 c:type="PopplerActionMovieOperation">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="106">Movie operations</doc>
      <member name="play"
              value="0"
              c:identifier="POPPLER_ACTION_MOVIE_PLAY"
              glib:nick="play"
              glib:name="POPPLER_ACTION_MOVIE_PLAY">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="108">play movie</doc>
      </member>
      <member name="pause"
              value="1"
              c:identifier="POPPLER_ACTION_MOVIE_PAUSE"
              glib:nick="pause"
              glib:name="POPPLER_ACTION_MOVIE_PAUSE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="109">pause playing movie</doc>
      </member>
      <member name="resume"
              value="2"
              c:identifier="POPPLER_ACTION_MOVIE_RESUME"
              glib:nick="resume"
              glib:name="POPPLER_ACTION_MOVIE_RESUME">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="110">resume paused movie</doc>
      </member>
      <member name="stop"
              value="3"
              c:identifier="POPPLER_ACTION_MOVIE_STOP"
              glib:nick="stop"
              glib:name="POPPLER_ACTION_MOVIE_STOP">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="111">stop playing movie</doc>
      </member>
    </enumeration>
    <record name="ActionNamed" c:type="PopplerActionNamed">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="289">Predefined action</doc>
      <source-position filename="glib/poppler-action.h" line="303"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="291">action type (%POPPLER_ACTION_NAMED)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="292">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="named_dest" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="293">named destination</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="ActionOCGState"
            c:type="PopplerActionOCGState"
            version="0.14">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="345">State of layer.</doc>
      <source-position filename="glib/poppler-action.h" line="361"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="347">action type (%POPPLER_ACTION_OCG_STATE)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="348">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="state_list" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="349">list of #PopplerActionLayer&lt;!-- --&gt;s</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="ActionLayer"/>
        </type>
      </field>
    </record>
    <record name="ActionRendition"
            c:type="PopplerActionRendition"
            version="0.14">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="325">Play multimedia content.</doc>
      <source-position filename="glib/poppler-action.h" line="343"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="327">action type (%POPPLER_ACTION_RENDITION)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="328">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="op" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="329">operation</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="media" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="330">media</doc>
        <type name="Media" c:type="PopplerMedia*"/>
      </field>
    </record>
    <record name="ActionResetForm"
            c:type="PopplerActionResetForm"
            version="0.90">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="381">Resets some or all fields within a PDF form.

The default behavior resets only the list of @fields, but setting
@exclude to %TRUE will cause the action to reset all fields but those
listed. Providing an empty list of fields resets the entire form.</doc>
      <source-position filename="glib/poppler-action.h" line="404"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="383">action type (%POPPLER_ACTION_RESET_FORM)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="384">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="fields" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="385">list of field names to
  reset / retain</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="utf8"/>
        </type>
      </field>
      <field name="exclude" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="387">whether to reset all but the listed fields</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <enumeration name="ActionType"
                 glib:type-name="PopplerActionType"
                 glib:get-type="poppler_action_type_get_type"
                 c:type="PopplerActionType">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="27">Action types</doc>
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_ACTION_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ACTION_UNKNOWN">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="29">unknown action</doc>
      </member>
      <member name="none"
              value="1"
              c:identifier="POPPLER_ACTION_NONE"
              glib:nick="none"
              glib:name="POPPLER_ACTION_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="30">no action specified</doc>
      </member>
      <member name="goto_dest"
              value="2"
              c:identifier="POPPLER_ACTION_GOTO_DEST"
              glib:nick="goto-dest"
              glib:name="POPPLER_ACTION_GOTO_DEST">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="31">go to destination</doc>
      </member>
      <member name="goto_remote"
              value="3"
              c:identifier="POPPLER_ACTION_GOTO_REMOTE"
              glib:nick="goto-remote"
              glib:name="POPPLER_ACTION_GOTO_REMOTE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="32">go to destination in another document</doc>
      </member>
      <member name="launch"
              value="4"
              c:identifier="POPPLER_ACTION_LAUNCH"
              glib:nick="launch"
              glib:name="POPPLER_ACTION_LAUNCH">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="33">launch app (or open document)</doc>
      </member>
      <member name="uri"
              value="5"
              c:identifier="POPPLER_ACTION_URI"
              glib:nick="uri"
              glib:name="POPPLER_ACTION_URI">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="34">URI</doc>
      </member>
      <member name="named"
              value="6"
              c:identifier="POPPLER_ACTION_NAMED"
              glib:nick="named"
              glib:name="POPPLER_ACTION_NAMED">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="35">predefined action</doc>
      </member>
      <member name="movie"
              value="7"
              c:identifier="POPPLER_ACTION_MOVIE"
              glib:nick="movie"
              glib:name="POPPLER_ACTION_MOVIE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="36">play movies. Since 0.14</doc>
      </member>
      <member name="rendition"
              value="8"
              c:identifier="POPPLER_ACTION_RENDITION"
              glib:nick="rendition"
              glib:name="POPPLER_ACTION_RENDITION">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="37">play multimedia content. Since 0.14</doc>
      </member>
      <member name="ocg_state"
              value="9"
              c:identifier="POPPLER_ACTION_OCG_STATE"
              glib:nick="ocg-state"
              glib:name="POPPLER_ACTION_OCG_STATE">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="38">state of layer. Since 0.14</doc>
      </member>
      <member name="javascript"
              value="10"
              c:identifier="POPPLER_ACTION_JAVASCRIPT"
              glib:nick="javascript"
              glib:name="POPPLER_ACTION_JAVASCRIPT">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="39">Javascript. Since 0.18</doc>
      </member>
      <member name="reset_form"
              value="11"
              c:identifier="POPPLER_ACTION_RESET_FORM"
              glib:nick="reset-form"
              glib:name="POPPLER_ACTION_RESET_FORM">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="40">resets form. Since 0.90</doc>
      </member>
    </enumeration>
    <record name="ActionUri" c:type="PopplerActionUri">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="273">URI</doc>
      <source-position filename="glib/poppler-action.h" line="287"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="275">action type (%POPPLER_ACTION_URI)</doc>
        <type name="ActionType" c:type="PopplerActionType"/>
      </field>
      <field name="title" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="276">action title</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="uri" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="277">URI</doc>
        <type name="utf8" c:type="char*"/>
      </field>
    </record>
    <enumeration name="AdditionalActionType"
                 version="0.72"
                 glib:type-name="PopplerAdditionalActionType"
                 glib:get-type="poppler_additional_action_type_get_type"
                 c:type="PopplerAdditionalActionType">
      <doc xml:space="preserve"
           filename="glib/poppler-form-field.h"
           line="130">Form field additional action types to be passed to @poppler_form_field_get_additional_action</doc>
      <member name="field_modified"
              value="0"
              c:identifier="POPPLER_ADDITIONAL_ACTION_FIELD_MODIFIED"
              glib:nick="field-modified"
              glib:name="POPPLER_ADDITIONAL_ACTION_FIELD_MODIFIED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="132">The action to be performed when the user modifies the field.</doc>
      </member>
      <member name="format_field"
              value="1"
              c:identifier="POPPLER_ADDITIONAL_ACTION_FORMAT_FIELD"
              glib:nick="format-field"
              glib:name="POPPLER_ADDITIONAL_ACTION_FORMAT_FIELD">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="133">The action to be performed before the field is formatted to
display its value.</doc>
      </member>
      <member name="validate_field"
              value="2"
              c:identifier="POPPLER_ADDITIONAL_ACTION_VALIDATE_FIELD"
              glib:nick="validate-field"
              glib:name="POPPLER_ADDITIONAL_ACTION_VALIDATE_FIELD">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="135">The action to be performed when the field value changes.</doc>
      </member>
      <member name="calculate_field"
              value="3"
              c:identifier="POPPLER_ADDITIONAL_ACTION_CALCULATE_FIELD"
              glib:nick="calculate-field"
              glib:name="POPPLER_ADDITIONAL_ACTION_CALCULATE_FIELD">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="136">The action to be performed when the field needs to be
recalculated.</doc>
      </member>
    </enumeration>
    <class name="Annot"
           c:symbol-prefix="annot"
           c:type="PopplerAnnot"
           parent="GObject.Object"
           glib:type-name="PopplerAnnot"
           glib:get-type="poppler_annot_get_type">
      <method name="get_annot_type"
              c:identifier="poppler_annot_get_annot_type">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="748">Gets the type of @poppler_annot</doc>
        <source-position filename="glib/poppler-annot.h" line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="754">#PopplerAnnotType of @poppler_annot.</doc>
          <type name="AnnotType" c:type="PopplerAnnotType"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="750">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color" c:identifier="poppler_annot_get_color">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="982">Retrieves the color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="212"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="988">a new allocated #PopplerColor with the color values of
              @poppler_annot, or %NULL. It must be freed with g_free() when done.</doc>
          <type name="Color" c:type="PopplerColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="984">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_contents" c:identifier="poppler_annot_get_contents">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="818">Retrieves the contents of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="200"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="824">a new allocated string with the contents of @poppler_annot. It
              must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="820">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="poppler_annot_get_flags">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="902">Retrieves the flag field specifying various characteristics of the
@poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="909">the flag field of @poppler_annot.</doc>
          <type name="AnnotFlag" c:type="PopplerAnnotFlag"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="904">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modified" c:identifier="poppler_annot_get_modified">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="880">Retrieves the last modification data of @poppler_annot. The returned
string will be either a PDF format date or a text string.
See also #poppler_date_parse()</doc>
        <source-position filename="glib/poppler-annot.h" line="206"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="888">a new allocated string with the last modification data of
              @poppler_annot. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="882">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="poppler_annot_get_name">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="860">Retrieves the name of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="204"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="866">a new allocated string with the name of @poppler_annot. It must
              be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="862">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page_index"
              c:identifier="poppler_annot_get_page_index"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1012">Returns the page index to which @poppler_annot is associated, or -1 if unknown</doc>
        <source-position filename="glib/poppler-annot.h" line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1018">page index or -1</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1014">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rectangle"
              c:identifier="poppler_annot_get_rectangle"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1065">Retrieves the rectangle representing the page coordinates where the
annotation @poppler_annot is placed.</doc>
        <source-position filename="glib/poppler-annot.h" line="218"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1067">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
          <parameter name="poppler_rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1068">a #PopplerRectangle to store the annotation's coordinates</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="poppler_annot_set_color"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="998">Sets the color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1000">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
          <parameter name="poppler_color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1001">a #PopplerColor, or %NULL</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_contents"
              c:identifier="poppler_annot_set_contents"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="838">Sets the contents of @poppler_annot to the given value,
replacing the current contents.</doc>
        <source-position filename="glib/poppler-annot.h" line="202"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="840">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
          <parameter name="contents" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="841">a text string containing the new contents</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="poppler_annot_set_flags"
              version="0.22">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="918">Sets the flag field specifying various characteristics of the
@poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="920">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="921">a #PopplerAnnotFlag</doc>
            <type name="AnnotFlag" c:type="PopplerAnnotFlag"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rectangle"
              c:identifier="poppler_annot_set_rectangle"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1097">Move the annotation to the rectangle representing the page coordinates
where the annotation @poppler_annot should be placed.</doc>
        <source-position filename="glib/poppler-annot.h" line="220"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1099">a #PopplerAnnot</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </instance-parameter>
          <parameter name="poppler_rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1100">a #PopplerRectangle with the new annotation's coordinates</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="AnnotCalloutLine"
            c:type="PopplerAnnotCalloutLine"
            glib:type-name="PopplerAnnotCalloutLine"
            glib:get-type="poppler_annot_callout_line_get_type"
            c:symbol-prefix="annot_callout_line">
      <source-position filename="glib/poppler-annot.h" line="174"/>
      <field name="multiline" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="x1" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y1" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="x2" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y2" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="x3" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y3" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <constructor name="new" c:identifier="poppler_annot_callout_line_new">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1846">Creates a new empty #PopplerAnnotCalloutLine.</doc>
        <source-position filename="glib/poppler-annot.h" line="328"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1851">a new allocated #PopplerAnnotCalloutLine, %NULL in other case.
              It must be freed when done.</doc>
          <type name="AnnotCalloutLine" c:type="PopplerAnnotCalloutLine*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_annot_callout_line_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1859">It does copy @callout to a new #PopplerAnnotCalloutLine.</doc>
        <source-position filename="glib/poppler-annot.h" line="330"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1865">a new allocated #PopplerAnnotCalloutLine as exact copy of
              @callout, %NULL in other case. It must be freed when done.</doc>
          <type name="AnnotCalloutLine" c:type="PopplerAnnotCalloutLine*"/>
        </return-value>
        <parameters>
          <instance-parameter name="callout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1861">the #PopplerAnnotCalloutLine to be copied.</doc>
            <type name="AnnotCalloutLine" c:type="PopplerAnnotCalloutLine*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_annot_callout_line_free">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1880">Frees the memory used by #PopplerAnnotCalloutLine.</doc>
        <source-position filename="glib/poppler-annot.h" line="332"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="callout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1882">a #PopplerAnnotCalloutLine</doc>
            <type name="AnnotCalloutLine" c:type="PopplerAnnotCalloutLine*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="AnnotCircle"
           c:symbol-prefix="annot_circle"
           c:type="PopplerAnnotCircle"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotCircle"
           glib:get-type="poppler_annot_circle_get_type">
      <constructor name="new"
                   c:identifier="poppler_annot_circle_new"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="557">Creates a new Circle annotation that will be
located on @rect when added to a page. See
poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="338"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="566">a newly created #PopplerAnnotCircle annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="559">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="560">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_interior_color"
              c:identifier="poppler_annot_circle_get_interior_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1992">Retrieves the interior color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="342"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1998">a new allocated #PopplerColor with the color values of
              @poppler_annot, or %NULL. It must be freed with g_free() when done.</doc>
          <type name="Color" c:type="PopplerColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1994">a #PopplerAnnotCircle</doc>
            <type name="AnnotCircle" c:type="PopplerAnnotCircle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_interior_color"
              c:identifier="poppler_annot_circle_set_interior_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="2010">Sets the interior color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="340"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2012">a #PopplerAnnotCircle</doc>
            <type name="AnnotCircle" c:type="PopplerAnnotCircle*"/>
          </instance-parameter>
          <parameter name="poppler_color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2013">a #PopplerColor, or %NULL</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="AnnotExternalDataType"
                 glib:type-name="PopplerAnnotExternalDataType"
                 glib:get-type="poppler_annot_external_data_type_get_type"
                 c:type="PopplerAnnotExternalDataType">
      <member name="3d"
              value="0"
              c:identifier="POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_3D"
              glib:nick="3d"
              glib:name="POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_3D">
      </member>
      <member name="unknown"
              value="1"
              c:identifier="POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ANNOT_EXTERNAL_DATA_MARKUP_UNKNOWN">
      </member>
    </enumeration>
    <class name="AnnotFileAttachment"
           c:symbol-prefix="annot_file_attachment"
           c:type="PopplerAnnotFileAttachment"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotFileAttachment"
           glib:get-type="poppler_annot_file_attachment_get_type">
      <method name="get_attachment"
              c:identifier="poppler_annot_file_attachment_get_attachment"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1793">Creates a #PopplerAttachment for the file of the file attachment annotation @annot.
The #PopplerAttachment must be unrefed with g_object_unref by the caller.</doc>
        <source-position filename="glib/poppler-annot.h" line="298"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1800">@PopplerAttachment</doc>
          <type name="Attachment" c:type="PopplerAttachment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1795">a #PopplerAnnotFileAttachment</doc>
            <type name="AnnotFileAttachment"
                  c:type="PopplerAnnotFileAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="poppler_annot_file_attachment_get_name"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1820">Retrieves the name of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="300"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1826">a new allocated string with the name of @poppler_annot. It must
              be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1822">a #PopplerAnnotFileAttachment</doc>
            <type name="AnnotFileAttachment"
                  c:type="PopplerAnnotFileAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <bitfield name="AnnotFlag"
              glib:type-name="PopplerAnnotFlag"
              glib:get-type="poppler_annot_flag_get_type"
              c:type="PopplerAnnotFlag">
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_ANNOT_FLAG_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ANNOT_FLAG_UNKNOWN">
      </member>
      <member name="invisible"
              value="1"
              c:identifier="POPPLER_ANNOT_FLAG_INVISIBLE"
              glib:nick="invisible"
              glib:name="POPPLER_ANNOT_FLAG_INVISIBLE">
      </member>
      <member name="hidden"
              value="2"
              c:identifier="POPPLER_ANNOT_FLAG_HIDDEN"
              glib:nick="hidden"
              glib:name="POPPLER_ANNOT_FLAG_HIDDEN">
      </member>
      <member name="print"
              value="4"
              c:identifier="POPPLER_ANNOT_FLAG_PRINT"
              glib:nick="print"
              glib:name="POPPLER_ANNOT_FLAG_PRINT">
      </member>
      <member name="no_zoom"
              value="8"
              c:identifier="POPPLER_ANNOT_FLAG_NO_ZOOM"
              glib:nick="no-zoom"
              glib:name="POPPLER_ANNOT_FLAG_NO_ZOOM">
      </member>
      <member name="no_rotate"
              value="16"
              c:identifier="POPPLER_ANNOT_FLAG_NO_ROTATE"
              glib:nick="no-rotate"
              glib:name="POPPLER_ANNOT_FLAG_NO_ROTATE">
      </member>
      <member name="no_view"
              value="32"
              c:identifier="POPPLER_ANNOT_FLAG_NO_VIEW"
              glib:nick="no-view"
              glib:name="POPPLER_ANNOT_FLAG_NO_VIEW">
      </member>
      <member name="read_only"
              value="64"
              c:identifier="POPPLER_ANNOT_FLAG_READ_ONLY"
              glib:nick="read-only"
              glib:name="POPPLER_ANNOT_FLAG_READ_ONLY">
      </member>
      <member name="locked"
              value="128"
              c:identifier="POPPLER_ANNOT_FLAG_LOCKED"
              glib:nick="locked"
              glib:name="POPPLER_ANNOT_FLAG_LOCKED">
      </member>
      <member name="toggle_no_view"
              value="256"
              c:identifier="POPPLER_ANNOT_FLAG_TOGGLE_NO_VIEW"
              glib:nick="toggle-no-view"
              glib:name="POPPLER_ANNOT_FLAG_TOGGLE_NO_VIEW">
      </member>
      <member name="locked_contents"
              value="512"
              c:identifier="POPPLER_ANNOT_FLAG_LOCKED_CONTENTS"
              glib:nick="locked-contents"
              glib:name="POPPLER_ANNOT_FLAG_LOCKED_CONTENTS">
      </member>
    </bitfield>
    <class name="AnnotFreeText"
           c:symbol-prefix="annot_free_text"
           c:type="PopplerAnnotFreeText"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotFreeText"
           glib:get-type="poppler_annot_free_text_get_type">
      <method name="get_callout_line"
              c:identifier="poppler_annot_free_text_get_callout_line">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1749">Retrieves a #PopplerAnnotCalloutLine of four or six numbers specifying a callout
line attached to the @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="292"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1756">a new allocated #PopplerAnnotCalloutLine if the annot has a callout
              line, %NULL in other case. It must be freed with g_free() when
              done.</doc>
          <type name="AnnotCalloutLine" c:type="PopplerAnnotCalloutLine*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1751">a #PopplerAnnotFreeText</doc>
            <type name="AnnotFreeText" c:type="PopplerAnnotFreeText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_quadding"
              c:identifier="poppler_annot_free_text_get_quadding">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1719">Retrieves the justification of the text of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1725">#PopplerAnnotFreeTextQuadding of @poppler_annot.</doc>
          <type name="AnnotFreeTextQuadding"
                c:type="PopplerAnnotFreeTextQuadding"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1721">a #PopplerAnnotFreeText</doc>
            <type name="AnnotFreeText" c:type="PopplerAnnotFreeText*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="AnnotFreeTextQuadding"
                 glib:type-name="PopplerAnnotFreeTextQuadding"
                 glib:get-type="poppler_annot_free_text_quadding_get_type"
                 c:type="PopplerAnnotFreeTextQuadding">
      <member name="left_justified"
              value="0"
              c:identifier="POPPLER_ANNOT_FREE_TEXT_QUADDING_LEFT_JUSTIFIED"
              glib:nick="left-justified"
              glib:name="POPPLER_ANNOT_FREE_TEXT_QUADDING_LEFT_JUSTIFIED">
      </member>
      <member name="centered"
              value="1"
              c:identifier="POPPLER_ANNOT_FREE_TEXT_QUADDING_CENTERED"
              glib:nick="centered"
              glib:name="POPPLER_ANNOT_FREE_TEXT_QUADDING_CENTERED">
      </member>
      <member name="right_justified"
              value="2"
              c:identifier="POPPLER_ANNOT_FREE_TEXT_QUADDING_RIGHT_JUSTIFIED"
              glib:nick="right-justified"
              glib:name="POPPLER_ANNOT_FREE_TEXT_QUADDING_RIGHT_JUSTIFIED">
      </member>
    </enumeration>
    <class name="AnnotLine"
           c:symbol-prefix="annot_line"
           c:type="PopplerAnnotLine"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotLine"
           glib:get-type="poppler_annot_line_get_type">
      <constructor name="new"
                   c:identifier="poppler_annot_line_new"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="520">Creates a new Line annotation that will be
located on @rect when added to a page. See
poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="320"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="531">A newly created #PopplerAnnotLine annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="522">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="523">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="524">a #PopplerPoint of the starting vertice</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="525">a #PopplerPoint of the ending vertice</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_vertices"
              c:identifier="poppler_annot_line_set_vertices"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1950">Set the coordinate points where the @poppler_annot starts and ends.</doc>
        <source-position filename="glib/poppler-annot.h" line="322"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1952">a #PopplerAnnotLine</doc>
            <type name="AnnotLine" c:type="PopplerAnnotLine*"/>
          </instance-parameter>
          <parameter name="start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1953">a #PopplerPoint of the starting vertice</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1954">a #PopplerPoint of the ending vertice</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="AnnotMapping"
            c:type="PopplerAnnotMapping"
            glib:type-name="PopplerAnnotMapping"
            glib:get-type="poppler_annot_mapping_get_type"
            c:symbol-prefix="annot_mapping">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="399">A #PopplerAnnotMapping structure represents the location
of @annot on the page</doc>
      <source-position filename="glib/poppler-page.h" line="411"/>
      <field name="area" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="401">a #PopplerRectangle representing an area of the page</doc>
        <type name="Rectangle" c:type="PopplerRectangle"/>
      </field>
      <field name="annot" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="402">a #PopplerAnnot</doc>
        <type name="Annot" c:type="PopplerAnnot*"/>
      </field>
      <constructor name="new" c:identifier="poppler_annot_mapping_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2177">Creates a new #PopplerAnnotMapping</doc>
        <source-position filename="glib/poppler-page.h" line="416"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2182">a new #PopplerAnnotMapping, use poppler_annot_mapping_free() to free it</doc>
          <type name="AnnotMapping" c:type="PopplerAnnotMapping*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_annot_mapping_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2189">Creates a copy of @mapping</doc>
        <source-position filename="glib/poppler-page.h" line="418"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2195">a new allocated copy of @mapping</doc>
          <type name="AnnotMapping" c:type="PopplerAnnotMapping*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2191">a #PopplerAnnotMapping to copy</doc>
            <type name="AnnotMapping" c:type="PopplerAnnotMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_annot_mapping_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2210">Frees the given #PopplerAnnotMapping</doc>
        <source-position filename="glib/poppler-page.h" line="420"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2212">a #PopplerAnnotMapping</doc>
            <type name="AnnotMapping" c:type="PopplerAnnotMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="AnnotMarkup"
           c:symbol-prefix="annot_markup"
           c:type="PopplerAnnotMarkup"
           parent="Annot"
           glib:type-name="PopplerAnnotMarkup"
           glib:get-type="poppler_annot_markup_get_type">
      <method name="get_date" c:identifier="poppler_annot_markup_get_date">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1383">Returns the date and time when the annotation was created</doc>
        <source-position filename="glib/poppler-annot.h" line="246"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1389">a #GDate representing the date and time
              when the annotation was created, or %NULL</doc>
          <type name="GLib.Date" c:type="GDate*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1385">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_external_data"
              c:identifier="poppler_annot_markup_get_external_data">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1468">Gets the external data type of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="252"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1474">#PopplerAnnotExternalDataType of @poppler_annot.</doc>
          <type name="AnnotExternalDataType"
                c:type="PopplerAnnotExternalDataType"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1470">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label" c:identifier="poppler_annot_markup_get_label">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1138">Retrieves the label text of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="226"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1144">the label text of @poppler_annot.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1140">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_opacity"
              c:identifier="poppler_annot_markup_get_opacity">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1342">Retrieves the opacity value of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="242"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1348">the opacity value of @poppler_annot,
              between 0 (transparent) and 1 (opaque)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1344">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_popup_is_open"
              c:identifier="poppler_annot_markup_get_popup_is_open">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1226">Retrieves the state of the popup window related to @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1232">the state of @poppler_annot. %TRUE if it's open, %FALSE in
              other case.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1228">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_popup_rectangle"
              c:identifier="poppler_annot_markup_get_popup_rectangle"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1279">Retrieves the rectangle of the popup window related to @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="238"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1286">%TRUE if #PopplerRectangle was correctly filled, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1281">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="poppler_rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1282">a #PopplerRectangle to store the popup rectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_reply_to"
              c:identifier="poppler_annot_markup_get_reply_to">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1440">Gets the reply type of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1446">#PopplerAnnotMarkupReplyType of @poppler_annot.</doc>
          <type name="AnnotMarkupReplyType"
                c:type="PopplerAnnotMarkupReplyType"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1442">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subject"
              c:identifier="poppler_annot_markup_get_subject">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1418">Retrives the subject text of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="248"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1424">the subject text of @poppler_annot.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1420">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_popup"
              c:identifier="poppler_annot_markup_has_popup"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1184">Return %TRUE if the markup annotation has a popup window associated</doc>
        <source-position filename="glib/poppler-annot.h" line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1190">%TRUE, if @poppler_annot has popup, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1186">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="poppler_annot_markup_set_label"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1160">Sets the label text of @poppler_annot, replacing the current one</doc>
        <source-position filename="glib/poppler-annot.h" line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1162">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1163">a text string containing the new label, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_opacity"
              c:identifier="poppler_annot_markup_set_opacity"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1362">Sets the opacity of @poppler_annot. This value applies to
all visible elements of @poppler_annot in its closed state,
but not to the pop-up window that appears when it's openened</doc>
        <source-position filename="glib/poppler-annot.h" line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1364">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1365">a constant opacity value, between 0 (transparent) and 1 (opaque)</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_popup"
              c:identifier="poppler_annot_markup_set_popup"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1205">Associates a new popup window for editing contents of @poppler_annot.
Popup window shall be displayed by viewers at @popup_rect on the page.</doc>
        <source-position filename="glib/poppler-annot.h" line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1207">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="popup_rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1208">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_popup_is_open"
              c:identifier="poppler_annot_markup_set_popup_is_open"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1251">Sets the state of the popup window related to @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="236"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1253">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="is_open" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1254">whether popup window should initially be displayed open</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_popup_rectangle"
              c:identifier="poppler_annot_markup_set_popup_rectangle"
              version="0.33">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1313">Sets the rectangle of the popup window related to @poppler_annot.
This doesn't have any effect if @poppler_annot doesn't have a
popup associated, use poppler_annot_markup_set_popup() to associate
a popup window to a #PopplerAnnotMarkup.</doc>
        <source-position filename="glib/poppler-annot.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1315">a #PopplerAnnotMarkup</doc>
            <type name="AnnotMarkup" c:type="PopplerAnnotMarkup*"/>
          </instance-parameter>
          <parameter name="poppler_rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1316">a #PopplerRectangle to set</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="AnnotMarkupReplyType"
                 glib:type-name="PopplerAnnotMarkupReplyType"
                 glib:get-type="poppler_annot_markup_reply_type_get_type"
                 c:type="PopplerAnnotMarkupReplyType">
      <member name="r"
              value="0"
              c:identifier="POPPLER_ANNOT_MARKUP_REPLY_TYPE_R"
              glib:nick="r"
              glib:name="POPPLER_ANNOT_MARKUP_REPLY_TYPE_R">
      </member>
      <member name="group"
              value="1"
              c:identifier="POPPLER_ANNOT_MARKUP_REPLY_TYPE_GROUP"
              glib:nick="group"
              glib:name="POPPLER_ANNOT_MARKUP_REPLY_TYPE_GROUP">
      </member>
    </enumeration>
    <class name="AnnotMovie"
           c:symbol-prefix="annot_movie"
           c:type="PopplerAnnotMovie"
           parent="Annot"
           glib:type-name="PopplerAnnotMovie"
           glib:get-type="poppler_annot_movie_get_type">
      <method name="get_movie"
              c:identifier="poppler_annot_movie_get_movie"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1916">Retrieves the movie object (PopplerMovie) stored in the @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="308"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1922">the movie object stored in the @poppler_annot. The returned
              object is owned by #PopplerAnnotMovie and should not be freed</doc>
          <type name="Movie" c:type="PopplerMovie*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1918">a #PopplerAnnotMovie</doc>
            <type name="AnnotMovie" c:type="PopplerAnnotMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="poppler_annot_movie_get_title"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1892">Retrieves the movie title of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="306"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1898">the title text of @poppler_annot.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1894">a #PopplerAnnotMovie</doc>
            <type name="AnnotMovie" c:type="PopplerAnnotMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <class name="AnnotScreen"
           c:symbol-prefix="annot_screen"
           c:type="PopplerAnnotScreen"
           parent="Annot"
           glib:type-name="PopplerAnnotScreen"
           glib:get-type="poppler_annot_screen_get_type">
      <method name="get_action"
              c:identifier="poppler_annot_screen_get_action"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1933">Retrieves the action (#PopplerAction) that shall be performed when @poppler_annot is activated</doc>
        <source-position filename="glib/poppler-annot.h" line="314"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1939">the action to perform. The returned
              object is owned by @poppler_annot and should not be freed</doc>
          <type name="Action" c:type="PopplerAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1935">a #PopplerAnnotScreen</doc>
            <type name="AnnotScreen" c:type="PopplerAnnotScreen*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <class name="AnnotSquare"
           c:symbol-prefix="annot_square"
           c:type="PopplerAnnotSquare"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotSquare"
           glib:get-type="poppler_annot_square_get_type">
      <constructor name="new"
                   c:identifier="poppler_annot_square_new"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="589">Creates a new Square annotation that will be
located on @rect when added to a page. See
poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="348"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="598">a newly created #PopplerAnnotSquare annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="591">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="592">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_interior_color"
              c:identifier="poppler_annot_square_get_interior_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="2027">Retrieves the interior color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="352"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="2033">a new allocated #PopplerColor with the color values of
              @poppler_annot, or %NULL. It must be freed with g_free() when done.</doc>
          <type name="Color" c:type="PopplerColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2029">a #PopplerAnnotSquare</doc>
            <type name="AnnotSquare" c:type="PopplerAnnotSquare*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_interior_color"
              c:identifier="poppler_annot_square_set_interior_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="2045">Sets the interior color of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="350"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2047">a #PopplerAnnotSquare</doc>
            <type name="AnnotSquare" c:type="PopplerAnnotSquare*"/>
          </instance-parameter>
          <parameter name="poppler_color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2048">a #PopplerColor, or %NULL</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <class name="AnnotStamp"
           c:symbol-prefix="annot_stamp"
           c:type="PopplerAnnotStamp"
           parent="Annot"
           glib:type-name="PopplerAnnotStamp"
           glib:get-type="poppler_annot_stamp_get_type">
      <constructor name="new"
                   c:identifier="poppler_annot_stamp_new"
                   version="22.07.0">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="635">Creates a new Stamp annotation that will be
located on @rect when added to a page. See
poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="358"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="644">a newly created #PopplerAnnotStamp annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="637">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="638">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon"
              c:identifier="poppler_annot_stamp_get_icon"
              version="22.07.0">
        <source-position filename="glib/poppler-annot.h" line="360"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="2065">the corresponding #PopplerAnnotStampIcon of the icon</doc>
          <type name="AnnotStampIcon" c:type="PopplerAnnotStampIcon"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2063">a #PopplerAnnotStamp</doc>
            <type name="AnnotStamp" c:type="PopplerAnnotStamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_custom_image"
              c:identifier="poppler_annot_stamp_set_custom_image"
              version="22.07.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="2174">Sets the custom image of @poppler_annot to be @image</doc>
        <source-position filename="glib/poppler-annot.h" line="364"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="2182">%TRUE on success, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2176">a #PopplerAnnotStamp</doc>
            <type name="AnnotStamp" c:type="PopplerAnnotStamp*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2177">an image cairo surface</doc>
            <type name="cairo.Surface" c:type="cairo_surface_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="poppler_annot_stamp_set_icon"
              version="22.07.0">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="2115">Sets the icon of @poppler_annot to be one of the predefined values in #PopplerAnnotStampIcon</doc>
        <source-position filename="glib/poppler-annot.h" line="362"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2117">a #PopplerAnnotStamp</doc>
            <type name="AnnotStamp" c:type="PopplerAnnotStamp*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="2118">the #PopplerAnnotStampIcon type of the icon</doc>
            <type name="AnnotStampIcon" c:type="PopplerAnnotStampIcon"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="AnnotStampIcon"
                 glib:type-name="PopplerAnnotStampIcon"
                 glib:get-type="poppler_annot_stamp_icon_get_type"
                 c:type="PopplerAnnotStampIcon">
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ANNOT_STAMP_ICON_UNKNOWN">
      </member>
      <member name="approved"
              value="1"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_APPROVED"
              glib:nick="approved"
              glib:name="POPPLER_ANNOT_STAMP_ICON_APPROVED">
      </member>
      <member name="as_is"
              value="2"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_AS_IS"
              glib:nick="as-is"
              glib:name="POPPLER_ANNOT_STAMP_ICON_AS_IS">
      </member>
      <member name="confidential"
              value="3"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_CONFIDENTIAL"
              glib:nick="confidential"
              glib:name="POPPLER_ANNOT_STAMP_ICON_CONFIDENTIAL">
      </member>
      <member name="final"
              value="4"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_FINAL"
              glib:nick="final"
              glib:name="POPPLER_ANNOT_STAMP_ICON_FINAL">
      </member>
      <member name="experimental"
              value="5"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_EXPERIMENTAL"
              glib:nick="experimental"
              glib:name="POPPLER_ANNOT_STAMP_ICON_EXPERIMENTAL">
      </member>
      <member name="expired"
              value="6"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_EXPIRED"
              glib:nick="expired"
              glib:name="POPPLER_ANNOT_STAMP_ICON_EXPIRED">
      </member>
      <member name="not_approved"
              value="7"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_NOT_APPROVED"
              glib:nick="not-approved"
              glib:name="POPPLER_ANNOT_STAMP_ICON_NOT_APPROVED">
      </member>
      <member name="not_for_public_release"
              value="8"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_NOT_FOR_PUBLIC_RELEASE"
              glib:nick="not-for-public-release"
              glib:name="POPPLER_ANNOT_STAMP_ICON_NOT_FOR_PUBLIC_RELEASE">
      </member>
      <member name="sold"
              value="9"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_SOLD"
              glib:nick="sold"
              glib:name="POPPLER_ANNOT_STAMP_ICON_SOLD">
      </member>
      <member name="departmental"
              value="10"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_DEPARTMENTAL"
              glib:nick="departmental"
              glib:name="POPPLER_ANNOT_STAMP_ICON_DEPARTMENTAL">
      </member>
      <member name="for_comment"
              value="11"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_FOR_COMMENT"
              glib:nick="for-comment"
              glib:name="POPPLER_ANNOT_STAMP_ICON_FOR_COMMENT">
      </member>
      <member name="for_public_release"
              value="12"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_FOR_PUBLIC_RELEASE"
              glib:nick="for-public-release"
              glib:name="POPPLER_ANNOT_STAMP_ICON_FOR_PUBLIC_RELEASE">
      </member>
      <member name="top_secret"
              value="13"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_TOP_SECRET"
              glib:nick="top-secret"
              glib:name="POPPLER_ANNOT_STAMP_ICON_TOP_SECRET">
      </member>
      <member name="none"
              value="14"
              c:identifier="POPPLER_ANNOT_STAMP_ICON_NONE"
              glib:nick="none"
              glib:name="POPPLER_ANNOT_STAMP_ICON_NONE">
      </member>
    </enumeration>
    <class name="AnnotText"
           c:symbol-prefix="annot_text"
           c:type="PopplerAnnotText"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotText"
           glib:get-type="poppler_annot_text_get_type">
      <constructor name="new"
                   c:identifier="poppler_annot_text_new"
                   version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="230">Creates a new Text annotation that will be
located on @rect when added to a page. See
poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="258"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="239">A newly created #PopplerAnnotText annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="232">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="233">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon" c:identifier="poppler_annot_text_get_icon">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1536">Gets name of the icon of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="264"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1542">a new allocated string containing the icon name</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1538">a #PopplerAnnotText</doc>
            <type name="AnnotText" c:type="PopplerAnnotText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_open" c:identifier="poppler_annot_text_get_is_open">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1497">Retrieves the state of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="260"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1503">the state of @poppler_annot. %TRUE if it's open, %FALSE in
              other case.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1499">a #PopplerAnnotText</doc>
            <type name="AnnotText" c:type="PopplerAnnotText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="poppler_annot_text_get_state">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1611">Retrieves the state of @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="268"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1617">#PopplerAnnotTextState of @poppler_annot.</doc>
          <type name="AnnotTextState" c:type="PopplerAnnotTextState"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1613">a #PopplerAnnotText</doc>
            <type name="AnnotText" c:type="PopplerAnnotText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="poppler_annot_text_set_icon"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1558">Sets the icon of @poppler_annot. The following predefined
icons are currently supported:
&lt;variablelist&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_NOTE&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_COMMENT&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_KEY&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_HELP&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_NEW_PARAGRAPH&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_PARAGRAPH&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_INSERT&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_CROSS&lt;/term&gt;
 &lt;/varlistentry&gt;
 &lt;varlistentry&gt;
  &lt;term&gt;#POPPLER_ANNOT_TEXT_ICON_CIRCLE&lt;/term&gt;
 &lt;/varlistentry&gt;
&lt;/variablelist&gt;</doc>
        <source-position filename="glib/poppler-annot.h" line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1560">a #PopplerAnnotText</doc>
            <type name="AnnotText" c:type="PopplerAnnotText*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1561">the name of an icon</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_open"
              c:identifier="poppler_annot_text_set_is_open"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1517">Sets whether @poppler_annot should initially be displayed open</doc>
        <source-position filename="glib/poppler-annot.h" line="262"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1519">a #PopplerAnnotText</doc>
            <type name="AnnotText" c:type="PopplerAnnotText*"/>
          </instance-parameter>
          <parameter name="is_open" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1520">whether annotation should initially be displayed open</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <class name="AnnotTextMarkup"
           c:symbol-prefix="annot_text_markup"
           c:type="PopplerAnnotTextMarkup"
           parent="AnnotMarkup"
           glib:type-name="PopplerAnnotTextMarkup"
           glib:get-type="poppler_annot_text_markup_get_type">
      <constructor name="new_highlight"
                   c:identifier="poppler_annot_text_markup_new_highlight"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="309">Creates a new Highlight Text annotation that will be
located on @rect when added to a page. See poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="274"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="319">A newly created #PopplerAnnotTextMarkup annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="311">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="312">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="quadrilaterals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="313">A #GArray of
  #PopplerQuadrilateral&lt;!-- --&gt;s</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="Quadrilateral"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_squiggly"
                   c:identifier="poppler_annot_text_markup_new_squiggly"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="336">Creates a new Squiggly Text annotation that will be
located on @rect when added to a page. See poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="276"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="346">A newly created #PopplerAnnotTextMarkup annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="338">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="339">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="quadrilaterals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="340">A #GArray of
  #PopplerQuadrilateral&lt;!-- --&gt;s</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="Quadrilateral"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_strikeout"
                   c:identifier="poppler_annot_text_markup_new_strikeout"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="365">Creates a new Strike Out Text annotation that will be
located on @rect when added to a page. See poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="278"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="375">A newly created #PopplerAnnotTextMarkup annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="367">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="368">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="quadrilaterals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="369">A #GArray of
  #PopplerQuadrilateral&lt;!-- --&gt;s</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="Quadrilateral"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_underline"
                   c:identifier="poppler_annot_text_markup_new_underline"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="394">Creates a new Underline Text annotation that will be
located on @rect when added to a page. See poppler_page_add_annot()</doc>
        <source-position filename="glib/poppler-annot.h" line="280"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="404">A newly created #PopplerAnnotTextMarkup annotation</doc>
          <type name="Annot" c:type="PopplerAnnot*"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="396">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="397">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="quadrilaterals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="398">A #GArray of
  #PopplerQuadrilateral&lt;!-- --&gt;s</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="Quadrilateral"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_quadrilaterals"
              c:identifier="poppler_annot_text_markup_get_quadrilaterals"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1692">Returns a #GArray of #PopplerQuadrilateral items that map from a
location on @page to a #PopplerAnnotTextMarkup.  This array must be freed
when done.</doc>
        <source-position filename="glib/poppler-annot.h" line="284"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-annot.cc"
               line="1700">A #GArray of #PopplerQuadrilateral</doc>
          <array name="GLib.Array" c:type="GArray*">
            <type name="Quadrilateral"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1694">A #PopplerAnnotTextMarkup</doc>
            <type name="AnnotTextMarkup" c:type="PopplerAnnotTextMarkup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_quadrilaterals"
              c:identifier="poppler_annot_text_markup_set_quadrilaterals"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-annot.cc"
             line="1652">Set the regions (Quadrilaterals) to apply the text markup in @poppler_annot.</doc>
        <source-position filename="glib/poppler-annot.h" line="282"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1654">A #PopplerAnnotTextMarkup</doc>
            <type name="AnnotTextMarkup" c:type="PopplerAnnotTextMarkup*"/>
          </instance-parameter>
          <parameter name="quadrilaterals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-annot.cc"
                 line="1655">A #GArray of
  #PopplerQuadrilateral&lt;!-- --&gt;s</doc>
            <array name="GLib.Array" c:type="GArray*">
              <type name="Quadrilateral"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="AnnotTextState"
                 glib:type-name="PopplerAnnotTextState"
                 glib:get-type="poppler_annot_text_state_get_type"
                 c:type="PopplerAnnotTextState">
      <member name="marked"
              value="0"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_MARKED"
              glib:nick="marked"
              glib:name="POPPLER_ANNOT_TEXT_STATE_MARKED">
      </member>
      <member name="unmarked"
              value="1"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_UNMARKED"
              glib:nick="unmarked"
              glib:name="POPPLER_ANNOT_TEXT_STATE_UNMARKED">
      </member>
      <member name="accepted"
              value="2"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_ACCEPTED"
              glib:nick="accepted"
              glib:name="POPPLER_ANNOT_TEXT_STATE_ACCEPTED">
      </member>
      <member name="rejected"
              value="3"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_REJECTED"
              glib:nick="rejected"
              glib:name="POPPLER_ANNOT_TEXT_STATE_REJECTED">
      </member>
      <member name="cancelled"
              value="4"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_CANCELLED"
              glib:nick="cancelled"
              glib:name="POPPLER_ANNOT_TEXT_STATE_CANCELLED">
      </member>
      <member name="completed"
              value="5"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_COMPLETED"
              glib:nick="completed"
              glib:name="POPPLER_ANNOT_TEXT_STATE_COMPLETED">
      </member>
      <member name="none"
              value="6"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_NONE"
              glib:nick="none"
              glib:name="POPPLER_ANNOT_TEXT_STATE_NONE">
      </member>
      <member name="unknown"
              value="7"
              c:identifier="POPPLER_ANNOT_TEXT_STATE_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ANNOT_TEXT_STATE_UNKNOWN">
      </member>
    </enumeration>
    <enumeration name="AnnotType"
                 glib:type-name="PopplerAnnotType"
                 glib:get-type="poppler_annot_type_get_type"
                 c:type="PopplerAnnotType">
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_ANNOT_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_ANNOT_UNKNOWN">
      </member>
      <member name="text"
              value="1"
              c:identifier="POPPLER_ANNOT_TEXT"
              glib:nick="text"
              glib:name="POPPLER_ANNOT_TEXT">
      </member>
      <member name="link"
              value="2"
              c:identifier="POPPLER_ANNOT_LINK"
              glib:nick="link"
              glib:name="POPPLER_ANNOT_LINK">
      </member>
      <member name="free_text"
              value="3"
              c:identifier="POPPLER_ANNOT_FREE_TEXT"
              glib:nick="free-text"
              glib:name="POPPLER_ANNOT_FREE_TEXT">
      </member>
      <member name="line"
              value="4"
              c:identifier="POPPLER_ANNOT_LINE"
              glib:nick="line"
              glib:name="POPPLER_ANNOT_LINE">
      </member>
      <member name="square"
              value="5"
              c:identifier="POPPLER_ANNOT_SQUARE"
              glib:nick="square"
              glib:name="POPPLER_ANNOT_SQUARE">
      </member>
      <member name="circle"
              value="6"
              c:identifier="POPPLER_ANNOT_CIRCLE"
              glib:nick="circle"
              glib:name="POPPLER_ANNOT_CIRCLE">
      </member>
      <member name="polygon"
              value="7"
              c:identifier="POPPLER_ANNOT_POLYGON"
              glib:nick="polygon"
              glib:name="POPPLER_ANNOT_POLYGON">
      </member>
      <member name="poly_line"
              value="8"
              c:identifier="POPPLER_ANNOT_POLY_LINE"
              glib:nick="poly-line"
              glib:name="POPPLER_ANNOT_POLY_LINE">
      </member>
      <member name="highlight"
              value="9"
              c:identifier="POPPLER_ANNOT_HIGHLIGHT"
              glib:nick="highlight"
              glib:name="POPPLER_ANNOT_HIGHLIGHT">
      </member>
      <member name="underline"
              value="10"
              c:identifier="POPPLER_ANNOT_UNDERLINE"
              glib:nick="underline"
              glib:name="POPPLER_ANNOT_UNDERLINE">
      </member>
      <member name="squiggly"
              value="11"
              c:identifier="POPPLER_ANNOT_SQUIGGLY"
              glib:nick="squiggly"
              glib:name="POPPLER_ANNOT_SQUIGGLY">
      </member>
      <member name="strike_out"
              value="12"
              c:identifier="POPPLER_ANNOT_STRIKE_OUT"
              glib:nick="strike-out"
              glib:name="POPPLER_ANNOT_STRIKE_OUT">
      </member>
      <member name="stamp"
              value="13"
              c:identifier="POPPLER_ANNOT_STAMP"
              glib:nick="stamp"
              glib:name="POPPLER_ANNOT_STAMP">
      </member>
      <member name="caret"
              value="14"
              c:identifier="POPPLER_ANNOT_CARET"
              glib:nick="caret"
              glib:name="POPPLER_ANNOT_CARET">
      </member>
      <member name="ink"
              value="15"
              c:identifier="POPPLER_ANNOT_INK"
              glib:nick="ink"
              glib:name="POPPLER_ANNOT_INK">
      </member>
      <member name="popup"
              value="16"
              c:identifier="POPPLER_ANNOT_POPUP"
              glib:nick="popup"
              glib:name="POPPLER_ANNOT_POPUP">
      </member>
      <member name="file_attachment"
              value="17"
              c:identifier="POPPLER_ANNOT_FILE_ATTACHMENT"
              glib:nick="file-attachment"
              glib:name="POPPLER_ANNOT_FILE_ATTACHMENT">
      </member>
      <member name="sound"
              value="18"
              c:identifier="POPPLER_ANNOT_SOUND"
              glib:nick="sound"
              glib:name="POPPLER_ANNOT_SOUND">
      </member>
      <member name="movie"
              value="19"
              c:identifier="POPPLER_ANNOT_MOVIE"
              glib:nick="movie"
              glib:name="POPPLER_ANNOT_MOVIE">
      </member>
      <member name="widget"
              value="20"
              c:identifier="POPPLER_ANNOT_WIDGET"
              glib:nick="widget"
              glib:name="POPPLER_ANNOT_WIDGET">
      </member>
      <member name="screen"
              value="21"
              c:identifier="POPPLER_ANNOT_SCREEN"
              glib:nick="screen"
              glib:name="POPPLER_ANNOT_SCREEN">
      </member>
      <member name="printer_mark"
              value="22"
              c:identifier="POPPLER_ANNOT_PRINTER_MARK"
              glib:nick="printer-mark"
              glib:name="POPPLER_ANNOT_PRINTER_MARK">
      </member>
      <member name="trap_net"
              value="23"
              c:identifier="POPPLER_ANNOT_TRAP_NET"
              glib:nick="trap-net"
              glib:name="POPPLER_ANNOT_TRAP_NET">
      </member>
      <member name="watermark"
              value="24"
              c:identifier="POPPLER_ANNOT_WATERMARK"
              glib:nick="watermark"
              glib:name="POPPLER_ANNOT_WATERMARK">
      </member>
      <member name="3d"
              value="25"
              c:identifier="POPPLER_ANNOT_3D"
              glib:nick="3d"
              glib:name="POPPLER_ANNOT_3D">
      </member>
    </enumeration>
    <class name="Attachment"
           c:symbol-prefix="attachment"
           c:type="PopplerAttachment"
           parent="GObject.Object"
           glib:type-name="PopplerAttachment"
           glib:get-type="poppler_attachment_get_type"
           glib:type-struct="AttachmentClass">
      <source-position filename="glib/poppler-attachment.h" line="96"/>
      <method name="get_checksum"
              c:identifier="poppler_attachment_get_checksum"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="152">The attachment's checksum.</doc>
          <type name="GLib.String" c:type="const GString*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="150">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ctime"
              c:identifier="poppler_attachment_get_ctime"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="103"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="165">The attachment's creation date and time
as a #GDateTime, or %NULL if the creation date and time is not available.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="163">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="poppler_attachment_get_description"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="179">The attachment's descriptive text.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="177">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mtime"
              c:identifier="poppler_attachment_get_mtime"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="107"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="192">The attachment's modification date and
time as a #GDateTime, or %NULL if the modification date and time is not
available.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="190">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="poppler_attachment_get_name"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="207">The attachment's name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="205">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="poppler_attachment_get_size"
              version="20.09.0">
        <source-position filename="glib/poppler-attachment.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="220">The attachment's size.</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="218">a #PopplerAttachment</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="poppler_attachment_save" throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.cc"
             line="244">Saves @attachment to a file indicated by @filename.  If @error is set, %FALSE
will be returned. Possible errors include those in the #G_FILE_ERROR domain
and whatever the save function generates.</doc>
        <source-position filename="glib/poppler-attachment.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="254">%TRUE, if the file successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="246">A #PopplerAttachment.</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="247">name of file to save</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_callback"
              c:identifier="poppler_attachment_save_to_callback"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.cc"
             line="334">Saves @attachment by feeding the produced data to @save_func. Can be used
when you want to store the attachment to something other than a file, such as
an in-memory buffer or a socket. If @error is set, %FALSE will be
returned. Possible errors include those in the #G_FILE_ERROR domain and
whatever the save function generates.</doc>
        <source-position filename="glib/poppler-attachment.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="347">%TRUE, if the save successfully completed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="336">A #PopplerAttachment.</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
          <parameter name="save_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="337">a function that is called to save each block of data that the save routine generates.</doc>
            <type name="AttachmentSaveFunc"
                  c:type="PopplerAttachmentSaveFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="338">user data to pass to the save function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_fd"
              c:identifier="poppler_attachment_save_to_fd"
              version="21.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.cc"
             line="286">Saves @attachment to a file referred to by @fd.  If @error is set, %FALSE
will be returned. Possible errors include those in the #G_FILE_ERROR domain
and whatever the save function generates.
Note that this function takes ownership of @fd; you must not operate on it
again, nor close it.</doc>
        <source-position filename="glib/poppler-attachment.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.cc"
               line="298">%TRUE, if the file successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="attachment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="288">A #PopplerAttachment.</doc>
            <type name="Attachment" c:type="PopplerAttachment*"/>
          </instance-parameter>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-attachment.cc"
                 line="289">a valid file descriptor open for writing</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="name">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="54">The filename. Deprecated in poppler 20.09.0. Use
  poppler_attachment_get_name() instead.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="56">Descriptive text. Deprecated in poppler 20.09.0. Use
  poppler_attachment_get_description() instead.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="size">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="58">The size of the file. Deprecated in poppler 20.09.0. Use
  poppler_attachment_get_size() instead.</doc>
        <type name="gsize" c:type="gsize"/>
      </field>
      <field name="mtime">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="60">The date and time when the file was last modified. Deprecated in
  poppler 20.09.0. Use poppler_attachment_get_mtime() instead.</doc>
        <type name="GLib.Time" c:type="GTime"/>
      </field>
      <field name="ctime">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="62">The date and time when the file was created. Deprecated in poppler
  20.09.0. Use poppler_attachment_get_ctime() instead.</doc>
        <type name="GLib.Time" c:type="GTime"/>
      </field>
      <field name="checksum">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="64">A 16-byte checksum of the file. Deprecated in poppler 20.09.0. Use
  poppler_attachment_get_checksum() instead.</doc>
        <type name="GLib.String" c:type="GString*"/>
      </field>
    </class>
    <record name="AttachmentClass"
            c:type="PopplerAttachmentClass"
            glib:is-gtype-struct-for="Attachment">
      <doc xml:space="preserve"
           filename="glib/poppler-attachment.h"
           line="88">The GObject class structure of #PopplerAttachment.</doc>
      <source-position filename="glib/poppler-attachment.h" line="96"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="AttachmentSaveFunc"
              c:type="PopplerAttachmentSaveFunc"
              throws="1">
      <doc xml:space="preserve"
           filename="glib/poppler-attachment.h"
           line="33">Specifies the type of the function passed to
poppler_attachment_save_to_callback().  It is called once for each block of
bytes that is "written" by poppler_attachment_save_to_callback().  If
successful it should return %TRUE.  If an error occurs it should set
@error and return %FALSE, in which case poppler_attachment_save_to_callback()
will fail with the same error.</doc>
      <source-position filename="glib/poppler-attachment.h" line="50"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-attachment.h"
             line="48">%TRUE if successful, %FALSE (with @error set) if failed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="buf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.h"
               line="35">buffer containing
  bytes to be written.</doc>
          <array length="1" zero-terminated="0" c:type="const gchar*">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.h"
               line="37">number of bytes in @buf.</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="glib/poppler-attachment.h"
               line="38">user data passed to poppler_attachment_save_to_callback()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="Backend"
                 glib:type-name="PopplerBackend"
                 glib:get-type="poppler_backend_get_type"
                 c:type="PopplerBackend">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="224">Backend codes returned by poppler_get_backend().</doc>
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_BACKEND_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_BACKEND_UNKNOWN">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="226">Unknown backend</doc>
      </member>
      <member name="splash"
              value="1"
              c:identifier="POPPLER_BACKEND_SPLASH"
              glib:nick="splash"
              glib:name="POPPLER_BACKEND_SPLASH">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="227">Splash backend</doc>
      </member>
      <member name="cairo"
              value="2"
              c:identifier="POPPLER_BACKEND_CAIRO"
              glib:nick="cairo"
              glib:name="POPPLER_BACKEND_CAIRO">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="228">Cairo backend</doc>
      </member>
    </enumeration>
    <function-macro name="CHECK_VERSION"
                    c:identifier="POPPLER_CHECK_VERSION"
                    version="0.12"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="70">Checks the version fo the poppler library</doc>
      <source-position filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
                       line="83"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
               line="72">major version (e.g. 0 for version 0.1.2)</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
               line="73">minor version (e.g. 1 for version 0.1.2)</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
               line="74">micro version (e.g. 2 for version 0.1.2)</doc>
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="CertificateStatus"
                 version="21.12.0"
                 glib:type-name="PopplerCertificateStatus"
                 glib:get-type="poppler_certificate_status_get_type"
                 c:type="PopplerCertificateStatus">
      <doc xml:space="preserve"
           filename="glib/poppler-form-field.h"
           line="59">Signature certificate verification results</doc>
      <member name="trusted"
              value="0"
              c:identifier="POPPLER_CERTIFICATE_TRUSTED"
              glib:nick="trusted"
              glib:name="POPPLER_CERTIFICATE_TRUSTED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="61">certificate is considered trusted</doc>
      </member>
      <member name="untrusted_issuer"
              value="1"
              c:identifier="POPPLER_CERTIFICATE_UNTRUSTED_ISSUER"
              glib:nick="untrusted-issuer"
              glib:name="POPPLER_CERTIFICATE_UNTRUSTED_ISSUER">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="62">the issuer of this certificate has been marked as untrusted by the user</doc>
      </member>
      <member name="unknown_issuer"
              value="2"
              c:identifier="POPPLER_CERTIFICATE_UNKNOWN_ISSUER"
              glib:nick="unknown-issuer"
              glib:name="POPPLER_CERTIFICATE_UNKNOWN_ISSUER">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="63">this certificate trust chain has not finished in a trusted root certificate</doc>
      </member>
      <member name="revoked"
              value="3"
              c:identifier="POPPLER_CERTIFICATE_REVOKED"
              glib:nick="revoked"
              glib:name="POPPLER_CERTIFICATE_REVOKED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="64">certificate was revoked by the issuing certificate authority</doc>
      </member>
      <member name="expired"
              value="4"
              c:identifier="POPPLER_CERTIFICATE_EXPIRED"
              glib:nick="expired"
              glib:name="POPPLER_CERTIFICATE_EXPIRED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="65">signing time is outside the validity bounds of this certificate</doc>
      </member>
      <member name="generic_error"
              value="5"
              c:identifier="POPPLER_CERTIFICATE_GENERIC_ERROR"
              glib:nick="generic-error"
              glib:name="POPPLER_CERTIFICATE_GENERIC_ERROR">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="66">failed to verify certificate</doc>
      </member>
      <member name="not_verified"
              value="6"
              c:identifier="POPPLER_CERTIFICATE_NOT_VERIFIED"
              glib:nick="not-verified"
              glib:name="POPPLER_CERTIFICATE_NOT_VERIFIED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="67">certificate not yet verified</doc>
      </member>
    </enumeration>
    <record name="Color"
            c:type="PopplerColor"
            glib:type-name="PopplerColor"
            glib:get-type="poppler_color_get_type"
            c:symbol-prefix="color">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="212">A #PopplerColor describes a RGB color. Color components
are values between 0 and 65535</doc>
      <source-position filename="glib/poppler-page.h" line="226"/>
      <field name="red" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="214">the red component of color</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="green" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="215">the green component of color</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="blue" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="216">the blue component of color</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <constructor name="new" c:identifier="poppler_color_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1940">Creates a new #PopplerColor</doc>
        <source-position filename="glib/poppler-page.h" line="231"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1945">a new #PopplerColor, use poppler_color_free() to free it</doc>
          <type name="Color" c:type="PopplerColor*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_color_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1952">Creates a copy of @color</doc>
        <source-position filename="glib/poppler-page.h" line="233"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1958">a new allocated copy of @color</doc>
          <type name="Color" c:type="PopplerColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1954">a #PopplerColor to copy</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_color_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1970">Frees the given #PopplerColor</doc>
        <source-position filename="glib/poppler-page.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1972">a #PopplerColor</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="DOCUMENT"
                    c:identifier="POPPLER_DOCUMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Dest"
            c:type="PopplerDest"
            glib:type-name="PopplerDest"
            glib:get-type="poppler_dest_get_type"
            c:symbol-prefix="dest">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="155">Data structure for holding a destination

Note that @named_dest is the string representation of the named
destination. This is the right form to pass to poppler functions,
e.g. poppler_document_find_dest(), but to get the destination as
it appears in the PDF itself, you need to convert it to a bytestring
with poppler_named_dest_to_bytestring() first.
Also note that @named_dest does not have a defined encoding and
is not in a form suitable to be displayed to the user.</doc>
      <source-position filename="glib/poppler-action.h" line="193"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="157">type of destination</doc>
        <type name="DestType" c:type="PopplerDestType"/>
      </field>
      <field name="page_num" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="158">page number</doc>
        <type name="gint" c:type="int"/>
      </field>
      <field name="left" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="159">left coordinate</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="bottom" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="160">bottom coordinate</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="right" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="161">right coordinate</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="top" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="162">top coordinate</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="zoom" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="163">scale factor</doc>
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="named_dest" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="164">name of the destination (#POPPLER_DEST_NAMED only)</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="change_left" writable="1" bits="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="165">whether left coordinate should be changed</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="change_top" writable="1" bits="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="166">whether top coordinate should be changed</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="change_zoom" writable="1" bits="1">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="167">whether scale factor should be changed</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <method name="copy" c:identifier="poppler_dest_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-action.cc"
             line="30">Copies @dest, creating an identical #PopplerDest.</doc>
        <source-position filename="glib/poppler-action.h" line="444"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-action.cc"
               line="36">a new destination identical to @dest</doc>
          <type name="Dest" c:type="PopplerDest*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-action.cc"
                 line="32">a #PopplerDest</doc>
            <type name="Dest" c:type="PopplerDest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_dest_free">
        <doc xml:space="preserve"
             filename="glib/poppler-action.cc"
             line="51">Frees @dest</doc>
        <source-position filename="glib/poppler-action.h" line="442"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-action.cc"
                 line="53">a #PopplerDest</doc>
            <type name="Dest" c:type="PopplerDest*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="DestType"
                 glib:type-name="PopplerDestType"
                 glib:get-type="poppler_dest_type_get_type"
                 c:type="PopplerDestType">
      <doc xml:space="preserve"
           filename="glib/poppler-action.h"
           line="60">Destination types</doc>
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_DEST_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_DEST_UNKNOWN">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="62">unknown destination</doc>
      </member>
      <member name="xyz"
              value="1"
              c:identifier="POPPLER_DEST_XYZ"
              glib:nick="xyz"
              glib:name="POPPLER_DEST_XYZ">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="63">go to page with coordinates (left, top)
positioned at the upper-left corner of the window and the contents of
the page magnified by the factor zoom</doc>
      </member>
      <member name="fit"
              value="2"
              c:identifier="POPPLER_DEST_FIT"
              glib:nick="fit"
              glib:name="POPPLER_DEST_FIT">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="66">go to page with its contents magnified just
enough to fit the entire page within the window both horizontally and
vertically</doc>
      </member>
      <member name="fith"
              value="3"
              c:identifier="POPPLER_DEST_FITH"
              glib:nick="fith"
              glib:name="POPPLER_DEST_FITH">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="69">go to page with the vertical coordinate top
positioned at the top edge of the window and the contents of the page
magnified just enough to fit the entire width of the page within the window</doc>
      </member>
      <member name="fitv"
              value="4"
              c:identifier="POPPLER_DEST_FITV"
              glib:nick="fitv"
              glib:name="POPPLER_DEST_FITV">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="72">go to page with the horizontal coordinate
left positioned at the left edge of the window and the contents of the
page magnified just enough to fit the entire height of the page within the window</doc>
      </member>
      <member name="fitr"
              value="5"
              c:identifier="POPPLER_DEST_FITR"
              glib:nick="fitr"
              glib:name="POPPLER_DEST_FITR">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="75">go to page with its contents magnified just
enough to fit the rectangle specified by the coordinates left, bottom,
right, and top entirely within the window both horizontally and vertically</doc>
      </member>
      <member name="fitb"
              value="6"
              c:identifier="POPPLER_DEST_FITB"
              glib:nick="fitb"
              glib:name="POPPLER_DEST_FITB">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="78">go to page with its contents magnified just enough to fit
its bounding box entirely within the window both horizontally and vertically</doc>
      </member>
      <member name="fitbh"
              value="7"
              c:identifier="POPPLER_DEST_FITBH"
              glib:nick="fitbh"
              glib:name="POPPLER_DEST_FITBH">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="80">go to page with the vertical
coordinate top positioned at the top edge of the window and the
contents of the page magnified just enough to fit the entire width of its
bounding box within the window</doc>
      </member>
      <member name="fitbv"
              value="8"
              c:identifier="POPPLER_DEST_FITBV"
              glib:nick="fitbv"
              glib:name="POPPLER_DEST_FITBV">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="84">go to page with the horizontal
coordinate left positioned at the left edge of the window and the
contents of the page magnified just enough to fit the entire height of its
bounding box within the window</doc>
      </member>
      <member name="named"
              value="9"
              c:identifier="POPPLER_DEST_NAMED"
              glib:nick="named"
              glib:name="POPPLER_DEST_NAMED">
        <doc xml:space="preserve"
             filename="glib/poppler-action.h"
             line="88">got to page specified by a name. See poppler_document_find_dest()</doc>
      </member>
    </enumeration>
    <class name="Document"
           c:symbol-prefix="document"
           c:type="PopplerDocument"
           parent="GObject.Object"
           glib:type-name="PopplerDocument"
           glib:get-type="poppler_document_get_type">
      <constructor name="new_from_bytes"
                   c:identifier="poppler_document_new_from_bytes"
                   version="0.82"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="301">Creates a new #PopplerDocument from @bytes. The returned document
will hold a reference to @bytes.

On error,  %NULL is returned, with @error set. Possible errors include
those in the #POPPLER_ERROR and #G_FILE_ERROR domains.</doc>
        <source-position filename="glib/poppler-document.h" line="300"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="313">a newly created #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="303">a #GBytes</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="304">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_data"
                   c:identifier="poppler_document_new_from_data"
                   deprecated="1"
                   deprecated-version="0.82"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="235">Creates a new #PopplerDocument.  If %NULL is returned, then @error will be
set. Possible errors include those in the #POPPLER_ERROR and #G_FILE_ERROR
domains.

Note that @data is not copied nor is a new reference to it created.
It must remain valid and cannot be destroyed as long as the returned
document exists.</doc>
        <doc-deprecated xml:space="preserve">This requires directly managing @length and @data.
Use poppler_document_new_from_bytes() instead.</doc-deprecated>
        <source-position filename="glib/poppler-document.h" line="298"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="250">A newly created #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="237">the pdf data</doc>
            <array length="1" zero-terminated="0" c:type="char*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="238">the length of #data</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="239">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_fd"
                   c:identifier="poppler_document_new_from_fd"
                   version="21.12.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="451">Creates a new #PopplerDocument reading the PDF contents from the file
descriptor @fd. @fd must refer to a regular file, or STDIN, and be open
for reading.
Possible errors include those in the #POPPLER_ERROR and #G_FILE_ERROR
domains.
Note that this function takes ownership of @fd; you must not operate on it
again, nor close it.</doc>
        <source-position filename="glib/poppler-document.h" line="307"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="465">a new #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="453">a valid file descriptor</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="454">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_file"
                   c:identifier="poppler_document_new_from_file"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="177">Creates a new #PopplerDocument.  If %NULL is returned, then @error will be
set. Possible errors include those in the #POPPLER_ERROR and #G_FILE_ERROR
domains.</doc>
        <source-position filename="glib/poppler-document.h" line="296"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="187">A newly created #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="179">uri of the file to load</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="180">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_gfile"
                   c:identifier="poppler_document_new_from_gfile"
                   version="0.22"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="406">Creates a new #PopplerDocument reading the PDF contents from @file.
Possible errors include those in the #POPPLER_ERROR and #G_FILE_ERROR
domains.</doc>
        <source-position filename="glib/poppler-document.h" line="304"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="417">a new #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="408">a #GFile to load</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="409">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="410">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_stream"
                   c:identifier="poppler_document_new_from_stream"
                   version="0.22"
                   throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="347">Creates a new #PopplerDocument reading the PDF contents from @stream.
Note that the given #GInputStream must be seekable or %G_IO_ERROR_NOT_SUPPORTED
will be returned.
Possible errors include those in the #POPPLER_ERROR, #G_FILE_ERROR
and #G_IO_ERROR domains.</doc>
        <source-position filename="glib/poppler-document.h" line="302"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="361">a new #PopplerDocument, or %NULL</doc>
          <type name="Document" c:type="PopplerDocument*"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="349">a #GInputStream to read from</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="350">the stream length, or -1 if not known</doc>
            <type name="gint64" c:type="goffset"/>
          </parameter>
          <parameter name="password"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="351">password to unlock the file with, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="352">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="create_dests_tree"
              c:identifier="poppler_document_create_dests_tree"
              version="0.78">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1033">Creates a balanced binary tree of all named destinations in @document

The tree key is strings in the form returned by
poppler_named_dest_to_bytestring() which constains a destination name.
The tree value is the #PopplerDest which contains a named destination.
The return value must be freed with g_tree_destroy().</doc>
        <source-position filename="glib/poppler-document.h" line="408"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1044">the #GTree, or %NULL</doc>
          <type name="GLib.Tree" c:type="GTree*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1035">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_dest" c:identifier="poppler_document_find_dest">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="981">Creates a #PopplerDest for the named destination @link_name in @document.

Note that named destinations are bytestrings, not string. That means that
unless @link_name was returned by a poppler function (e.g. is
#PopplerDest.named_dest), it needs to be converted to string
using poppler_named_dest_from_bytestring() before being passed to this
function.

The returned value must be freed with poppler_dest_free().</doc>
        <source-position filename="glib/poppler-document.h" line="406"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="996">a new #PopplerDest destination, or %NULL if
  @link_name is not a destination.</doc>
          <type name="Dest" c:type="PopplerDest*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="983">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="link_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="984">a named destination</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attachments"
              c:identifier="poppler_document_get_attachments">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="836">Returns a #GList containing #PopplerAttachment&lt;!-- --&gt;s.  These attachments
are unowned, and must be unreffed, and the list must be freed with
g_list_free().</doc>
        <source-position filename="glib/poppler-document.h" line="402"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="844">a list of available attachments.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Attachment"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="838">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_author"
              c:identifier="poppler_document_get_author"
              glib:get-property="author"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1350">Returns the author of the document</doc>
        <source-position filename="glib/poppler-document.h" line="334"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1356">a new allocated string containing the author
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1352">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_creation_date"
              c:identifier="poppler_document_get_creation_date"
              glib:get-property="creation-date"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1579">Returns the date the document was created as seconds since the Epoch</doc>
        <source-position filename="glib/poppler-document.h" line="354"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1585">the date the document was created, or -1</doc>
          <type name="glong" c:type="time_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1581">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_creation_date_time"
              c:identifier="poppler_document_get_creation_date_time"
              version="20.09.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1622">Returns the date the document was created as a #GDateTime</doc>
        <source-position filename="glib/poppler-document.h" line="358"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1628">the date the document was created, or %NULL</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1624">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_creator"
              c:identifier="poppler_document_get_creator"
              glib:get-property="creator"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1485">Returns the creator of the document. If the document was converted
from another format, the creator is the name of the product
that created the original document from which it was converted.</doc>
        <source-position filename="glib/poppler-document.h" line="346"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1493">a new allocated string containing the creator
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1487">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_form_field"
              c:identifier="poppler_document_get_form_field">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3690">Returns the #PopplerFormField for the given @id. It must be freed with
g_object_unref()</doc>
        <source-position filename="glib/poppler-document.h" line="412"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3698">a new #PopplerFormField or %NULL if
not found</doc>
          <type name="FormField" c:type="PopplerFormField*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3692">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3693">an id of a #PopplerFormField</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="poppler_document_get_id"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="683">Returns the PDF file identifier represented as two byte string arrays of size 32.
@permanent_id is the permanent identifier that is built based on the file
contents at the time it was originally created, so that this identifer
never changes. @update_id is the update identifier that is built based on
the file contents at the time it was last updated.

Note that returned strings are not null-terminated, they have a fixed
size of 32 bytes.</doc>
        <source-position filename="glib/poppler-document.h" line="318"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="698">%TRUE if the @document contains an id, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="685">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="permanent_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="686">location to store an allocated string, use g_free() to free the returned string</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="update_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="687">location to store an allocated string, use g_free() to free the returned string</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_keywords"
              c:identifier="poppler_document_get_keywords"
              glib:get-property="keywords"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1440">Returns the keywords associated to the document</doc>
        <source-position filename="glib/poppler-document.h" line="342"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1446">a new allocated string containing keywords associated
              to @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1442">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="poppler_document_get_metadata"
              glib:get-property="metadata"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2171">Returns the XML metadata string of the document</doc>
        <source-position filename="glib/poppler-document.h" line="386"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2177">a new allocated string containing the XML
              metadata, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2173">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modification_date"
              c:identifier="poppler_document_get_modification_date"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1668">Returns the date the document was most recently modified as seconds since the Epoch</doc>
        <source-position filename="glib/poppler-document.h" line="362"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1674">the date the document was most recently modified, or -1</doc>
          <type name="glong" c:type="time_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1670">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modification_date_time"
              c:identifier="poppler_document_get_modification_date_time"
              version="20.09.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1711">Returns the date the document was most recently modified as a #GDateTime</doc>
        <source-position filename="glib/poppler-document.h" line="366"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1717">the date the document was modified, or %NULL</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1713">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_attachments"
              c:identifier="poppler_document_get_n_attachments"
              version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="799">Returns the number of attachments in a loaded document.
See also poppler_document_get_attachments()</doc>
        <source-position filename="glib/poppler-document.h" line="398"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="806">Number of attachments</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="801">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages" c:identifier="poppler_document_get_n_pages">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="733">Returns the number of pages in a loaded document.</doc>
        <source-position filename="glib/poppler-document.h" line="320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="739">Number of pages</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="735">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_signatures"
              c:identifier="poppler_document_get_n_signatures"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1775">Returns how many digital signatures @document contains.
PDF digital signatures ensure that the content hash not been altered since last edit and
that it was produced by someone the user can trust</doc>
        <source-position filename="glib/poppler-document.h" line="424"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1783">The number of signatures found in the document</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1777">A #PopplerDocument</doc>
            <type name="Document" c:type="const PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page" c:identifier="poppler_document_get_page">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="748">Returns the #PopplerPage indexed at @index.  This object is owned by the
caller.</doc>
        <source-position filename="glib/poppler-document.h" line="322"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="756">The #PopplerPage at @index</doc>
          <type name="Page" c:type="PopplerPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="750">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="751">a page index</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_page_by_label"
              c:identifier="poppler_document_get_page_by_label">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="772">Returns the #PopplerPage reference by @label.  This object is owned by the
caller.  @label is a human-readable string representation of the page number,
and can be document specific.  Typically, it is a value such as "iii" or "3".

By default, "1" refers to the first page.</doc>
        <source-position filename="glib/poppler-document.h" line="324"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="783">The #PopplerPage referenced by @label</doc>
          <type name="Page" c:type="PopplerPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="774">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="775">a page label</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_page_layout"
              c:identifier="poppler_document_get_page_layout"
              glib:get-property="page-layout"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1824">Returns the page layout that should be used when the document is opened</doc>
        <source-position filename="glib/poppler-document.h" line="372"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1830">a #PopplerPageLayout that should be used when the document is opened</doc>
          <type name="PageLayout" c:type="PopplerPageLayout"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1826">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page_mode"
              c:identifier="poppler_document_get_page_mode"
              glib:get-property="page-mode"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1848">Returns a #PopplerPageMode representing how the document should
be initially displayed when opened.</doc>
        <source-position filename="glib/poppler-document.h" line="374"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1855">a #PopplerPageMode that should be used when document is opened</doc>
          <type name="PageMode" c:type="PopplerPageMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1850">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pdf_conformance"
              c:identifier="poppler_document_get_pdf_conformance"
              version="0.70">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2154">Returns the conformance level of the @document as #PopplerPDFConformance.</doc>
        <source-position filename="glib/poppler-document.h" line="384"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2160">the document's subtype conformance level</doc>
          <type name="PDFConformance" c:type="PopplerPDFConformance"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2156">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pdf_part"
              c:identifier="poppler_document_get_pdf_part"
              version="0.70">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2136">Returns the part of the conforming standard that the @document adheres to
as a #PopplerPDFSubtype.</doc>
        <source-position filename="glib/poppler-document.h" line="382"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2143">the document's subtype part</doc>
          <type name="PDFPart" c:type="PopplerPDFPart"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2138">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pdf_subtype"
              c:identifier="poppler_document_get_pdf_subtype"
              version="0.70">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2119">Returns the subtype of @document as a #PopplerPDFSubtype.</doc>
        <source-position filename="glib/poppler-document.h" line="380"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2125">the document's subtype</doc>
          <type name="PDFSubtype" c:type="PopplerPDFSubtype"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2121">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pdf_subtype_string"
              c:identifier="poppler_document_get_pdf_subtype_string"
              version="0.70">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2076">Returns the PDF subtype version of @document as a string.</doc>
        <source-position filename="glib/poppler-document.h" line="378"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2082">a newly allocated string containing
the PDF subtype version of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2078">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pdf_version"
              c:identifier="poppler_document_get_pdf_version"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1282">Updates values referenced by @major_version &amp; @minor_version with the
major and minor PDF versions of @document.</doc>
        <source-position filename="glib/poppler-document.h" line="328"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1284">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="major_version"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1285">return location for the PDF major version number</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="minor_version"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1286">return location for the PDF minor version number</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pdf_version_string"
              c:identifier="poppler_document_get_pdf_version_string"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1260">Returns the PDF version of @document as a string (e.g. PDF-1.6)</doc>
        <source-position filename="glib/poppler-document.h" line="326"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1266">a new allocated string containing the PDF version
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1262">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_permissions"
              c:identifier="poppler_document_get_permissions"
              glib:get-property="permissions"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2032">Returns the flags specifying which operations are permitted when the document is opened.</doc>
        <source-position filename="glib/poppler-document.h" line="376"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2038">a set of flags from  #PopplerPermissions enumeration</doc>
          <type name="Permissions" c:type="PopplerPermissions"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2034">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_duplex"
              c:identifier="poppler_document_get_print_duplex"
              glib:get-property="print-duplex"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1910">Returns the duplex mode value suggested for printing by author of the document.
Value POPPLER_PRINT_DUPLEX_NONE means that the document does not specify this
preference.</doc>
        <source-position filename="glib/poppler-document.h" line="390"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1918">a #PopplerPrintDuplex that should be used when document is printed</doc>
          <type name="PrintDuplex" c:type="PopplerPrintDuplex"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1912">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_n_copies"
              c:identifier="poppler_document_get_print_n_copies"
              glib:get-property="print-n-copies"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1955">Returns the suggested number of copies to be printed.
This preference should be applied only if returned value
is greater than 1 since value 1 usually means that
the document does not specify it.</doc>
        <source-position filename="glib/poppler-document.h" line="392"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1964">Number of copies</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1957">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_print_page_ranges"
              c:identifier="poppler_document_get_print_page_ranges"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1987">Returns the suggested page ranges to print in the form of array
of #PopplerPageRange&lt;!-- --&gt;s and number of ranges.
%NULL pointer means that the document does not specify page ranges
for printing.</doc>
        <source-position filename="glib/poppler-document.h" line="394"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1997">an array
         of #PopplerPageRange&lt;!-- --&gt;s or %NULL. Free the array when
         it is no longer needed.</doc>
          <array length="0" zero-terminated="0" c:type="PopplerPageRange*">
            <type name="PageRange" c:type="PopplerPageRange"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1989">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="n_ranges"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1990">return location for number of ranges</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_print_scaling"
              c:identifier="poppler_document_get_print_scaling"
              glib:get-property="print-scaling"
              version="0.73">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1873">Returns the print scaling value suggested by author of the document.</doc>
        <source-position filename="glib/poppler-document.h" line="388"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1879">a #PopplerPrintScaling that should be used when document is printed</doc>
          <type name="PrintScaling" c:type="PopplerPrintScaling"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1875">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_producer"
              c:identifier="poppler_document_get_producer"
              glib:get-property="producer"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1532">Returns the producer of the document. If the document was converted
from another format, the producer is the name of the product
that converted it to PDF</doc>
        <source-position filename="glib/poppler-document.h" line="350"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1540">a new allocated string containing the producer
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1534">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signature_fields"
              c:identifier="poppler_document_get_signature_fields"
              version="22.02.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1794">Returns a #GList containing all signature #PopplerFormField&lt;!-- --&gt;s in the document.</doc>
        <source-position filename="glib/poppler-document.h" line="422"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1800">a list of all signature form fields.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FormField"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1796">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subject"
              c:identifier="poppler_document_get_subject"
              glib:get-property="subject"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1395">Returns the subject of the document</doc>
        <source-position filename="glib/poppler-document.h" line="338"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1401">a new allocated string containing the subject
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1397">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="poppler_document_get_title"
              glib:get-property="title"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1305">Returns the document's title</doc>
        <source-position filename="glib/poppler-document.h" line="330"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1311">a new allocated string containing the title
              of @document, or %NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1307">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_attachments"
              c:identifier="poppler_document_has_attachments">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="821">Returns %TRUE of @document has any attachments.</doc>
        <source-position filename="glib/poppler-document.h" line="400"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="827">%TRUE, if @document has attachments.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="823">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_javascript"
              c:identifier="poppler_document_has_javascript"
              version="0.90">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2237">Returns whether @document has any javascript in it.</doc>
        <source-position filename="glib/poppler-document.h" line="418"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2239">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_linearized"
              c:identifier="poppler_document_is_linearized"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1757">Returns whether @document is linearized or not. Linearization of PDF
enables efficient incremental access of the PDF file in a network environment.</doc>
        <source-position filename="glib/poppler-document.h" line="370"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="1764">%TRUE if @document is linearized, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1759">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_form"
              c:identifier="poppler_document_reset_form"
              version="0.90">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2201">Resets the form fields specified by fields if exclude_fields is FALSE.
Resets all others if exclude_fields is TRUE.
All form fields are reset regardless of the exclude_fields flag
if fields is empty.</doc>
        <source-position filename="glib/poppler-document.h" line="415"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2203">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="fields"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2204">list of fields to reset</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
          <parameter name="exclude_fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2205">whether to reset all fields except those in @fields</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="poppler_document_save" throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="550">Saves @document. Any change made in the document such as
form fields filled, annotations added or modified
will be saved.
If @error is set, %FALSE will be returned. Possible errors
include those in the #G_FILE_ERROR domain.</doc>
        <source-position filename="glib/poppler-document.h" line="310"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="562">%TRUE, if the document was successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="552">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="553">uri of file to save</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_a_copy"
              c:identifier="poppler_document_save_a_copy"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="584">Saves a copy of the original @document.
Any change made in the document such as
form fields filled by the user will not be saved.
If @error is set, %FALSE will be returned. Possible errors
include those in the #G_FILE_ERROR domain.</doc>
        <source-position filename="glib/poppler-document.h" line="312"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="596">%TRUE, if the document was successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="586">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="587">uri of file to save</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_fd"
              c:identifier="poppler_document_save_to_fd"
              version="21.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="620">Saves @document. Any change made in the document such as
form fields filled, annotations added or modified
will be saved if @include_changes is %TRUE, or discarded i
@include_changes is %FALSE.

Note that this function takes ownership of @fd; you must not operate on it
again, nor close it.

If @error is set, %FALSE will be returned. Possible errors
include those in the #G_FILE_ERROR domain.</doc>
        <source-position filename="glib/poppler-document.h" line="315"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="638">%TRUE, if the document was successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="622">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="623">a valid file descriptor open for writing</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="include_changes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="624">whether to include user changes (e.g. form fills)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_author"
              c:identifier="poppler_document_set_author"
              glib:set-property="author"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1369">Sets the document's author. If @author is %NULL, Author
entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="336"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1371">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="author" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1372">A new author</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_creation_date"
              c:identifier="poppler_document_set_creation_date"
              glib:set-property="creation-date"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1604">Sets the document's creation date. If @creation_date is -1, CreationDate
entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="356"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1606">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="creation_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1607">A new creation date</doc>
            <type name="glong" c:type="time_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_creation_date_time"
              c:identifier="poppler_document_set_creation_date_time"
              version="20.09.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1645">Sets the document's creation date. If @creation_datetime is %NULL,
CreationDate entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="360"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1647">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="creation_datetime"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1648">A new creation #GDateTime</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_creator"
              c:identifier="poppler_document_set_creator"
              glib:set-property="creator"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1506">Sets the document's creator. If @creator is %NULL, Creator
entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="348"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1508">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="creator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1509">A new creator</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keywords"
              c:identifier="poppler_document_set_keywords"
              glib:set-property="keywords"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1459">Sets the document's keywords. If @keywords is %NULL,
Keywords entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="344"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1461">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="keywords" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1462">New keywords</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_date"
              c:identifier="poppler_document_set_modification_date"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1693">Sets the document's modification date. If @modification_date is -1, ModDate
entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="364"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1695">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="modification_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1696">A new modification date</doc>
            <type name="glong" c:type="time_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_date_time"
              c:identifier="poppler_document_set_modification_date_time"
              version="20.09.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1734">Sets the document's modification date. If @modification_datetime is %NULL,
ModDate entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="368"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1736">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="modification_datetime"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1737">A new modification #GDateTime</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_producer"
              c:identifier="poppler_document_set_producer"
              glib:set-property="producer"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1553">Sets the document's producer. If @producer is %NULL,
Producer entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="352"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1555">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="producer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1556">A new producer</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subject"
              c:identifier="poppler_document_set_subject"
              glib:set-property="subject"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1414">Sets the document's subject. If @subject is %NULL, Subject
entry is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="340"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1416">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="subject" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1417">A new subject</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="poppler_document_set_title"
              glib:set-property="title"
              version="0.46">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="1324">Sets the document's title. If @title is %NULL, Title entry
is removed from the document's Info dictionary.</doc>
        <source-position filename="glib/poppler-document.h" line="332"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1326">A #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="1327">A new title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="author"
                writable="1"
                transfer-ownership="none"
                setter="set_author"
                getter="get_author">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2420">The author of the document</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="creation-date"
                deprecated="1"
                deprecated-version="20.09.0"
                writable="1"
                transfer-ownership="none"
                setter="set_creation_date"
                getter="get_creation_date">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2455">The date the document was created as seconds since the Epoch, or -1</doc>
        <doc-deprecated xml:space="preserve">This will overflow in 2038. Use creation-datetime
instead.</doc-deprecated>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="creation-datetime"
                version="20.09.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2466">The #GDateTime the document was created.</doc>
        <type name="GLib.DateTime"/>
      </property>
      <property name="creator"
                writable="1"
                transfer-ownership="none"
                setter="set_creator"
                getter="get_creator">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2441">The creator of the document. See also poppler_document_get_creator()</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="format" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2399">The PDF version as string. See also poppler_document_get_pdf_version_string()</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="format-major" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2406">The PDF major version number. See also poppler_document_get_pdf_version()</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="format-minor" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2413">The PDF minor version number. See also poppler_document_get_pdf_version()</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="keywords"
                writable="1"
                transfer-ownership="none"
                setter="set_keywords"
                getter="get_keywords">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2434">The keywords associated to the document</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="linearized" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2493">Whether document is linearized. See also poppler_document_is_linearized()</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="metadata"
                transfer-ownership="none"
                getter="get_metadata">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2584">Document metadata in XML format, or %NULL</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="mod-date"
                deprecated="1"
                deprecated-version="20.09.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2474">The date the document was most recently modified as seconds since the Epoch, or -1</doc>
        <doc-deprecated xml:space="preserve">This will overflow in 2038. Use mod-datetime instead.</doc-deprecated>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="mod-datetime"
                version="20.09.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2484">The #GDateTime the document was most recently modified.</doc>
        <type name="GLib.DateTime"/>
      </property>
      <property name="page-layout"
                transfer-ownership="none"
                getter="get_page_layout">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2500">The page layout that should be used when the document is opened</doc>
        <type name="PageLayout"/>
      </property>
      <property name="page-mode"
                transfer-ownership="none"
                getter="get_page_mode">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2507">The mode that should be used when the document is opened</doc>
        <type name="PageMode"/>
      </property>
      <property name="permissions"
                transfer-ownership="none"
                getter="get_permissions">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2547">Flags specifying which operations are permitted when the document is opened</doc>
        <type name="Permissions"/>
      </property>
      <property name="print-duplex"
                version="0.80"
                transfer-ownership="none"
                getter="get_print_duplex">
        <type name="PrintDuplex"/>
      </property>
      <property name="print-n-copies"
                version="0.80"
                transfer-ownership="none"
                getter="get_print_n_copies">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2537">Suggested number of copies to be printed for this document</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="print-scaling"
                version="0.73"
                transfer-ownership="none"
                getter="get_print_scaling">
        <type name="PrintScaling"/>
      </property>
      <property name="producer"
                writable="1"
                transfer-ownership="none"
                setter="set_producer"
                getter="get_producer">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2448">The producer of the document. See also poppler_document_get_producer()</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subject"
                writable="1"
                transfer-ownership="none"
                setter="set_subject"
                getter="get_subject">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2427">The subject of the document</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtype" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2554">Document PDF subtype type</doc>
        <type name="PDFSubtype"/>
      </property>
      <property name="subtype-conformance" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2576">Document PDF subtype conformance</doc>
        <type name="PDFConformance"/>
      </property>
      <property name="subtype-part" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2568">Document PDF subtype part</doc>
        <type name="PDFPart"/>
      </property>
      <property name="subtype-string" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2561">Document PDF subtype. See also poppler_document_get_pdf_subtype_string()</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2392">The document's title or %NULL</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="viewer-preferences" transfer-ownership="none">
        <type name="ViewerPreferences"/>
      </property>
    </class>
    <enumeration name="Error"
                 glib:type-name="PopplerError"
                 glib:get-type="poppler_error_get_type"
                 c:type="PopplerError"
                 glib:error-domain="poppler-quark">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="34">Error codes returned by #PopplerDocument</doc>
      <member name="invalid"
              value="0"
              c:identifier="POPPLER_ERROR_INVALID"
              glib:nick="invalid"
              glib:name="POPPLER_ERROR_INVALID">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="36">Generic error when a document operation fails</doc>
      </member>
      <member name="encrypted"
              value="1"
              c:identifier="POPPLER_ERROR_ENCRYPTED"
              glib:nick="encrypted"
              glib:name="POPPLER_ERROR_ENCRYPTED">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="37">Document is encrypted</doc>
      </member>
      <member name="open_file"
              value="2"
              c:identifier="POPPLER_ERROR_OPEN_FILE"
              glib:nick="open-file"
              glib:name="POPPLER_ERROR_OPEN_FILE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="38">File could not be opened for writing when saving document</doc>
      </member>
      <member name="bad_catalog"
              value="3"
              c:identifier="POPPLER_ERROR_BAD_CATALOG"
              glib:nick="bad-catalog"
              glib:name="POPPLER_ERROR_BAD_CATALOG">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="39">Failed to read the document catalog</doc>
      </member>
      <member name="damaged"
              value="4"
              c:identifier="POPPLER_ERROR_DAMAGED"
              glib:nick="damaged"
              glib:name="POPPLER_ERROR_DAMAGED">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="40">Document is damaged</doc>
      </member>
      <function name="quark" c:identifier="poppler_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <function-macro name="FONT_INFO"
                    c:identifier="POPPLER_FONT_INFO"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="448"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORM_FIELD"
                    c:identifier="POPPLER_FORM_FIELD"
                    introspectable="0">
      <source-position filename="glib/poppler-form-field.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="FindFlags"
              version="0.22"
              glib:type-name="PopplerFindFlags"
              glib:get-type="poppler_find_flags_get_type"
              c:type="PopplerFindFlags">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="152">Flags using while searching text in a page</doc>
      <member name="default"
              value="0"
              c:identifier="POPPLER_FIND_DEFAULT"
              glib:nick="default"
              glib:name="POPPLER_FIND_DEFAULT">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="154">use default search settings</doc>
      </member>
      <member name="case_sensitive"
              value="1"
              c:identifier="POPPLER_FIND_CASE_SENSITIVE"
              glib:nick="case-sensitive"
              glib:name="POPPLER_FIND_CASE_SENSITIVE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="155">do case sensitive search</doc>
      </member>
      <member name="backwards"
              value="2"
              c:identifier="POPPLER_FIND_BACKWARDS"
              glib:nick="backwards"
              glib:name="POPPLER_FIND_BACKWARDS">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="156">search backwards</doc>
      </member>
      <member name="whole_words_only"
              value="4"
              c:identifier="POPPLER_FIND_WHOLE_WORDS_ONLY"
              glib:nick="whole-words-only"
              glib:name="POPPLER_FIND_WHOLE_WORDS_ONLY">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="157">search only whole words</doc>
      </member>
      <member name="ignore_diacritics"
              value="8"
              c:identifier="POPPLER_FIND_IGNORE_DIACRITICS"
              glib:nick="ignore-diacritics"
              glib:name="POPPLER_FIND_IGNORE_DIACRITICS">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="158">do diacritics insensitive search,
i.e. ignore accents, umlauts, diaeresis,etc. while matching. This
option will be ignored if the search term is not pure ascii. Since 0.73.</doc>
      </member>
      <member name="multiline"
              value="16"
              c:identifier="POPPLER_FIND_MULTILINE"
              glib:nick="multiline"
              glib:name="POPPLER_FIND_MULTILINE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="161">allows to match on text spanning from
end of a line to the next line. (Currently it won't match on text spanning
more than two lines.) Automatically ignores hyphen at end of line, and
allows whitespace in search term to match on newline char. Since: 21.05.0.</doc>
      </member>
    </bitfield>
    <class name="FontInfo"
           c:symbol-prefix="font_info"
           c:type="PopplerFontInfo"
           parent="GObject.Object"
           glib:type-name="PopplerFontInfo"
           glib:get-type="poppler_font_info_get_type">
      <constructor name="new" c:identifier="poppler_font_info_new">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3113">Creates a new #PopplerFontInfo object</doc>
        <source-position filename="glib/poppler-document.h" line="453"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3119">a new #PopplerFontInfo instance</doc>
          <type name="FontInfo" c:type="PopplerFontInfo*"/>
        </return-value>
        <parameters>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3115">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="poppler_font_info_free">
        <source-position filename="glib/poppler-document.h" line="457"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="font_info" transfer-ownership="none">
            <type name="FontInfo" c:type="PopplerFontInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="scan" c:identifier="poppler_font_info_scan">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3134">Scans the document associated with @font_info for fonts. At most
@n_pages will be scanned starting from the current iterator. @iter will
point to the first font scanned.

Here is a simple example of code to scan fonts in a document

&lt;informalexample&gt;&lt;programlisting&gt;
font_info = poppler_font_info_new (document);
while (poppler_font_info_scan (font_info, 20, &amp;fonts_iter)) {
        if (!fonts_iter)
                continue; /&lt;!-- --&gt;* No fonts found in these 20 pages *&lt;!-- --&gt;/
        do {
                /&lt;!-- --&gt;* Do something with font iter *&lt;!-- --&gt;/
                g_print ("Font Name: %s\n", poppler_fonts_iter_get_name (fonts_iter));
        } while (poppler_fonts_iter_next (fonts_iter));
        poppler_fonts_iter_free (fonts_iter);
}
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="glib/poppler-document.h" line="455"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3159">%TRUE, if there are more fonts left to scan</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="font_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3136">a #PopplerFontInfo</doc>
            <type name="FontInfo" c:type="PopplerFontInfo*"/>
          </instance-parameter>
          <parameter name="n_pages" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3137">number of pages to scan</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="iter"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3138">return location for a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter**"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="FontType"
                 glib:type-name="PopplerFontType"
                 glib:get-type="poppler_font_type_get_type"
                 c:type="PopplerFontType">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="83">Font types</doc>
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_FONT_TYPE_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_FONT_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="85">unknown font type</doc>
      </member>
      <member name="type1"
              value="1"
              c:identifier="POPPLER_FONT_TYPE_TYPE1"
              glib:nick="type1"
              glib:name="POPPLER_FONT_TYPE_TYPE1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="86">Type 1 font type</doc>
      </member>
      <member name="type1c"
              value="2"
              c:identifier="POPPLER_FONT_TYPE_TYPE1C"
              glib:nick="type1c"
              glib:name="POPPLER_FONT_TYPE_TYPE1C">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="87">Type 1 font type embedded in Compact Font Format (CFF) font program</doc>
      </member>
      <member name="type1cot"
              value="3"
              c:identifier="POPPLER_FONT_TYPE_TYPE1COT"
              glib:nick="type1cot"
              glib:name="POPPLER_FONT_TYPE_TYPE1COT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="88">Type 1 font type embedded in OpenType font program</doc>
      </member>
      <member name="type3"
              value="4"
              c:identifier="POPPLER_FONT_TYPE_TYPE3"
              glib:nick="type3"
              glib:name="POPPLER_FONT_TYPE_TYPE3">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="89">A font type that is defined with PDF graphics operators</doc>
      </member>
      <member name="truetype"
              value="5"
              c:identifier="POPPLER_FONT_TYPE_TRUETYPE"
              glib:nick="truetype"
              glib:name="POPPLER_FONT_TYPE_TRUETYPE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="90">TrueType font type</doc>
      </member>
      <member name="truetypeot"
              value="6"
              c:identifier="POPPLER_FONT_TYPE_TRUETYPEOT"
              glib:nick="truetypeot"
              glib:name="POPPLER_FONT_TYPE_TRUETYPEOT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="91">TrueType font type embedded in OpenType font program</doc>
      </member>
      <member name="cid_type0"
              value="7"
              c:identifier="POPPLER_FONT_TYPE_CID_TYPE0"
              glib:nick="cid-type0"
              glib:name="POPPLER_FONT_TYPE_CID_TYPE0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="92">CIDFont type based on Type 1 font technology</doc>
      </member>
      <member name="cid_type0c"
              value="8"
              c:identifier="POPPLER_FONT_TYPE_CID_TYPE0C"
              glib:nick="cid-type0c"
              glib:name="POPPLER_FONT_TYPE_CID_TYPE0C">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="93">CIDFont type based on Type 1 font technology embedded in CFF font program</doc>
      </member>
      <member name="cid_type0cot"
              value="9"
              c:identifier="POPPLER_FONT_TYPE_CID_TYPE0COT"
              glib:nick="cid-type0cot"
              glib:name="POPPLER_FONT_TYPE_CID_TYPE0COT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="94">CIDFont type based on Type 1 font technology embedded in OpenType font program</doc>
      </member>
      <member name="cid_type2"
              value="10"
              c:identifier="POPPLER_FONT_TYPE_CID_TYPE2"
              glib:nick="cid-type2"
              glib:name="POPPLER_FONT_TYPE_CID_TYPE2">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="95">CIDFont type based on TrueType font technology</doc>
      </member>
      <member name="cid_type2ot"
              value="11"
              c:identifier="POPPLER_FONT_TYPE_CID_TYPE2OT"
              glib:nick="cid-type2ot"
              glib:name="POPPLER_FONT_TYPE_CID_TYPE2OT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="96">CIDFont type based on TrueType font technology embedded in OpenType font program</doc>
      </member>
    </enumeration>
    <record name="FontsIter"
            c:type="PopplerFontsIter"
            glib:type-name="PopplerFontsIter"
            glib:get-type="poppler_fonts_iter_get_type"
            c:symbol-prefix="fonts_iter">
      <source-position filename="glib/poppler.h" line="182"/>
      <method name="copy" c:identifier="poppler_fonts_iter_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3024">Creates a copy of @iter</doc>
        <source-position filename="glib/poppler-document.h" line="463"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3030">a new allocated copy of @iter</doc>
          <type name="FontsIter" c:type="PopplerFontsIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3026">a #PopplerFontsIter to copy</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_fonts_iter_free">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3049">Frees the given #PopplerFontsIter</doc>
        <source-position filename="glib/poppler-document.h" line="465"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3051">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_encoding"
              c:identifier="poppler_fonts_iter_get_encoding"
              version="0.20">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2946">Returns the encoding of the font associated with @iter</doc>
        <source-position filename="glib/poppler-document.h" line="477"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2952">the font encoding</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2948">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_file_name"
              c:identifier="poppler_fonts_iter_get_file_name">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2904">The filename of the font associated with @iter or %NULL if
the font is embedded</doc>
        <source-position filename="glib/poppler-document.h" line="473"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2911">the filename of the font or %NULL if font is embedded</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2906">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_type"
              c:identifier="poppler_fonts_iter_get_font_type">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2927">Returns the type of the font associated with @iter</doc>
        <source-position filename="glib/poppler-document.h" line="475"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2933">the font type</doc>
          <type name="FontType" c:type="PopplerFontType"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2929">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_full_name"
              c:identifier="poppler_fonts_iter_get_full_name">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2828">Returns the full name of the font associated with @iter</doc>
        <source-position filename="glib/poppler-document.h" line="469"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2834">the font full name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2830">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="poppler_fonts_iter_get_name">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2850">Returns the name of the font associated with @iter</doc>
        <source-position filename="glib/poppler-document.h" line="467"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2856">the font name</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2852">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_substitute_name"
              c:identifier="poppler_fonts_iter_get_substitute_name"
              version="0.20">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2879">The name of the substitute font of the font associated with @iter or %NULL if
the font is embedded</doc>
        <source-position filename="glib/poppler-document.h" line="471"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2886">the name of the substitute font or %NULL if font is embedded</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2881">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_embedded" c:identifier="poppler_fonts_iter_is_embedded">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2970">Returns whether the font associated with @iter is embedded in the document</doc>
        <source-position filename="glib/poppler-document.h" line="479"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2976">%TRUE if font is embedded, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2972">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_subset" c:identifier="poppler_fonts_iter_is_subset">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2987">Returns whether the font associated with @iter is a subset of another font</doc>
        <source-position filename="glib/poppler-document.h" line="481"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2993">%TRUE if font is a subset, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2989">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next" c:identifier="poppler_fonts_iter_next">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3004">Sets @iter to point to the next font</doc>
        <source-position filename="glib/poppler-document.h" line="483"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3010">%TRUE, if @iter was set to the next font</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3006">a #PopplerFontsIter</doc>
            <type name="FontsIter" c:type="PopplerFontsIter*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="FormButtonType"
                 glib:type-name="PopplerFormButtonType"
                 glib:get-type="poppler_form_button_type_get_type"
                 c:type="PopplerFormButtonType">
      <member name="push"
              value="0"
              c:identifier="POPPLER_FORM_BUTTON_PUSH"
              glib:nick="push"
              glib:name="POPPLER_FORM_BUTTON_PUSH">
      </member>
      <member name="check"
              value="1"
              c:identifier="POPPLER_FORM_BUTTON_CHECK"
              glib:nick="check"
              glib:name="POPPLER_FORM_BUTTON_CHECK">
      </member>
      <member name="radio"
              value="2"
              c:identifier="POPPLER_FORM_BUTTON_RADIO"
              glib:nick="radio"
              glib:name="POPPLER_FORM_BUTTON_RADIO">
      </member>
    </enumeration>
    <enumeration name="FormChoiceType"
                 glib:type-name="PopplerFormChoiceType"
                 glib:get-type="poppler_form_choice_type_get_type"
                 c:type="PopplerFormChoiceType">
      <member name="combo"
              value="0"
              c:identifier="POPPLER_FORM_CHOICE_COMBO"
              glib:nick="combo"
              glib:name="POPPLER_FORM_CHOICE_COMBO">
      </member>
      <member name="list"
              value="1"
              c:identifier="POPPLER_FORM_CHOICE_LIST"
              glib:nick="list"
              glib:name="POPPLER_FORM_CHOICE_LIST">
      </member>
    </enumeration>
    <class name="FormField"
           c:symbol-prefix="form_field"
           c:type="PopplerFormField"
           parent="GObject.Object"
           glib:type-name="PopplerFormField"
           glib:get-type="poppler_form_field_get_type">
      <method name="button_get_button_type"
              c:identifier="poppler_form_field_button_get_button_type">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="247">Gets the button type of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="253">#PopplerFormButtonType of @field</doc>
          <type name="FormButtonType" c:type="PopplerFormButtonType"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="249">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="button_get_state"
              c:identifier="poppler_form_field_button_get_state">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="271">Queries a #PopplerFormField and returns its current state. Returns %TRUE if
@field is pressed in and %FALSE if it is raised.</doc>
        <source-position filename="glib/poppler-form-field.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="278">current state of @field</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="273">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="button_set_state"
              c:identifier="poppler_form_field_button_set_state">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="287">Sets the status of @field. Set to %TRUE if you want the #PopplerFormField
to be 'pressed in', and %FALSE to raise it.</doc>
        <source-position filename="glib/poppler-form-field.h" line="181"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="289">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="290">%TRUE or %FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_can_select_multiple"
              c:identifier="poppler_form_field_choice_can_select_multiple">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="863">Checks whether @field allows multiple choices to be selected</doc>
        <source-position filename="glib/poppler-form-field.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="869">%TRUE if @field allows multiple choices to be selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="865">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_commit_on_change"
              c:identifier="poppler_form_field_choice_commit_on_change">
        <source-position filename="glib/poppler-form-field.h" line="211"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_do_spell_check"
              c:identifier="poppler_form_field_choice_do_spell_check">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="878">Checks whether spell checking should be done for the contents of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="209"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="884">%TRUE if spell checking should be done for @field</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="880">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_get_choice_type"
              c:identifier="poppler_form_field_choice_get_choice_type">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="829">Gets the choice type of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="835">#PopplerFormChoiceType of @field</doc>
          <type name="FormChoiceType" c:type="PopplerFormChoiceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="831">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_get_item"
              c:identifier="poppler_form_field_choice_get_item">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="915">Returns the contents of the item on @field at the given index</doc>
        <source-position filename="glib/poppler-form-field.h" line="215"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="922">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="917">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="918">the index of the item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_get_n_items"
              c:identifier="poppler_form_field_choice_get_n_items">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="900">Returns the number of items on @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="213"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="906">the number of items on @field</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="902">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_get_text"
              c:identifier="poppler_form_field_choice_get_text">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="1017">Retrieves the contents of @field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="227"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="1023">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="1019">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_is_editable"
              c:identifier="poppler_form_field_choice_is_editable">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="848">Checks whether @field is editable</doc>
        <source-position filename="glib/poppler-form-field.h" line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="854">%TRUE if @field is editable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="850">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="choice_is_item_selected"
              c:identifier="poppler_form_field_choice_is_item_selected">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="935">Checks whether the item at the given index on @field is currently selected</doc>
        <source-position filename="glib/poppler-form-field.h" line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="942">%TRUE if item at @index is currently selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="937">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="938">the index of the item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_select_item"
              c:identifier="poppler_form_field_choice_select_item">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="952">Selects the item at the given index on @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="219"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="954">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="955">the index of the item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_set_text"
              c:identifier="poppler_form_field_choice_set_text">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="995">Sets the text in @field to the given value, replacing the current contents</doc>
        <source-position filename="glib/poppler-form-field.h" line="225"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="997">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="998">the new text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_toggle_item"
              c:identifier="poppler_form_field_choice_toggle_item">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="980">Changes the state of the item at the given index</doc>
        <source-position filename="glib/poppler-form-field.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="982">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="983">the index of the item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="choice_unselect_all"
              c:identifier="poppler_form_field_choice_unselect_all">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="967">Unselects all the items on @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="969">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action"
              c:identifier="poppler_form_field_get_action"
              version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="161">Retrieves the action (#PopplerAction) that shall be
performed when @field is activated, or %NULL</doc>
        <source-position filename="glib/poppler-form-field.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="168">the action to perform. The returned
              object is owned by @field and should not be freed</doc>
          <type name="Action" c:type="PopplerAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="163">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_additional_action"
              c:identifier="poppler_form_field_get_additional_action"
              version="0.72">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="191">Retrieves the action (#PopplerAction) that shall be performed when
an additional action is triggered on @field, or %NULL.</doc>
        <source-position filename="glib/poppler-form-field.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="199">the action to perform. The returned
              object is owned by @field and should not be freed.</doc>
          <type name="Action" c:type="PopplerAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="193">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="194">the type of additional action</doc>
            <type name="AdditionalActionType"
                  c:type="PopplerAdditionalActionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_alternate_ui_name"
              c:identifier="poppler_form_field_get_alternate_ui_name"
              version="0.88">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="367">Gets the alternate ui name of @field. This name is also commonly
used by pdf producers/readers to show it as a tooltip when @field area
is hovered by a pointing device (eg. mouse).</doc>
        <source-position filename="glib/poppler-form-field.h" line="173"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="375">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="369">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_field_type"
              c:identifier="poppler_form_field_get_field_type">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="85">Gets the type of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="91">#PopplerFormFieldType of @field</doc>
          <type name="FormFieldType" c:type="PopplerFormFieldType"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="87">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_size"
              c:identifier="poppler_form_field_get_font_size">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="128">Gets the font size of @field

WARNING: This function always returns 0. Contact the poppler
mailing list if you're interested in implementing it properly</doc>
        <source-position filename="glib/poppler-form-field.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="137">the font size of @field</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="130">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="poppler_form_field_get_id">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="113">Gets the id of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="119">the id of @field</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="115">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mapping_name"
              c:identifier="poppler_form_field_get_mapping_name"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="323">Gets the mapping name of @field that is used when
exporting interactive form field data from the document</doc>
        <source-position filename="glib/poppler-form-field.h" line="165"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="330">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="325">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="poppler_form_field_get_name"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="345">Gets the fully qualified name of @field. It's constructed by concatenating
the partial field names of the field and all of its ancestors.</doc>
        <source-position filename="glib/poppler-form-field.h" line="167"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="352">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="347">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_partial_name"
              c:identifier="poppler_form_field_get_partial_name"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="302">Gets the partial name of @field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="163"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="308">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="304">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_read_only"
              c:identifier="poppler_form_field_is_read_only">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="146">Checks whether @field is read only</doc>
        <source-position filename="glib/poppler-form-field.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="152">%TRUE if @field is read only</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="148">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="signature_validate_async"
              c:identifier="poppler_form_field_signature_validate_async"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="528">Asynchronously validates the cryptographic signature contained in @signature_field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="231"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="530">a #PopplerFormField that represents a signature annotation</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="531">#PopplerSignatureValidationFlags flags influencing process of validation of the field signature</doc>
            <type name="SignatureValidationFlags"
                  c:type="PopplerSignatureValidationFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="532">optional #GCancellable object</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="533">a #GAsyncReadyCallback to call when the signature is validated</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="534">the data to pass to callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="signature_validate_finish"
              c:identifier="poppler_form_field_signature_validate_finish"
              version="21.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="553">Finishes validation of the cryptographic signature contained in @signature_field.
See poppler_form_field_signature_validate_async().</doc>
        <source-position filename="glib/poppler-form-field.h" line="233"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="562">a #PopplerSignatureInfo structure containing signature metadata and validation status
                               Free the returned structure with poppler_signature_info_free().</doc>
          <type name="SignatureInfo" c:type="PopplerSignatureInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="555">a #PopplerFormField that represents a signature annotation</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="556">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="signature_validate_sync"
              c:identifier="poppler_form_field_signature_validate_sync"
              version="21.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="495">Synchronously validates the cryptographic signature contained in @signature_field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="229"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="504">a #PopplerSignatureInfo structure containing signature metadata and validation status
                               Free the returned structure with poppler_signature_info_free().</doc>
          <type name="SignatureInfo" c:type="PopplerSignatureInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="497">a #PopplerFormField that represents a signature annotation</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="498">#PopplerSignatureValidationFlags flags influencing process of validation of the field signature</doc>
            <type name="SignatureValidationFlags"
                  c:type="PopplerSignatureValidationFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="499">optional #GCancellable object</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="text_do_scroll"
              c:identifier="poppler_form_field_text_do_scroll">
        <source-position filename="glib/poppler-form-field.h" line="195"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_do_spell_check"
              c:identifier="poppler_form_field_text_do_spell_check">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="776">Checks whether spell checking should be done for the contents of @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="782">%TRUE if spell checking should be done for @field</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="778">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_get_max_len"
              c:identifier="poppler_form_field_text_get_max_len">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="761">Retrieves the maximum allowed length of the text in @field</doc>
        <source-position filename="glib/poppler-form-field.h" line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="767">the maximum allowed number of characters in @field, or -1 if there is no maximum.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="763">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_get_text"
              c:identifier="poppler_form_field_text_get_text">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="718">Retrieves the contents of @field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="187"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="724">a new allocated string. It must be freed with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="720">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_get_text_type"
              c:identifier="poppler_form_field_text_get_text_type">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="693">Gets the text type of @field.</doc>
        <source-position filename="glib/poppler-form-field.h" line="185"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="699">#PopplerFormTextType of @field</doc>
          <type name="FormTextType" c:type="PopplerFormTextType"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="695">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_is_password"
              c:identifier="poppler_form_field_text_is_password">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="813">Checks whether content of @field is a password and it must be hidden</doc>
        <source-position filename="glib/poppler-form-field.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="819">%TRUE if the content of @field is a password</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="815">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_is_rich_text"
              c:identifier="poppler_form_field_text_is_rich_text">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="798">Checks whether the contents of @field are rich text</doc>
        <source-position filename="glib/poppler-form-field.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="804">%TRUE if the contents of @field are rich text</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="800">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="text_set_text"
              c:identifier="poppler_form_field_text_set_text">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="739">Sets the text in @field to the given value, replacing the current contents.</doc>
        <source-position filename="glib/poppler-form-field.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="741">a #PopplerFormField</doc>
            <type name="FormField" c:type="PopplerFormField*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="742">the new text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FormFieldMapping"
            c:type="PopplerFormFieldMapping"
            glib:type-name="PopplerFormFieldMapping"
            glib:get-type="poppler_form_field_mapping_get_type"
            c:symbol-prefix="form_field_mapping">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="373">A #PopplerFormFieldMapping structure represents the location
of @field on the page</doc>
      <source-position filename="glib/poppler-page.h" line="385"/>
      <field name="area" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="375">a #PopplerRectangle representing an area of the page</doc>
        <type name="Rectangle" c:type="PopplerRectangle"/>
      </field>
      <field name="field" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="376">a #PopplerFormField</doc>
        <type name="FormField" c:type="PopplerFormField*"/>
      </field>
      <constructor name="new" c:identifier="poppler_form_field_mapping_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2122">Creates a new #PopplerFormFieldMapping</doc>
        <source-position filename="glib/poppler-page.h" line="390"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2127">a new #PopplerFormFieldMapping, use poppler_form_field_mapping_free() to free it</doc>
          <type name="FormFieldMapping" c:type="PopplerFormFieldMapping*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_form_field_mapping_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2134">Creates a copy of @mapping</doc>
        <source-position filename="glib/poppler-page.h" line="392"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2140">a new allocated copy of @mapping</doc>
          <type name="FormFieldMapping" c:type="PopplerFormFieldMapping*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2136">a #PopplerFormFieldMapping to copy</doc>
            <type name="FormFieldMapping" c:type="PopplerFormFieldMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_form_field_mapping_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2155">Frees the given #PopplerFormFieldMapping</doc>
        <source-position filename="glib/poppler-page.h" line="394"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2157">a #PopplerFormFieldMapping</doc>
            <type name="FormFieldMapping" c:type="PopplerFormFieldMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="FormFieldType"
                 glib:type-name="PopplerFormFieldType"
                 glib:get-type="poppler_form_field_type_get_type"
                 c:type="PopplerFormFieldType">
      <member name="unknown"
              value="0"
              c:identifier="POPPLER_FORM_FIELD_UNKNOWN"
              glib:nick="unknown"
              glib:name="POPPLER_FORM_FIELD_UNKNOWN">
      </member>
      <member name="button"
              value="1"
              c:identifier="POPPLER_FORM_FIELD_BUTTON"
              glib:nick="button"
              glib:name="POPPLER_FORM_FIELD_BUTTON">
      </member>
      <member name="text"
              value="2"
              c:identifier="POPPLER_FORM_FIELD_TEXT"
              glib:nick="text"
              glib:name="POPPLER_FORM_FIELD_TEXT">
      </member>
      <member name="choice"
              value="3"
              c:identifier="POPPLER_FORM_FIELD_CHOICE"
              glib:nick="choice"
              glib:name="POPPLER_FORM_FIELD_CHOICE">
      </member>
      <member name="signature"
              value="4"
              c:identifier="POPPLER_FORM_FIELD_SIGNATURE"
              glib:nick="signature"
              glib:name="POPPLER_FORM_FIELD_SIGNATURE">
      </member>
    </enumeration>
    <enumeration name="FormTextType"
                 glib:type-name="PopplerFormTextType"
                 glib:get-type="poppler_form_text_type_get_type"
                 c:type="PopplerFormTextType">
      <member name="normal"
              value="0"
              c:identifier="POPPLER_FORM_TEXT_NORMAL"
              glib:nick="normal"
              glib:name="POPPLER_FORM_TEXT_NORMAL">
      </member>
      <member name="multiline"
              value="1"
              c:identifier="POPPLER_FORM_TEXT_MULTILINE"
              glib:nick="multiline"
              glib:name="POPPLER_FORM_TEXT_MULTILINE">
      </member>
      <member name="file_select"
              value="2"
              c:identifier="POPPLER_FORM_TEXT_FILE_SELECT"
              glib:nick="file-select"
              glib:name="POPPLER_FORM_TEXT_FILE_SELECT">
      </member>
    </enumeration>
    <constant name="HAS_CAIRO" value="1" c:type="POPPLER_HAS_CAIRO">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="33">Defined if poppler was compiled with cairo support.</doc>
      <source-position filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
                       line="38"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="IS_ANNOT"
                    c:identifier="POPPLER_IS_ANNOT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_CIRCLE"
                    c:identifier="POPPLER_IS_ANNOT_CIRCLE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="69"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_FILE_ATTACHMENT"
                    c:identifier="POPPLER_IS_ANNOT_FILE_ATTACHMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_FREE_TEXT"
                    c:identifier="POPPLER_IS_ANNOT_FREE_TEXT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_LINE"
                    c:identifier="POPPLER_IS_ANNOT_LINE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="63"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_MARKUP"
                    c:identifier="POPPLER_IS_ANNOT_MARKUP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_MOVIE"
                    c:identifier="POPPLER_IS_ANNOT_MOVIE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="55"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_SCREEN"
                    c:identifier="POPPLER_IS_ANNOT_SCREEN"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="59"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_SQUARE"
                    c:identifier="POPPLER_IS_ANNOT_SQUARE"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="73"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_STAMP"
                    c:identifier="POPPLER_IS_ANNOT_STAMP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="77"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_TEXT"
                    c:identifier="POPPLER_IS_ANNOT_TEXT"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANNOT_TEXT_MARKUP"
                    c:identifier="POPPLER_IS_ANNOT_TEXT_MARKUP"
                    introspectable="0">
      <source-position filename="glib/poppler-annot.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ATTACHMENT"
                    c:identifier="POPPLER_IS_ATTACHMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-attachment.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOCUMENT"
                    c:identifier="POPPLER_IS_DOCUMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FONT_INFO"
                    c:identifier="POPPLER_IS_FONT_INFO"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="449"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORM_FIELD"
                    c:identifier="POPPLER_IS_FORM_FIELD"
                    introspectable="0">
      <source-position filename="glib/poppler-form-field.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYER"
                    c:identifier="POPPLER_IS_LAYER"
                    introspectable="0">
      <source-position filename="glib/poppler-layer.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEDIA"
                    c:identifier="POPPLER_IS_MEDIA"
                    introspectable="0">
      <source-position filename="glib/poppler-media.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MOVIE"
                    c:identifier="POPPLER_IS_MOVIE"
                    introspectable="0">
      <source-position filename="glib/poppler-movie.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAGE"
                    c:identifier="POPPLER_IS_PAGE"
                    introspectable="0">
      <source-position filename="glib/poppler-page.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PS_FILE"
                    c:identifier="POPPLER_IS_PS_FILE"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="508"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STRUCTURE_ELEMENT"
                    c:identifier="POPPLER_IS_STRUCTURE_ELEMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-structure-element.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="ImageMapping"
            c:type="PopplerImageMapping"
            glib:type-name="PopplerImageMapping"
            glib:get-type="poppler_image_mapping_get_type"
            c:symbol-prefix="image_mapping">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="347">A #PopplerImageMapping structure represents the location
of an image on the page</doc>
      <source-position filename="glib/poppler-page.h" line="359"/>
      <field name="area" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="349">a #PopplerRectangle representing an area of the page</doc>
        <type name="Rectangle" c:type="PopplerRectangle"/>
      </field>
      <field name="image_id" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="350">an image identifier</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <constructor name="new" c:identifier="poppler_image_mapping_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2039">Creates a new #PopplerImageMapping</doc>
        <source-position filename="glib/poppler-page.h" line="364"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2044">a new #PopplerImageMapping, use poppler_image_mapping_free() to free it</doc>
          <type name="ImageMapping" c:type="PopplerImageMapping*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_image_mapping_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2051">Creates a copy of @mapping</doc>
        <source-position filename="glib/poppler-page.h" line="366"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2057">a new allocated copy of @mapping</doc>
          <type name="ImageMapping" c:type="PopplerImageMapping*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2053">a #PopplerImageMapping to copy</doc>
            <type name="ImageMapping" c:type="PopplerImageMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_image_mapping_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2064">Frees the given #PopplerImageMapping</doc>
        <source-position filename="glib/poppler-page.h" line="368"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2066">a #PopplerImageMapping</doc>
            <type name="ImageMapping" c:type="PopplerImageMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="IndexIter"
            c:type="PopplerIndexIter"
            glib:type-name="PopplerIndexIter"
            glib:get-type="poppler_index_iter_get_type"
            c:symbol-prefix="index_iter">
      <source-position filename="glib/poppler.h" line="181"/>
      <constructor name="new" c:identifier="poppler_index_iter_new">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2625">Returns the root #PopplerIndexIter for @document, or %NULL.  This must be
freed with poppler_index_iter_free().

Certain documents have an index associated with them.  This index can be used
to help the user navigate the document, and is similar to a table of
contents.  Each node in the index will contain a #PopplerAction that can be
displayed to the user &amp;mdash; typically a #POPPLER_ACTION_GOTO_DEST or a
#POPPLER_ACTION_URI&lt;!-- --&gt;.

Here is a simple example of some code that walks the full index:

&lt;informalexample&gt;&lt;programlisting&gt;
static void
walk_index (PopplerIndexIter *iter)
{
  do
    {
      /&lt;!-- --&gt;* Get the action and do something with it *&lt;!-- --&gt;/
      PopplerIndexIter *child = poppler_index_iter_get_child (iter);
      if (child)
        walk_index (child);
      poppler_index_iter_free (child);
    }
  while (poppler_index_iter_next (iter));
}
...
{
  iter = poppler_index_iter_new (document);
  walk_index (iter);
  poppler_index_iter_free (iter);
}
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="glib/poppler-document.h" line="431"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2662">a new #PopplerIndexIter</doc>
          <type name="IndexIter" c:type="PopplerIndexIter*"/>
        </return-value>
        <parameters>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2627">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="poppler_index_iter_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2604">Creates a new #PopplerIndexIter as a copy of @iter.  This must be freed with
poppler_index_iter_free().</doc>
        <source-position filename="glib/poppler-document.h" line="433"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2611">a new #PopplerIndexIter</doc>
          <type name="IndexIter" c:type="PopplerIndexIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2606">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_index_iter_free">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2804">Frees @iter.</doc>
        <source-position filename="glib/poppler-document.h" line="435"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2806">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action" c:identifier="poppler_index_iter_get_action">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2754">Returns the #PopplerAction associated with @iter.  It must be freed with
poppler_action_free().</doc>
        <source-position filename="glib/poppler-document.h" line="442"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2761">a new #PopplerAction</doc>
          <type name="Action" c:type="PopplerAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2756">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child" c:identifier="poppler_index_iter_get_child">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2688">Returns a newly created child of @parent, or %NULL if the iter has no child.
See poppler_index_iter_new() for more information on this function.</doc>
        <source-position filename="glib/poppler-document.h" line="438"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2695">a new #PopplerIndexIter</doc>
          <type name="IndexIter" c:type="PopplerIndexIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2690">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_open" c:identifier="poppler_index_iter_is_open">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2735">Returns whether this node should be expanded by default to the user.  The
document can provide a hint as to how the document's index should be expanded
initially.</doc>
        <source-position filename="glib/poppler-document.h" line="440"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2743">%TRUE, if the document wants @iter to be expanded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2737">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next" c:identifier="poppler_index_iter_next">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="2783">Sets @iter to point to the next action at the current level, if valid.  See
poppler_index_iter_new() for more information.</doc>
        <source-position filename="glib/poppler-document.h" line="444"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="2790">%TRUE, if @iter was set to the next action</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="2785">a #PopplerIndexIter</doc>
            <type name="IndexIter" c:type="PopplerIndexIter*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="LAYER"
                    c:identifier="POPPLER_LAYER"
                    introspectable="0">
      <source-position filename="glib/poppler-layer.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Layer"
           c:symbol-prefix="layer"
           c:type="PopplerLayer"
           parent="GObject.Object"
           glib:type-name="PopplerLayer"
           glib:get-type="poppler_layer_get_type">
      <method name="get_radio_button_group_id"
              c:identifier="poppler_layer_get_radio_button_group_id"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="193">Returns the numeric ID the radio button group associated with @layer.</doc>
        <source-position filename="glib/poppler-layer.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-layer.cc"
               line="199">the ID of the radio button group associated with @layer,
or 0 if the layer is not associated to any radio button group</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="195">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="poppler_layer_get_title"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="84">Returns the name of the layer suitable for
presentation as a title in a viewer's GUI</doc>
        <source-position filename="glib/poppler-layer.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-layer.cc"
               line="91">a string containing the title of the layer</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="86">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="poppler_layer_hide" version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="151">Hides @layer. If @layer is the parent of other nested layers,
such layers will be also hidden and will be blocked until @layer
is shown again</doc>
        <source-position filename="glib/poppler-layer.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="153">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_parent"
              c:identifier="poppler_layer_is_parent"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="176">Returns whether @layer is parent of other nested layers.</doc>
        <source-position filename="glib/poppler-layer.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-layer.cc"
               line="182">%TRUE if @layer is a parent layer</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="178">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible"
              c:identifier="poppler_layer_is_visible"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="102">Returns whether @layer is visible</doc>
        <source-position filename="glib/poppler-layer.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-layer.cc"
               line="108">%TRUE if @layer is visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="104">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="poppler_layer_show" version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-layer.cc"
             line="119">Shows @layer</doc>
        <source-position filename="glib/poppler-layer.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-layer.cc"
                 line="121">a #PopplerLayer</doc>
            <type name="Layer" c:type="PopplerLayer*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="LayersIter"
            c:type="PopplerLayersIter"
            glib:type-name="PopplerLayersIter"
            glib:get-type="poppler_layers_iter_get_type"
            c:symbol-prefix="layers_iter">
      <source-position filename="glib/poppler.h" line="183"/>
      <constructor name="new"
                   c:identifier="poppler_layers_iter_new"
                   version="0.12">
        <source-position filename="glib/poppler-document.h" line="490"/>
        <return-value transfer-ownership="full">
          <type name="LayersIter" c:type="PopplerLayersIter*"/>
        </return-value>
        <parameters>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3407">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="poppler_layers_iter_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3364">Creates a new #PopplerLayersIter as a copy of @iter.  This must be freed with
poppler_layers_iter_free().</doc>
        <source-position filename="glib/poppler-document.h" line="492"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3371">a new #PopplerLayersIter

Since 0.12</doc>
          <type name="LayersIter" c:type="PopplerLayersIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3366">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="poppler_layers_iter_free"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3387">Frees @iter.</doc>
        <source-position filename="glib/poppler-document.h" line="494"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3389">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child"
              c:identifier="poppler_layers_iter_get_child"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3429">Returns a newly created child of @parent, or %NULL if the iter has no child.
See poppler_layers_iter_new() for more information on this function.</doc>
        <source-position filename="glib/poppler-document.h" line="497"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3436">a new #PopplerLayersIter, or %NULL</doc>
          <type name="LayersIter" c:type="PopplerLayersIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3431">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layer"
              c:identifier="poppler_layers_iter_get_layer"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3484">Returns the #PopplerLayer associated with @iter.</doc>
        <source-position filename="glib/poppler-document.h" line="501"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3490">a new #PopplerLayer, or %NULL if
there isn't any layer associated with @iter</doc>
          <type name="Layer" c:type="PopplerLayer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3486">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="poppler_layers_iter_get_title"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3461">Returns the title associated with @iter.  It must be freed with
g_free().</doc>
        <source-position filename="glib/poppler-document.h" line="499"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3468">a new string containing the @iter's title or %NULL if @iter doesn't have a title.
The returned string should be freed with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3463">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="poppler_layers_iter_next"
              version="0.12">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3513">Sets @iter to point to the next action at the current level, if valid.  See
poppler_layers_iter_new() for more information.</doc>
        <source-position filename="glib/poppler-document.h" line="503"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3520">%TRUE, if @iter was set to the next action</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3515">a #PopplerLayersIter</doc>
            <type name="LayersIter" c:type="PopplerLayersIter*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="LinkMapping"
            c:type="PopplerLinkMapping"
            glib:type-name="PopplerLinkMapping"
            glib:get-type="poppler_link_mapping_get_type"
            c:symbol-prefix="link_mapping">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="275">A #PopplerLinkMapping structure represents the location
of @action on the page</doc>
      <source-position filename="glib/poppler-page.h" line="287"/>
      <field name="area" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="277">a #PopplerRectangle representing an area of the page</doc>
        <type name="Rectangle" c:type="PopplerRectangle"/>
      </field>
      <field name="action" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="278">a #PopplerAction</doc>
        <type name="Action" c:type="PopplerAction*"/>
      </field>
      <constructor name="new" c:identifier="poppler_link_mapping_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1984">Creates a new #PopplerLinkMapping</doc>
        <source-position filename="glib/poppler-page.h" line="292"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1989">a new #PopplerLinkMapping, use poppler_link_mapping_free() to free it</doc>
          <type name="LinkMapping" c:type="PopplerLinkMapping*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_link_mapping_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1996">Creates a copy of @mapping</doc>
        <source-position filename="glib/poppler-page.h" line="294"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2002">a new allocated copy of @mapping</doc>
          <type name="LinkMapping" c:type="PopplerLinkMapping*"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1998">a #PopplerLinkMapping to copy</doc>
            <type name="LinkMapping" c:type="PopplerLinkMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_link_mapping_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2017">Frees the given #PopplerLinkMapping</doc>
        <source-position filename="glib/poppler-page.h" line="296"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mapping" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2019">a #PopplerLinkMapping</doc>
            <type name="LinkMapping" c:type="PopplerLinkMapping*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <constant name="MAJOR_VERSION"
              value="22"
              c:type="POPPLER_MAJOR_VERSION"
              version="0.12">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="40">The major version number of the poppler header files (e.g. in poppler version
0.1.2 this is 0.)</doc>
      <source-position filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
                       line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="MEDIA"
                    c:identifier="POPPLER_MEDIA"
                    introspectable="0">
      <source-position filename="glib/poppler-media.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="MICRO_VERSION"
              value="0"
              c:type="POPPLER_MICRO_VERSION"
              version="0.12">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="60">The micro version number of the poppler header files (e.g. in poppler version
0.1.2 this is 2.)</doc>
      <source-position filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
                       line="68"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION"
              value="12"
              c:type="POPPLER_MINOR_VERSION"
              version="0.12">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="50">The major version number of the poppler header files (e.g. in poppler version
0.1.2 this is 1.)</doc>
      <source-position filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
                       line="58"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="MOVIE"
                    c:identifier="POPPLER_MOVIE"
                    introspectable="0">
      <source-position filename="glib/poppler-movie.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Media"
           c:symbol-prefix="media"
           c:type="PopplerMedia"
           parent="GObject.Object"
           glib:type-name="PopplerMedia"
           glib:get-type="poppler_media_get_type">
      <method name="get_auto_play"
              c:identifier="poppler_media_get_auto_play"
              version="20.04.0">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="154">Returns the auto-play parameter.</doc>
        <source-position filename="glib/poppler-media.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="160">%TRUE if media should auto-play, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="156">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="poppler_media_get_filename"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="115">Returns the media clip filename, in case of non-embedded media. filename might be
a local relative or absolute path or a URI</doc>
        <source-position filename="glib/poppler-media.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="122">a filename, return value is owned by #PopplerMedia and should not be freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="117">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_type"
              c:identifier="poppler_media_get_mime_type"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="205">Returns the media clip mime-type</doc>
        <source-position filename="glib/poppler-media.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="211">the mime-type, return value is owned by #PopplerMedia and should not be freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="207">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_repeat_count"
              c:identifier="poppler_media_get_repeat_count"
              version="20.04.0">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="188">Returns the repeat count parameter.</doc>
        <source-position filename="glib/poppler-media.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="194">Repeat count parameter (float)</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="190">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_controls"
              c:identifier="poppler_media_get_show_controls"
              version="20.04.0">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="171">Returns the show controls parameter.</doc>
        <source-position filename="glib/poppler-media.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="177">%TRUE if media should show controls, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="173">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_embedded"
              c:identifier="poppler_media_is_embedded"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="134">Whether the media clip is embedded in the PDF. If the result is %TRUE, the embedded stream
can be saved with poppler_media_save() or poppler_media_save_to_callback() function.
If the result is %FALSE, the media clip filename can be retrieved with
poppler_media_get_filename() function.</doc>
        <source-position filename="glib/poppler-media.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="143">%TRUE if media clip is embedded, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="136">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save"
              c:identifier="poppler_media_save"
              version="0.14"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="237">Saves embedded stream of @poppler_media to a file indicated by @filename.
If @error is set, %FALSE will be returned.
Possible errors include those in the #G_FILE_ERROR domain
and whatever the save function generates.</doc>
        <source-position filename="glib/poppler-media.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="248">%TRUE, if the file successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="239">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="240">name of file to save</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_callback"
              c:identifier="poppler_media_save_to_callback"
              version="0.14"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="331">Saves embedded stream of @poppler_media by feeding the produced data to @save_func. Can be used
when you want to store the media clip stream to something other than a file, such as
an in-memory buffer or a socket. If @error is set, %FALSE will be
returned. Possible errors include those in the #G_FILE_ERROR domain and
whatever the save function generates.</doc>
        <source-position filename="glib/poppler-media.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="344">%TRUE, if the save successfully completed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="333">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
          <parameter name="save_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="334">a function that is called to save each block of data that the save routine generates.</doc>
            <type name="MediaSaveFunc" c:type="PopplerMediaSaveFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="335">user data to pass to the save function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_fd"
              c:identifier="poppler_media_save_to_fd"
              version="21.12.0"
              throws="1">
        <doc xml:space="preserve"
             filename="glib/poppler-media.cc"
             line="283">Saves embedded stream of @poppler_media to a file referred to by @fd.
If @error is set, %FALSE will be returned.
Possible errors include those in the #G_FILE_ERROR domain
and whatever the save function generates.
Note that this function takes ownership of @fd; you must not operate on it
again, nor close it.</doc>
        <source-position filename="glib/poppler-media.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.cc"
               line="296">%TRUE, if the file successfully saved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="285">a #PopplerMedia</doc>
            <type name="Media" c:type="PopplerMedia*"/>
          </instance-parameter>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-media.cc"
                 line="286">a valid file descriptor open for writing</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <callback name="MediaSaveFunc"
              c:type="PopplerMediaSaveFunc"
              version="0.14"
              throws="1">
      <doc xml:space="preserve"
           filename="glib/poppler-media.h"
           line="34">Specifies the type of the function passed to
poppler_media_save_to_callback().  It is called once for each block of
bytes that is "written" by poppler_media_save_to_callback().  If
successful it should return %TRUE.  If an error occurs it should set
@error and return %FALSE, in which case poppler_media_save_to_callback()
will fail with the same error.</doc>
      <source-position filename="glib/poppler-media.h" line="53"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-media.h"
             line="49">%TRUE if successful, %FALSE (with @error set) if failed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="buf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.h"
               line="36">buffer containing
  bytes to be written.</doc>
          <array length="1" zero-terminated="0" c:type="const gchar*">
            <type name="guint8"/>
          </array>
        </parameter>
        <parameter name="count" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-media.h"
               line="38">number of bytes in @buf.</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="glib/poppler-media.h"
               line="39">user data passed to poppler_media_save_to_callback()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Movie"
           c:symbol-prefix="movie"
           c:type="PopplerMovie"
           parent="GObject.Object"
           glib:type-name="PopplerMovie"
           glib:get-type="poppler_movie_get_type">
      <method name="get_aspect"
              c:identifier="poppler_movie_get_aspect"
              version="0.89">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="311">Returns the dimensions of the movie's bounding box (in pixels).
The respective PDF movie dictionary entry is optional; if missing,
-1x-1 will be returned.</doc>
        <source-position filename="glib/poppler-movie.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="313">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="314">width of the movie's bounding box</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="315">height of the movie's bounding box</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="poppler_movie_get_duration"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="294">Returns the duration of the movie playback</doc>
        <source-position filename="glib/poppler-movie.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="300">the duration of the movie playback (in ns)</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="296">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="poppler_movie_get_filename"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="136">Returns the local filename identifying a self-describing movie file</doc>
        <source-position filename="glib/poppler-movie.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="142">a local filename, return value is owned by #PopplerMovie and
              should not be freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="138">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_play_mode"
              c:identifier="poppler_movie_get_play_mode"
              version="0.54">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="190">Returns the play mode of @poppler_movie.</doc>
        <source-position filename="glib/poppler-movie.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="196">a #PopplerMoviePlayMode.</doc>
          <type name="MoviePlayMode" c:type="PopplerMoviePlayMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="192">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rate"
              c:identifier="poppler_movie_get_rate"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="242">Returns the relative speed of the movie</doc>
        <source-position filename="glib/poppler-movie.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="248">the relative speed of the movie (1 means no change)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="244">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rotation_angle"
              c:identifier="poppler_movie_get_rotation_angle"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="259">Returns the rotation angle</doc>
        <source-position filename="glib/poppler-movie.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="265">the number of degrees the movie should be rotated (positive,
multiples of 90: 0, 90, 180, 270)</doc>
          <type name="gushort" c:type="gushort"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="261">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start"
              c:identifier="poppler_movie_get_start"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="277">Returns the start position of the movie playback</doc>
        <source-position filename="glib/poppler-movie.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="283">the start position of the movie playback (in ns)</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="279">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_volume"
              c:identifier="poppler_movie_get_volume"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="225">Returns the playback audio volume</doc>
        <source-position filename="glib/poppler-movie.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="231">volume setting for the movie (0.0 - 1.0)</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="227">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_synchronous"
              c:identifier="poppler_movie_is_synchronous"
              version="0.80">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="207">Returns whether the user must wait for the movie to be finished before
the PDF viewer accepts any interactive action</doc>
        <source-position filename="glib/poppler-movie.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="214">%TRUE if yes, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="209">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="need_poster"
              c:identifier="poppler_movie_need_poster"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="154">Returns whether a poster image representing the Movie
shall be displayed. The poster image must be retrieved
from the movie file.</doc>
        <source-position filename="glib/poppler-movie.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="162">%TRUE if move needs a poster image, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="156">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_controls"
              c:identifier="poppler_movie_show_controls"
              version="0.14">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.cc"
             line="173">Returns whether to display a movie controller bar while playing the movie</doc>
        <source-position filename="glib/poppler-movie.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-movie.cc"
               line="179">%TRUE if controller bar should be displayed, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_movie" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-movie.cc"
                 line="175">a #PopplerMovie</doc>
            <type name="Movie" c:type="PopplerMovie*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="MoviePlayMode"
                 version="0.54"
                 glib:type-name="PopplerMoviePlayMode"
                 glib:get-type="poppler_movie_play_mode_get_type"
                 c:type="PopplerMoviePlayMode">
      <doc xml:space="preserve"
           filename="glib/poppler-movie.h"
           line="34">Play mode enum values.</doc>
      <member name="once"
              value="0"
              c:identifier="POPPLER_MOVIE_PLAY_MODE_ONCE"
              glib:nick="once"
              glib:name="POPPLER_MOVIE_PLAY_MODE_ONCE">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.h"
             line="36">the movie should be played once and controls should be closed at the end.</doc>
      </member>
      <member name="open"
              value="1"
              c:identifier="POPPLER_MOVIE_PLAY_MODE_OPEN"
              glib:nick="open"
              glib:name="POPPLER_MOVIE_PLAY_MODE_OPEN">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.h"
             line="37">the movie should be played once, but controls should be left open.</doc>
      </member>
      <member name="repeat"
              value="2"
              c:identifier="POPPLER_MOVIE_PLAY_MODE_REPEAT"
              glib:nick="repeat"
              glib:name="POPPLER_MOVIE_PLAY_MODE_REPEAT">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.h"
             line="38">the movie should be played in loop, until manually stopped.</doc>
      </member>
      <member name="palindrome"
              value="3"
              c:identifier="POPPLER_MOVIE_PLAY_MODE_PALINDROME"
              glib:nick="palindrome"
              glib:name="POPPLER_MOVIE_PLAY_MODE_PALINDROME">
        <doc xml:space="preserve"
             filename="glib/poppler-movie.h"
             line="39">the movie should be played forward and backward, forward and backward,
  and so forth, until manually stopped.</doc>
      </member>
    </enumeration>
    <function-macro name="PAGE" c:identifier="POPPLER_PAGE" introspectable="0">
      <source-position filename="glib/poppler-page.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="PDFConformance"
                 version="0.70"
                 glib:type-name="PopplerPDFConformance"
                 glib:get-type="poppler_pdf_conformance_get_type"
                 c:type="PopplerPDFConformance">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="263">PDF Subtype Conformance</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="265">Null</doc>
      </member>
      <member name="a"
              value="1"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_A"
              glib:nick="a"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_A">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="266">Level A (accessible) conformance (PDF/A)</doc>
      </member>
      <member name="b"
              value="2"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_B"
              glib:nick="b"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_B">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="267">Level B (basic) conformance (PDF/A)</doc>
      </member>
      <member name="g"
              value="3"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_G"
              glib:nick="g"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_G">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="268">Level G (external graphical content) (PDF/X)</doc>
      </member>
      <member name="n"
              value="4"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_N"
              glib:nick="n"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_N">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="269">Level N (external ICC Profile) (PDF/X)</doc>
      </member>
      <member name="p"
              value="5"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_P"
              glib:nick="p"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_P">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="270">Level P (ICC Profile) (PDF/X)</doc>
      </member>
      <member name="pg"
              value="6"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_PG"
              glib:nick="pg"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_PG">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="271">Level PG (conjunction of P and G) (PDF/X)</doc>
      </member>
      <member name="u"
              value="7"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_U"
              glib:nick="u"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_U">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="272">Level U (Unicode) conformance (PDF/A)</doc>
      </member>
      <member name="none"
              value="8"
              c:identifier="POPPLER_PDF_SUBTYPE_CONF_NONE"
              glib:nick="none"
              glib:name="POPPLER_PDF_SUBTYPE_CONF_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="273">No conformance level available</doc>
      </member>
    </enumeration>
    <enumeration name="PDFPart"
                 version="0.70"
                 glib:type-name="PopplerPDFPart"
                 glib:get-type="poppler_pdf_part_get_type"
                 c:type="PopplerPDFPart">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="232">PDF Subtype Part</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_PDF_SUBTYPE_PART_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="234">Null</doc>
      </member>
      <member name="1"
              value="1"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_1"
              glib:nick="1"
              glib:name="POPPLER_PDF_SUBTYPE_PART_1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="235">1</doc>
      </member>
      <member name="2"
              value="2"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_2"
              glib:nick="2"
              glib:name="POPPLER_PDF_SUBTYPE_PART_2">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="236">2</doc>
      </member>
      <member name="3"
              value="3"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_3"
              glib:nick="3"
              glib:name="POPPLER_PDF_SUBTYPE_PART_3">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="237">3</doc>
      </member>
      <member name="4"
              value="4"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_4"
              glib:nick="4"
              glib:name="POPPLER_PDF_SUBTYPE_PART_4">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="238">4</doc>
      </member>
      <member name="5"
              value="5"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_5"
              glib:nick="5"
              glib:name="POPPLER_PDF_SUBTYPE_PART_5">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="239">5</doc>
      </member>
      <member name="6"
              value="6"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_6"
              glib:nick="6"
              glib:name="POPPLER_PDF_SUBTYPE_PART_6">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="240">6</doc>
      </member>
      <member name="7"
              value="7"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_7"
              glib:nick="7"
              glib:name="POPPLER_PDF_SUBTYPE_PART_7">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="241">7</doc>
      </member>
      <member name="8"
              value="8"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_8"
              glib:nick="8"
              glib:name="POPPLER_PDF_SUBTYPE_PART_8">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="242">8</doc>
      </member>
      <member name="none"
              value="9"
              c:identifier="POPPLER_PDF_SUBTYPE_PART_NONE"
              glib:nick="none"
              glib:name="POPPLER_PDF_SUBTYPE_PART_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="243">No part available</doc>
      </member>
    </enumeration>
    <enumeration name="PDFSubtype"
                 version="0.70"
                 glib:type-name="PopplerPDFSubtype"
                 glib:get-type="poppler_pdf_subtype_get_type"
                 c:type="PopplerPDFSubtype">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="207">PDF Subtype</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_PDF_SUBTYPE_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_PDF_SUBTYPE_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="209">Null</doc>
      </member>
      <member name="pdf_a"
              value="1"
              c:identifier="POPPLER_PDF_SUBTYPE_PDF_A"
              glib:nick="pdf-a"
              glib:name="POPPLER_PDF_SUBTYPE_PDF_A">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="210">ISO 19005 - Document management -- Electronic document file format for long-term preservation (PDF/A)</doc>
      </member>
      <member name="pdf_e"
              value="2"
              c:identifier="POPPLER_PDF_SUBTYPE_PDF_E"
              glib:nick="pdf-e"
              glib:name="POPPLER_PDF_SUBTYPE_PDF_E">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="211">ISO 24517 - Document management -- Engineering document format using PDF (PDF/E)</doc>
      </member>
      <member name="pdf_ua"
              value="3"
              c:identifier="POPPLER_PDF_SUBTYPE_PDF_UA"
              glib:nick="pdf-ua"
              glib:name="POPPLER_PDF_SUBTYPE_PDF_UA">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="212">ISO 14289 - Document management applications -- Electronic document file format enhancement for accessibility (PDF/UA)</doc>
      </member>
      <member name="pdf_vt"
              value="4"
              c:identifier="POPPLER_PDF_SUBTYPE_PDF_VT"
              glib:nick="pdf-vt"
              glib:name="POPPLER_PDF_SUBTYPE_PDF_VT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="213">ISO 16612 - Graphic technology -- Variable data exchange (PDF/VT)</doc>
      </member>
      <member name="pdf_x"
              value="5"
              c:identifier="POPPLER_PDF_SUBTYPE_PDF_X"
              glib:nick="pdf-x"
              glib:name="POPPLER_PDF_SUBTYPE_PDF_X">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="214">ISO 15930 - Graphic technology -- Prepress digital data exchange (PDF/X)</doc>
      </member>
      <member name="none"
              value="6"
              c:identifier="POPPLER_PDF_SUBTYPE_NONE"
              glib:nick="none"
              glib:name="POPPLER_PDF_SUBTYPE_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="215">Not compliant with the above standards</doc>
      </member>
    </enumeration>
    <class name="PSFile"
           c:symbol-prefix="ps_file"
           c:type="PopplerPSFile"
           parent="GObject.Object"
           glib:type-name="PopplerPSFile"
           glib:get-type="poppler_ps_file_get_type">
      <constructor name="new" c:identifier="poppler_ps_file_new">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3579">Create a new postscript file to render to</doc>
        <source-position filename="glib/poppler-document.h" line="512"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3588">a PopplerPSFile</doc>
          <type name="PSFile" c:type="PopplerPSFile*"/>
        </return-value>
        <parameters>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3581">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3582">the path of the output filename</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="first_page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3583">the first page to print</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="n_pages" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3584">the number of pages to print</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_fd"
                   c:identifier="poppler_ps_file_new_fd"
                   version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3609">Create a new postscript file to render to.
Note that this function takes ownership of @fd; you must not operate on it
again, nor close it.</doc>
        <source-position filename="glib/poppler-document.h" line="515"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="3620">a #PopplerPSFile</doc>
          <type name="PSFile" c:type="PopplerPSFile*"/>
        </return-value>
        <parameters>
          <parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3611">a #PopplerDocument</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3612">a valid file descriptor open for writing</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="first_page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3613">the first page to print</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="n_pages" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3614">the number of pages to print</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="poppler_ps_file_free">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3677">Frees @ps_file</doc>
        <source-position filename="glib/poppler-document.h" line="522"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ps_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3679">a PopplerPSFile</doc>
            <type name="PSFile" c:type="PopplerPSFile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_duplex" c:identifier="poppler_ps_file_set_duplex">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3662">Enable or disable Duplex printing.</doc>
        <source-position filename="glib/poppler-document.h" line="520"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ps_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3664">a PopplerPSFile which was not yet printed to</doc>
            <type name="PSFile" c:type="PopplerPSFile*"/>
          </instance-parameter>
          <parameter name="duplex" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3665">whether to force duplex printing (on printers which support this)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_paper_size"
              c:identifier="poppler_ps_file_set_paper_size">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="3643">Set the output paper size. These values will end up in the
DocumentMedia, the BoundingBox DSC comments and other places in the
generated PostScript.</doc>
        <source-position filename="glib/poppler-document.h" line="518"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ps_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3645">a PopplerPSFile which was not yet printed to.</doc>
            <type name="PSFile" c:type="PopplerPSFile*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3646">the paper width in 1/72 inch</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-document.cc"
                 line="3647">the paper height in 1/72 inch</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <function-macro name="PS_FILE"
                    c:identifier="POPPLER_PS_FILE"
                    introspectable="0">
      <source-position filename="glib/poppler-document.h" line="507"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Page"
           c:symbol-prefix="page"
           c:type="PopplerPage"
           parent="GObject.Object"
           glib:type-name="PopplerPage"
           glib:get-type="poppler_page_get_type">
      <function name="free_annot_mapping"
                c:identifier="poppler_page_free_annot_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1408">Frees a list of #PopplerAnnotMapping&lt;!-- --&gt;s allocated by
poppler_page_get_annot_mapping().  It also unreferences the #PopplerAnnot&lt;!-- --&gt;s
that each mapping contains, so if you want to keep them around, you need to
reference them with g_object_ref().</doc>
        <source-position filename="glib/poppler-page.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1410">A list of
  #PopplerAnnotMapping&lt;!-- --&gt;s</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="AnnotMapping"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free_form_field_mapping"
                c:identifier="poppler_page_free_form_field_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1254">Frees a list of #PopplerFormFieldMapping&lt;!-- --&gt;s allocated by
poppler_page_get_form_field_mapping().</doc>
        <source-position filename="glib/poppler-page.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1256">A list of
  #PopplerFormFieldMapping&lt;!-- --&gt;s</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="FormFieldMapping"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free_image_mapping"
                c:identifier="poppler_page_free_image_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1032">Frees a list of #PopplerImageMapping&lt;!-- --&gt;s allocated by
poppler_page_get_image_mapping().</doc>
        <source-position filename="glib/poppler-page.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1034">A list of
  #PopplerImageMapping&lt;!-- --&gt;s</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="ImageMapping"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free_link_mapping"
                c:identifier="poppler_page_free_link_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1190">Frees a list of #PopplerLinkMapping&lt;!-- --&gt;s allocated by
poppler_page_get_link_mapping().  It also frees the #PopplerAction&lt;!-- --&gt;s
that each mapping contains, so if you want to keep them around, you need to
copy them with poppler_action_copy().</doc>
        <source-position filename="glib/poppler-page.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1192">A list of
  #PopplerLinkMapping&lt;!-- --&gt;s</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="LinkMapping"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free_text_attributes"
                c:identifier="poppler_page_free_text_attributes"
                version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2425">Frees a list of #PopplerTextAttributes&lt;!-- --&gt;s allocated by
poppler_page_get_text_attributes().</doc>
        <source-position filename="glib/poppler-page.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2427">A list of
  #PopplerTextAttributes&lt;!-- --&gt;s</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="TextAttributes"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="selection_region_free"
                c:identifier="poppler_page_selection_region_free"
                deprecated="1"
                deprecated-version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="639">Frees @region</doc>
        <doc-deprecated xml:space="preserve">Use only to free deprecated regions created by
poppler_page_get_selection_region(). Regions created by
poppler_page_get_selected_region() should be freed with
cairo_region_destroy() instead.</doc-deprecated>
        <source-position filename="glib/poppler-page.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="region" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="641">a #GList of
  #PopplerRectangle</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Rectangle"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <method name="add_annot"
              c:identifier="poppler_page_add_annot"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1548">Adds annotation @annot to @page.</doc>
        <source-position filename="glib/poppler-page.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1550">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1551">a #PopplerAnnot to add</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_text" c:identifier="poppler_page_find_text">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="908">Finds @text in @page with the default options (%POPPLER_FIND_DEFAULT) and
returns a #GList of rectangles for each occurrence of the text on the page.
The coordinates are in PDF points.</doc>
        <source-position filename="glib/poppler-page.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="917">a #GList of #PopplerRectangle,</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Rectangle"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="910">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="911">the text to search for (UTF-8 encoded)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_text_with_options"
              c:identifier="poppler_page_find_text_with_options"
              version="0.22">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="809">Finds @text in @page with the given #PopplerFindFlags options and
returns a #GList of rectangles for each occurrence of the text on the page.
The coordinates are in PDF points.

When %POPPLER_FIND_MULTILINE is passed in @options, matches may span more than
one line. In this case, the returned list will contain one #PopplerRectangle
for each part of a match. The function poppler_rectangle_find_get_match_continued()
will return %TRUE for all rectangles belonging to the same match, except for
the last one. If a hyphen was ignored at the end of the part of the match,
poppler_rectangle_find_get_ignored_hyphen() will return %TRUE for that
rectangle.

Note that currently matches spanning more than two lines are not found.
(This limitation may be lifted in a future version.)

Note also that currently finding multi-line matches backwards is not
implemented; if you pass %POPPLER_FIND_BACKWARDS and %POPPLER_FIND_MULTILINE
together, %POPPLER_FIND_MULTILINE will be ignored.</doc>
        <source-position filename="glib/poppler-page.h" line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="834">a newly allocated list
of newly allocated #PopplerRectangle. Free with g_list_free_full() using poppler_rectangle_free().</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Rectangle"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="811">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="812">the text to search for (UTF-8 encoded)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="813">find options</doc>
            <type name="FindFlags" c:type="PopplerFindFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_annot_mapping"
              c:identifier="poppler_page_get_annot_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1271">Returns a list of #PopplerAnnotMapping items that map from a location on
@page to a #PopplerAnnot.  This list must be freed with
poppler_page_free_annot_mapping() when done.</doc>
        <source-position filename="glib/poppler-page.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1279">A #GList of #PopplerAnnotMapping</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="AnnotMapping"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1273">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bounding_box"
              c:identifier="poppler_page_get_bounding_box">
        <source-position filename="glib/poppler-page.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_crop_box" c:identifier="poppler_page_get_crop_box">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2229">Retrurns the crop box of @page</doc>
        <source-position filename="glib/poppler-page.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2231">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2232">a #PopplerRectangle to fill</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_duration" c:identifier="poppler_page_get_duration">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="158">Returns the duration of @page</doc>
        <source-position filename="glib/poppler-page.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="164">duration in seconds of @page or -1.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="160">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_form_field_mapping"
              c:identifier="poppler_page_get_form_field_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1209">Returns a list of #PopplerFormFieldMapping items that map from a
location on @page to a form field.  This list must be freed
with poppler_page_free_form_field_mapping() when done.</doc>
        <source-position filename="glib/poppler-page.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1217">A #GList of #PopplerFormFieldMapping</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="FormFieldMapping"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1211">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image" c:identifier="poppler_page_get_image">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="995">Returns a cairo surface for the image of the @page</doc>
        <source-position filename="glib/poppler-page.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1002">A cairo surface for the image</doc>
          <type name="cairo.Surface" c:type="cairo_surface_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="997">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="image_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="998">The image identifier</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_mapping"
              c:identifier="poppler_page_get_image_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="945">Returns a list of #PopplerImageMapping items that map from a
location on @page to an image of the page. This list must be freed
with poppler_page_free_image_mapping() when done.</doc>
        <source-position filename="glib/poppler-page.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="953">A #GList of #PopplerImageMapping</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ImageMapping"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="947">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_index" c:identifier="poppler_page_get_index">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="121">Returns the index of @page</doc>
        <source-position filename="glib/poppler-page.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="127">index value of @page</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="123">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="poppler_page_get_label"
              glib:get-property="label"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="136">Returns the label of @page. Note that page labels
and page indices might not coincide.</doc>
        <source-position filename="glib/poppler-page.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="143">a new allocated string containing the label of @page,
              or %NULL if @page doesn't have a label</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="138">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_link_mapping"
              c:identifier="poppler_page_get_link_mapping">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1109">Returns a list of #PopplerLinkMapping items that map from a
location on @page to a #PopplerAction.  This list must be freed
with poppler_page_free_link_mapping() when done.</doc>
        <source-position filename="glib/poppler-page.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1117">A #GList of #PopplerLinkMapping</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="LinkMapping"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1111">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_region"
              c:identifier="poppler_page_get_selected_region"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="660">Returns a region containing the area that would be rendered by
poppler_page_render_selection().
The returned region must be freed with cairo_region_destroy()</doc>
        <source-position filename="glib/poppler-page.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="671">a cairo_region_t</doc>
          <type name="cairo.Region" c:type="cairo_region_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="662">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="663">scale specified as pixels per point</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="664">a #PopplerSelectionStyle</doc>
            <type name="SelectionStyle" c:type="PopplerSelectionStyle"/>
          </parameter>
          <parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="665">start and end point of selection as a rectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_text"
              c:identifier="poppler_page_get_selected_text"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="721">Retrieves the contents of the specified @selection as text.</doc>
        <source-position filename="glib/poppler-page.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="729">a pointer to the contents of the @selection
              as a string</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="723">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="724">a #PopplerSelectionStyle</doc>
            <type name="SelectionStyle" c:type="PopplerSelectionStyle"/>
          </parameter>
          <parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="725">the #PopplerRectangle including the text</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selection_region"
              c:identifier="poppler_page_get_selection_region"
              deprecated="1"
              deprecated-version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="581">Returns a region containing the area that would be rendered by
poppler_page_render_selection() as a #GList of
#PopplerRectangle. The returned list must be freed with
poppler_page_selection_region_free().</doc>
        <doc-deprecated xml:space="preserve">Use poppler_page_get_selected_region() instead.</doc-deprecated>
        <source-position filename="glib/poppler-page.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="593">a #GList of #PopplerRectangle</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Rectangle"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="583">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="584">scale specified as pixels per point</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="585">a #PopplerSelectionStyle</doc>
            <type name="SelectionStyle" c:type="PopplerSelectionStyle"/>
          </parameter>
          <parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="586">start and end point of selection as a rectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="poppler_page_get_size">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="89">Gets the size of @page at the current scale and rotation.</doc>
        <source-position filename="glib/poppler-page.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="91">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="92">return location for the width of @page</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="93">return location for the height of @page</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="poppler_page_get_text"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="769">Retrieves the text of @page.</doc>
        <source-position filename="glib/poppler-page.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="775">a pointer to the text of the @page
              as a string</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="771">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_attributes"
              c:identifier="poppler_page_get_text_attributes"
              version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2465">Obtains the attributes of the text as a #GList of #PopplerTextAttributes.
This list must be freed with poppler_page_free_text_attributes() when done.

Each list element is a #PopplerTextAttributes struct where start_index and
end_index indicates the range of text (as returned by poppler_page_get_text())
to which text attributes apply.

See also poppler_page_get_text_attributes_for_area()</doc>
        <source-position filename="glib/poppler-page.h" line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2478">A #GList of #PopplerTextAttributes</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TextAttributes"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2467">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_attributes_for_area"
              c:identifier="poppler_page_get_text_attributes_for_area"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2493">Obtains the attributes of the text in @area as a #GList of #PopplerTextAttributes.
This list must be freed with poppler_page_free_text_attributes() when done.

Each list element is a #PopplerTextAttributes struct where start_index and
end_index indicates the range of text (as returned by poppler_page_get_text_for_area())
to which text attributes apply.</doc>
        <source-position filename="glib/poppler-page.h" line="113"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2505">A #GList of #PopplerTextAttributes</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TextAttributes"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2495">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2496">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_for_area"
              c:identifier="poppler_page_get_text_for_area"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="790">Retrieves the text of @page contained in @area.</doc>
        <source-position filename="glib/poppler-page.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="797">a pointer to the text as a string</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="792">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="793">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_layout"
              c:identifier="poppler_page_get_text_layout"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2286">Obtains the layout of the text as a list of #PopplerRectangle
This array must be freed with g_free() when done.

The position in the array represents an offset in the text returned by
poppler_page_get_text()

See also poppler_page_get_text_layout_for_area().</doc>
        <source-position filename="glib/poppler-page.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2300">%TRUE if the page contains text, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2288">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="rectangles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2289">return location for an array of #PopplerRectangle</doc>
            <array length="1" zero-terminated="0" c:type="PopplerRectangle**">
              <type name="Rectangle" c:type="PopplerRectangle*"/>
            </array>
          </parameter>
          <parameter name="n_rectangles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2290">length of returned array</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_layout_for_area"
              c:identifier="poppler_page_get_text_layout_for_area"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2315">Obtains the layout of the text contained in @area as a list of #PopplerRectangle
This array must be freed with g_free() when done.

The position in the array represents an offset in the text returned by
poppler_page_get_text_for_area()</doc>
        <source-position filename="glib/poppler-page.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2328">%TRUE if the page contains text, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2317">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2318">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="rectangles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2319">return location for an array of #PopplerRectangle</doc>
            <array length="2" zero-terminated="0" c:type="PopplerRectangle**">
              <type name="Rectangle" c:type="PopplerRectangle*"/>
            </array>
          </parameter>
          <parameter name="n_rectangles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2320">length of returned array</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_thumbnail" c:identifier="poppler_page_get_thumbnail">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="464">Get the embedded thumbnail for the specified page.  If the document
doesn't have an embedded thumbnail for the page, this function
returns %NULL.</doc>
        <source-position filename="glib/poppler-page.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="472">the tumbnail as a cairo_surface_t or %NULL if the document
doesn't have a thumbnail for this page.</doc>
          <type name="cairo.Surface" c:type="cairo_surface_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="466">the #PopplerPage to get the thumbnail for</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_thumbnail_size"
              c:identifier="poppler_page_get_thumbnail_size">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="543">Returns %TRUE if @page has a thumbnail associated with it.  It also
fills in @width and @height with the width and height of the
thumbnail.  The values of width and height are not changed if no
appropriate thumbnail exists.</doc>
        <source-position filename="glib/poppler-page.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="554">%TRUE, if @page has a thumbnail associated with it.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="545">A #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="546">return location for width</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="547">return location for height</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transition" c:identifier="poppler_page_get_transition">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="173">Returns the transition effect of @page</doc>
        <source-position filename="glib/poppler-page.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="179">a #PopplerPageTransition or %NULL.</doc>
          <type name="PageTransition" c:type="PopplerPageTransition*"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="175">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_annot"
              c:identifier="poppler_page_remove_annot"
              version="0.22">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1603">Removes annotation @annot from @page</doc>
        <source-position filename="glib/poppler-page.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1605">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="annot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1606">a #PopplerAnnot to remove</doc>
            <type name="Annot" c:type="PopplerAnnot*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render" c:identifier="poppler_page_render">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="340">Render the page to the given cairo context. This function
is for rendering a page that will be displayed. If you want
to render a page that will be printed use
poppler_page_render_for_printing() instead.  Please see the documentation
for that function for the differences between rendering to the screen and
rendering to a printer.</doc>
        <source-position filename="glib/poppler-page.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="342">the page to render from</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="cairo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="343">cairo context to render to</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_for_printing"
              c:identifier="poppler_page_render_for_printing">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="380">Render the page to the given cairo context for printing with
#POPPLER_PRINT_ALL flags selected.  If you want a different set of flags,
use poppler_page_render_for_printing_with_options().

The difference between poppler_page_render() and this function is that some
things get rendered differently between screens and printers:

&lt;itemizedlist&gt;
  &lt;listitem&gt;
    PDF annotations get rendered according to their #PopplerAnnotFlag value.
    For example, #POPPLER_ANNOT_FLAG_PRINT refers to whether an annotation
    is printed or not, whereas #POPPLER_ANNOT_FLAG_NO_VIEW refers to whether
    an annotation is invisible when displaying to the screen.
  &lt;/listitem&gt;
  &lt;listitem&gt;
    PDF supports "hairlines" of width 0.0, which often get rendered as
    having a width of 1 device pixel.  When displaying on a screen, Cairo
    may render such lines wide so that they are hard to see, and Poppler
    makes use of PDF's Stroke Adjust graphics parameter to make the lines
    easier to see.  However, when printing, Poppler is able to directly use a
    printer's pixel size instead.
  &lt;/listitem&gt;
  &lt;listitem&gt;
    Some advanced features in PDF may require an image to be rasterized
    before sending off to a printer.  This may produce raster images which
    exceed Cairo's limits.  The "printing" functions will detect this condition
    and try to down-scale the intermediate surfaces as appropriate.
  &lt;/listitem&gt;
&lt;/itemizedlist&gt;</doc>
        <source-position filename="glib/poppler-page.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="382">the page to render from</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="cairo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="383">cairo context to render to</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_for_printing_with_options"
              c:identifier="poppler_page_render_for_printing_with_options"
              version="0.16">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="359">Render the page to the given cairo context for printing
with the specified options

See the documentation for poppler_page_render_for_printing() for the
differences between rendering to the screen and rendering to a printer.</doc>
        <source-position filename="glib/poppler-page.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="361">the page to render from</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="cairo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="362">cairo context to render to</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="363">print options</doc>
            <type name="PrintFlags" c:type="PopplerPrintFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_selection"
              c:identifier="poppler_page_render_selection">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="493">Render the selection specified by @selection for @page to
the given cairo context.  The selection will be rendered, using
@glyph_color for the glyphs and @background_color for the selection
background.

If non-NULL, @old_selection specifies the selection that is already
rendered to @cairo, in which case this function will (some day)
only render the changed part of the selection.</doc>
        <source-position filename="glib/poppler-page.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="495">the #PopplerPage for which to render selection</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="cairo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="496">cairo context to render to</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
          <parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="497">start and end point of selection as a rectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="old_selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="498">previous selection</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
          <parameter name="style" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="499">a #PopplerSelectionStyle</doc>
            <type name="SelectionStyle" c:type="PopplerSelectionStyle"/>
          </parameter>
          <parameter name="glyph_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="500">color to use for drawing glyphs</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
          <parameter name="background_color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="501">color to use for the selection background</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_to_ps" c:identifier="poppler_page_render_to_ps">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1049">Render the page on a postscript file</doc>
        <source-position filename="glib/poppler-page.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1051">a #PopplerPage</doc>
            <type name="Page" c:type="PopplerPage*"/>
          </instance-parameter>
          <parameter name="ps_file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1052">the PopplerPSFile to render to</doc>
            <type name="PSFile" c:type="PopplerPSFile*"/>
          </parameter>
        </parameters>
      </method>
      <property name="label" transfer-ownership="none" getter="get_label">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1099">The label of the page or %NULL. See also poppler_page_get_label()</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <enumeration name="PageLayout"
                 glib:type-name="PopplerPageLayout"
                 glib:get-type="poppler_page_layout_get_type"
                 c:type="PopplerPageLayout">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="37">Page layout types</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_PAGE_LAYOUT_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_PAGE_LAYOUT_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="39">no specific layout set</doc>
      </member>
      <member name="single_page"
              value="1"
              c:identifier="POPPLER_PAGE_LAYOUT_SINGLE_PAGE"
              glib:nick="single-page"
              glib:name="POPPLER_PAGE_LAYOUT_SINGLE_PAGE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="40">one page at a time</doc>
      </member>
      <member name="one_column"
              value="2"
              c:identifier="POPPLER_PAGE_LAYOUT_ONE_COLUMN"
              glib:nick="one-column"
              glib:name="POPPLER_PAGE_LAYOUT_ONE_COLUMN">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="41">pages in one column</doc>
      </member>
      <member name="two_column_left"
              value="3"
              c:identifier="POPPLER_PAGE_LAYOUT_TWO_COLUMN_LEFT"
              glib:nick="two-column-left"
              glib:name="POPPLER_PAGE_LAYOUT_TWO_COLUMN_LEFT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="42">pages in two columns with odd numbered pages on the left</doc>
      </member>
      <member name="two_column_right"
              value="4"
              c:identifier="POPPLER_PAGE_LAYOUT_TWO_COLUMN_RIGHT"
              glib:nick="two-column-right"
              glib:name="POPPLER_PAGE_LAYOUT_TWO_COLUMN_RIGHT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="43">pages in two columns with odd numbered pages on the right</doc>
      </member>
      <member name="two_page_left"
              value="5"
              c:identifier="POPPLER_PAGE_LAYOUT_TWO_PAGE_LEFT"
              glib:nick="two-page-left"
              glib:name="POPPLER_PAGE_LAYOUT_TWO_PAGE_LEFT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="44">two pages at a time with odd numbered pages on the left</doc>
      </member>
      <member name="two_page_right"
              value="6"
              c:identifier="POPPLER_PAGE_LAYOUT_TWO_PAGE_RIGHT"
              glib:nick="two-page-right"
              glib:name="POPPLER_PAGE_LAYOUT_TWO_PAGE_RIGHT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="45">two pages at a time with odd numbered pages on the right</doc>
      </member>
    </enumeration>
    <enumeration name="PageMode"
                 glib:type-name="PopplerPageMode"
                 glib:get-type="poppler_page_mode_get_type"
                 c:type="PopplerPageMode">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="60">Page modes</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_PAGE_MODE_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_PAGE_MODE_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="62">no specific mode set</doc>
      </member>
      <member name="none"
              value="1"
              c:identifier="POPPLER_PAGE_MODE_NONE"
              glib:nick="none"
              glib:name="POPPLER_PAGE_MODE_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="63">neither document outline nor thumbnails visible</doc>
      </member>
      <member name="use_outlines"
              value="2"
              c:identifier="POPPLER_PAGE_MODE_USE_OUTLINES"
              glib:nick="use-outlines"
              glib:name="POPPLER_PAGE_MODE_USE_OUTLINES">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="64">document outline visible</doc>
      </member>
      <member name="use_thumbs"
              value="3"
              c:identifier="POPPLER_PAGE_MODE_USE_THUMBS"
              glib:nick="use-thumbs"
              glib:name="POPPLER_PAGE_MODE_USE_THUMBS">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="65">thumbnails visible</doc>
      </member>
      <member name="full_screen"
              value="4"
              c:identifier="POPPLER_PAGE_MODE_FULL_SCREEN"
              glib:nick="full-screen"
              glib:name="POPPLER_PAGE_MODE_FULL_SCREEN">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="66">full-screen mode</doc>
      </member>
      <member name="use_oc"
              value="5"
              c:identifier="POPPLER_PAGE_MODE_USE_OC"
              glib:nick="use-oc"
              glib:name="POPPLER_PAGE_MODE_USE_OC">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="67">layers panel visible</doc>
      </member>
      <member name="use_attachments"
              value="6"
              c:identifier="POPPLER_PAGE_MODE_USE_ATTACHMENTS"
              glib:nick="use-attachments"
              glib:name="POPPLER_PAGE_MODE_USE_ATTACHMENTS">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="68">attachments panel visible</doc>
      </member>
    </enumeration>
    <record name="PageRange" c:type="PopplerPageRange" version="0.80">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="524">A #PopplerPageRange is used to specify a range of pages.</doc>
      <source-position filename="glib/poppler-document.h" line="537"/>
      <field name="start_page" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="526">first page in the range of pages</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="end_page" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="527">last page in the range of pages</doc>
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="PageTransition"
            c:type="PopplerPageTransition"
            glib:type-name="PopplerPageTransition"
            glib:get-type="poppler_page_transition_get_type"
            c:symbol-prefix="page_transition">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="301">A #PopplerPageTransition structures describes a visual transition
to use when moving between pages during a presentation</doc>
      <source-position filename="glib/poppler-page.h" line="333"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="303">the type of transtition</doc>
        <type name="PageTransitionType" c:type="PopplerPageTransitionType"/>
      </field>
      <field name="alignment" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="304">the dimension in which the transition effect shall occur.
Only for #POPPLER_PAGE_TRANSITION_SPLIT and #POPPLER_PAGE_TRANSITION_BLINDS transition types</doc>
        <type name="PageTransitionAlignment"
              c:type="PopplerPageTransitionAlignment"/>
      </field>
      <field name="direction" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="306">the direction of motion for the transition effect.
Only for #POPPLER_PAGE_TRANSITION_SPLIT, #POPPLER_PAGE_TRANSITION_BOX and #POPPLER_PAGE_TRANSITION_FLY
transition types</doc>
        <type name="PageTransitionDirection"
              c:type="PopplerPageTransitionDirection"/>
      </field>
      <field name="duration" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="309">the duration of the transition effect</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="angle" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="310">the direction in which the specified transition effect shall moves,
expressed in degrees counterclockwise starting from a left-to-right direction.
Only for #POPPLER_PAGE_TRANSITION_WIPE, #POPPLER_PAGE_TRANSITION_GLITTER, #POPPLER_PAGE_TRANSITION_FLY,
#POPPLER_PAGE_TRANSITION_COVER, #POPPLER_PAGE_TRANSITION_UNCOVER and #POPPLER_PAGE_TRANSITION_PUSH
transition types</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="scale" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="315">the starting or ending scale at which the changes shall be drawn.
Only for #POPPLER_PAGE_TRANSITION_FLY transition type</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="rectangular" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="317">whether the area that will be flown is rectangular and opaque.
Only for #POPPLER_PAGE_TRANSITION_FLY transition type</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="duration_real" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <constructor name="new" c:identifier="poppler_page_transition_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2078">Creates a new #PopplerPageTransition</doc>
        <source-position filename="glib/poppler-page.h" line="338"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2083">a new #PopplerPageTransition, use poppler_page_transition_free() to free it</doc>
          <type name="PageTransition" c:type="PopplerPageTransition*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_page_transition_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2090">Creates a copy of @transition</doc>
        <source-position filename="glib/poppler-page.h" line="340"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="2096">a new allocated copy of @transition</doc>
          <type name="PageTransition" c:type="PopplerPageTransition*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2092">a #PopplerPageTransition to copy</doc>
            <type name="PageTransition" c:type="PopplerPageTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_page_transition_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="2108">Frees the given #PopplerPageTransition</doc>
        <source-position filename="glib/poppler-page.h" line="342"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="2110">a #PopplerPageTransition</doc>
            <type name="PageTransition" c:type="PopplerPageTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="PageTransitionAlignment"
                 glib:type-name="PopplerPageTransitionAlignment"
                 glib:get-type="poppler_page_transition_alignment_get_type"
                 c:type="PopplerPageTransitionAlignment">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="90">Page transition alignment types for #POPPLER_PAGE_TRANSITION_SPLIT
and #POPPLER_PAGE_TRANSITION_BLINDS transition types</doc>
      <member name="horizontal"
              value="0"
              c:identifier="POPPLER_PAGE_TRANSITION_HORIZONTAL"
              glib:nick="horizontal"
              glib:name="POPPLER_PAGE_TRANSITION_HORIZONTAL">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="92">horizontal dimension</doc>
      </member>
      <member name="vertical"
              value="1"
              c:identifier="POPPLER_PAGE_TRANSITION_VERTICAL"
              glib:nick="vertical"
              glib:name="POPPLER_PAGE_TRANSITION_VERTICAL">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="93">vertical dimension</doc>
      </member>
    </enumeration>
    <enumeration name="PageTransitionDirection"
                 glib:type-name="PopplerPageTransitionDirection"
                 glib:get-type="poppler_page_transition_direction_get_type"
                 c:type="PopplerPageTransitionDirection">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="104">Page transition direction types for #POPPLER_PAGE_TRANSITION_SPLIT,
#POPPLER_PAGE_TRANSITION_BOX and #POPPLER_PAGE_TRANSITION_FLY transition types</doc>
      <member name="inward"
              value="0"
              c:identifier="POPPLER_PAGE_TRANSITION_INWARD"
              glib:nick="inward"
              glib:name="POPPLER_PAGE_TRANSITION_INWARD">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="106">inward from the edges of the page</doc>
      </member>
      <member name="outward"
              value="1"
              c:identifier="POPPLER_PAGE_TRANSITION_OUTWARD"
              glib:nick="outward"
              glib:name="POPPLER_PAGE_TRANSITION_OUTWARD">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="107">outward from the center of the page</doc>
      </member>
    </enumeration>
    <enumeration name="PageTransitionType"
                 glib:type-name="PopplerPageTransitionType"
                 glib:get-type="poppler_page_transition_type_get_type"
                 c:type="PopplerPageTransitionType">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="53">Page transition types</doc>
      <member name="replace"
              value="0"
              c:identifier="POPPLER_PAGE_TRANSITION_REPLACE"
              glib:nick="replace"
              glib:name="POPPLER_PAGE_TRANSITION_REPLACE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="55">the new page replace the old one</doc>
      </member>
      <member name="split"
              value="1"
              c:identifier="POPPLER_PAGE_TRANSITION_SPLIT"
              glib:nick="split"
              glib:name="POPPLER_PAGE_TRANSITION_SPLIT">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="56">two lines sweep across the screen, revealing the new page</doc>
      </member>
      <member name="blinds"
              value="2"
              c:identifier="POPPLER_PAGE_TRANSITION_BLINDS"
              glib:nick="blinds"
              glib:name="POPPLER_PAGE_TRANSITION_BLINDS">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="57">multiple lines, evenly spaced across the screen, synchronously
sweep in the same direction to reveal the new page</doc>
      </member>
      <member name="box"
              value="3"
              c:identifier="POPPLER_PAGE_TRANSITION_BOX"
              glib:nick="box"
              glib:name="POPPLER_PAGE_TRANSITION_BOX">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="59">a rectangular box sweeps inward from the edges of the page or
outward from the center revealing the new page</doc>
      </member>
      <member name="wipe"
              value="4"
              c:identifier="POPPLER_PAGE_TRANSITION_WIPE"
              glib:nick="wipe"
              glib:name="POPPLER_PAGE_TRANSITION_WIPE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="61">a single line sweeps across the screen from one edge to the other
revealing the new page</doc>
      </member>
      <member name="dissolve"
              value="5"
              c:identifier="POPPLER_PAGE_TRANSITION_DISSOLVE"
              glib:nick="dissolve"
              glib:name="POPPLER_PAGE_TRANSITION_DISSOLVE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="63">the old page dissolves gradually to reveal the new one</doc>
      </member>
      <member name="glitter"
              value="6"
              c:identifier="POPPLER_PAGE_TRANSITION_GLITTER"
              glib:nick="glitter"
              glib:name="POPPLER_PAGE_TRANSITION_GLITTER">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="64">similar to #POPPLER_PAGE_TRANSITION_DISSOLVE, except that the effect
sweeps across the page in a wide band moving from one side of the screen to the other</doc>
      </member>
      <member name="fly"
              value="7"
              c:identifier="POPPLER_PAGE_TRANSITION_FLY"
              glib:nick="fly"
              glib:name="POPPLER_PAGE_TRANSITION_FLY">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="66">changes are flown out or in to or from a location that is offscreen</doc>
      </member>
      <member name="push"
              value="8"
              c:identifier="POPPLER_PAGE_TRANSITION_PUSH"
              glib:nick="push"
              glib:name="POPPLER_PAGE_TRANSITION_PUSH">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="67">the old page slides off the screen while the new page slides in</doc>
      </member>
      <member name="cover"
              value="9"
              c:identifier="POPPLER_PAGE_TRANSITION_COVER"
              glib:nick="cover"
              glib:name="POPPLER_PAGE_TRANSITION_COVER">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="68">the new page slides on to the screen covering the old page</doc>
      </member>
      <member name="uncover"
              value="10"
              c:identifier="POPPLER_PAGE_TRANSITION_UNCOVER"
              glib:nick="uncover"
              glib:name="POPPLER_PAGE_TRANSITION_UNCOVER">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="69">the old page slides off the screen uncovering the new page</doc>
      </member>
      <member name="fade"
              value="11"
              c:identifier="POPPLER_PAGE_TRANSITION_FADE"
              glib:nick="fade"
              glib:name="POPPLER_PAGE_TRANSITION_FADE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="70">the new page gradually becomes visible through the old one</doc>
      </member>
    </enumeration>
    <bitfield name="Permissions"
              glib:type-name="PopplerPermissions"
              glib:get-type="poppler_permissions_get_type"
              c:type="PopplerPermissions">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="175">Permissions</doc>
      <member name="ok_to_print"
              value="1"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_PRINT"
              glib:nick="ok-to-print"
              glib:name="POPPLER_PERMISSIONS_OK_TO_PRINT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="177">document can be printer</doc>
      </member>
      <member name="ok_to_modify"
              value="2"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_MODIFY"
              glib:nick="ok-to-modify"
              glib:name="POPPLER_PERMISSIONS_OK_TO_MODIFY">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="178">document contents can be modified</doc>
      </member>
      <member name="ok_to_copy"
              value="4"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_COPY"
              glib:nick="ok-to-copy"
              glib:name="POPPLER_PERMISSIONS_OK_TO_COPY">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="179">document can be copied</doc>
      </member>
      <member name="ok_to_add_notes"
              value="8"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_ADD_NOTES"
              glib:nick="ok-to-add-notes"
              glib:name="POPPLER_PERMISSIONS_OK_TO_ADD_NOTES">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="180">annotations can added to the document</doc>
      </member>
      <member name="ok_to_fill_form"
              value="16"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_FILL_FORM"
              glib:nick="ok-to-fill-form"
              glib:name="POPPLER_PERMISSIONS_OK_TO_FILL_FORM">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="181">interactive form fields can be filled in</doc>
      </member>
      <member name="ok_to_extract_contents"
              value="32"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_EXTRACT_CONTENTS"
              glib:nick="ok-to-extract-contents"
              glib:name="POPPLER_PERMISSIONS_OK_TO_EXTRACT_CONTENTS">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="182">extract text and graphics
(in support of accessibility to users with disabilities or for other purposes). Since 0.18</doc>
      </member>
      <member name="ok_to_assemble"
              value="64"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_ASSEMBLE"
              glib:nick="ok-to-assemble"
              glib:name="POPPLER_PERMISSIONS_OK_TO_ASSEMBLE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="184">assemble the document (insert, rotate, or delete pages and create
bookmarks or thumbnail images). Since 0.18</doc>
      </member>
      <member name="ok_to_print_high_resolution"
              value="128"
              c:identifier="POPPLER_PERMISSIONS_OK_TO_PRINT_HIGH_RESOLUTION"
              glib:nick="ok-to-print-high-resolution"
              glib:name="POPPLER_PERMISSIONS_OK_TO_PRINT_HIGH_RESOLUTION">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="186">document can be printer at high resolution. Since 0.18</doc>
      </member>
      <member name="full"
              value="255"
              c:identifier="POPPLER_PERMISSIONS_FULL"
              glib:nick="full"
              glib:name="POPPLER_PERMISSIONS_FULL">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="187">document permits all operations</doc>
      </member>
    </bitfield>
    <record name="Point"
            c:type="PopplerPoint"
            glib:type-name="PopplerPoint"
            glib:get-type="poppler_point_get_type"
            c:symbol-prefix="point">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="150">A #PopplerPoint is used to describe a location point on a page</doc>
      <source-position filename="glib/poppler-page.h" line="161"/>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="152">x coordinate</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="153">y coordinate</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <constructor name="new" c:identifier="poppler_point_new" version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1742">Creates a new #PopplerPoint. It must be freed with poppler_point_free() after use.</doc>
        <source-position filename="glib/poppler-page.h" line="166"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1747">a new #PopplerPoint</doc>
          <type name="Point" c:type="PopplerPoint*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_point_copy" version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1756">Creates a copy of @point. The copy must be freed with poppler_point_free()
after use.</doc>
        <source-position filename="glib/poppler-page.h" line="168"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1763">a new allocated copy of @point</doc>
          <type name="Point" c:type="PopplerPoint*"/>
        </return-value>
        <parameters>
          <instance-parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1758">a #PopplerPoint to copy</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_point_free" version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1774">Frees the memory used by @point</doc>
        <source-position filename="glib/poppler-page.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1776">a #PopplerPoint</doc>
            <type name="Point" c:type="PopplerPoint*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="PrintDuplex"
                 version="0.80"
                 glib:type-name="PopplerPrintDuplex"
                 glib:get-type="poppler_print_duplex_get_type"
                 c:type="PopplerPrintDuplex">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="156">Duplex viewer preference</doc>
      <member name="none"
              value="0"
              c:identifier="POPPLER_PRINT_DUPLEX_NONE"
              glib:nick="none"
              glib:name="POPPLER_PRINT_DUPLEX_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="158">No preference on duplex printing</doc>
      </member>
      <member name="simplex"
              value="1"
              c:identifier="POPPLER_PRINT_DUPLEX_SIMPLEX"
              glib:nick="simplex"
              glib:name="POPPLER_PRINT_DUPLEX_SIMPLEX">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="159">Print single-sided</doc>
      </member>
      <member name="duplex_flip_short_edge"
              value="2"
              c:identifier="POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_SHORT_EDGE"
              glib:nick="duplex-flip-short-edge"
              glib:name="POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_SHORT_EDGE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="160">Duplex and flip on the short edge of the sheet</doc>
      </member>
      <member name="duplex_flip_long_edge"
              value="3"
              c:identifier="POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_LONG_EDGE"
              glib:nick="duplex-flip-long-edge"
              glib:name="POPPLER_PRINT_DUPLEX_DUPLEX_FLIP_LONG_EDGE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="161">Duplex and flip on the long edge of the sheet</doc>
      </member>
    </enumeration>
    <bitfield name="PrintFlags"
              version="0.16"
              glib:type-name="PopplerPrintFlags"
              glib:get-type="poppler_print_flags_get_type"
              c:type="PopplerPrintFlags">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="133">Printing flags</doc>
      <member name="document"
              value="0"
              c:identifier="POPPLER_PRINT_DOCUMENT"
              glib:nick="document"
              glib:name="POPPLER_PRINT_DOCUMENT">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="135">print main document contents</doc>
      </member>
      <member name="markup_annots"
              value="1"
              c:identifier="POPPLER_PRINT_MARKUP_ANNOTS"
              glib:nick="markup-annots"
              glib:name="POPPLER_PRINT_MARKUP_ANNOTS">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="136">print document and markup annotations</doc>
      </member>
      <member name="stamp_annots_only"
              value="2"
              c:identifier="POPPLER_PRINT_STAMP_ANNOTS_ONLY"
              glib:nick="stamp-annots-only"
              glib:name="POPPLER_PRINT_STAMP_ANNOTS_ONLY">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="137">print document and only stamp annotations</doc>
      </member>
      <member name="all"
              value="1"
              c:identifier="POPPLER_PRINT_ALL"
              glib:nick="all"
              glib:name="POPPLER_PRINT_ALL">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="138">print main document contents and all markup annotations</doc>
      </member>
    </bitfield>
    <enumeration name="PrintScaling"
                 version="0.73"
                 glib:type-name="PopplerPrintScaling"
                 glib:get-type="poppler_print_scaling_get_type"
                 c:type="PopplerPrintScaling">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="141">PrintScaling viewer preference</doc>
      <member name="app_default"
              value="0"
              c:identifier="POPPLER_PRINT_SCALING_APP_DEFAULT"
              glib:nick="app-default"
              glib:name="POPPLER_PRINT_SCALING_APP_DEFAULT">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="143">application's default page scaling</doc>
      </member>
      <member name="none"
              value="1"
              c:identifier="POPPLER_PRINT_SCALING_NONE"
              glib:nick="none"
              glib:name="POPPLER_PRINT_SCALING_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="144">no page scaling</doc>
      </member>
    </enumeration>
    <record name="Quadrilateral"
            c:type="PopplerQuadrilateral"
            glib:type-name="PopplerQuadrilateral"
            glib:get-type="poppler_quadrilateral_get_type"
            c:symbol-prefix="quadrilateral">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="180">A #PopplerQuadrilateral is used to describe rectangle-like polygon
 with arbitrary inclination on a page.

 Since: 0.26</doc>
      <source-position filename="glib/poppler-page.h" line="198"/>
      <field name="p1" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="182">a #PopplerPoint with the first vertex coordinates</doc>
        <type name="Point" c:type="PopplerPoint"/>
      </field>
      <field name="p2" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="183">a #PopplerPoint with the second vertex coordinates</doc>
        <type name="Point" c:type="PopplerPoint"/>
      </field>
      <field name="p3" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="184">a #PopplerPoint with the third vertex coordinates</doc>
        <type name="Point" c:type="PopplerPoint"/>
      </field>
      <field name="p4" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="185">a #PopplerPoint with the fourth vertex coordinates</doc>
        <type name="Point" c:type="PopplerPoint"/>
      </field>
      <constructor name="new"
                   c:identifier="poppler_quadrilateral_new"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1791">Creates a new #PopplerQuadrilateral. It must be freed with poppler_quadrilateral_free() after use.</doc>
        <source-position filename="glib/poppler-page.h" line="203"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1796">a new #PopplerQuadrilateral.</doc>
          <type name="Quadrilateral" c:type="PopplerQuadrilateral*"/>
        </return-value>
      </constructor>
      <method name="copy"
              c:identifier="poppler_quadrilateral_copy"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1805">Creates a copy of @quad. The copy must be freed with poppler_quadrilateral_free() after use.</doc>
        <source-position filename="glib/poppler-page.h" line="205"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1811">a new allocated copy of @quad</doc>
          <type name="Quadrilateral" c:type="PopplerQuadrilateral*"/>
        </return-value>
        <parameters>
          <instance-parameter name="quad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1807">a #PopplerQuadrilateral to copy</doc>
            <type name="Quadrilateral" c:type="PopplerQuadrilateral*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="poppler_quadrilateral_free"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1822">Frees the memory used by @quad</doc>
        <source-position filename="glib/poppler-page.h" line="207"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="quad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1824">a #PopplerQuadrilateral</doc>
            <type name="Quadrilateral" c:type="PopplerQuadrilateral*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="Rectangle"
            c:type="PopplerRectangle"
            glib:type-name="PopplerRectangle"
            glib:get-type="poppler_rectangle_get_type"
            c:symbol-prefix="rectangle">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="117">A #PopplerRectangle is used to describe
locations on a page and bounding boxes</doc>
      <source-position filename="glib/poppler-page.h" line="133"/>
      <field name="x1" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="119">x coordinate of lower left corner</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y1" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="120">y coordinate of lower left corner</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="x2" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="121">x coordinate of upper right corner</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="y2" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="122">y coordinate of upper right corner</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <constructor name="new" c:identifier="poppler_rectangle_new">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1640">Creates a new #PopplerRectangle</doc>
        <source-position filename="glib/poppler-page.h" line="138"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1645">a new #PopplerRectangle, use poppler_rectangle_free() to free it</doc>
          <type name="Rectangle" c:type="PopplerRectangle*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="poppler_rectangle_copy">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1652">Creates a copy of @rectangle.

Note that you must only use this function on an allocated PopplerRectangle, as
returned by poppler_rectangle_new(), poppler_rectangle_copy(), or the list elements
returned from poppler_page_find_text() or poppler_page_find_text_with_options().</doc>
        <source-position filename="glib/poppler-page.h" line="140"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1661">a new allocated copy of @rectangle</doc>
          <type name="Rectangle" c:type="PopplerRectangle*"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1654">a #PopplerRectangle to copy</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_get_ignored_hyphen"
              c:identifier="poppler_rectangle_find_get_ignored_hyphen"
              version="21.05.0">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1713">When using poppler_page_find_text_with_options() with the
%POPPLER_FIND_MULTILINE flag, a match may span more than one line,
and may have been formed by ignoring a hyphen at the end of the line.
When this happens at the end of the line corresponding to @rectangle,
this function returns %TRUE (and then poppler_rectangle_find_get_match_continued()
will also return %TRUE); otherwise it returns %FALSE.

Note that you must only call this function on a #PopplerRectangle
returned in the list from poppler_page_find_text() or
poppler_page_find_text_with_options().</doc>
        <source-position filename="glib/poppler-page.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1728">whether a hyphen was ignored at the end of the line corresponding to @rectangle.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1715">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="const PopplerRectangle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="find_get_match_continued"
              c:identifier="poppler_rectangle_find_get_match_continued"
              version="21.05.0">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1687">When using poppler_page_find_text_with_options() with the
%POPPLER_FIND_MULTILINE flag, a match may span more than one line
and thus consist of more than one rectangle. Every rectangle belonging
to the same match will return %TRUE from this function, except for
the last rectangle, where this function will return %FALSE.

Note that you must only call this function on a #PopplerRectangle
returned in the list from poppler_page_find_text() or
poppler_page_find_text_with_options().</doc>
        <source-position filename="glib/poppler-page.h" line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1701">whether there are more rectangles belonging to the same match</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1689">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="const PopplerRectangle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_rectangle_free">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1671">Frees the given #PopplerRectangle.

Note that you must only use this function on an allocated PopplerRectangle, as
returned by poppler_rectangle_new(), poppler_rectangle_copy(), or the list elements
returned from poppler_page_find_text() or poppler_page_find_text_with_options().</doc>
        <source-position filename="glib/poppler-page.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1673">a #PopplerRectangle</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="STRUCTURE_ELEMENT"
                    c:identifier="POPPLER_STRUCTURE_ELEMENT"
                    introspectable="0">
      <source-position filename="glib/poppler-structure-element.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="SelectionStyle"
                 glib:type-name="PopplerSelectionStyle"
                 glib:get-type="poppler_selection_style_get_type"
                 c:type="PopplerSelectionStyle">
      <doc xml:space="preserve"
           filename="glib/poppler.h"
           line="118">Selection styles</doc>
      <member name="glyph"
              value="0"
              c:identifier="POPPLER_SELECTION_GLYPH"
              glib:nick="glyph"
              glib:name="POPPLER_SELECTION_GLYPH">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="120">glyph is the minimum unit for selection</doc>
      </member>
      <member name="word"
              value="1"
              c:identifier="POPPLER_SELECTION_WORD"
              glib:nick="word"
              glib:name="POPPLER_SELECTION_WORD">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="121">word is the minimum unit for selection</doc>
      </member>
      <member name="line"
              value="2"
              c:identifier="POPPLER_SELECTION_LINE"
              glib:nick="line"
              glib:name="POPPLER_SELECTION_LINE">
        <doc xml:space="preserve"
             filename="glib/poppler.h"
             line="122">line is the minimum unit for selection</doc>
      </member>
    </enumeration>
    <record name="SignatureInfo"
            c:type="PopplerSignatureInfo"
            version="21.12.0"
            glib:type-name="PopplerSignatureInfo"
            glib:get-type="poppler_signature_info_get_type"
            c:symbol-prefix="signature_info">
      <doc xml:space="preserve"
           filename="glib/poppler-form-field.cc"
           line="390">PopplerSignatureInfo contains detailed info about a signature
contained in a form field.</doc>
      <source-position filename="glib/poppler.h" line="221"/>
      <method name="copy"
              c:identifier="poppler_signature_info_copy"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="576">Copies @siginfo, creating an identical #PopplerSignatureInfo.</doc>
        <source-position filename="glib/poppler-form-field.h" line="240"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="582">a new #PopplerSignatureInfo structure identical to @siginfo</doc>
          <type name="SignatureInfo" c:type="PopplerSignatureInfo*"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="578">a #PopplerSignatureInfo structure containing signature metadata and validation status</doc>
            <type name="SignatureInfo" c:type="const PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="poppler_signature_info_free"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="601">Frees @siginfo</doc>
        <source-position filename="glib/poppler-form-field.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="603">a #PopplerSignatureInfo structure containing signature metadata and validation status</doc>
            <type name="SignatureInfo" c:type="PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_certificate_status"
              c:identifier="poppler_signature_info_get_certificate_status"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="637">Returns status of the certificate for given PopplerSignatureInfo.</doc>
        <source-position filename="glib/poppler-form-field.h" line="246"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="643">certificate status of the signature</doc>
          <type name="CertificateStatus" c:type="PopplerCertificateStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="639">a #PopplerSignatureInfo</doc>
            <type name="SignatureInfo" c:type="const PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_local_signing_time"
              c:identifier="poppler_signature_info_get_local_signing_time"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="671">Returns local time of signing as GDateTime. This does not
contain information about time zone since it has not been
preserved during conversion.
Do not modify returned value since it is internal to
PopplerSignatureInfo.</doc>
        <source-position filename="glib/poppler-form-field.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="681">GDateTime</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="673">a #PopplerSignatureInfo</doc>
            <type name="SignatureInfo" c:type="const PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signature_status"
              c:identifier="poppler_signature_info_get_signature_status"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="620">Returns status of the signature for given PopplerSignatureInfo.</doc>
        <source-position filename="glib/poppler-form-field.h" line="244"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="626">signature status of the signature</doc>
          <type name="SignatureStatus" c:type="PopplerSignatureStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="622">a #PopplerSignatureInfo</doc>
            <type name="SignatureInfo" c:type="const PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signer_name"
              c:identifier="poppler_signature_info_get_signer_name"
              version="21.12.0">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.cc"
             line="654">Returns name of signer for given PopplerSignatureInfo.</doc>
        <source-position filename="glib/poppler-form-field.h" line="248"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-form-field.cc"
               line="660">A string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="siginfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-form-field.cc"
                 line="656">a #PopplerSignatureInfo</doc>
            <type name="SignatureInfo" c:type="const PopplerSignatureInfo*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="SignatureStatus"
                 version="21.12.0"
                 glib:type-name="PopplerSignatureStatus"
                 glib:get-type="poppler_signature_status_get_type"
                 c:type="PopplerSignatureStatus">
      <doc xml:space="preserve"
           filename="glib/poppler-form-field.h"
           line="34">Signature verification results</doc>
      <member name="valid"
              value="0"
              c:identifier="POPPLER_SIGNATURE_VALID"
              glib:nick="valid"
              glib:name="POPPLER_SIGNATURE_VALID">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="36">signature is cryptographically valid</doc>
      </member>
      <member name="invalid"
              value="1"
              c:identifier="POPPLER_SIGNATURE_INVALID"
              glib:nick="invalid"
              glib:name="POPPLER_SIGNATURE_INVALID">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="37">signature is cryptographically invalid</doc>
      </member>
      <member name="digest_mismatch"
              value="2"
              c:identifier="POPPLER_SIGNATURE_DIGEST_MISMATCH"
              glib:nick="digest-mismatch"
              glib:name="POPPLER_SIGNATURE_DIGEST_MISMATCH">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="38">document content was changed after the signature was applied</doc>
      </member>
      <member name="decoding_error"
              value="3"
              c:identifier="POPPLER_SIGNATURE_DECODING_ERROR"
              glib:nick="decoding-error"
              glib:name="POPPLER_SIGNATURE_DECODING_ERROR">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="39">signature CMS/PKCS7 structure is malformed</doc>
      </member>
      <member name="generic_error"
              value="4"
              c:identifier="POPPLER_SIGNATURE_GENERIC_ERROR"
              glib:nick="generic-error"
              glib:name="POPPLER_SIGNATURE_GENERIC_ERROR">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="40">failed to verify signature</doc>
      </member>
      <member name="not_found"
              value="5"
              c:identifier="POPPLER_SIGNATURE_NOT_FOUND"
              glib:nick="not-found"
              glib:name="POPPLER_SIGNATURE_NOT_FOUND">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="41">requested signature is not present in the document</doc>
      </member>
      <member name="not_verified"
              value="6"
              c:identifier="POPPLER_SIGNATURE_NOT_VERIFIED"
              glib:nick="not-verified"
              glib:name="POPPLER_SIGNATURE_NOT_VERIFIED">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="42">signature not yet verified</doc>
      </member>
    </enumeration>
    <bitfield name="SignatureValidationFlags"
              version="21.12.0"
              glib:type-name="PopplerSignatureValidationFlags"
              glib:get-type="poppler_signature_validation_flags_get_type"
              c:type="PopplerSignatureValidationFlags">
      <doc xml:space="preserve"
           filename="glib/poppler-form-field.h"
           line="84">Signature validation flags</doc>
      <member name="validate_certificate"
              value="1"
              c:identifier="POPPLER_SIGNATURE_VALIDATION_FLAG_VALIDATE_CERTIFICATE"
              glib:nick="validate-certificate"
              glib:name="POPPLER_SIGNATURE_VALIDATION_FLAG_VALIDATE_CERTIFICATE">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="86">Whether to validate also the certificate of the signature</doc>
      </member>
      <member name="without_ocsp_revocation_check"
              value="2"
              c:identifier="POPPLER_SIGNATURE_VALIDATION_FLAG_WITHOUT_OCSP_REVOCATION_CHECK"
              glib:nick="without-ocsp-revocation-check"
              glib:name="POPPLER_SIGNATURE_VALIDATION_FLAG_WITHOUT_OCSP_REVOCATION_CHECK">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="87">Whether to not do OCSP (Online Certificate Status Protocol) revocation check</doc>
      </member>
      <member name="use_aia_certificate_fetch"
              value="4"
              c:identifier="POPPLER_SIGNATURE_VALIDATION_FLAG_USE_AIA_CERTIFICATE_FETCH"
              glib:nick="use-aia-certificate-fetch"
              glib:name="POPPLER_SIGNATURE_VALIDATION_FLAG_USE_AIA_CERTIFICATE_FETCH">
        <doc xml:space="preserve"
             filename="glib/poppler-form-field.h"
             line="88">Whether to use AIA (Authority Information Access) extension for certificate fetching</doc>
      </member>
    </bitfield>
    <enumeration name="StructureBlockAlign"
                 glib:type-name="PopplerStructureBlockAlign"
                 glib:get-type="poppler_structure_block_align_get_type"
                 c:type="PopplerStructureBlockAlign">
      <member name="before"
              value="0"
              c:identifier="POPPLER_STRUCTURE_BLOCK_ALIGN_BEFORE"
              glib:nick="before"
              glib:name="POPPLER_STRUCTURE_BLOCK_ALIGN_BEFORE">
      </member>
      <member name="middle"
              value="1"
              c:identifier="POPPLER_STRUCTURE_BLOCK_ALIGN_MIDDLE"
              glib:nick="middle"
              glib:name="POPPLER_STRUCTURE_BLOCK_ALIGN_MIDDLE">
      </member>
      <member name="after"
              value="2"
              c:identifier="POPPLER_STRUCTURE_BLOCK_ALIGN_AFTER"
              glib:nick="after"
              glib:name="POPPLER_STRUCTURE_BLOCK_ALIGN_AFTER">
      </member>
      <member name="justify"
              value="3"
              c:identifier="POPPLER_STRUCTURE_BLOCK_ALIGN_JUSTIFY"
              glib:nick="justify"
              glib:name="POPPLER_STRUCTURE_BLOCK_ALIGN_JUSTIFY">
      </member>
    </enumeration>
    <enumeration name="StructureBorderStyle"
                 glib:type-name="PopplerStructureBorderStyle"
                 glib:get-type="poppler_structure_border_style_get_type"
                 c:type="PopplerStructureBorderStyle">
      <member name="none"
              value="0"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_NONE"
              glib:nick="none"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_NONE">
      </member>
      <member name="hidden"
              value="1"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_HIDDEN"
              glib:nick="hidden"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_HIDDEN">
      </member>
      <member name="dotted"
              value="2"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_DOTTED"
              glib:nick="dotted"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_DOTTED">
      </member>
      <member name="dashed"
              value="3"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_DASHED"
              glib:nick="dashed"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_DASHED">
      </member>
      <member name="solid"
              value="4"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_SOLID"
              glib:nick="solid"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_SOLID">
      </member>
      <member name="double"
              value="5"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_DOUBLE"
              glib:nick="double"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_DOUBLE">
      </member>
      <member name="groove"
              value="6"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_GROOVE"
              glib:nick="groove"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_GROOVE">
      </member>
      <member name="inset"
              value="7"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_INSET"
              glib:nick="inset"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_INSET">
      </member>
      <member name="outset"
              value="8"
              c:identifier="POPPLER_STRUCTURE_BORDER_STYLE_OUTSET"
              glib:nick="outset"
              glib:name="POPPLER_STRUCTURE_BORDER_STYLE_OUTSET">
      </member>
    </enumeration>
    <class name="StructureElement"
           c:symbol-prefix="structure_element"
           c:type="PopplerStructureElement"
           parent="GObject.Object"
           glib:type-name="PopplerStructureElement"
           glib:get-type="poppler_structure_element_get_type">
      <method name="get_abbreviation"
              c:identifier="poppler_structure_element_get_abbreviation"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="453">Acronyms and abbreviations contained in elements of type
#POPPLER_STRUCTURE_ELEMENT_SPAN may have an associated expanded
text form, which can be retrieved using this function.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="286"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="461">Text of the expanded abbreviation if the
   element text is an abbreviation or acrony, %NULL if not.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="455">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_actual_text"
              c:identifier="poppler_structure_element_get_actual_text"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="525">Obtains the actual text enclosed by the element (and its child elements).
The actual text is mostly used for non-text elements like images and
figures which &lt;emphasis&gt;do&lt;/emphasis&gt; have the graphical appearance of text, like
a logo. For those the actual text is the equivalent text to those
graphical elements which look like text when rendered.

Note that for elements containing proper text, the function
poppler_structure_element_get_text() must be used instead.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="294"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="538">The actual text for the element, or %NULL
   if not defined.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="527">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_alt_text"
              c:identifier="poppler_structure_element_get_alt_text"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="500">Obtains the “alternate” text representation of the element (and its child
elements). This is mostly used for non-text elements like images and
figures, to specify a textual description of the element.

Note that for elements containing proper text, the function
poppler_structure_element_get_text() must be used instead.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="292"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="511">The alternate text representation for the
   element, or %NULL if not defined.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="502">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background_color"
              c:identifier="poppler_structure_element_get_background_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1155">Obtains the background color of the element. If this attribute is
not specified, the element shall be treated as if it were transparent.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="303"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1163">%TRUE if a color is defined for the element,
   %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1157">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1158">A #PopplerColor.</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_baseline_shift"
              c:identifier="poppler_structure_element_get_baseline_shift"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1537">Obtains how much the text contained in the inline-level structure element should be shifted,
measuring from the baseline of the glyphs.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="343"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1544">A numeric value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1539">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_block_align"
              c:identifier="poppler_structure_element_get_block_align"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1462">Obtains the block-alignment mode of the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="334"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1468">A #PopplerStructureBlockAlign value.</doc>
          <type name="StructureBlockAlign"
                c:type="PopplerStructureBlockAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1464">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_border_color"
              c:identifier="poppler_structure_element_get_border_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1182">Obtains the color of border around the element. The result values
are in before-after-start-end ordering (for the typical Western
left-to-right writing, that is top-bottom-left-right).
If this attribute is not specified, the border color for this element shall
be the current text fill color in effect at the start of its associated
content.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="305"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1195">%TRUE if a color is defined for the element,
   %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1184">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="colors"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1185">An array
   of four #PopplerColor.</doc>
            <array zero-terminated="0" c:type="PopplerColor*" fixed-size="4">
              <type name="Color"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_border_style"
              c:identifier="poppler_structure_element_get_border_style"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1081">Obtains the border style of a structure element. The result values
are in before-after-start-end ordering. For example, using Western
left-to-right writing, that is top-bottom-left-right.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="307"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1083">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="border_styles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1084">
   An array of four #PopplerStructureBorderStyle elements.</doc>
            <array zero-terminated="0"
                   c:type="PopplerStructureBorderStyle*"
                   fixed-size="4">
              <type name="StructureBorderStyle"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_border_thickness"
              c:identifier="poppler_structure_element_get_border_thickness"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1242">Obtains the thickness of the border of an element. The result values
are in before-after-start-end ordering (for the typical Western
left-to-right writing, that is top-bottom-left-right).
A value of 0 indicates that the border shall not be drawn.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="309"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1253">%TRUE if the border thickness attribute is defined for
   the element, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1244">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="border_thicknesses"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1245">
   Array with the four values of border thicknesses.</doc>
            <array zero-terminated="0" c:type="gdouble*" fixed-size="4">
              <type name="gdouble"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_bounding_box"
              c:identifier="poppler_structure_element_get_bounding_box"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1391">Obtains the size of the bounding box of a block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="328"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1398">%TRUE if a bounding box is defined for the element,
   %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1393">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="bounding_box"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1394">A #PopplerRectangle.</doc>
            <type name="Rectangle" c:type="PopplerRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="poppler_structure_element_get_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1127">Obtains the color of the content contained in the element.
If this attribute is not specified, the color for this element shall
be the current text fill color in effect at the start of its associated content.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1136">%TRUE if a color is defined for the element,
   %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1129">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1130">A #PopplerColor.</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_count"
              c:identifier="poppler_structure_element_get_column_count"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1694">Obtains the number of columns used to lay out the content contained
in the grouping element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="360"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1701">Number of columns.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1696">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_gaps"
              c:identifier="poppler_structure_element_get_column_gaps"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1711">Obtains the size of the gaps in between adjacent columns. Returns an
array of elements: the first one is the size of the gap in between
columns 1 and 2, second is the size between columns 2 and 3, and so on.

For elements which use a single column, %NULL is returned and @n_values
is set to zero.

If the attribute is undefined, %NULL is returned and @n_values is set
to a non-zero value.

The array with the results is allocated by the function. When it is
not needed anymore, be sure to call g_free() on it.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="362"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1729">
   Array containing the values for the column gaps, or %NULL if the
   array is empty or the attribute is not defined.</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1713">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1714">Size of the returned array.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_widths"
              c:identifier="poppler_structure_element_get_column_widths"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1751">Obtains an array with the widths of the columns.

The array with the results is allocated by the function. When it is
not needed anymore, be sure to call g_free() on it.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="364"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1761">
   Array containing widths of the columns, or %NULL if the attribute
   is not defined.</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1753">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1754">Size of the returned array.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_end_indent"
              c:identifier="poppler_structure_element_get_end_indent"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1342">Obtains the amount of indentation at the end of the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="322"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1348">A numeric value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1344">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_form_description"
              c:identifier="poppler_structure_element_get_form_description"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1846">Obtains the textual description of the form element. Note that the
description is for informative purposes, and it is not intended
to be rendered. For example, assistive technologies may use the
description field to provide an alternate way of presenting an
element to the user.

The returned string is allocated by the function. When it is
not needed anymore, be sure to call g_free() on it.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="374"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1859">A string, or %NULL if the attribute
   is not defined.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1848">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_form_role"
              c:identifier="poppler_structure_element_get_form_role"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1802">Obtains the role of a form structure element that is part of a form, or is
a form field. This hints how the control for the element is intended
to be rendered.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="370"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1810">A #PopplerStructureFormRole value.</doc>
          <type name="StructureFormRole" c:type="PopplerStructureFormRole"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1804">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_form_state"
              c:identifier="poppler_structure_element_get_form_state"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1829">For a structure element that is a form field, obtains in which state
the associated control is expected to be rendered.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="372"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1836">A #PopplerStructureFormState value.</doc>
          <type name="StructureFormState" c:type="PopplerStructureFormState"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1831">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_glyph_orientation"
              c:identifier="poppler_structure_element_get_glyph_orientation"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1675">Obtains the glyph orientation for the text contained in a
inline-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="357"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1682">A #PopplerStructureGlyphOrientation value.</doc>
          <type name="StructureGlyphOrientation"
                c:type="PopplerStructureGlyphOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1677">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="poppler_structure_element_get_height"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1443">Obtains the height of the block-level structure element. Note that for elements which do
not specify a height, it has to be calculated, and in this case -1 is returned.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="332"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1450">A positive value if a width is defined, or -1
   if the height is to be calculated automatically.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1445">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="poppler_structure_element_get_id"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="414">Obtains the identifier of an element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="282"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="420">The identifier of the element (if
   defined), or %NULL.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="416">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inline_align"
              c:identifier="poppler_structure_element_get_inline_align"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1478">Obtains the inline-alignment mode of the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="336"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1484">A #PopplerStructureInlineAlign value.</doc>
          <type name="StructureInlineAlign"
                c:type="PopplerStructureInlineAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1480">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="poppler_structure_element_get_kind"
              version="0.26">
        <source-position filename="glib/poppler-structure-element.h"
                         line="270"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="90">A #PopplerStructureElementKind value.</doc>
          <type name="StructureElementKind"
                c:type="PopplerStructureElementKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="88">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_language"
              c:identifier="poppler_structure_element_get_language"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="479">Obtains the language and country code for the content in an element,
in two-letter ISO format, e.g. &lt;code&gt;en_ES&lt;/code&gt;, or %NULL if not
defined.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="288"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="487">language and country code, or %NULL.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="481">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_line_height"
              c:identifier="poppler_structure_element_get_line_height"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1554">Obtains the line height for the text contained in the inline-level structure element.
Note that for elements which do not specify a line height, it has to be calculated,
and in this case -1 is returned.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="345"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1562">A positive value if a line height is defined, or -1
   if the height is to be calculated automatically.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1556">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_list_numbering"
              c:identifier="poppler_structure_element_get_list_numbering"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1784">Obtains the list numbering style for list items.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="367"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1790">A #PopplerStructureListNumbering value.</doc>
          <type name="StructureListNumbering"
                c:type="PopplerStructureListNumbering"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1786">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_padding"
              c:identifier="poppler_structure_element_get_padding"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1272">Obtains the padding of an element (space around it). The result
values are in before-after-start-end ordering. For example using
Western left-to-right writing, that is top-bottom-left-right.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="311"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1274">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="paddings"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1275">
   Padding for the four sides of the element.</doc>
            <array zero-terminated="0" c:type="gdouble*" fixed-size="4">
              <type name="gdouble"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_page"
              c:identifier="poppler_structure_element_get_page"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="317">Obtains the page number in which the element is contained.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="272"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="323">Number of the page that contains the element, of
   &lt;code&gt;-1&lt;/code&gt; if not defined.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="319">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_placement"
              c:identifier="poppler_structure_element_get_placement"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1032">Obtains the placement type of the structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="299"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1038">A #PopplerStructurePlacement value.</doc>
          <type name="StructurePlacement" c:type="PopplerStructurePlacement"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1034">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ruby_align"
              c:identifier="poppler_structure_element_get_ruby_align"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1641">Obtains the alignment for the ruby text contained in a
inline-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="353"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1648">A #PopplerStructureRubyAlign value.</doc>
          <type name="StructureRubyAlign" c:type="PopplerStructureRubyAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1643">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ruby_position"
              c:identifier="poppler_structure_element_get_ruby_position"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1658">Obtains the position for the ruby text contained in a
inline-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="355"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1665">A #PopplerStructureRubyPosition value.</doc>
          <type name="StructureRubyPosition"
                c:type="PopplerStructureRubyPosition"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1660">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_space_after"
              c:identifier="poppler_structure_element_get_space_after"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1310">Obtains the amount of empty space after the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="318"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1316">A positive value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1312">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_space_before"
              c:identifier="poppler_structure_element_get_space_before"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1294">Obtains the amount of empty space before the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="316"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1300">A positive value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1296">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_indent"
              c:identifier="poppler_structure_element_get_start_indent"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1326">Obtains the amount of indentation at the beginning of the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1332">A numeric value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1328">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_table_border_style"
              c:identifier="poppler_structure_element_get_table_border_style"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1494">Obtains the table cell border style of a block-level structure element. The result values
are in before-after-start-end ordering. For example, using Western
left-to-right writing, that is top-bottom-left-right.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="338"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1496">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="border_styles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1497">
   An array of four #PopplerStructureBorderStyle elements.</doc>
            <array zero-terminated="0"
                   c:type="PopplerStructureBorderStyle*"
                   fixed-size="4">
              <type name="StructureBorderStyle"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_table_column_span"
              c:identifier="poppler_structure_element_get_table_column_span"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1901">Obtains the number of columns the table element spans to.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="379"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1907">A positive, non-zero value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1903">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_table_headers"
              c:identifier="poppler_structure_element_get_table_headers"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1917">Obtains an array with the names of the table column headers. This is only
useful for table header row elements.

The array with the results is allocated by the function. The number
of items in the returned array can be obtained with g_strv_length().
The returned value must be freed using g_strfreev().</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="381"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1928">
   Zero-terminated array of strings with the table header names,
   or %NULL if the attribute is not defined.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1919">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_table_padding"
              c:identifier="poppler_structure_element_get_table_padding"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1514">Obtains the padding between the table cell’s content rectangle and the
surrounding border of a block-level structure element. The result
values are in before-after-start-end ordering (for the typical
Western left-to-right writing, that is top-bottom-left-right).</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="340"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1516">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="paddings"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1517">
   Padding for the four sides of the element.</doc>
            <array zero-terminated="0" c:type="gdouble*" fixed-size="4">
              <type name="gdouble"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_table_row_span"
              c:identifier="poppler_structure_element_get_table_row_span"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1885">Obtains the number of rows the table element spans to.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="377"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1891">A positive, non-zero value.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1887">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_table_scope"
              c:identifier="poppler_structure_element_get_table_scope"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1963">Obtains the scope of a table structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1969">A #PopplerStructureTableScope value.</doc>
          <type name="StructureTableScope"
                c:type="PopplerStructureTableScope"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1965">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_table_summary"
              c:identifier="poppler_structure_element_get_table_summary"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1979">Obtains the textual summary of the contents of the table element. Note that
the summary is meant for informative purposes, and it is not intended
to be rendered. For example, assistive technologies may use the
description field to provide an alternate way of presenting an element
to the user, or a document indexer may want to scan it for additional
keywords.

The returned string is allocated by the function. When it is
not needed anymore, be sure to call g_free() on it.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="385"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1993">A string, or %NULL if the attribute
   is not defined.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1981">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="poppler_structure_element_get_text"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="552">Obtains the text enclosed by an element, or the text enclosed by the
elements in the subtree (including the element itself).</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="290"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="561">A string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="554">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="555">A #PopplerStructureGetTextFlags value, or
   %POPPLER_STRUCTURE_GET_TEXT_NONE to disable all the flags.</doc>
            <type name="StructureGetTextFlags"
                  c:type="PopplerStructureGetTextFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_align"
              c:identifier="poppler_structure_element_get_text_align"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1374">Obtains the text alignment mode of the text contained into a
block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="326"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1381">A #PopplerStructureTextAlign value.</doc>
          <type name="StructureTextAlign" c:type="PopplerStructureTextAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1376">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_decoration_color"
              c:identifier="poppler_structure_element_get_text_decoration_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1574">Obtains the color of the text decoration for the text contained
in the inline-level structure element.
If this attribute is not specified, the color for this element shall be the current fill
color in effect at the start of its associated content.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="347"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1584">%TRUE if a color is defined for the element,
   %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1576">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1577">A #PopplerColor.</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_decoration_thickness"
              c:identifier="poppler_structure_element_get_text_decoration_thickness"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1603">Obtains the thickness of the text decoration for the text contained
in the inline-level structure element.
If this attribute is not specified, it shall be derived from the current
stroke thickness in effect at the start of the element’s associated content.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="349"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1612">Thickness of the text decoration, or NAN if not defined.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1605">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_decoration_type"
              c:identifier="poppler_structure_element_get_text_decoration_type"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1624">Obtains the text decoration type of the text contained in the
inline-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="351"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1631">A #PopplerStructureTextDecoration value.</doc>
          <type name="StructureTextDecoration"
                c:type="PopplerStructureTextDecoration"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1626">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_indent"
              c:identifier="poppler_structure_element_get_text_indent"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1358">Obtains the amount of indentation of the text contained in the block-level structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="324"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1364">A numeric value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1360">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_spans"
              c:identifier="poppler_structure_element_get_text_spans"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="981">Obtains the text enclosed by an element, as an array of #PopplerTextSpan
structures. Each item in the list is a piece of text which share the same
attributes, plus its attributes. The following example shows how to
obtain and free the text spans of an element:

&lt;informalexample&gt;&lt;programlisting&gt;
guint i, n_spans;
PopplerTextSpan **text_spans =
   poppler_structure_element_get_text_spans (element, &amp;n_spans);
/&lt;!-- --&gt;* Use the text spans *&lt;!-- --&gt;/
for (i = 0; i &lt; n_spans; i++)
   poppler_text_span_free (text_spans[i]);
g_free (text_spans);
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="296"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1002">
   An array of #PopplerTextSpan elements.</doc>
          <array length="0" zero-terminated="0" c:type="PopplerTextSpan**">
            <type name="TextSpan"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="983">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
          <parameter name="n_text_spans"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="984">A pointer to the location where the number of elements in
   the returned array will be stored.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="poppler_structure_element_get_title"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="434">Obtains the title of an element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="284"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="440">The title of the element, or %NULL.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="436">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="poppler_structure_element_get_width"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1424">Obtains the width of the block-level structure element. Note that for elements which do
not specify a width, it has to be calculated, and in this case -1 is returned.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="330"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1431">A positive value if a width is defined, or -1
   if the width is to be calculated automatically.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1426">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_writing_mode"
              c:identifier="poppler_structure_element_get_writing_mode"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="1048">Obtains the writing mode (writing direction) of the content associated
with a structure element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="301"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="1055">A #PopplerStructureWritingMode value.</doc>
          <type name="StructureWritingMode"
                c:type="PopplerStructureWritingMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="1050">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_block"
              c:identifier="poppler_structure_element_is_block"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="377">Checks whether an element is a block element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="278"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="383">%TRUE if  the element is a block element, or %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="379">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_content"
              c:identifier="poppler_structure_element_is_content"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="341">Checks whether an element is actual document content.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="274"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="347">%TRUE if the element is content, or %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="343">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_grouping"
              c:identifier="poppler_structure_element_is_grouping"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="395">Checks whether an element is a grouping element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="280"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="401">%TRUE if the element is a grouping element, %FALSE
   otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="397">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_inline"
              c:identifier="poppler_structure_element_is_inline"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="359">Checks whether an element is an inline element.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="276"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="365">%TRUE if the element is an inline element, or %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_structure_element"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="361">A #PopplerStructureElement</doc>
            <type name="StructureElement" c:type="PopplerStructureElement*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="StructureElementIter"
            c:type="PopplerStructureElementIter"
            glib:type-name="PopplerStructureElementIter"
            glib:get-type="poppler_structure_element_iter_get_type"
            c:symbol-prefix="structure_element_iter">
      <source-position filename="glib/poppler.h" line="218"/>
      <constructor name="new"
                   c:identifier="poppler_structure_element_iter_new"
                   version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="630">Returns the root #PopplerStructureElementIter for @document, or %NULL. The
returned value must be freed with poppler_structure_element_iter_free().

Documents may have an associated structure tree &amp;mdash;mostly, Tagged-PDF
compliant documents&amp;mdash; which can be used to obtain information about
the document structure and its contents. Each node in the tree contains
a #PopplerStructureElement.

Here is a simple example that walks the whole tree:

&lt;informalexample&gt;&lt;programlisting&gt;
static void
walk_structure (PopplerStructureElementIter *iter)
{
  do {
    /&lt;!-- --&gt;* Get the element and do something with it *&lt;!-- --&gt;/
    PopplerStructureElementIter *child = poppler_structure_element_iter_get_child (iter);
    if (child)
      walk_structure (child);
    poppler_structure_element_iter_free (child);
  } while (poppler_structure_element_iter_next (iter));
}
...
{
  iter = poppler_structure_element_iter_new (document);
  walk_structure (iter);
  poppler_structure_element_iter_free (iter);
}
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="391"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="664">a new #PopplerStructureElementIter, or %NULL if document
   doesn't have structure tree.</doc>
          <type name="StructureElementIter"
                c:type="PopplerStructureElementIter*"/>
        </return-value>
        <parameters>
          <parameter name="poppler_document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="632">a #PopplerDocument.</doc>
            <type name="Document" c:type="PopplerDocument*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy"
              c:identifier="poppler_structure_element_iter_copy"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="589">Creates a new #PopplerStructureElementIter as a copy of @iter. The
returned value must be freed with poppler_structure_element_iter_free().</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="395"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="596">a new #PopplerStructureElementIter</doc>
          <type name="StructureElementIter"
                c:type="PopplerStructureElementIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="591">a #PopplerStructureElementIter</doc>
            <type name="StructureElementIter"
                  c:type="PopplerStructureElementIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="poppler_structure_element_iter_free"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="612">Frees @iter.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="401"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="614">a #PopplerStructureElementIter</doc>
            <type name="StructureElementIter"
                  c:type="PopplerStructureElementIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child"
              c:identifier="poppler_structure_element_iter_get_child"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="734">Returns a new iterator to the children elements of the
#PopplerStructureElement associated with @iter. The returned value must
be freed with poppler_structure_element_iter_free().</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="393"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="742">a new #PopplerStructureElementIter</doc>
          <type name="StructureElementIter"
                c:type="PopplerStructureElementIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="736">a #PopplerStructureElementIter</doc>
            <type name="StructureElementIter"
                  c:type="PopplerStructureElementIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_element"
              c:identifier="poppler_structure_element_iter_get_element"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="715">Returns the #PopplerStructureElementIter associated with @iter.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="397"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="721">a new #PopplerStructureElementIter</doc>
          <type name="StructureElement" c:type="PopplerStructureElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="717">a #PopplerStructureElementIter</doc>
            <type name="StructureElementIter"
                  c:type="PopplerStructureElementIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="poppler_structure_element_iter_next"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="692">Sets @iter to point to the next structure element at the current level
of the tree, if valid. See poppler_structure_element_iter_new() for more
information.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="399"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="700">%TRUE, if @iter was set to the next structure element</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="694">a #PopplerStructureElementIter</doc>
            <type name="StructureElementIter"
                  c:type="PopplerStructureElementIter*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="StructureElementKind"
                 glib:type-name="PopplerStructureElementKind"
                 glib:get-type="poppler_structure_element_kind_get_type"
                 c:type="PopplerStructureElementKind">
      <member name="content"
              value="0"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_CONTENT"
              glib:nick="content"
              glib:name="POPPLER_STRUCTURE_ELEMENT_CONTENT">
      </member>
      <member name="object_reference"
              value="1"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_OBJECT_REFERENCE"
              glib:nick="object-reference"
              glib:name="POPPLER_STRUCTURE_ELEMENT_OBJECT_REFERENCE">
      </member>
      <member name="document"
              value="2"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_DOCUMENT"
              glib:nick="document"
              glib:name="POPPLER_STRUCTURE_ELEMENT_DOCUMENT">
      </member>
      <member name="part"
              value="3"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_PART"
              glib:nick="part"
              glib:name="POPPLER_STRUCTURE_ELEMENT_PART">
      </member>
      <member name="article"
              value="4"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_ARTICLE"
              glib:nick="article"
              glib:name="POPPLER_STRUCTURE_ELEMENT_ARTICLE">
      </member>
      <member name="section"
              value="5"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_SECTION"
              glib:nick="section"
              glib:name="POPPLER_STRUCTURE_ELEMENT_SECTION">
      </member>
      <member name="div"
              value="6"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_DIV"
              glib:nick="div"
              glib:name="POPPLER_STRUCTURE_ELEMENT_DIV">
      </member>
      <member name="span"
              value="7"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_SPAN"
              glib:nick="span"
              glib:name="POPPLER_STRUCTURE_ELEMENT_SPAN">
      </member>
      <member name="quote"
              value="8"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_QUOTE"
              glib:nick="quote"
              glib:name="POPPLER_STRUCTURE_ELEMENT_QUOTE">
      </member>
      <member name="note"
              value="9"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_NOTE"
              glib:nick="note"
              glib:name="POPPLER_STRUCTURE_ELEMENT_NOTE">
      </member>
      <member name="reference"
              value="10"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_REFERENCE"
              glib:nick="reference"
              glib:name="POPPLER_STRUCTURE_ELEMENT_REFERENCE">
      </member>
      <member name="bibentry"
              value="11"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_BIBENTRY"
              glib:nick="bibentry"
              glib:name="POPPLER_STRUCTURE_ELEMENT_BIBENTRY">
      </member>
      <member name="code"
              value="12"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_CODE"
              glib:nick="code"
              glib:name="POPPLER_STRUCTURE_ELEMENT_CODE">
      </member>
      <member name="link"
              value="13"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_LINK"
              glib:nick="link"
              glib:name="POPPLER_STRUCTURE_ELEMENT_LINK">
      </member>
      <member name="annot"
              value="14"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_ANNOT"
              glib:nick="annot"
              glib:name="POPPLER_STRUCTURE_ELEMENT_ANNOT">
      </member>
      <member name="blockquote"
              value="15"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_BLOCKQUOTE"
              glib:nick="blockquote"
              glib:name="POPPLER_STRUCTURE_ELEMENT_BLOCKQUOTE">
      </member>
      <member name="caption"
              value="16"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_CAPTION"
              glib:nick="caption"
              glib:name="POPPLER_STRUCTURE_ELEMENT_CAPTION">
      </member>
      <member name="nonstruct"
              value="17"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_NONSTRUCT"
              glib:nick="nonstruct"
              glib:name="POPPLER_STRUCTURE_ELEMENT_NONSTRUCT">
      </member>
      <member name="toc"
              value="18"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TOC"
              glib:nick="toc"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TOC">
      </member>
      <member name="toc_item"
              value="19"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TOC_ITEM"
              glib:nick="toc-item"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TOC_ITEM">
      </member>
      <member name="index"
              value="20"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_INDEX"
              glib:nick="index"
              glib:name="POPPLER_STRUCTURE_ELEMENT_INDEX">
      </member>
      <member name="private"
              value="21"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_PRIVATE"
              glib:nick="private"
              glib:name="POPPLER_STRUCTURE_ELEMENT_PRIVATE">
      </member>
      <member name="paragraph"
              value="22"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_PARAGRAPH"
              glib:nick="paragraph"
              glib:name="POPPLER_STRUCTURE_ELEMENT_PARAGRAPH">
      </member>
      <member name="heading"
              value="23"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING"
              glib:nick="heading"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING">
      </member>
      <member name="heading_1"
              value="24"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_1"
              glib:nick="heading-1"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_1">
      </member>
      <member name="heading_2"
              value="25"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_2"
              glib:nick="heading-2"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_2">
      </member>
      <member name="heading_3"
              value="26"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_3"
              glib:nick="heading-3"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_3">
      </member>
      <member name="heading_4"
              value="27"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_4"
              glib:nick="heading-4"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_4">
      </member>
      <member name="heading_5"
              value="28"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_5"
              glib:nick="heading-5"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_5">
      </member>
      <member name="heading_6"
              value="29"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_HEADING_6"
              glib:nick="heading-6"
              glib:name="POPPLER_STRUCTURE_ELEMENT_HEADING_6">
      </member>
      <member name="list"
              value="30"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_LIST"
              glib:nick="list"
              glib:name="POPPLER_STRUCTURE_ELEMENT_LIST">
      </member>
      <member name="list_item"
              value="31"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_LIST_ITEM"
              glib:nick="list-item"
              glib:name="POPPLER_STRUCTURE_ELEMENT_LIST_ITEM">
      </member>
      <member name="list_label"
              value="32"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_LIST_LABEL"
              glib:nick="list-label"
              glib:name="POPPLER_STRUCTURE_ELEMENT_LIST_LABEL">
      </member>
      <member name="list_body"
              value="33"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_LIST_BODY"
              glib:nick="list-body"
              glib:name="POPPLER_STRUCTURE_ELEMENT_LIST_BODY">
      </member>
      <member name="table"
              value="34"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE"
              glib:nick="table"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE">
      </member>
      <member name="table_row"
              value="35"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_ROW"
              glib:nick="table-row"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_ROW">
      </member>
      <member name="table_heading"
              value="36"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_HEADING"
              glib:nick="table-heading"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_HEADING">
      </member>
      <member name="table_data"
              value="37"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_DATA"
              glib:nick="table-data"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_DATA">
      </member>
      <member name="table_header"
              value="38"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_HEADER"
              glib:nick="table-header"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_HEADER">
      </member>
      <member name="table_footer"
              value="39"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_FOOTER"
              glib:nick="table-footer"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_FOOTER">
      </member>
      <member name="table_body"
              value="40"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_TABLE_BODY"
              glib:nick="table-body"
              glib:name="POPPLER_STRUCTURE_ELEMENT_TABLE_BODY">
      </member>
      <member name="ruby"
              value="41"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_RUBY"
              glib:nick="ruby"
              glib:name="POPPLER_STRUCTURE_ELEMENT_RUBY">
      </member>
      <member name="ruby_base_text"
              value="42"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_RUBY_BASE_TEXT"
              glib:nick="ruby-base-text"
              glib:name="POPPLER_STRUCTURE_ELEMENT_RUBY_BASE_TEXT">
      </member>
      <member name="ruby_annot_text"
              value="43"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_RUBY_ANNOT_TEXT"
              glib:nick="ruby-annot-text"
              glib:name="POPPLER_STRUCTURE_ELEMENT_RUBY_ANNOT_TEXT">
      </member>
      <member name="ruby_punctuation"
              value="44"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_RUBY_PUNCTUATION"
              glib:nick="ruby-punctuation"
              glib:name="POPPLER_STRUCTURE_ELEMENT_RUBY_PUNCTUATION">
      </member>
      <member name="warichu"
              value="45"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_WARICHU"
              glib:nick="warichu"
              glib:name="POPPLER_STRUCTURE_ELEMENT_WARICHU">
      </member>
      <member name="warichu_text"
              value="46"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_WARICHU_TEXT"
              glib:nick="warichu-text"
              glib:name="POPPLER_STRUCTURE_ELEMENT_WARICHU_TEXT">
      </member>
      <member name="warichu_punctuation"
              value="47"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_WARICHU_PUNCTUATION"
              glib:nick="warichu-punctuation"
              glib:name="POPPLER_STRUCTURE_ELEMENT_WARICHU_PUNCTUATION">
      </member>
      <member name="figure"
              value="48"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_FIGURE"
              glib:nick="figure"
              glib:name="POPPLER_STRUCTURE_ELEMENT_FIGURE">
      </member>
      <member name="formula"
              value="49"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_FORMULA"
              glib:nick="formula"
              glib:name="POPPLER_STRUCTURE_ELEMENT_FORMULA">
      </member>
      <member name="form"
              value="50"
              c:identifier="POPPLER_STRUCTURE_ELEMENT_FORM"
              glib:nick="form"
              glib:name="POPPLER_STRUCTURE_ELEMENT_FORM">
      </member>
    </enumeration>
    <enumeration name="StructureFormRole"
                 glib:type-name="PopplerStructureFormRole"
                 glib:get-type="poppler_structure_form_role_get_type"
                 c:type="PopplerStructureFormRole">
      <member name="undefined"
              value="0"
              c:identifier="POPPLER_STRUCTURE_FORM_ROLE_UNDEFINED"
              glib:nick="undefined"
              glib:name="POPPLER_STRUCTURE_FORM_ROLE_UNDEFINED">
      </member>
      <member name="radio_button"
              value="1"
              c:identifier="POPPLER_STRUCTURE_FORM_ROLE_RADIO_BUTTON"
              glib:nick="radio-button"
              glib:name="POPPLER_STRUCTURE_FORM_ROLE_RADIO_BUTTON">
      </member>
      <member name="push_button"
              value="2"
              c:identifier="POPPLER_STRUCTURE_FORM_ROLE_PUSH_BUTTON"
              glib:nick="push-button"
              glib:name="POPPLER_STRUCTURE_FORM_ROLE_PUSH_BUTTON">
      </member>
      <member name="text_value"
              value="3"
              c:identifier="POPPLER_STRUCTURE_FORM_ROLE_TEXT_VALUE"
              glib:nick="text-value"
              glib:name="POPPLER_STRUCTURE_FORM_ROLE_TEXT_VALUE">
      </member>
      <member name="checkbox"
              value="4"
              c:identifier="POPPLER_STRUCTURE_FORM_ROLE_CHECKBOX"
              glib:nick="checkbox"
              glib:name="POPPLER_STRUCTURE_FORM_ROLE_CHECKBOX">
      </member>
    </enumeration>
    <enumeration name="StructureFormState"
                 glib:type-name="PopplerStructureFormState"
                 glib:get-type="poppler_structure_form_state_get_type"
                 c:type="PopplerStructureFormState">
      <member name="on"
              value="0"
              c:identifier="POPPLER_STRUCTURE_FORM_STATE_ON"
              glib:nick="on"
              glib:name="POPPLER_STRUCTURE_FORM_STATE_ON">
      </member>
      <member name="off"
              value="1"
              c:identifier="POPPLER_STRUCTURE_FORM_STATE_OFF"
              glib:nick="off"
              glib:name="POPPLER_STRUCTURE_FORM_STATE_OFF">
      </member>
      <member name="neutral"
              value="2"
              c:identifier="POPPLER_STRUCTURE_FORM_STATE_NEUTRAL"
              glib:nick="neutral"
              glib:name="POPPLER_STRUCTURE_FORM_STATE_NEUTRAL">
      </member>
    </enumeration>
    <bitfield name="StructureGetTextFlags"
              glib:type-name="PopplerStructureGetTextFlags"
              glib:get-type="poppler_structure_get_text_flags_get_type"
              c:type="PopplerStructureGetTextFlags">
      <member name="none"
              value="0"
              c:identifier="POPPLER_STRUCTURE_GET_TEXT_NONE"
              glib:nick="none"
              glib:name="POPPLER_STRUCTURE_GET_TEXT_NONE">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.h"
             line="92">No flags.</doc>
      </member>
      <member name="recursive"
              value="1"
              c:identifier="POPPLER_STRUCTURE_GET_TEXT_RECURSIVE"
              glib:nick="recursive"
              glib:name="POPPLER_STRUCTURE_GET_TEXT_RECURSIVE">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.h"
             line="93">For non-leaf, non-content
   elements, recursively obtain the text from all the elements
   enclosed in the subtree.</doc>
      </member>
    </bitfield>
    <enumeration name="StructureGlyphOrientation"
                 glib:type-name="PopplerStructureGlyphOrientation"
                 glib:get-type="poppler_structure_glyph_orientation_get_type"
                 c:type="PopplerStructureGlyphOrientation">
      <member name="auto"
              value="0"
              c:identifier="POPPLER_STRUCTURE_GLYPH_ORIENTATION_AUTO"
              glib:nick="auto"
              glib:name="POPPLER_STRUCTURE_GLYPH_ORIENTATION_AUTO">
      </member>
      <member name="0"
              value="0"
              c:identifier="POPPLER_STRUCTURE_GLYPH_ORIENTATION_0"
              glib:nick="0"
              glib:name="POPPLER_STRUCTURE_GLYPH_ORIENTATION_0">
      </member>
      <member name="90"
              value="1"
              c:identifier="POPPLER_STRUCTURE_GLYPH_ORIENTATION_90"
              glib:nick="90"
              glib:name="POPPLER_STRUCTURE_GLYPH_ORIENTATION_90">
      </member>
      <member name="180"
              value="2"
              c:identifier="POPPLER_STRUCTURE_GLYPH_ORIENTATION_180"
              glib:nick="180"
              glib:name="POPPLER_STRUCTURE_GLYPH_ORIENTATION_180">
      </member>
      <member name="270"
              value="3"
              c:identifier="POPPLER_STRUCTURE_GLYPH_ORIENTATION_270"
              glib:nick="270"
              glib:name="POPPLER_STRUCTURE_GLYPH_ORIENTATION_270">
      </member>
    </enumeration>
    <enumeration name="StructureInlineAlign"
                 glib:type-name="PopplerStructureInlineAlign"
                 glib:get-type="poppler_structure_inline_align_get_type"
                 c:type="PopplerStructureInlineAlign">
      <member name="start"
              value="0"
              c:identifier="POPPLER_STRUCTURE_INLINE_ALIGN_START"
              glib:nick="start"
              glib:name="POPPLER_STRUCTURE_INLINE_ALIGN_START">
      </member>
      <member name="center"
              value="1"
              c:identifier="POPPLER_STRUCTURE_INLINE_ALIGN_CENTER"
              glib:nick="center"
              glib:name="POPPLER_STRUCTURE_INLINE_ALIGN_CENTER">
      </member>
      <member name="end"
              value="2"
              c:identifier="POPPLER_STRUCTURE_INLINE_ALIGN_END"
              glib:nick="end"
              glib:name="POPPLER_STRUCTURE_INLINE_ALIGN_END">
      </member>
    </enumeration>
    <enumeration name="StructureListNumbering"
                 glib:type-name="PopplerStructureListNumbering"
                 glib:get-type="poppler_structure_list_numbering_get_type"
                 c:type="PopplerStructureListNumbering">
      <member name="none"
              value="0"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_NONE"
              glib:nick="none"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_NONE">
      </member>
      <member name="disc"
              value="1"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_DISC"
              glib:nick="disc"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_DISC">
      </member>
      <member name="circle"
              value="2"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_CIRCLE"
              glib:nick="circle"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_CIRCLE">
      </member>
      <member name="square"
              value="3"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_SQUARE"
              glib:nick="square"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_SQUARE">
      </member>
      <member name="decimal"
              value="4"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_DECIMAL"
              glib:nick="decimal"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_DECIMAL">
      </member>
      <member name="upper_roman"
              value="5"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ROMAN"
              glib:nick="upper-roman"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ROMAN">
      </member>
      <member name="lower_roman"
              value="6"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ROMAN"
              glib:nick="lower-roman"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ROMAN">
      </member>
      <member name="upper_alpha"
              value="7"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ALPHA"
              glib:nick="upper-alpha"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_UPPER_ALPHA">
      </member>
      <member name="lower_alpha"
              value="8"
              c:identifier="POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ALPHA"
              glib:nick="lower-alpha"
              glib:name="POPPLER_STRUCTURE_LIST_NUMBERING_LOWER_ALPHA">
      </member>
    </enumeration>
    <enumeration name="StructurePlacement"
                 glib:type-name="PopplerStructurePlacement"
                 glib:get-type="poppler_structure_placement_get_type"
                 c:type="PopplerStructurePlacement">
      <member name="block"
              value="0"
              c:identifier="POPPLER_STRUCTURE_PLACEMENT_BLOCK"
              glib:nick="block"
              glib:name="POPPLER_STRUCTURE_PLACEMENT_BLOCK">
      </member>
      <member name="inline"
              value="1"
              c:identifier="POPPLER_STRUCTURE_PLACEMENT_INLINE"
              glib:nick="inline"
              glib:name="POPPLER_STRUCTURE_PLACEMENT_INLINE">
      </member>
      <member name="before"
              value="2"
              c:identifier="POPPLER_STRUCTURE_PLACEMENT_BEFORE"
              glib:nick="before"
              glib:name="POPPLER_STRUCTURE_PLACEMENT_BEFORE">
      </member>
      <member name="start"
              value="3"
              c:identifier="POPPLER_STRUCTURE_PLACEMENT_START"
              glib:nick="start"
              glib:name="POPPLER_STRUCTURE_PLACEMENT_START">
      </member>
      <member name="end"
              value="4"
              c:identifier="POPPLER_STRUCTURE_PLACEMENT_END"
              glib:nick="end"
              glib:name="POPPLER_STRUCTURE_PLACEMENT_END">
      </member>
    </enumeration>
    <enumeration name="StructureRubyAlign"
                 glib:type-name="PopplerStructureRubyAlign"
                 glib:get-type="poppler_structure_ruby_align_get_type"
                 c:type="PopplerStructureRubyAlign">
      <member name="start"
              value="0"
              c:identifier="POPPLER_STRUCTURE_RUBY_ALIGN_START"
              glib:nick="start"
              glib:name="POPPLER_STRUCTURE_RUBY_ALIGN_START">
      </member>
      <member name="center"
              value="1"
              c:identifier="POPPLER_STRUCTURE_RUBY_ALIGN_CENTER"
              glib:nick="center"
              glib:name="POPPLER_STRUCTURE_RUBY_ALIGN_CENTER">
      </member>
      <member name="end"
              value="2"
              c:identifier="POPPLER_STRUCTURE_RUBY_ALIGN_END"
              glib:nick="end"
              glib:name="POPPLER_STRUCTURE_RUBY_ALIGN_END">
      </member>
      <member name="justify"
              value="3"
              c:identifier="POPPLER_STRUCTURE_RUBY_ALIGN_JUSTIFY"
              glib:nick="justify"
              glib:name="POPPLER_STRUCTURE_RUBY_ALIGN_JUSTIFY">
      </member>
      <member name="distribute"
              value="4"
              c:identifier="POPPLER_STRUCTURE_RUBY_ALIGN_DISTRIBUTE"
              glib:nick="distribute"
              glib:name="POPPLER_STRUCTURE_RUBY_ALIGN_DISTRIBUTE">
      </member>
    </enumeration>
    <enumeration name="StructureRubyPosition"
                 glib:type-name="PopplerStructureRubyPosition"
                 glib:get-type="poppler_structure_ruby_position_get_type"
                 c:type="PopplerStructureRubyPosition">
      <member name="before"
              value="0"
              c:identifier="POPPLER_STRUCTURE_RUBY_POSITION_BEFORE"
              glib:nick="before"
              glib:name="POPPLER_STRUCTURE_RUBY_POSITION_BEFORE">
      </member>
      <member name="after"
              value="1"
              c:identifier="POPPLER_STRUCTURE_RUBY_POSITION_AFTER"
              glib:nick="after"
              glib:name="POPPLER_STRUCTURE_RUBY_POSITION_AFTER">
      </member>
      <member name="warichu"
              value="2"
              c:identifier="POPPLER_STRUCTURE_RUBY_POSITION_WARICHU"
              glib:nick="warichu"
              glib:name="POPPLER_STRUCTURE_RUBY_POSITION_WARICHU">
      </member>
      <member name="inline"
              value="3"
              c:identifier="POPPLER_STRUCTURE_RUBY_POSITION_INLINE"
              glib:nick="inline"
              glib:name="POPPLER_STRUCTURE_RUBY_POSITION_INLINE">
      </member>
    </enumeration>
    <enumeration name="StructureTableScope"
                 glib:type-name="PopplerStructureTableScope"
                 glib:get-type="poppler_structure_table_scope_get_type"
                 c:type="PopplerStructureTableScope">
      <member name="row"
              value="0"
              c:identifier="POPPLER_STRUCTURE_TABLE_SCOPE_ROW"
              glib:nick="row"
              glib:name="POPPLER_STRUCTURE_TABLE_SCOPE_ROW">
      </member>
      <member name="column"
              value="1"
              c:identifier="POPPLER_STRUCTURE_TABLE_SCOPE_COLUMN"
              glib:nick="column"
              glib:name="POPPLER_STRUCTURE_TABLE_SCOPE_COLUMN">
      </member>
      <member name="both"
              value="2"
              c:identifier="POPPLER_STRUCTURE_TABLE_SCOPE_BOTH"
              glib:nick="both"
              glib:name="POPPLER_STRUCTURE_TABLE_SCOPE_BOTH">
      </member>
    </enumeration>
    <enumeration name="StructureTextAlign"
                 glib:type-name="PopplerStructureTextAlign"
                 glib:get-type="poppler_structure_text_align_get_type"
                 c:type="PopplerStructureTextAlign">
      <member name="start"
              value="0"
              c:identifier="POPPLER_STRUCTURE_TEXT_ALIGN_START"
              glib:nick="start"
              glib:name="POPPLER_STRUCTURE_TEXT_ALIGN_START">
      </member>
      <member name="center"
              value="1"
              c:identifier="POPPLER_STRUCTURE_TEXT_ALIGN_CENTER"
              glib:nick="center"
              glib:name="POPPLER_STRUCTURE_TEXT_ALIGN_CENTER">
      </member>
      <member name="end"
              value="2"
              c:identifier="POPPLER_STRUCTURE_TEXT_ALIGN_END"
              glib:nick="end"
              glib:name="POPPLER_STRUCTURE_TEXT_ALIGN_END">
      </member>
      <member name="justify"
              value="3"
              c:identifier="POPPLER_STRUCTURE_TEXT_ALIGN_JUSTIFY"
              glib:nick="justify"
              glib:name="POPPLER_STRUCTURE_TEXT_ALIGN_JUSTIFY">
      </member>
    </enumeration>
    <enumeration name="StructureTextDecoration"
                 glib:type-name="PopplerStructureTextDecoration"
                 glib:get-type="poppler_structure_text_decoration_get_type"
                 c:type="PopplerStructureTextDecoration">
      <member name="none"
              value="0"
              c:identifier="POPPLER_STRUCTURE_TEXT_DECORATION_NONE"
              glib:nick="none"
              glib:name="POPPLER_STRUCTURE_TEXT_DECORATION_NONE">
      </member>
      <member name="underline"
              value="1"
              c:identifier="POPPLER_STRUCTURE_TEXT_DECORATION_UNDERLINE"
              glib:nick="underline"
              glib:name="POPPLER_STRUCTURE_TEXT_DECORATION_UNDERLINE">
      </member>
      <member name="overline"
              value="2"
              c:identifier="POPPLER_STRUCTURE_TEXT_DECORATION_OVERLINE"
              glib:nick="overline"
              glib:name="POPPLER_STRUCTURE_TEXT_DECORATION_OVERLINE">
      </member>
      <member name="linethrough"
              value="3"
              c:identifier="POPPLER_STRUCTURE_TEXT_DECORATION_LINETHROUGH"
              glib:nick="linethrough"
              glib:name="POPPLER_STRUCTURE_TEXT_DECORATION_LINETHROUGH">
      </member>
    </enumeration>
    <enumeration name="StructureWritingMode"
                 glib:type-name="PopplerStructureWritingMode"
                 glib:get-type="poppler_structure_writing_mode_get_type"
                 c:type="PopplerStructureWritingMode">
      <member name="lr_tb"
              value="0"
              c:identifier="POPPLER_STRUCTURE_WRITING_MODE_LR_TB"
              glib:nick="lr-tb"
              glib:name="POPPLER_STRUCTURE_WRITING_MODE_LR_TB">
      </member>
      <member name="rl_tb"
              value="1"
              c:identifier="POPPLER_STRUCTURE_WRITING_MODE_RL_TB"
              glib:nick="rl-tb"
              glib:name="POPPLER_STRUCTURE_WRITING_MODE_RL_TB">
      </member>
      <member name="tb_rl"
              value="2"
              c:identifier="POPPLER_STRUCTURE_WRITING_MODE_TB_RL"
              glib:nick="tb-rl"
              glib:name="POPPLER_STRUCTURE_WRITING_MODE_TB_RL">
      </member>
    </enumeration>
    <record name="TextAttributes"
            c:type="PopplerTextAttributes"
            version="0.18"
            glib:type-name="PopplerTextAttributes"
            glib:get-type="poppler_text_attributes_get_type"
            c:symbol-prefix="text_attributes">
      <doc xml:space="preserve"
           filename="glib/poppler-page.h"
           line="239">A #PopplerTextAttributes is used to describe text attributes of a range of text</doc>
      <source-position filename="glib/poppler-page.h" line="261"/>
      <field name="font_name" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="241">font name</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="font_size" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="242">font size</doc>
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="is_underlined" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="243">if text is underlined</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="color" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="244">a #PopplerColor, the foreground color</doc>
        <type name="Color" c:type="PopplerColor"/>
      </field>
      <field name="start_index" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="245">start position this text attributes apply</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="end_index" writable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-page.h"
             line="246">end position this text attributes apply</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <constructor name="new"
                   c:identifier="poppler_text_attributes_new"
                   version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1839">Creates a new #PopplerTextAttributes</doc>
        <source-position filename="glib/poppler-page.h" line="266"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1844">a new #PopplerTextAttributes, use poppler_text_attributes_free() to free it</doc>
          <type name="TextAttributes" c:type="PopplerTextAttributes*"/>
        </return-value>
      </constructor>
      <method name="copy"
              c:identifier="poppler_text_attributes_copy"
              version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1898">Creates a copy of @text_attrs</doc>
        <source-position filename="glib/poppler-page.h" line="268"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-page.cc"
               line="1904">a new allocated copy of @text_attrs</doc>
          <type name="TextAttributes" c:type="PopplerTextAttributes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="text_attrs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1900">a #PopplerTextAttributes to copy</doc>
            <type name="TextAttributes" c:type="PopplerTextAttributes*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="poppler_text_attributes_free"
              version="0.18">
        <doc xml:space="preserve"
             filename="glib/poppler-page.cc"
             line="1917">Frees the given #PopplerTextAttributes</doc>
        <source-position filename="glib/poppler-page.h" line="270"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="text_attrs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-page.cc"
                 line="1919">a #PopplerTextAttributes</doc>
            <type name="TextAttributes" c:type="PopplerTextAttributes*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="TextSpan"
            c:type="PopplerTextSpan"
            glib:type-name="PopplerTextSpan"
            glib:get-type="poppler_text_span_get_type"
            c:symbol-prefix="text_span">
      <source-position filename="glib/poppler.h" line="219"/>
      <method name="copy" c:identifier="poppler_text_span_copy" version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="835">Makes a copy of a text span.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="407"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="841">A new #PopplerTextSpan</doc>
          <type name="TextSpan" c:type="PopplerTextSpan*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="837">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="poppler_text_span_free" version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="859">Frees a text span.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="409"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="861">A #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="poppler_text_span_get_color"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="929">Obtains the color in which the text is to be rendered.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="417"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="931">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="932">a return location for a #PopplerColor</doc>
            <type name="Color" c:type="PopplerColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_font_name"
              c:identifier="poppler_text_span_get_font_name"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="963">Obtains the name of the font in which the span is to be rendered.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="421"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="969">A string containing the font name, or
  %NULL if a font is not defined.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="965">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="poppler_text_span_get_text"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="946">Obtains the text contained in the span.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="419"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="952">A string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="948">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_bold_font"
              c:identifier="poppler_text_span_is_bold_font"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="912">Check whether a text span is meant to be rendered using a bold font.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="415"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="918">Whether the span uses bold font.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="914">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_fixed_width_font"
              c:identifier="poppler_text_span_is_fixed_width_font"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="878">Check wether a text span is meant to be rendered using a fixed-width font.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="411"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="884">Whether the span uses a fixed-width font.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="880">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_serif_font"
              c:identifier="poppler_text_span_is_serif_font"
              version="0.26">
        <doc xml:space="preserve"
             filename="glib/poppler-structure-element.cc"
             line="895">Check whether a text span is meant to be rendered using a serif font.</doc>
        <source-position filename="glib/poppler-structure-element.h"
                         line="413"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-structure-element.cc"
               line="901">Whether the span uses a serif font.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="poppler_text_span"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="glib/poppler-structure-element.cc"
                 line="897">a #PopplerTextSpan</doc>
            <type name="TextSpan" c:type="PopplerTextSpan*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="ViewerPreferences"
              glib:type-name="PopplerViewerPreferences"
              glib:get-type="poppler_viewer_preferences_get_type"
              c:type="PopplerViewerPreferences">
      <doc xml:space="preserve"
           filename="glib/poppler-document.h"
           line="116">Viewer preferences</doc>
      <member name="unset"
              value="0"
              c:identifier="POPPLER_VIEWER_PREFERENCES_UNSET"
              glib:nick="unset"
              glib:name="POPPLER_VIEWER_PREFERENCES_UNSET">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="118">no preferences set</doc>
      </member>
      <member name="hide_toolbar"
              value="1"
              c:identifier="POPPLER_VIEWER_PREFERENCES_HIDE_TOOLBAR"
              glib:nick="hide-toolbar"
              glib:name="POPPLER_VIEWER_PREFERENCES_HIDE_TOOLBAR">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="119">hider toolbars when document is active</doc>
      </member>
      <member name="hide_menubar"
              value="2"
              c:identifier="POPPLER_VIEWER_PREFERENCES_HIDE_MENUBAR"
              glib:nick="hide-menubar"
              glib:name="POPPLER_VIEWER_PREFERENCES_HIDE_MENUBAR">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="120">hide menu bar when document is active</doc>
      </member>
      <member name="hide_windowui"
              value="4"
              c:identifier="POPPLER_VIEWER_PREFERENCES_HIDE_WINDOWUI"
              glib:nick="hide-windowui"
              glib:name="POPPLER_VIEWER_PREFERENCES_HIDE_WINDOWUI">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="121">hide UI elements in document's window</doc>
      </member>
      <member name="fit_window"
              value="8"
              c:identifier="POPPLER_VIEWER_PREFERENCES_FIT_WINDOW"
              glib:nick="fit-window"
              glib:name="POPPLER_VIEWER_PREFERENCES_FIT_WINDOW">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="122">resize document's window to fit the size of the first displayed page</doc>
      </member>
      <member name="center_window"
              value="16"
              c:identifier="POPPLER_VIEWER_PREFERENCES_CENTER_WINDOW"
              glib:nick="center-window"
              glib:name="POPPLER_VIEWER_PREFERENCES_CENTER_WINDOW">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="123">position the document's window in the center of the screen</doc>
      </member>
      <member name="display_doc_title"
              value="32"
              c:identifier="POPPLER_VIEWER_PREFERENCES_DISPLAY_DOC_TITLE"
              glib:nick="display-doc-title"
              glib:name="POPPLER_VIEWER_PREFERENCES_DISPLAY_DOC_TITLE">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="124">display document title in window's title bar</doc>
      </member>
      <member name="direction_rtl"
              value="64"
              c:identifier="POPPLER_VIEWER_PREFERENCES_DIRECTION_RTL"
              glib:nick="direction-rtl"
              glib:name="POPPLER_VIEWER_PREFERENCES_DIRECTION_RTL">
        <doc xml:space="preserve"
             filename="glib/poppler-document.h"
             line="125">the predominant reading order for text is right to left</doc>
      </member>
    </bitfield>
    <function name="date_parse"
              c:identifier="poppler_date_parse"
              version="0.12">
      <doc xml:space="preserve"
           filename="glib/poppler-date.cc"
           line="25">Parses a PDF format date string and converts it to a #time_t. Returns #FALSE
if the parsing fails or the input string is not a valid PDF format date string</doc>
      <source-position filename="glib/poppler-date.h" line="28"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler-date.cc"
             line="33">#TRUE, if @timet was set</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="date" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-date.cc"
               line="27">string to parse</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="timet" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-date.cc"
               line="28">an uninitialized #time_t</doc>
          <type name="glong" c:type="time_t*"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_quark"
              c:identifier="poppler_error_quark"
              moved-to="Error.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="get_backend" c:identifier="poppler_get_backend">
      <doc xml:space="preserve"
           filename="glib/poppler.cc"
           line="54">Returns the backend compiled into the poppler library.</doc>
      <source-position filename="glib/poppler.h" line="240"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler.cc"
             line="59">The backend used by poppler</doc>
        <type name="Backend" c:type="PopplerBackend"/>
      </return-value>
    </function>
    <function name="get_version" c:identifier="poppler_get_version">
      <doc xml:space="preserve"
           filename="glib/poppler.cc"
           line="68">Returns the version of poppler in use.  This result is not to be freed.</doc>
      <source-position filename="glib/poppler.h" line="242"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="glib/poppler.cc"
             line="73">the version of poppler.</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
    </function>
    <function name="named_dest_from_bytestring"
              c:identifier="poppler_named_dest_from_bytestring"
              version="0.73">
      <doc xml:space="preserve"
           filename="glib/poppler-document.cc"
           line="877">Converts a bytestring into a zero-terminated string suitable to
pass to poppler_document_find_dest().

Note that the returned string has no defined encoding and is not
suitable for display to the user.

The returned data must be freed using g_free().</doc>
      <source-position filename="glib/poppler-action.h" line="447"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="890">the named dest</doc>
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="879">the bytestring data</doc>
          <array length="1" zero-terminated="0" c:type="const guint8*">
            <type name="guint8" c:type="guint8"/>
          </array>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="880">the bytestring length</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <function name="named_dest_to_bytestring"
              c:identifier="poppler_named_dest_to_bytestring"
              version="0.73">
      <doc xml:space="preserve"
           filename="glib/poppler-document.cc"
           line="924">Converts a named dest string (e.g. from #PopplerDest.named_dest) into a
bytestring, inverting the transformation of
poppler_named_dest_from_bytestring().

Note that the returned data is not zero terminated and may also
contains embedded NUL bytes.

If @name is not a valid named dest string, returns %NULL.

The returned data must be freed using g_free().</doc>
      <source-position filename="glib/poppler-action.h" line="450"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="glib/poppler-document.cc"
             line="940">a new bytestring,
  or %NULL</doc>
        <array length="1" zero-terminated="0" c:type="guint8*">
          <type name="guint8" c:type="guint8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="926">the named dest string</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="length"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="glib/poppler-document.cc"
               line="927">a location to store the length of the returned bytestring</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="poppler-document">
      <doc xml:space="preserve"
           filename="glib/poppler-document.cc"
           line="71">The #PopplerDocument is an object used to refer to a main document.</doc>
    </docsection>
    <docsection name="poppler-features">
      <doc xml:space="preserve"
           filename="obj-x86_64-linux-gnu/glib/poppler-features.h"
           line="22">Poppler provides version information, and information about features
enabled at compile time. This is primarily useful in configure checks
for builds that have a configure script, or for allowing code to optionally
depend but not require a specific poppler version.</doc>
    </docsection>
    <docsection name="poppler-structure-element">
      <doc xml:space="preserve"
           filename="glib/poppler-structure-element.cc"
           line="35">Instances of #PopplerStructureElement are used to describe the structure
of a #PopplerDocument. To access the elements in the structure of the
document, use poppler_structure_element_iter_new() to obtain an iterator
for the top-level #PopplerStructureElement, and then use the
#PopplerStructureElementIter methods to traverse the structure tree.</doc>
    </docsection>
  </namespace>
</repository>
