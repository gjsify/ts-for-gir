<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <package name="libhandy-1"/>
  <c:include name="handy.h"/>
  <namespace name="Handy"
             version="1"
             shared-library="libhandy-1.so.0"
             c:identifier-prefixes="Hdy"
             c:symbol-prefixes="hdy">
    <class name="ActionRow"
           c:symbol-prefix="action_row"
           c:type="HdyActionRow"
           version="1.0"
           parent="PreferencesRow"
           glib:type-name="HdyActionRow"
           glib:get-type="hdy_action_row_get_type"
           glib:type-struct="ActionRowClass">
      <doc xml:space="preserve"
           filename="src/hdy-action-row.c"
           line="12">A [class@Gtk.ListBoxRow] used to present actions.

The `HdyActionRow` widget can have a title, a subtitle and an icon. The row
can receive additional widgets at its end, or prefix widgets at its start.

It is convenient to present a preference and its related actions.

`HdyActionRow` is unactivatable by default, giving it an activatable widget
will automatically make it activatable, but unsetting it won't change the
row's activatability.

## HdyActionRow as GtkBuildable

The `HdyActionRow` implementation of the [iface@Gtk.Buildable] interface
supports adding a child at its end by specifying “suffix” or omitting the
“type” attribute of a &lt;child&gt; element.

It also supports adding a child as a prefix widget by specifying “prefix” as
the “type” attribute of a &lt;child&gt; element.

## CSS nodes

`HdyActionRow` has a main CSS node with name `row`.

It contains the subnode `box.header` for its main horizontal box, and
`box.title` for the vertical box containing the title and subtitle labels.

It contains subnodes `label.title` and `label.subtitle` representing
respectively the title label and subtitle label.</doc>
      <source-position filename="src/hdy-action-row.h" line="40"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_action_row_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="548">Creates a new `HdyActionRow`.</doc>
        <source-position filename="src/hdy-action-row.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="553">the newly created `HdyActionRow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="activate" invoker="activate" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="947">Activates @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="949">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate"
              c:identifier="hdy_action_row_activate"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="947">Activates @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="949">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="hdy_action_row_add_prefix"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="923">Adds a prefix widget to @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="925">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="926">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activatable_widget"
              c:identifier="hdy_action_row_get_activatable_widget"
              glib:get-property="activatable-widget"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="activatable-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="670">Gets the widget activated when @self is activated.</doc>
        <source-position filename="src/hdy-action-row.h" line="58"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="676">the activatable widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="672">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_action_row_get_icon_name"
              glib:get-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="614">Gets the icon name for @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="620">the icon name for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="616">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_action_row_get_subtitle"
              glib:get-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="563">Gets the subtitle for @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="569">the subtitle for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="565">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle_lines"
              c:identifier="hdy_action_row_get_subtitle_lines"
              glib:get-property="subtitle-lines"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="subtitle-lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="863">Gets the number of lines at the end of which the subtitle label will be
ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="src/hdy-action-row.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="872">the number of lines at the end of which the subtitle label will be
  ellipsized</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="865">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_lines"
              c:identifier="hdy_action_row_get_title_lines"
              glib:get-property="title-lines"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="title-lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="803">Gets the number of lines at the end of which the title label will be
ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="src/hdy-action-row.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="812">the number of lines at the end of which the title label will be
  ellipsized</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="805">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_action_row_get_use_underline"
              glib:get-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="744">Gets whether an embedded underline in the title or subtitle indicates a
mnemonic.</doc>
        <source-position filename="src/hdy-action-row.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-action-row.c"
               line="751">whether an embedded underline in the title or subtitle indicates a
  mnemonic</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="746">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_activatable_widget"
              c:identifier="hdy_action_row_set_activatable_widget"
              glib:set-property="activatable-widget"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="activatable-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="704">Sets the widget to activate when @self is activated.</doc>
        <source-position filename="src/hdy-action-row.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="706">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="707">the target widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_action_row_set_icon_name"
              glib:set-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="639">Sets the icon name for @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="641">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="642">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_action_row_set_subtitle"
              glib:set-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="585">Sets the subtitle for @self.</doc>
        <source-position filename="src/hdy-action-row.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="587">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="588">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle_lines"
              c:identifier="hdy_action_row_set_subtitle_lines"
              glib:set-property="subtitle-lines"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="subtitle-lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="889">Sets the number of lines at the end of which the subtitle label will be
ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="src/hdy-action-row.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="891">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="subtitle_lines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="892">the number of lines at the end of which the subtitle label will be ellipsized</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title_lines"
              c:identifier="hdy_action_row_set_title_lines"
              glib:set-property="title-lines"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="title-lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="829">Sets the number of lines at the end of which the title label will be
ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="src/hdy-action-row.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="831">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="title_lines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="832">the number of lines at the end of which the title label will be ellipsized</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_action_row_set_use_underline"
              glib:set-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="768">Sets whether an embedded underline in the title or subtitle indicates a
mnemonic.</doc>
        <source-position filename="src/hdy-action-row.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="770">an action row</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-action-row.c"
                 line="771">`TRUE` if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="activatable-widget"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_activatable_widget"
                getter="get_activatable_widget">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_activatable_widget"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_activatable_widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="376">The activatable widget for this row.

The widget is activated, either by clicking on it, by calling
[method@ActionRow.activate], or via mnemonics in the title or the subtitle.
See the [property@ActionRow:use-underline] property to enable mnemonics.

The target widget will be activated by emitting the
[signal@Gtk.Widget::mnemonic-activate] signal on it.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_icon_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_icon_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="362">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle"
                getter="get_subtitle">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="397">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle-lines"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle_lines"
                getter="get_subtitle_lines"
                default-value="1">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_subtitle_lines"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_subtitle_lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="445">The number of lines at the end of which the subtitle label will be
ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="title-lines"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_title_lines"
                getter="get_title_lines"
                default-value="1">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_title_lines"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_title_lines"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="428">The number of lines at the end of which the title label will be ellipsized.

If the value is 0, the number of lines won't be limited.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-underline"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_use_underline"
                getter="get_use_underline"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_action_row_get_use_underline"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_action_row_set_use_underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="411">Whether embedded underlines in the title or subtitle indicates a mnemonic.

If true, an underline in the text of the title or subtitle labels indicates
the next character should be used for the mnemonic accelerator key.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="HdyPreferencesRow"/>
      </field>
      <glib:signal name="activated" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.c"
             line="465">This signal is emitted after the row has been activated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ActionRowClass"
            c:type="HdyActionRowClass"
            glib:is-gtype-struct-for="ActionRow">
      <source-position filename="src/hdy-action-row.h" line="40"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-action-row.h"
             line="26">the parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="src/hdy-action-row.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-action-row.c"
                   line="949">an action row</doc>
              <type name="ActionRow" c:type="HdyActionRow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="ApplicationWindow"
           c:symbol-prefix="application_window"
           c:type="HdyApplicationWindow"
           version="1.0"
           parent="Gtk.ApplicationWindow"
           glib:type-name="HdyApplicationWindow"
           glib:get-type="hdy_application_window_get_type"
           glib:type-struct="ApplicationWindowClass">
      <doc xml:space="preserve"
           filename="src/hdy-application-window.c"
           line="12">A freeform application window.

`HdyApplicationWindow` is a [class@Gtk.ApplicationWindow] subclass providing
the same features as [class@Window].

See [class@Window] for details.

Using [method@Gtk.Application.set_app_menu] and
[method@Gtk.Application.set_menubar] is not supported and may result in
visual glitches.</doc>
      <source-position filename="src/hdy-application-window.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_application_window_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-application-window.c"
             line="136">Creates a new `HdyApplicationWindow`.</doc>
        <source-position filename="src/hdy-application-window.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-application-window.c"
               line="141">the newly created `HdyApplicationWindow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
      </field>
    </class>
    <record name="ApplicationWindowClass"
            c:type="HdyApplicationWindowClass"
            glib:is-gtype-struct-for="ApplicationWindow">
      <source-position filename="src/hdy-application-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Avatar"
           c:symbol-prefix="avatar"
           c:type="HdyAvatar"
           version="1.0"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyAvatar"
           glib:get-type="hdy_avatar_get_type"
           glib:type-struct="AvatarClass">
      <doc xml:space="preserve"
           filename="src/hdy-avatar.c"
           line="23">A widget displaying an image, with a generated fallback.

`HdyAvatar` is a widget to display a round avatar.

A provided image is made round before displaying, if no image is given this
widget generates a round fallback with the initials of the
[property@Avatar:text] on top of a colored background.

The color is picked based on the hash of the [property@Avatar:text].

If [property@Avatar:show-initials] is set to `FALSE`,
`avatar-default-symbolic` is shown instead of the initials.

Use [method@Avatar.set_loadable_icon] or [property@Avatar:loadable-icon] to
set a custom image.

## CSS nodes

`HdyAvatar` has a single CSS node with name `avatar`.</doc>
      <source-position filename="src/hdy-avatar.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_avatar_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="958">Creates a new `HdyAvatar`.</doc>
        <source-position filename="src/hdy-avatar.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="966">the newly created `HdyAvatar`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="960">the size of the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="961">the text used to get the initials and color</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="962">whether to use initials instead of an icon as fallback</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="draw_to_pixbuf"
              c:identifier="hdy_avatar_draw_to_pixbuf"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1220">Renders @self into a [class@GdkPixbuf.Pixbuf] at @size and @scale_factor.

This can be used to export the fallback avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1230">the pixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1222">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1223">the size of the pixbuf</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="scale_factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1224">the scale factor</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="draw_to_pixbuf_async"
              c:identifier="hdy_avatar_draw_to_pixbuf_async"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1282">Renders asynchronously @self into a pixbuf at @size and @scale_factor.

This can be used to export the fallback avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1284">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1285">the size of the pixbuf</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="scale_factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1286">the scale factor</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1287">a cancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1288">a [callback@Gio.AsyncReadyCallback] to call when
  the avatar is generated</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1290">the data to pass to callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="draw_to_pixbuf_finish"
              c:identifier="hdy_avatar_draw_to_pixbuf_finish"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1335">Finishes an asynchronous draw of an avatar to a pixbuf.</doc>
        <source-position filename="src/hdy-avatar.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1342">the resulting pixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1337">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="async_result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1338">a [iface@Gio.AsyncResult]</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_avatar_get_icon_name"
              glib:get-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="982">Gets the name of an icon to use as a fallback.</doc>
        <source-position filename="src/hdy-avatar.h" line="53"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="988">the icon name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="984">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_loadable_icon"
              c:identifier="hdy_avatar_get_loadable_icon"
              glib:get-property="loadable-icon"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="loadable-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1389">Gets the [iface@Gio.LoadableIcon] set via [method@Avatar.set_loadable_icon].</doc>
        <source-position filename="src/hdy-avatar.h" line="96"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1395">the [iface@Gio.LoadableIcon]</doc>
          <type name="Gio.LoadableIcon" c:type="GLoadableIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1391">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_initials"
              c:identifier="hdy_avatar_get_show_initials"
              glib:get-property="show-initials"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="show-initials"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1077">Gets whether initials are used instead of an icon on the fallback avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1083">whether initials are used instead of an icon as fallback</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1079">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="hdy_avatar_get_size"
              glib:get-property="size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="size"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1177">Gets the size of the avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1183">the size of the avatar</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1179">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="hdy_avatar_get_text"
              glib:get-property="text"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="text"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1030">Gets the text used to generate the fallback initials and color.</doc>
        <source-position filename="src/hdy-avatar.h" line="58"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.c"
               line="1036">the text used to generate the fallback initials and
  color</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1032">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_avatar_set_icon_name"
              glib:set-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1000">Sets the name of an icon to use as a fallback.

If no name is set, `avatar-default-symbolic` will be used.</doc>
        <source-position filename="src/hdy-avatar.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1002">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1003">the name of the icon from the icon theme</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_load_func"
              c:identifier="hdy_avatar_set_image_load_func"
              version="1.0"
              deprecated="1"
              deprecated-version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1119">A callback which is called when the custom image needs to be reloaded.

It will be called on [property@Avatar:size] or
[property@Gtk.Widget:scale-factor] changes.</doc>
        <doc-deprecated xml:space="preserve">use [method@Avatar.set_loadable_icon] instead.</doc-deprecated>
        <source-position filename="src/hdy-avatar.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1121">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="load_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1122">callback to set a custom image</doc>
            <type name="AvatarImageLoadFunc" c:type="HdyAvatarImageLoadFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1123">user data passed to @load_image</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1124">destroy notifier for @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_loadable_icon"
              c:identifier="hdy_avatar_set_loadable_icon"
              glib:set-property="loadable-icon"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="loadable-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1407">Sets the [iface@Gio.LoadableIcon] to use as an avatar.

The previous avatar is displayed till the new avatar is loaded, to
immediately remove the custom avatar set the loadable-icon to `NULL`.

The [iface@Gio.LoadableIcon] set via this function is preferred over a set
[callback@AvatarImageLoadFunc].</doc>
        <source-position filename="src/hdy-avatar.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1409">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1410">a [iface@Gio.LoadableIcon]</doc>
            <type name="Gio.LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_initials"
              c:identifier="hdy_avatar_set_show_initials"
              glib:set-property="show-initials"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="show-initials"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1095">Sets whether to use initials instead of an icon on the fallback avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1097">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1098">whether to use initials instead of an icon as fallback</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="hdy_avatar_set_size"
              glib:set-property="size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="size"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1195">Sets the size of the avatar.</doc>
        <source-position filename="src/hdy-avatar.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1197">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1198">the size to be used for the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text"
              c:identifier="hdy_avatar_set_text"
              glib:set-property="text"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="text"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="1049">Set the text used to generate the fallback initials color.</doc>
        <source-position filename="src/hdy-avatar.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1051">an avatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-avatar.c"
                 line="1052">the text used to get the initials and color</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_avatar_get_icon_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_avatar_set_icon_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="882">The name of an icon to use as a fallback.

If no name is set, the avatar-default-symbolic icon will be used. If the
name doesn't match a valid icon, it is an error and no icon will be
displayed. If the icon theme is changed, the image will be updated
automatically.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="loadable-icon"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_loadable_icon"
                getter="get_loadable_icon">
        <attribute name="org.gtk.Property.get"
                   value="hdy_avatar_get_loadable_icon"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_avatar_set_loadable_icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="932">A [iface@Gio.LoadableIcon] used to load the avatar.</doc>
        <type name="Gio.LoadableIcon"/>
      </property>
      <property name="show-initials"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_initials"
                getter="get_show_initials"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_avatar_get_show_initials"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_avatar_set_show_initials"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="918">Whether to show the initials or the fallback icon on the generated avatar.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_size"
                getter="get_size"
                default-value="-1">
        <attribute name="org.gtk.Property.get" value="hdy_avatar_get_size"/>
        <attribute name="org.gtk.Property.set" value="hdy_avatar_set_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="868">The avatar size of the avatar.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="text"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_text"
                getter="get_text"
                default-value="NULL">
        <attribute name="org.gtk.Property.get" value="hdy_avatar_get_text"/>
        <attribute name="org.gtk.Property.set" value="hdy_avatar_set_text"/>
        <doc xml:space="preserve"
             filename="src/hdy-avatar.c"
             line="901">Sets the text used to generate the fallback initials and color.

It's only used to generate the color if [property@Avatar:show-initials] is
`FALSE`.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AvatarClass"
            c:type="HdyAvatarClass"
            glib:is-gtype-struct-for="Avatar">
      <source-position filename="src/hdy-avatar.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <callback name="AvatarImageLoadFunc"
              c:type="HdyAvatarImageLoadFunc"
              version="1.0"
              deprecated="1"
              deprecated-version="1.2">
      <doc xml:space="preserve"
           filename="src/hdy-avatar.h"
           line="25">Callback for loading an [class@Avatar]'s image.

The returned [class@GdkPixbuf.Pixbuf] is expected to be square with width and
height set to @size. The image is cropped to a circle without any scaling or
transformation.</doc>
      <doc-deprecated xml:space="preserve">use [method@Avatar.set_loadable_icon] instead.</doc-deprecated>
      <source-position filename="src/hdy-avatar.h" line="44"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/hdy-avatar.h"
             line="36">the pixbuf to use as a custom avatar or
  `NULL` to fallback to the generated avatar</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.h"
               line="27">the required size of the avatar</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="src/hdy-avatar.h"
               line="28">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Carousel"
           c:symbol-prefix="carousel"
           c:type="HdyCarousel"
           version="1.0"
           parent="Gtk.EventBox"
           glib:type-name="HdyCarousel"
           glib:get-type="hdy_carousel_get_type"
           glib:type-struct="CarouselClass">
      <doc xml:space="preserve"
           filename="src/hdy-carousel.c"
           line="22">A paginated scrolling widget.

The `HdyCarousel` widget can be used to display a set of pages with
swipe-based navigation between them.

[class@CarouselIndicatorDots] and [class@CarouselIndicatorLines] can be used
to provide page indicators for `HdyCarousel`.

## CSS nodes

`HdyCarousel` has a single CSS node with name `carousel`.</doc>
      <source-position filename="src/hdy-carousel.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_carousel_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="800">Creates a new `HdyCarousel`.</doc>
        <source-position filename="src/hdy-carousel.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="805">the newly created `HdyCarousel`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_allow_long_swipes"
              c:identifier="hdy_carousel_get_allow_long_swipes"
              glib:get-property="allow-long-swipes"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="allow-long-swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1176">Gets whether to allow swiping for more than one page at a time.</doc>
        <source-position filename="src/hdy-carousel.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1182">`TRUE` if long swipes are allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1178">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allow_mouse_drag"
              c:identifier="hdy_carousel_get_allow_mouse_drag"
              glib:get-property="allow-mouse-drag"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="allow-mouse-drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1088">Sets whether @self can be dragged with mouse pointer.</doc>
        <source-position filename="src/hdy-carousel.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1094">`TRUE` if @self can be dragged with mouse</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1090">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allow_scroll_wheel"
              c:identifier="hdy_carousel_get_allow_scroll_wheel"
              glib:get-property="allow-scroll-wheel"
              version="1.4">
        <attribute name="org.gtk.Method.get_property"
                   value="allow-scroll-wheel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1133">Gets whether @self will respond to scroll wheel events.</doc>
        <source-position filename="src/hdy-carousel.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1139">`TRUE` if @self will respond to scroll wheel events</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1135">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_animation_duration"
              c:identifier="hdy_carousel_get_animation_duration"
              glib:get-property="animation-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="animation-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1047">Gets animation duration used by [method@Carousel.scroll_to].</doc>
        <source-position filename="src/hdy-carousel.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1053">animation duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1049">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interactive"
              c:identifier="hdy_carousel_get_interactive"
              glib:get-property="interactive"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="interactive"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="965">Gets whether @self can be navigated.</doc>
        <source-position filename="src/hdy-carousel.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="971">`TRUE` if @self can be swiped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="967">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages"
              c:identifier="hdy_carousel_get_n_pages"
              glib:get-property="n-pages"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="n-pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="929">Gets the number of pages in @self.</doc>
        <source-position filename="src/hdy-carousel.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="935">the number of pages in @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="931">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="hdy_carousel_get_position"
              glib:get-property="position"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="position"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="947">Gets current scroll position in @self. It's unitless, 1 matches 1 page.</doc>
        <source-position filename="src/hdy-carousel.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="953">the scroll position</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="949">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_duration"
              c:identifier="hdy_carousel_get_reveal_duration"
              glib:get-property="reveal-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="reveal-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1219">Gets duration of the animation used when adding or removing pages, in
milliseconds.</doc>
        <source-position filename="src/hdy-carousel.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1226">the duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1221">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spacing"
              c:identifier="hdy_carousel_get_spacing"
              glib:get-property="spacing"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1011">Gets spacing between pages in pixels.</doc>
        <source-position filename="src/hdy-carousel.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel.c"
               line="1017">spacing between pages</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1013">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="hdy_carousel_insert" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="833">Inserts @child into @self at position @position.

If position is -1, or larger than the number of pages, @child will be
appended to the end.</doc>
        <source-position filename="src/hdy-carousel.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="835">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="836">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="837">the position to insert @child in</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="hdy_carousel_prepend" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="815">Prepends @child to @self.</doc>
        <source-position filename="src/hdy-carousel.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="817">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="818">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder" c:identifier="hdy_carousel_reorder" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="855">Moves @child into position @position.

If position is -1, or larger than the number of pages, @child will be moved
to the end.</doc>
        <source-position filename="src/hdy-carousel.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="857">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="858">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="859">the position to move @child to</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to"
              c:identifier="hdy_carousel_scroll_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="879">Scrolls to @widget position with an animation.

[property@Carousel:animation-duration] property can be used for controlling
the duration.</doc>
        <source-position filename="src/hdy-carousel.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="881">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="882">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to_full"
              c:identifier="hdy_carousel_scroll_to_full"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="900">Scrolls to @widget position with an animation.</doc>
        <source-position filename="src/hdy-carousel.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="902">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="903">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="904">animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_long_swipes"
              c:identifier="hdy_carousel_set_allow_long_swipes"
              glib:set-property="allow-long-swipes"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="allow-long-swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1194">Sets whether to allow swiping for more than one page at a time.</doc>
        <source-position filename="src/hdy-carousel.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1196">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="allow_long_swipes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1197">whether to allow long swipes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="hdy_carousel_set_allow_mouse_drag"
              glib:set-property="allow-mouse-drag"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="allow-mouse-drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1106">Sets whether @self can be dragged with mouse pointer.

If @allow_mouse_drag is `FALSE`, dragging is only available on touch.</doc>
        <source-position filename="src/hdy-carousel.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1108">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1109">whether @self can be dragged with mouse pointer</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_scroll_wheel"
              c:identifier="hdy_carousel_set_allow_scroll_wheel"
              glib:set-property="allow-scroll-wheel"
              version="1.4">
        <attribute name="org.gtk.Method.set_property"
                   value="allow-scroll-wheel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1151">Sets whether @self will respond to scroll wheel events.</doc>
        <source-position filename="src/hdy-carousel.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1153">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="allow_scroll_wheel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1154">whether @self will respond to scroll wheel events</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_animation_duration"
              c:identifier="hdy_carousel_set_animation_duration"
              glib:set-property="animation-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="animation-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1065">Sets animation duration used by [method@Carousel.scroll_to].</doc>
        <source-position filename="src/hdy-carousel.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1067">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1068">animation duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interactive"
              c:identifier="hdy_carousel_set_interactive"
              glib:set-property="interactive"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="interactive"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="983">Sets whether @self can be navigated.

This can be used to temporarily disable a [class@Carousel] to only allow
swiping in a certain state.</doc>
        <source-position filename="src/hdy-carousel.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="985">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="interactive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="986">whether @self can be swiped</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_duration"
              c:identifier="hdy_carousel_set_reveal_duration"
              glib:set-property="reveal-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="reveal-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1238">Sets duration of the animation used when adding or removing pages, in
milliseconds.</doc>
        <source-position filename="src/hdy-carousel.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1240">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="reveal_duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1241">the new reveal duration value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_spacing"
              c:identifier="hdy_carousel_set_spacing"
              glib:set-property="spacing"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="1029">Sets spacing between pages in pixels.</doc>
        <source-position filename="src/hdy-carousel.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1031">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="1032">the new spacing value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-long-swipes"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_long_swipes"
                getter="get_allow_long_swipes"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_allow_long_swipes"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_allow_long_swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="705">Whether to allow swiping for more than one page at a time.

If the value is `FALSE`, each swipe can only move to the adjacent pages.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_mouse_drag"
                getter="get_allow_mouse_drag"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_allow_mouse_drag"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_allow_mouse_drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="673">Sets whether the [class@Carousel] can be dragged with mouse pointer.

If the value is `FALSE`, dragging is only available on touch.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-scroll-wheel"
                version="1.4"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_scroll_wheel"
                getter="get_allow_scroll_wheel"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_allow_scroll_wheel"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_allow_scroll_wheel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="689">Whether the widget will respond to scroll wheel events.

If the value is `FALSE`, wheel events will be ignored.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="animation-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_animation_duration"
                getter="get_animation_duration"
                default-value="250">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_animation_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_animation_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="659">Animation duration used by [method@Carousel.scroll_to], in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="interactive"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_interactive"
                getter="get_interactive"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_interactive"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_interactive"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="626">Whether the carousel can be navigated.

This can be used to temporarily disable a `HdyCarousel` to only allow
navigating it in a certain state.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="n-pages"
                version="1.0"
                transfer-ownership="none"
                getter="get_n_pages"
                default-value="0">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_n_pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="592">The number of pages in a [class@Carousel].</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="position"
                version="1.0"
                transfer-ownership="none"
                getter="get_position"
                default-value="0.000000">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_position"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="608">Current scrolling position, unitless.

1 matches 1 page. Use [method@Carousel.scroll_to] for changing it.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="reveal-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_reveal_duration"
                getter="get_reveal_duration"
                default-value="0">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_reveal_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_reveal_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="721">Page reveal duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_spacing"
                getter="get_spacing"
                default-value="0">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_get_spacing"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_set_spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="643">Spacing between pages in pixels.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <glib:signal name="page-changed" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel.c"
             line="743">This signal is emitted after a page has been changed.

It can be used to implement "infinite scrolling" by amending the pages
after every scroll.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel.c"
                 line="746">the current page</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CarouselClass"
            c:type="HdyCarouselClass"
            glib:is-gtype-struct-for="Carousel">
      <source-position filename="src/hdy-carousel.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorDots"
           c:symbol-prefix="carousel_indicator_dots"
           c:type="HdyCarouselIndicatorDots"
           version="1.0"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyCarouselIndicatorDots"
           glib:get-type="hdy_carousel_indicator_dots_get_type"
           glib:type-struct="CarouselIndicatorDotsClass">
      <doc xml:space="preserve"
           filename="src/hdy-carousel-indicator-dots.c"
           line="24">A dots indicator for [class@Carousel].

The `HdyCarouselIndicatorDots` widget shows a set of dots for each page of a
given [class@Carousel]. The dot representing the carousel's active page is
larger and more opaque than the others, the transition to the active and
inactive state is gradual to match the carousel's position.

See also [class@CarouselIndicatorLines].

## CSS nodes

`HdyCarouselIndicatorDots` has a single CSS node with name
`carouselindicatordots`.</doc>
      <source-position filename="src/hdy-carousel-indicator-dots.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_carousel_indicator_dots_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-dots.c"
             line="429">Creates a new `HdyCarouselIndicatorDots`.</doc>
        <source-position filename="src/hdy-carousel-indicator-dots.h"
                         line="26"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel-indicator-dots.c"
               line="434">The newly created `HdyCarouselIndicatorDots`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="hdy_carousel_indicator_dots_get_carousel"
              glib:get-property="carousel"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-dots.c"
             line="444">Get the [class@Carousel] the indicator uses.</doc>
        <source-position filename="src/hdy-carousel-indicator-dots.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-carousel-indicator-dots.c"
               line="450">the [class@Carousel]</doc>
          <type name="Carousel" c:type="HdyCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-dots.c"
                 line="446">an indicator</doc>
            <type name="CarouselIndicatorDots"
                  c:type="HdyCarouselIndicatorDots*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="hdy_carousel_indicator_dots_set_carousel"
              glib:set-property="carousel"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-dots.c"
             line="463">Sets the [class@Carousel] to use.</doc>
        <source-position filename="src/hdy-carousel-indicator-dots.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-dots.c"
                 line="465">an indicator</doc>
            <type name="CarouselIndicatorDots"
                  c:type="HdyCarouselIndicatorDots*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-dots.c"
                 line="466">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_carousel"
                getter="get_carousel">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_indicator_dots_get_carousel"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_indicator_dots_set_carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-dots.c"
             line="401">The [class@Carousel] the indicator uses.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorDotsClass"
            c:type="HdyCarouselIndicatorDotsClass"
            glib:is-gtype-struct-for="CarouselIndicatorDots">
      <source-position filename="src/hdy-carousel-indicator-dots.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorLines"
           c:symbol-prefix="carousel_indicator_lines"
           c:type="HdyCarouselIndicatorLines"
           version="1.0"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyCarouselIndicatorLines"
           glib:get-type="hdy_carousel_indicator_lines_get_type"
           glib:type-struct="CarouselIndicatorLinesClass">
      <doc xml:space="preserve"
           filename="src/hdy-carousel-indicator-lines.c"
           line="24">A lines indicator for [class@Carousel].

The `HdyCarouselIndicatorLines` widget shows a set of lines for each page of
a given [class@Carousel]. The carousel's active page is shown as another line
that moves between them to match the carousel's position.

See also [class@CarouselIndicatorDots].

## CSS nodes

`HdyCarouselIndicatorLines` has a single CSS node with name
`carouselindicatorlines`.</doc>
      <source-position filename="src/hdy-carousel-indicator-lines.h"
                       line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_carousel_indicator_lines_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-lines.c"
             line="427">Creates a new `HdyCarouselIndicatorLines`.</doc>
        <source-position filename="src/hdy-carousel-indicator-lines.h"
                         line="26"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-carousel-indicator-lines.c"
               line="432">the newly created `HdyCarouselIndicatorLines`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="hdy_carousel_indicator_lines_get_carousel"
              glib:get-property="carousel"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-lines.c"
             line="442">Gets the displayed carousel.</doc>
        <source-position filename="src/hdy-carousel-indicator-lines.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-carousel-indicator-lines.c"
               line="448">the displayed carousel</doc>
          <type name="Carousel" c:type="HdyCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-lines.c"
                 line="444">an indicator</doc>
            <type name="CarouselIndicatorLines"
                  c:type="HdyCarouselIndicatorLines*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="hdy_carousel_indicator_lines_set_carousel"
              glib:set-property="carousel"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-lines.c"
             line="461">Sets the [class@Carousel] to use.</doc>
        <source-position filename="src/hdy-carousel-indicator-lines.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-lines.c"
                 line="463">an indicator</doc>
            <type name="CarouselIndicatorLines"
                  c:type="HdyCarouselIndicatorLines*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-carousel-indicator-lines.c"
                 line="464">a carousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_carousel"
                getter="get_carousel">
        <attribute name="org.gtk.Property.get"
                   value="hdy_carousel_indicator_lines_get_carousel"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_carousel_indicator_lines_set_carousel"/>
        <doc xml:space="preserve"
             filename="src/hdy-carousel-indicator-lines.c"
             line="399">The displayed carousel.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorLinesClass"
            c:type="HdyCarouselIndicatorLinesClass"
            glib:is-gtype-struct-for="CarouselIndicatorLines">
      <source-position filename="src/hdy-carousel-indicator-lines.h"
                       line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <enumeration name="CenteringPolicy"
                 version="1.0"
                 glib:type-name="HdyCenteringPolicy"
                 glib:get-type="hdy_centering_policy_get_type"
                 c:type="HdyCenteringPolicy">
      <doc xml:space="preserve"
           filename="src/hdy-header-bar.c"
           line="64">Describes title centering behavior of a [class@HeaderBar] widget.</doc>
      <member name="loose"
              value="0"
              c:identifier="HDY_CENTERING_POLICY_LOOSE"
              glib:nick="loose"
              glib:name="HDY_CENTERING_POLICY_LOOSE">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="66">Keep the title centered when possible</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="HDY_CENTERING_POLICY_STRICT"
              glib:nick="strict"
              glib:name="HDY_CENTERING_POLICY_STRICT">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="67">Keep the title centered at all cost</doc>
      </member>
    </enumeration>
    <class name="Clamp"
           c:symbol-prefix="clamp"
           c:type="HdyClamp"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyClamp"
           glib:get-type="hdy_clamp_get_type"
           glib:type-struct="ClampClass">
      <doc xml:space="preserve"
           filename="src/hdy-clamp.c"
           line="16">A widget constraining its child to a given size.

The `HdyClamp` widget constrains the size of the widget it contains to a
given maximum size. It will constrain the width if it is horizontal, or the
height if it is vertical. The expansion of the child from its minimum to its
maximum size is eased out for a smooth transition.

If the child requires more than the requested maximum size, it will be
allocated the minimum size it can fit in instead.

## CSS nodes

`HdyClamp` has a single CSS node with name `clamp`.

The node will get the style classes `.large` when its child reached its
maximum size, `.small` when the clamp allocates its full size to its child,
`.medium` in-between, or none if it didn't compute its size yet.</doc>
      <source-position filename="src/hdy-clamp.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="hdy_clamp_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="480">Creates a new `HdyClamp`.</doc>
        <source-position filename="src/hdy-clamp.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-clamp.c"
               line="485">the newly created `HdyClamp`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_maximum_size"
              c:identifier="hdy_clamp_get_maximum_size"
              glib:get-property="maximum-size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="maximum-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="495">Gets the maximum size allocated to the children.</doc>
        <source-position filename="src/hdy-clamp.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-clamp.c"
               line="501">the maximum size to allocate to the children</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="497">a clamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tightening_threshold"
              c:identifier="hdy_clamp_get_tightening_threshold"
              glib:get-property="tightening-threshold"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="tightening-threshold"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="538">Gets the size above which the children are clamped.</doc>
        <source-position filename="src/hdy-clamp.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-clamp.c"
               line="544">the size above which the children are clamped</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="540">a clamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_maximum_size"
              c:identifier="hdy_clamp_set_maximum_size"
              glib:set-property="maximum-size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="maximum-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="513">Sets the maximum size allocated to the children.</doc>
        <source-position filename="src/hdy-clamp.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="515">a clamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
          <parameter name="maximum_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="516">the maximum size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tightening_threshold"
              c:identifier="hdy_clamp_set_tightening_threshold"
              glib:set-property="tightening-threshold"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="tightening-threshold"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="556">Sets the size above which the children are clamped.</doc>
        <source-position filename="src/hdy-clamp.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="558">a clamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
          <parameter name="tightening_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-clamp.c"
                 line="559">the tightening threshold</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="maximum-size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_maximum_size"
                getter="get_maximum_size"
                default-value="600">
        <attribute name="org.gtk.Property.get"
                   value="hdy_clamp_get_maximum_size"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_clamp_set_maximum_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="424">The maximum size to allocate the children.

It is the width if the clamp is horizontal, or the height if it is
vertical.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tightening-threshold"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_tightening_threshold"
                getter="get_tightening_threshold"
                default-value="400">
        <attribute name="org.gtk.Property.get"
                   value="hdy_clamp_get_tightening_threshold"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_clamp_set_tightening_threshold"/>
        <doc xml:space="preserve"
             filename="src/hdy-clamp.c"
             line="441">The size above which the child is clamped.

Starting from this size, the layout will tighten its grip on the children,
slowly allocating less and less of the available size up to the maximum
allocated size. Below that threshold and below the maximum size, the
children will be allocated all the available size.

If the threshold is greater than the maximum size to allocate to the
children, they will be allocated the whole size up to the maximum. If the
threshold is lower than the minimum size to allocate to the children, that
size will be used as the tightening threshold.

Effectively, tightening the grip on a child before it reaches its maximum
size makes transitions to and from the maximum size smoother when resizing.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ClampClass"
            c:type="HdyClampClass"
            glib:is-gtype-struct-for="Clamp">
      <source-position filename="src/hdy-clamp.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <enumeration name="ColorScheme"
                 version="1.6"
                 glib:type-name="HdyColorScheme"
                 glib:get-type="hdy_color_scheme_get_type"
                 c:type="HdyColorScheme">
      <doc xml:space="preserve"
           filename="src/hdy-style-manager.c"
           line="19">Application color schemes for [property@StyleManager:color-scheme].</doc>
      <member name="default"
              value="0"
              c:identifier="HDY_COLOR_SCHEME_DEFAULT"
              glib:nick="default"
              glib:name="HDY_COLOR_SCHEME_DEFAULT">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="21">Inherit the parent color-scheme. When set on the
  [class@StyleManager] returned by [func@StyleManager.get_default], it's
  equivalent to `HDY_COLOR_SCHEME_FORCE_LIGHT`.</doc>
      </member>
      <member name="force_light"
              value="1"
              c:identifier="HDY_COLOR_SCHEME_FORCE_LIGHT"
              glib:nick="force-light"
              glib:name="HDY_COLOR_SCHEME_FORCE_LIGHT">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="24">Always use light appearance.</doc>
      </member>
      <member name="prefer_light"
              value="2"
              c:identifier="HDY_COLOR_SCHEME_PREFER_LIGHT"
              glib:nick="prefer-light"
              glib:name="HDY_COLOR_SCHEME_PREFER_LIGHT">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="25">Use light appearance unless the system
  prefers dark colors.</doc>
      </member>
      <member name="prefer_dark"
              value="3"
              c:identifier="HDY_COLOR_SCHEME_PREFER_DARK"
              glib:nick="prefer-dark"
              glib:name="HDY_COLOR_SCHEME_PREFER_DARK">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="27">Use dark appearance unless the system prefers
  light colors.</doc>
      </member>
      <member name="force_dark"
              value="4"
              c:identifier="HDY_COLOR_SCHEME_FORCE_DARK"
              glib:nick="force-dark"
              glib:name="HDY_COLOR_SCHEME_FORCE_DARK">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="29">Always use dark appearance.</doc>
      </member>
    </enumeration>
    <class name="ComboRow"
           c:symbol-prefix="combo_row"
           c:type="HdyComboRow"
           version="1.0"
           parent="ActionRow"
           glib:type-name="HdyComboRow"
           glib:get-type="hdy_combo_row_get_type"
           glib:type-struct="ComboRowClass">
      <doc xml:space="preserve"
           filename="src/hdy-combo-row.c"
           line="12">A [class@Gtk.ListBoxRow] used to choose from a list of items.

The `HdyComboRow` widget allows the user to choose from a list of valid
choices. The row displays the selected choice. When activated, the row
displays a popover which allows the user to make a new choice.

The [class@ComboRow] uses the model-view pattern; the list of valid choices
is specified in the form of a [iface@Gio.ListModel], and the display of the
choices can be adapted to the data in the model via widget creation
functions.

`HdyComboRow` is [property@Gtk.ListBoxRow:activatable] if a model is set.

## CSS nodes

`HdyComboRow` has a main CSS node with name `row`.

Its popover has the node name popover with the `.combo` style class, it
contains a [class@Gtk.ScrolledWindow], which in turn contains a
[class@Gtk.ListBox], both are accessible via their regular nodes.

A checkmark of node and style class `image.checkmark` in the popover denotes
the current item.</doc>
      <source-position filename="src/hdy-combo-row.h" line="72"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_combo_row_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="471">Creates a new `HdyComboRow`.</doc>
        <source-position filename="src/hdy-combo-row.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="476">the newly created `HdyComboRow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="bind_model"
              c:identifier="hdy_combo_row_bind_model"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="508">Binds @model to @self.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
`NULL`, @self is left empty.</doc>
        <source-position filename="src/hdy-combo-row.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="510">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="511">the [iface@Gio.ListModel] to be bound to @self</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="create_list_widget_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="512">a function that creates
  widgets for items to display in the list, or `NULL` in case you also passed
  `NULL` as @model</doc>
            <type name="Gtk.ListBoxCreateWidgetFunc"
                  c:type="GtkListBoxCreateWidgetFunc"/>
          </parameter>
          <parameter name="create_current_widget_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="515">a function that creates
  widgets for items to display as the selected item, or `NULL` in case you
  also passed `NULL` as @model</doc>
            <type name="Gtk.ListBoxCreateWidgetFunc"
                  c:type="GtkListBoxCreateWidgetFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="518">user data passed to @create_list_widget_func and
  @create_current_widget_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="520">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_name_model"
              c:identifier="hdy_combo_row_bind_name_model"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="580">Binds @model to @self.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
`NULL`, @self is left empty.

This is more convenient to use than [method@ComboRow.bind_model] if you want
to represent items of the model with names.</doc>
        <source-position filename="src/hdy-combo-row.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="582">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="583">the [iface@Gio.ListModel] to be bound to @self</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="584">a function that creates names for items, or
  `NULL` in case you also passed `NULL` as @model</doc>
            <type name="ComboRowGetNameFunc" c:type="HdyComboRowGetNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="586">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="587">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="hdy_combo_row_get_model"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="486">Gets the model bound to @self.</doc>
        <source-position filename="src/hdy-combo-row.h" line="78"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="492">the [iface@Gio.ListModel] bound to @self</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="488">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_index"
              c:identifier="hdy_combo_row_get_selected_index"
              glib:get-property="selected-index"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="selected-index"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="675">Gets the index of the selected item in its [iface@Gio.ListModel].</doc>
        <source-position filename="src/hdy-combo-row.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="681">the index of the selected item, or -1 if no item is selected</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="677">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_subtitle"
              c:identifier="hdy_combo_row_get_use_subtitle"
              glib:get-property="use-subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="use-subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="729">Gets whether the current value of @self should be displayed as its subtitle.</doc>
        <source-position filename="src/hdy-combo-row.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="735">whether the current value of @self should be displayed as its
  subtitle</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="731">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_for_enum"
              c:identifier="hdy_combo_row_set_for_enum"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="623">Creates a model for @enum_type and binds it to @self.

The items of the model will be [class@EnumValueObject] objects.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
`NULL`, @self is left empty.

This is more convenient to use than [method@ComboRow.bind_name_model] if you
want to represent values of an enumeration with names.

See [func@enum_value_row_name].</doc>
        <source-position filename="src/hdy-combo-row.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="625">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="626">the enumeration [alias@GLib.Type] to be bound to @self</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="627">a function that creates names for items, or
  `NULL` in case you also passed `NULL` as @model</doc>
            <type name="ComboRowGetEnumValueNameFunc"
                  c:type="HdyComboRowGetEnumValueNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="629">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="630">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_get_name_func"
              c:identifier="hdy_combo_row_set_get_name_func"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="786">Sets a closure to convert items into names.

See [property@ComboRow:use-subtitle].</doc>
        <source-position filename="src/hdy-combo-row.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="788">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="789">a function that creates names for items, or
  `NULL` in case you also passed `NULL` as @model</doc>
            <type name="ComboRowGetNameFunc" c:type="HdyComboRowGetNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="791">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="792">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selected_index"
              c:identifier="hdy_combo_row_set_selected_index"
              glib:set-property="selected-index"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="selected-index"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="697">Sets the index of the selected item in its [iface@Gio.ListModel].</doc>
        <source-position filename="src/hdy-combo-row.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="699">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="selected_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="700">the index of the selected item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_subtitle"
              c:identifier="hdy_combo_row_set_use_subtitle"
              glib:set-property="use-subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="use-subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="752">Sets whether the current value of @self should be displayed as its subtitle.

If `TRUE`, you should not access [property@ActionRow:subtitle].</doc>
        <source-position filename="src/hdy-combo-row.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="754">a combo row</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="use_subtitle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-combo-row.c"
                 line="755">`TRUE` to set the current value as the subtitle</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="selected-index"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_selected_index"
                getter="get_selected_index"
                default-value="-1">
        <attribute name="org.gtk.Property.get"
                   value="hdy_combo_row_get_selected_index"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_combo_row_set_selected_index"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="411">The index of the selected item in its [iface@Gio.ListModel].</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_use_subtitle"
                getter="get_use_subtitle"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_combo_row_get_use_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_combo_row_set_use_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="425">Whether to use the current value as the subtitle.

If you use a custom widget creation function, you will need to give the row
a name conversion closure with [method@ComboRow.set_get_name_func].

If `TRUE`, you should not access [property@ActionRow:subtitle].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="ActionRow" c:type="HdyActionRow"/>
      </field>
    </class>
    <record name="ComboRowClass"
            c:type="HdyComboRowClass"
            glib:is-gtype-struct-for="ComboRow">
      <source-position filename="src/hdy-combo-row.h" line="72"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.h"
             line="64">the parent class</doc>
        <type name="ActionRowClass" c:type="HdyActionRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="ComboRowGetEnumValueNameFunc"
              c:type="HdyComboRowGetEnumValueNameFunc"
              version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-combo-row.h"
           line="43">Callback for getting the name of a row from an enum.

Called for combo rows that are bound to an enumeration with
[method@ComboRow.set_for_enum] for each value from that enumeration.

See also: [func@enum_value_row_name].</doc>
      <source-position filename="src/hdy-combo-row.h" line="59"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.h"
             line="55">a displayable name that represents @value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.h"
               line="45">the value from the enum from which to get a name</doc>
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.h"
               line="46">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ComboRowGetNameFunc"
              c:type="HdyComboRowGetNameFunc"
              version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-combo-row.h"
           line="26">Callback for getting the name of a row.

Called for combo rows that are bound to a [iface@Gio.ListModel] with
[method@ComboRow.bind_name_model] for each item that gets added to the model.</doc>
      <source-position filename="src/hdy-combo-row.h" line="40"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.h"
             line="36">a displayable name that represents @item</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.h"
               line="28">the item from the model from which to get a name</doc>
          <type name="GObject.Object" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.h"
               line="29">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Deck"
           c:symbol-prefix="deck"
           c:type="HdyDeck"
           version="1.0"
           parent="Gtk.Container"
           glib:type-name="HdyDeck"
           glib:get-type="hdy_deck_get_type"
           glib:type-struct="DeckClass">
      <doc xml:space="preserve"
           filename="src/hdy-deck.c"
           line="15">A swipeable widget showing one of the visible children at a time.

The `HdyDeck` widget displays one of the visible children, similar to a
[class@Gtk.Stack]. The children are strictly ordered and can be navigated
using swipe gestures.

The “over” and “under” stack the children one on top of the other, while the
“slide” transition puts the children side by side. While navigating to a
child on the side or below can be performed by swiping the current child
away, navigating to an upper child requires dragging it from the edge where
it resides. This doesn't affect non-dragging swipes.

The “over” and “under” transitions can draw their shadow on top of the
window's transparent areas, like the rounded corners. This is a side-effect
of allowing shadows to be drawn on top of OpenGL areas. It can be mitigated
by using [class@Window] or [class@ApplicationWindow] as they will crop
anything drawn beyond the rounded corners.

## CSS nodes

`HdyDeck` has a single CSS node with name `deck`.</doc>
      <source-position filename="src/hdy-deck.h" line="41"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_deck_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1103">Creates a new `HdyDeck`.</doc>
        <source-position filename="src/hdy-deck.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="1108">the newly created `HdyDeck`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_adjacent_child"
              c:identifier="hdy_deck_get_adjacent_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="461">Finds the previous or next navigatable child.

Gets the previous or next child. This will be the same widget
[method@Deck.navigate] will navigate to.

If there's no child to navigate to, `NULL` will be returned instead.</doc>
        <source-position filename="src/hdy-deck.h" line="92"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="473">the previous or next child</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="463">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="464">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_deck_get_can_swipe_back"
              glib:get-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="407">Gets whether swipe gestures for navigating backward are enabled.</doc>
        <source-position filename="src/hdy-deck.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="413">Whether swipe gestures are enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="409">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_forward"
              c:identifier="hdy_deck_get_can_swipe_forward"
              glib:get-property="can-swipe-forward"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="can-swipe-forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="443">Gets whether swipe gestures for navigating forward enabled.</doc>
        <source-position filename="src/hdy-deck.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="449">Whether swipe gestures are enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="445">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_by_name"
              c:identifier="hdy_deck_get_child_by_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="508">Finds the child of @self with @name.

Returns `NULL` if there is no child with this name.</doc>
        <source-position filename="src/hdy-deck.h" line="99"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="517">the requested child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="510">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="511">the name of the child to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_deck_get_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="125">Gets whether @self is homogeneous for the given orientation.</doc>
        <source-position filename="src/hdy-deck.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="132">whether @self is homogeneous for the given orientation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="127">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="128">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_deck_get_interpolate_size"
              glib:get-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="371">Gets whether @self will interpolate its size when changing the visible child.</doc>
        <source-position filename="src/hdy-deck.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="377">whether child sizes are interpolated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="373">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_deck_get_transition_duration"
              glib:get-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="221">Gets the mode transition animation duration for @self.</doc>
        <source-position filename="src/hdy-deck.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="227">the mode transition duration, in milliseconds.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="223">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_deck_get_transition_running"
              glib:get-property="transition-running"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-running"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="331">Gets whether a transition is currently running for @self.</doc>
        <source-position filename="src/hdy-deck.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="337">whether a transition is currently running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="333">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_deck_get_transition_type"
              glib:get-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="145">Gets the type of animation used for transitions between children.</doc>
        <source-position filename="src/hdy-deck.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="151">the current transition type of @self</doc>
          <type name="DeckTransitionType" c:type="HdyDeckTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="147">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_deck_get_visible_child"
              glib:get-property="visible-child"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="visible-child"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="257">Gets the visible child widget.</doc>
        <source-position filename="src/hdy-deck.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="263">the visible child widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="259">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child_name"
              c:identifier="hdy_deck_get_visible_child_name"
              glib:get-property="visible-child-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="visible-child-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="293">Gets the name of the currently visible child widget.</doc>
        <source-position filename="src/hdy-deck.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="299">the name of the visible child</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="295">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_child_after"
              c:identifier="hdy_deck_insert_child_after"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="550">Inserts @child in the position after @sibling in the list of children.

If @sibling is `NULL`, inserts @child at the first position.</doc>
        <source-position filename="src/hdy-deck.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="552">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="553">the widget to insert</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="554">the sibling after which to insert @child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="navigate" c:identifier="hdy_deck_navigate" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="486">Navigates to the previous or next child.

The switch is similar to performing a swipe gesture to go in @direction.</doc>
        <source-position filename="src/hdy-deck.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-deck.c"
               line="495">whether the visible child was changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="488">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="489">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="hdy_deck_prepend" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="530">Inserts @child at the first position in @self.</doc>
        <source-position filename="src/hdy-deck.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="532">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="533">the widget to prepend</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_child_after"
              c:identifier="hdy_deck_reorder_child_after"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="577">Moves @child to the position after @sibling in the list of children.

If @sibling is `NULL`, move @child to the first position.</doc>
        <source-position filename="src/hdy-deck.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="579">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="580">the widget to move, must be a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="581">the sibling to move @child after</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_deck_set_can_swipe_back"
              glib:set-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="389">Sets whether swipe gestures for navigating backward are enabled.</doc>
        <source-position filename="src/hdy-deck.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="391">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="392">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_forward"
              c:identifier="hdy_deck_set_can_swipe_forward"
              glib:set-property="can-swipe-forward"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="can-swipe-forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="425">Sets whether swipe gestures for navigating forward are enabled.</doc>
        <source-position filename="src/hdy-deck.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="427">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="can_swipe_forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="428">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_deck_set_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="102">Sets whether @self is homogeneous for a given orientation.

If set to `FALSE`, different children can have different size along the
opposite orientation.</doc>
        <source-position filename="src/hdy-deck.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="104">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="105">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="106">`TRUE` to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_deck_set_interpolate_size"
              glib:set-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="349">Sets whether @self will interpolate its size when changing the visible child.

@self will interpolate its size between the current one and the one it'll
take after changing the visible child, according to the set transition
duration.</doc>
        <source-position filename="src/hdy-deck.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="351">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="352">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_deck_set_transition_duration"
              glib:set-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="239">Sets the mode transition animation duration for @self.</doc>
        <source-position filename="src/hdy-deck.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="241">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="242">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_deck_set_transition_type"
              glib:set-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="179">Sets the type of animation used for transitions between children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <source-position filename="src/hdy-deck.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="181">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="182">the new transition type</doc>
            <type name="DeckTransitionType" c:type="HdyDeckTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child"
              c:identifier="hdy_deck_set_visible_child"
              glib:set-property="visible-child"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="visible-child"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="275">Sets the currently visible widget.</doc>
        <source-position filename="src/hdy-deck.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="277">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="visible_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="278">the new child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child_name"
              c:identifier="hdy_deck_set_visible_child_name"
              glib:set-property="visible-child-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="visible-child-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="311">Makes the child with the name @name visible.

See [method@Deck.set_visible_child] for more details.</doc>
        <source-position filename="src/hdy-deck.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="313">a deck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-deck.c"
                 line="314">the name of a child</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_can_swipe_back"
                getter="get_can_swipe_back"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_can_swipe_back"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_can_swipe_back"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1060">Whether swipe gestures allow switching to the previous child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-swipe-forward"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_can_swipe_forward"
                getter="get_can_swipe_forward"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_can_swipe_forward"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_can_swipe_forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1074">Whether swipe gestures allow switching to the next child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="938">Horizontally homogeneous sizing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_interpolate_size"
                getter="get_interpolate_size"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_interpolate_size"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_interpolate_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1045">Whether or not the size should smoothly change when changing between
differently sized children.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_duration"
                getter="get_transition_duration"
                default-value="200">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_transition_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_transition_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1017">The transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running"
                version="1.0"
                transfer-ownership="none"
                getter="get_transition_running"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_transition_running"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="1031">Whether or not the transition is currently running.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_type"
                getter="get_transition_type"
                default-value="HDY_DECK_TRANSITION_TYPE_OVER">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_transition_type"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_transition_type"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="999">The type of animation that will be used for transitions between children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <type name="DeckTransitionType"/>
      </property>
      <property name="vhomogeneous"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="952">Vertically homogeneous sizing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible-child"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visible_child"
                getter="get_visible_child">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_visible_child"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_visible_child"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="966">The widget currently visible.

The transition is determined by [property@Deck:transition-type] and
[property@Deck:transition-duration]. The transition can be cancelled by the
user, in which case visible child will change back to the previously
visible child.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="visible-child-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visible_child_name"
                getter="get_visible_child_name"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_deck_get_visible_child_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_deck_set_visible_child_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="985">The name of the widget currently visible.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="DeckClass"
            c:type="HdyDeckClass"
            glib:is-gtype-struct-for="Deck">
      <source-position filename="src/hdy-deck.h" line="41"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-deck.h"
             line="33">the parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DeckTransitionType"
                 version="1.0"
                 glib:type-name="HdyDeckTransitionType"
                 glib:get-type="hdy_deck_transition_type_get_type"
                 c:type="HdyDeckTransitionType">
      <doc xml:space="preserve"
           filename="src/hdy-deck.c"
           line="43">Describes the possible transitions in a [class@Deck] widget.

New values may be added to this enumeration over time.</doc>
      <member name="over"
              value="0"
              c:identifier="HDY_DECK_TRANSITION_TYPE_OVER"
              glib:nick="over"
              glib:name="HDY_DECK_TRANSITION_TYPE_OVER">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="45">Cover the old page or uncover the new page,
  sliding from or towards the end according to orientation, text direction
  and children order</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="HDY_DECK_TRANSITION_TYPE_UNDER"
              glib:nick="under"
              glib:name="HDY_DECK_TRANSITION_TYPE_UNDER">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="48">Uncover the new page or cover the old page,
  sliding from or towards the start according to orientation, text direction
  and children order</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="HDY_DECK_TRANSITION_TYPE_SLIDE"
              glib:nick="slide"
              glib:name="HDY_DECK_TRANSITION_TYPE_SLIDE">
        <doc xml:space="preserve"
             filename="src/hdy-deck.c"
             line="51">Slide from left, right, up or down according
  to the orientation, text direction and the children order</doc>
      </member>
    </enumeration>
    <class name="EnumValueObject"
           c:symbol-prefix="enum_value_object"
           c:type="HdyEnumValueObject"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="HdyEnumValueObject"
           glib:get-type="hdy_enum_value_object_get_type"
           glib:type-struct="EnumValueObjectClass">
      <doc xml:space="preserve"
           filename="src/hdy-enum-value-object.c"
           line="11">An object representing an [struct@GObject.EnumValue].

The `HdyEnumValueObject` object represents a [struct@GObject.EnumValue],
allowing it to be used with [iface@Gio.ListModel].</doc>
      <source-position filename="src/hdy-enum-value-object.h" line="23"/>
      <constructor name="new"
                   c:identifier="hdy_enum_value_object_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-enum-value-object.c"
             line="31">Creates a new `HdyEnumValueObject`.</doc>
        <source-position filename="src/hdy-enum-value-object.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-enum-value-object.c"
               line="36">the newly created `HdyEnumValueObject`</doc>
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="enum_value" transfer-ownership="none">
            <type name="GObject.EnumValue" c:type="GEnumValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name"
              c:identifier="hdy_enum_value_object_get_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-enum-value-object.c"
             line="78">Gets the name of @self.</doc>
        <source-position filename="src/hdy-enum-value-object.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-enum-value-object.c"
               line="84">the name of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-enum-value-object.c"
                 line="80">an enum value object</doc>
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nick"
              c:identifier="hdy_enum_value_object_get_nick"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-enum-value-object.c"
             line="96">Gets the nick of @self.</doc>
        <source-position filename="src/hdy-enum-value-object.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-enum-value-object.c"
               line="102">the nick of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-enum-value-object.c"
                 line="98">an enum value object</doc>
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="hdy_enum_value_object_get_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-enum-value-object.c"
             line="60">Gets the value of @self.</doc>
        <source-position filename="src/hdy-enum-value-object.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-enum-value-object.c"
               line="66">the value of @self</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-enum-value-object.c"
                 line="62">an enum value object</doc>
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="EnumValueObjectClass"
            c:type="HdyEnumValueObjectClass"
            glib:is-gtype-struct-for="EnumValueObject">
      <source-position filename="src/hdy-enum-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExpanderRow"
           c:symbol-prefix="expander_row"
           c:type="HdyExpanderRow"
           version="1.0"
           parent="PreferencesRow"
           glib:type-name="HdyExpanderRow"
           glib:get-type="hdy_expander_row_get_type"
           glib:type-struct="ExpanderRowClass">
      <doc xml:space="preserve"
           filename="src/hdy-expander-row.c"
           line="13">A [class@Gtk.ListBoxRow] used to reveal widgets.

The `HdyExpanderRow` widget allows the user to reveal or hide widgets below
it. It also allows the user to enable the expansion of the row, allowing to
disable all that the row contains.

## HdyExpanderRow as GtkBuildable

The `HdyExpanderRow` implementation of the [iface@Gtk.Buildable] interface
supports adding a child as an action widget by specifying “action” as the
“type” attribute of a &lt;child&gt; element.

It also supports adding it as a prefix widget by specifying “prefix” as the
“type” attribute of a &lt;child&gt; element.

## CSS nodes

`HdyExpanderRow` has a main CSS node with name `row`, and the `.expander`
style class. It has the `.empty` style class when it contains no children.

It contains the subnodes `row.header` for its main embedded row,
`list.nested` for the list it can expand, and `image.expander-row-arrow` for
its arrow.

When expanded, `HdyExpanderRow` will add the
`.checked-expander-row-previous-sibling` style class to its previous sibling,
and remove it when retracted.</doc>
      <source-position filename="src/hdy-expander-row.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_expander_row_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="452">Creates a new `HdyExpanderRow`.</doc>
        <source-position filename="src/hdy-expander-row.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="457">the newly created `HdyExpanderRow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add_action"
              c:identifier="hdy_expander_row_add_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="739">Adds an action widget to @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="741">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="742">the action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="hdy_expander_row_add_prefix"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="763">Adds a prefix widget to @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="765">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="766">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enable_expansion"
              c:identifier="hdy_expander_row_get_enable_expansion"
              glib:get-property="enable-expansion"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="enable-expansion"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="635">Gets whether the expansion of @self is enabled.</doc>
        <source-position filename="src/hdy-expander-row.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="641">whether the expansion of @self is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="637">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expanded"
              c:identifier="hdy_expander_row_get_expanded"
              glib:get-property="expanded">
        <source-position filename="src/hdy-expander-row.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_expander_row_get_icon_name"
              glib:get-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="557">Gets the icon name for @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="563">the icon name for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="559">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_enable_switch"
              c:identifier="hdy_expander_row_get_show_enable_switch"
              glib:get-property="show-enable-switch"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="show-enable-switch"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="688">Gets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="src/hdy-expander-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="694">whether the switch enabling the expansion of @self is visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="690">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_expander_row_get_subtitle"
              glib:get-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="467">Gets the subtitle for @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="473">the subtitle for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="469">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_expander_row_get_use_underline"
              glib:get-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="511">Gets whether an embedded underline in the title or subtitle labels indicates
a mnemonic.</doc>
        <source-position filename="src/hdy-expander-row.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-expander-row.c"
               line="518">whether an embedded underlines indicates a mnemonic</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="513">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enable_expansion"
              c:identifier="hdy_expander_row_set_enable_expansion"
              glib:set-property="enable-expansion"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="enable-expansion"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="657">Sets whether the expansion of @self is enabled.</doc>
        <source-position filename="src/hdy-expander-row.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="659">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="enable_expansion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="660">`TRUE` to enable the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expanded"
              c:identifier="hdy_expander_row_set_expanded"
              glib:set-property="expanded">
        <source-position filename="src/hdy-expander-row.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="expanded" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_expander_row_set_icon_name"
              glib:set-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="579">Sets the icon name for @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="581">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="582">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_enable_switch"
              c:identifier="hdy_expander_row_set_show_enable_switch"
              glib:set-property="show-enable-switch"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="show-enable-switch"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="710">Sets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="src/hdy-expander-row.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="712">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="show_enable_switch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="713">`TRUE` to show the switch enabling the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_expander_row_set_subtitle"
              glib:set-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="489">Sets the subtitle for @self.</doc>
        <source-position filename="src/hdy-expander-row.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="491">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="492">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_expander_row_set_use_underline"
              glib:set-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="534">Sets whether an embedded underline in the title or subtitle labels indicates
a mnemonic.</doc>
        <source-position filename="src/hdy-expander-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="536">a expander row</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-expander-row.c"
                 line="537">`TRUE` if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="enable-expansion"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_enable_expansion"
                getter="get_enable_expansion"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_enable_expansion"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_enable_expansion"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="357">Whether expansion is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="expanded"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_expanded"
                getter="get_expanded"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_expanded"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_expanded"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="343">Whether the row is expanded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_icon_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_icon_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="329">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-enable-switch"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_enable_switch"
                getter="get_show_enable_switch"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_show_enable_switch"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_show_enable_switch"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="371">Whether the switch enabling the expansion is visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle"
                getter="get_subtitle">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="300">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_use_underline"
                getter="get_use_underline"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_expander_row_get_use_underline"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_expander_row_set_use_underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.c"
             line="314">Whether an embedded underline in the title or subtitle labels indicates a
mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="HdyPreferencesRow"/>
      </field>
    </class>
    <record name="ExpanderRowClass"
            c:type="HdyExpanderRowClass"
            glib:is-gtype-struct-for="ExpanderRow">
      <source-position filename="src/hdy-expander-row.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-expander-row.h"
             line="27">the parent class</doc>
        <type name="PreferencesRowClass" c:type="HdyPreferencesRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Flap"
           c:symbol-prefix="flap"
           c:type="HdyFlap"
           version="1.2"
           parent="Gtk.Container"
           glib:type-name="HdyFlap"
           glib:get-type="hdy_flap_get_type"
           glib:type-struct="FlapClass">
      <doc xml:space="preserve"
           filename="src/hdy-flap.c"
           line="19">An adaptive container acting like a box or an overlay.

The `HdyFlap` widget can display its children like a [class@Gtk.Box] does or
like a [class@Gtk.Overlay] does, according to the
[property@Flap:fold-policy] value.

`HdyFlap` has at most three children: [property@Flap:content],
[property@Flap:flap] and [property@Flap:separator]. Content is the primary
child, flap is displayed next to it when unfolded, or overlays it when
folded. Flap can be shown or hidden by changing the
[property@Flap:reveal-flap] value, as well as via swipe gestures if
[property@Flap:swipe-to-open] and/or [property@Flap:swipe-to-close] are set
to `TRUE`.

Optionally, a separator can be provided, which would be displayed between the
content and the flap when there's no shadow to separate them, depending on
the transition type.

[property@Flap:flap] is transparent by default; add the `.background` style
class to it if this is unwanted.

If [property@Flap:modal] is set to `TRUE`, content becomes completely
inaccessible when the flap is revealed while folded.

The position of the flap and separator children relative to the content is
determined by orientation, as well as the [property@Flap:flap-position]
value.

Folding the flap will automatically hide the flap widget, and unfolding it
will automatically reveal it. If this behavior is not desired, the
[property@Flap:locked] property can be used to override it.

Common use cases include sidebars, header bars that need to be able to
overlap the window content (for example, in fullscreen mode) and bottom
sheets.

## HdyFlap as GtkBuildable

The `HdyFlap` implementation of the [iface@Gtk.Buildable] interface supports
setting the flap child by specifying “flap” as the “type” attribute of a
&lt;child&gt; element, and separator by specifying “separator”. Specifying
“content” child type or omitting it results in setting the content child.

## CSS nodes

`HdyFlap` has a single CSS node with name `flap`. The node will get the style
classes `.folded` when it is folded, and `.unfolded` when it's not.</doc>
      <source-position filename="src/hdy-flap.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_flap_new" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2027">Creates a new `HdyFlap`.</doc>
        <source-position filename="src/hdy-flap.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2032">the newly created `HdyFlap`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_content"
              c:identifier="hdy_flap_get_content"
              glib:get-property="content"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="content"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2042">Gets the content widget for @self</doc>
        <source-position filename="src/hdy-flap.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2048">the content widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2044">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flap"
              c:identifier="hdy_flap_get_flap"
              glib:get-property="flap"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2094">Gets the flap widget for @self</doc>
        <source-position filename="src/hdy-flap.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2100">the flap widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2096">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flap_position"
              c:identifier="hdy_flap_get_flap_position"
              glib:get-property="flap-position"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="flap-position"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2195">Gets the flap position for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2201">the flap position for @self</doc>
          <type name="Gtk.PackType" c:type="GtkPackType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2197">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fold_duration"
              c:identifier="hdy_flap_get_fold_duration"
              glib:get-property="fold-duration"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="fold-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2395">Gets the amount of time that fold transitions will take.</doc>
        <source-position filename="src/hdy-flap.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2401">the fold transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2397">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fold_policy"
              c:identifier="hdy_flap_get_fold_policy"
              glib:get-property="fold-policy"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="fold-policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2336">Gets the current fold policy of @self.</doc>
        <source-position filename="src/hdy-flap.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2342">the current fold policy of @self</doc>
          <type name="FlapFoldPolicy" c:type="HdyFlapFoldPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2338">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folded"
              c:identifier="hdy_flap_get_folded"
              glib:get-property="folded"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="folded"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2436">Gets whether @self is currently folded.</doc>
        <source-position filename="src/hdy-flap.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2442">`TRUE` if @self is currently folded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2438">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locked"
              c:identifier="hdy_flap_get_locked"
              glib:get-property="locked"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="locked"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2454">Gets whether @self is locked.</doc>
        <source-position filename="src/hdy-flap.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2460">whether @self is locked</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2456">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modal"
              c:identifier="hdy_flap_get_modal"
              glib:get-property="modal"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="modal"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2548">Gets whether the @self is modal.</doc>
        <source-position filename="src/hdy-flap.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2554">whether @self is modal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2550">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_duration"
              c:identifier="hdy_flap_get_reveal_duration"
              glib:get-property="reveal-duration"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="reveal-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2277">Gets the amount of time that reveal transitions will take.</doc>
        <source-position filename="src/hdy-flap.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2283">the reveal transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2279">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_flap"
              c:identifier="hdy_flap_get_reveal_flap"
              glib:get-property="reveal-flap"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="reveal-flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2241">Gets whether the flap widget is revealed for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2247">whether flap widget is revealed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2243">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_progress"
              c:identifier="hdy_flap_get_reveal_progress"
              glib:get-property="reveal-progress"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="reveal-progress"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2318">Gets the current reveal transition progress for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2324">the current reveal progress for @self</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2320">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_separator"
              c:identifier="hdy_flap_get_separator"
              glib:get-property="separator"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="separator"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2145">Gets the separator widget for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="53"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2151">the separator widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2147">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipe_to_close"
              c:identifier="hdy_flap_get_swipe_to_close"
              glib:get-property="swipe-to-close"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="swipe-to-close"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2650">Gets whether @self can be closed with a swipe gesture.</doc>
        <source-position filename="src/hdy-flap.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2656">`TRUE` if @self can be closed with a swipe gesture</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2652">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipe_to_open"
              c:identifier="hdy_flap_get_swipe_to_open"
              glib:get-property="swipe-to-open"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="swipe-to-open"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2602">Gets whether @self can be opened with a swipe gesture.</doc>
        <source-position filename="src/hdy-flap.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2608">`TRUE` if @self can be opened with a swipe gesture</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2604">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_flap_get_transition_type"
              glib:get-property="transition-type"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2501">Gets the type of animation used for reveal and fold transitions in @self.</doc>
        <source-position filename="src/hdy-flap.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-flap.c"
               line="2507">the current transition type of @self</doc>
          <type name="FlapTransitionType" c:type="HdyFlapTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2503">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="hdy_flap_set_content"
              glib:set-property="content"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="content"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2060">Sets the content widget for @self.

It is always displayed when unfolded, and partially visible when folded.</doc>
        <source-position filename="src/hdy-flap.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2062">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="content"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2063">the content widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flap"
              c:identifier="hdy_flap_set_flap"
              glib:set-property="flap"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2112">Sets the flap widget for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2114">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="flap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2115">the flap widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flap_position"
              c:identifier="hdy_flap_set_flap_position"
              glib:set-property="flap-position"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="flap-position"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2213">Sets the flap position for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2215">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2216">the new value</doc>
            <type name="Gtk.PackType" c:type="GtkPackType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fold_duration"
              c:identifier="hdy_flap_set_fold_duration"
              glib:set-property="fold-duration"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="fold-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2413">Sets the duration that fold transitions will take.</doc>
        <source-position filename="src/hdy-flap.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2415">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2416">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fold_policy"
              c:identifier="hdy_flap_set_fold_policy"
              glib:set-property="fold-policy"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="fold-policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2354">Sets the current fold policy for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2356">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2357">a fold policy</doc>
            <type name="FlapFoldPolicy" c:type="HdyFlapFoldPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked"
              c:identifier="hdy_flap_set_locked"
              glib:set-property="locked"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="locked"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2472">Sets whether @self is locked.

If `FALSE`, folding @self when the flap is revealed automatically closes it,
and unfolding it when the flap is not revealed opens it. If `TRUE`,
[property@Flap:reveal-flap] value never changes on its own.</doc>
        <source-position filename="src/hdy-flap.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2474">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2475">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modal"
              c:identifier="hdy_flap_set_modal"
              glib:set-property="modal"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="modal"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2566">Sets whether the @self can be closed with a click.

If @modal is `TRUE`, clicking the content widget while flap is revealed, or
pressing the &lt;kbd&gt;Esc&lt;/kbd&gt; key, will close the flap. If `FALSE`, clicks are
passed through to the content widget.</doc>
        <source-position filename="src/hdy-flap.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2568">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="modal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2569">whether @self can be closed with a click</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_duration"
              c:identifier="hdy_flap_set_reveal_duration"
              glib:set-property="reveal-duration"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="reveal-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2295">Sets the duration that reveal transitions in @self will take.</doc>
        <source-position filename="src/hdy-flap.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2297">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2298">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_flap"
              c:identifier="hdy_flap_set_reveal_flap"
              glib:set-property="reveal-flap"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="reveal-flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2259">Sets whether the flap widget is revealed for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2261">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="reveal_flap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2262">`TRUE` to reveal the flap widget, `FALSE` otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_separator"
              c:identifier="hdy_flap_set_separator"
              glib:set-property="separator"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="separator"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2163">Sets the separator widget for @self.</doc>
        <source-position filename="src/hdy-flap.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2165">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="separator"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2166">the separator widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_swipe_to_close"
              c:identifier="hdy_flap_set_swipe_to_close"
              glib:set-property="swipe-to-close"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="swipe-to-close"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2668">Sets whether @self can be closed with a swipe gesture.

The area that can be swiped depends on the [property@Flap:transition-type] value.</doc>
        <source-position filename="src/hdy-flap.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2670">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="swipe_to_close" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2671">whether @self can be closed with a swipe gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_swipe_to_open"
              c:identifier="hdy_flap_set_swipe_to_open"
              glib:set-property="swipe-to-open"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="swipe-to-open"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2620">Sets whether @self can be opened with a swipe gesture.

The area that can be swiped depends on the [property@Flap:transition-type]
value.</doc>
        <source-position filename="src/hdy-flap.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2622">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="swipe_to_open" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2623">whether @self can be opened with a swipe gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_flap_set_transition_type"
              glib:set-property="transition-type"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="2519">Sets the type of animation used for reveal and fold transitions in @self.</doc>
        <source-position filename="src/hdy-flap.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2521">a flap</doc>
            <type name="Flap" c:type="HdyFlap*"/>
          </instance-parameter>
          <parameter name="transition_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-flap.c"
                 line="2522">the new transition type</doc>
            <type name="FlapTransitionType" c:type="HdyFlapTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_content"
                getter="get_content">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_content"/>
        <attribute name="org.gtk.Property.set" value="hdy_flap_set_content"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1522">The content widget.

It's always displayed when unfolded, and partially visible
when folded.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="flap"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_flap"
                getter="get_flap">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_flap"/>
        <attribute name="org.gtk.Property.set" value="hdy_flap_set_flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1539">The flap widget.

It's only visible when [property@Flap:reveal-progress] is greater than 0.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="flap-position"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_flap_position"
                getter="get_flap_position"
                default-value="GTK_PACK_START">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_flap_position"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_flap_position"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1573">The flap position.

If `GTK_PACK_START`, the flap is displayed before the content, if
`GTK_PACK_END`, it's displayed after the content.</doc>
        <type name="Gtk.PackType"/>
      </property>
      <property name="fold-duration"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_fold_duration"
                getter="get_fold_duration"
                default-value="250">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_fold_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_fold_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1654">The fold transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="fold-policy"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_fold_policy"
                getter="get_fold_policy"
                default-value="HDY_FLAP_FOLD_POLICY_AUTO">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_fold_policy"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_fold_policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1637">The current fold policy.

See [enum@FlapFoldPolicy] for available policies.</doc>
        <type name="FlapFoldPolicy"/>
      </property>
      <property name="folded"
                version="1.2"
                transfer-ownership="none"
                getter="get_folded"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_folded"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1669">Whether the flap is currently folded.

See [property@Flap:fold-policy].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="locked"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_locked"
                getter="get_locked"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_locked"/>
        <attribute name="org.gtk.Property.set" value="hdy_flap_set_locked"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1685">Whether the flap is locked.

If `FALSE`, folding when the flap is revealed automatically closes it, and
unfolding it when the flap is not revealed opens it. If `TRUE`,
[property@Flap:reveal-flap] value never changes on its own.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="modal"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_modal"
                getter="get_modal"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_modal"/>
        <attribute name="org.gtk.Property.set" value="hdy_flap_set_modal"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1722">Whether the flap is modal.

If `TRUE`, clicking the content widget while flap is revealed, as well as
pressing the &lt;kbd&gt;Esc&lt;/kbd&gt; key, will close the flap. If `FALSE`, clicks
are passed through to the content widget.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reveal-duration"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_reveal_duration"
                getter="get_reveal_duration"
                default-value="250">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_reveal_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_reveal_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1605">The reveal transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="reveal-flap"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_reveal_flap"
                getter="get_reveal_flap"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_reveal_flap"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_reveal_flap"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1591">Whether the flap widget is revealed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reveal-progress"
                version="1.2"
                transfer-ownership="none"
                getter="get_reveal_progress"
                default-value="1.000000">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_reveal_progress"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1620">The current reveal transition progress.

0 means fully hidden, 1 means fully revealed. See
[property@Flap:reveal-flap].</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="separator"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_separator"
                getter="get_separator">
        <attribute name="org.gtk.Property.get" value="hdy_flap_get_separator"/>
        <attribute name="org.gtk.Property.set" value="hdy_flap_set_separator"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1555">The separator widget.

It's displayed between content and flap when there's no shadow to display.
When exactly it's visible depends on the [property@Flap:transition-type]
value. If `NULL`, no separator will be used.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="swipe-to-close"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_swipe_to_close"
                getter="get_swipe_to_close"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_swipe_to_close"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_swipe_to_close"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1757">Whether the flap can be closed with a swipe gesture.

The area that can be swiped depends on the [property@Flap:transition-type]
value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="swipe-to-open"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_swipe_to_open"
                getter="get_swipe_to_open"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_swipe_to_open"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_swipe_to_open"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1740">Whether the flap can be opened with a swipe gesture.

The area that can be swiped depends on the [property@Flap:transition-type]
value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_type"
                getter="get_transition_type"
                default-value="HDY_FLAP_TRANSITION_TYPE_OVER">
        <attribute name="org.gtk.Property.get"
                   value="hdy_flap_get_transition_type"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_flap_set_transition_type"/>
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="1703">the type of animation used for reveal and fold transitions.

[property@Flap:flap] is transparent by default, which means the content
will be seen through it with `HDY_FLAP_TRANSITION_TYPE_OVER` transitions;
add the `.background` style class to it if this is unwanted.</doc>
        <type name="FlapTransitionType"/>
      </property>
    </class>
    <record name="FlapClass"
            c:type="HdyFlapClass"
            glib:is-gtype-struct-for="Flap">
      <source-position filename="src/hdy-flap.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
    </record>
    <enumeration name="FlapFoldPolicy"
                 version="1.2"
                 glib:type-name="HdyFlapFoldPolicy"
                 glib:get-type="hdy_flap_fold_policy_get_type"
                 c:type="HdyFlapFoldPolicy">
      <doc xml:space="preserve"
           filename="src/hdy-flap.c"
           line="73">Describes the possible folding behavior of a [class@Flap] widget.</doc>
      <member name="never"
              value="0"
              c:identifier="HDY_FLAP_FOLD_POLICY_NEVER"
              glib:nick="never"
              glib:name="HDY_FLAP_FOLD_POLICY_NEVER">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="75">Disable folding, the flap cannot reach narrow
  sizes.</doc>
      </member>
      <member name="always"
              value="1"
              c:identifier="HDY_FLAP_FOLD_POLICY_ALWAYS"
              glib:nick="always"
              glib:name="HDY_FLAP_FOLD_POLICY_ALWAYS">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="77">Keep the flap always folded.</doc>
      </member>
      <member name="auto"
              value="2"
              c:identifier="HDY_FLAP_FOLD_POLICY_AUTO"
              glib:nick="auto"
              glib:name="HDY_FLAP_FOLD_POLICY_AUTO">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="78">Fold and unfold the flap based on available
  space.</doc>
      </member>
    </enumeration>
    <enumeration name="FlapTransitionType"
                 version="1.2"
                 glib:type-name="HdyFlapTransitionType"
                 glib:get-type="hdy_flap_transition_type_get_type"
                 c:type="HdyFlapTransitionType">
      <doc xml:space="preserve"
           filename="src/hdy-flap.c"
           line="86">Describes transitions types of a [class@Flap] widget.

These enumeration values describe the possible transitions between children
in a [class@Flap] widget, as well as which areas can be swiped via
[property@Flap:swipe-to-open] and [property@Flap:swipe-to-close].

New values may be added to this enum over time.</doc>
      <member name="over"
              value="0"
              c:identifier="HDY_FLAP_TRANSITION_TYPE_OVER"
              glib:nick="over"
              glib:name="HDY_FLAP_TRANSITION_TYPE_OVER">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="88">The flap slides over the content, which is
  dimmed. When folded, only the flap can be swiped.</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="HDY_FLAP_TRANSITION_TYPE_UNDER"
              glib:nick="under"
              glib:name="HDY_FLAP_TRANSITION_TYPE_UNDER">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="90">The content slides over the flap. Only the
  content can be swiped.</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="HDY_FLAP_TRANSITION_TYPE_SLIDE"
              glib:nick="slide"
              glib:name="HDY_FLAP_TRANSITION_TYPE_SLIDE">
        <doc xml:space="preserve"
             filename="src/hdy-flap.c"
             line="92">The flap slides offscreen when hidden,
  neither the flap nor content overlap each other. Both widgets can be
  swiped.</doc>
      </member>
    </enumeration>
    <class name="HeaderBar"
           c:symbol-prefix="header_bar"
           c:type="HdyHeaderBar"
           version="1.0"
           parent="Gtk.Container"
           glib:type-name="HdyHeaderBar"
           glib:get-type="hdy_header_bar_get_type"
           glib:type-struct="HeaderBarClass">
      <doc xml:space="preserve"
           filename="src/hdy-header-bar.c"
           line="35">A title bar widget.

`HdyHeaderBar` is similar to [class@Gtk.HeaderBar] but is designed to fix
some of its shortcomings for adaptive applications.

`HdyHeaderBar` doesn't force the custom title widget to be vertically
centered, hence allowing it to fill up the whole height, which is e.g. needed
for [class@ViewSwitcher].

When used in a mobile dialog, `HdyHeaderBar` will replace its window
decorations by a back button allowing to close it. It doesn't have to be its
direct child and you can use any complex contraption you like as the dialog's
titlebar.

`HdyHeaderBar` can be used in window's content area rather than titlebar, and
will still be draggable and will handle right click, middle click and double
click as expected from a titlebar. This is particularly useful with
[class@Window] or [class@ApplicationWindow].

## CSS nodes

`HdyHeaderBar` has a single CSS node with name `headerbar`.</doc>
      <source-position filename="src/hdy-header-bar.h" line="54"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_header_bar_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2349">Creates a new `HdyHeaderBar`.</doc>
        <source-position filename="src/hdy-header-bar.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2354">the newly created `HdyHeaderBar`.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_centering_policy"
              c:identifier="hdy_header_bar_get_centering_policy"
              glib:get-property="centering-policy"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="centering-policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2747">Gets the policy @self follows to horizontally align its center widget.</doc>
        <source-position filename="src/hdy-header-bar.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2753">the centering policy</doc>
          <type name="CenteringPolicy" c:type="HdyCenteringPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2749">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_title"
              c:identifier="hdy_header_bar_get_custom_title"
              glib:get-property="custom-title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="custom-title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2570">Retrieves the custom title widget of the header.</doc>
        <source-position filename="src/hdy-header-bar.h" line="72"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2576">the custom title widget of the header</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2572">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decoration_layout"
              c:identifier="hdy_header_bar_get_decoration_layout"
              glib:get-property="decoration-layout"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="decoration-layout"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2725">Gets the decoration layout.</doc>
        <source-position filename="src/hdy-header-bar.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2731">the decoration layout</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2727">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_subtitle"
              c:identifier="hdy_header_bar_get_has_subtitle"
              glib:get-property="has-subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="has-subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2673">Gets whether space is reserved for a subtitle, regardless if one is currently
set or not.</doc>
        <source-position filename="src/hdy-header-bar.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2680">`TRUE` if the header bar reserves space for a subtitle</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2675">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_header_bar_get_interpolate_size"
              glib:get-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2859">Gets whether @self should interpolate its size on visible child change.</doc>
        <source-position filename="src/hdy-header-bar.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2865">whether @self interpolates its size on visible child change</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2861">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_close_button"
              c:identifier="hdy_header_bar_get_show_close_button"
              glib:get-property="show-close-button"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="show-close-button"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2590">Gets whether this header bar shows the standard window decorations.</doc>
        <source-position filename="src/hdy-header-bar.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2596">whether decorations are shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2592">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_header_bar_get_subtitle"
              glib:get-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2489">Gets the subtitle of the header.</doc>
        <source-position filename="src/hdy-header-bar.h" line="66"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2495">the subtitle of the header</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2491">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_header_bar_get_title"
              glib:get-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2429">Retrieves the title of the header.</doc>
        <source-position filename="src/hdy-header-bar.h" line="60"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2435">the title of the header.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2431">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_header_bar_get_transition_duration"
              glib:get-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2795">Gets the amount of time that transitions between pages will take.</doc>
        <source-position filename="src/hdy-header-bar.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2801">the transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2797">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_header_bar_get_transition_running"
              glib:get-property="transition-running"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-running"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2839">Gets whether the @self is currently in a transition from one page to another.</doc>
        <source-position filename="src/hdy-header-bar.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-bar.c"
               line="2845">whether the transition is currently running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2841">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack_end"
              c:identifier="hdy_header_bar_pack_end"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2380">Adds @child to @self, packed with reference to the end of the @self.</doc>
        <source-position filename="src/hdy-header-bar.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2382">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2383">the widget to be added to @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_start"
              c:identifier="hdy_header_bar_pack_start"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2364">Adds @child to @self, packed with reference to the start of the @self.</doc>
        <source-position filename="src/hdy-header-bar.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2366">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2367">the widget to be added to @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_centering_policy"
              c:identifier="hdy_header_bar_set_centering_policy"
              glib:set-property="centering-policy"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="centering-policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2767">Sets the policy @self must follow to horizontally align its center widget.</doc>
        <source-position filename="src/hdy-header-bar.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2769">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="centering_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2770">the centering policy</doc>
            <type name="CenteringPolicy" c:type="HdyCenteringPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_title"
              c:identifier="hdy_header_bar_set_custom_title"
              glib:set-property="custom-title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="custom-title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2509">Sets a custom title for the header bar.

The title should help a user identify the current view. This supersedes any
title set by [method@HeaderBar.set_title] or [method@HeaderBar.set_subtitle].
To achieve the same style as the builtin title and subtitle, use the `.title`
and `.subtitle` style classes.

You should set the custom title to `NULL`, for the header title label to be
visible again.</doc>
        <source-position filename="src/hdy-header-bar.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2511">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="title_widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2512">a custom widget to use for a title</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decoration_layout"
              c:identifier="hdy_header_bar_set_decoration_layout"
              glib:set-property="decoration-layout"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="decoration-layout"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2696">Sets the decoration layout for this header bar.</doc>
        <source-position filename="src/hdy-header-bar.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2698">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="layout"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2699">a decoration layout</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_has_subtitle"
              c:identifier="hdy_header_bar_set_has_subtitle"
              glib:set-property="has-subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="has-subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2641">Sets whether space is reserved for a subtitle, even if none is currently set.</doc>
        <source-position filename="src/hdy-header-bar.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2643">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2644">`TRUE` to reserve space for a subtitle</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_header_bar_set_interpolate_size"
              glib:set-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2881">Sets whether @self should interpolate its size on visible child change.</doc>
        <source-position filename="src/hdy-header-bar.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2883">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2884">`TRUE` to interpolate the size</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_close_button"
              c:identifier="hdy_header_bar_set_show_close_button"
              glib:set-property="show-close-button"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="show-close-button"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2612">Sets whether this header bar shows the standard window decorations.</doc>
        <source-position filename="src/hdy-header-bar.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2614">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2615">`TRUE` to show standard window decorations</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_header_bar_set_subtitle"
              glib:set-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2449">Sets the subtitle of the header bar.

The title should give a user an additional detail to help them identify the
current view.

Note that [class@HeaderBar] by default reserves room for the subtitle, even
if none is currently set. If this is not desired, set the
[property@HeaderBar:has-subtitle] property to `FALSE`.</doc>
        <source-position filename="src/hdy-header-bar.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2451">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2452">a subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_header_bar_set_title"
              glib:set-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2396">Sets the title of the [class@HeaderBar].

The title should help a user identify the current view. A good title should
not include the application name.</doc>
        <source-position filename="src/hdy-header-bar.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2398">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2399">a title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_header_bar_set_transition_duration"
              glib:set-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2815">Sets the duration that transitions between pages will take.</doc>
        <source-position filename="src/hdy-header-bar.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2817">a header bar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-bar.c"
                 line="2818">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="centering-policy"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_centering_policy"
                getter="get_centering_policy"
                default-value="HDY_CENTERING_POLICY_LOOSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_centering_policy"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_centering_policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2234">The policy for aligning the center widget.</doc>
        <type name="CenteringPolicy"/>
      </property>
      <property name="custom-title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_custom_title"
                getter="get_custom_title">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_custom_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_custom_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2128">Custom title widget to display.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="decoration-layout"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_decoration_layout"
                getter="get_decoration_layout"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_decoration_layout"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_decoration_layout"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2176">The decoration layout for buttons.

If this property is not set, the
[property@Gtk.Settings:gtk-decoration-layout] setting is used.

There can be valid reasons for overriding the setting, such as a header bar
design that does not allow for buttons to take room on the right, or only
offers room for a single close button. Split header bars are another example
for overriding the setting.

The format of the string is button names, separated by commas. A colon
separates the buttons that should appear on the start from those on the
end. Recognized button names are minimize, maximize, close, icon (the
window icon) and menu (a menu button for the fallback app menu).

For example, “menu:minimize,maximize,close” specifies a menu on the left, and
minimize, maximize and close buttons on the right.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="decoration-layout-set"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2206">Whether [property@HeaderBar:decoration-layout] is set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_has_subtitle"
                getter="get_has_subtitle"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_has_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_has_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2220">Whether to reserve space for a subtitle, even if none is currently set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_interpolate_size"
                getter="get_interpolate_size"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_interpolate_size"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_interpolate_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2276">Whether the size should smoothly change when changing between children.

If `TRUE`, the header bar will interpolate its size between the one of the
previous visible child and the one of the new visible child, according to
the set transition duration and the orientation, e.g. if the orientation is
horizontal, it will interpolate the its height.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-close-button"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_show_close_button"
                getter="get_show_close_button"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_show_close_button"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_show_close_button"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2157">Whether to show window decorations.

Which buttons are actually shown and where is determined by the
[property@HeaderBar:decoration-layout] property, and by the state of the
window (e.g. a close button will not be shown if the window can't be
closed).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="6">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2142">The amount of space between children.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle"
                getter="get_subtitle"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2114">The subtitle to display.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2100">The title to display.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_duration"
                getter="get_transition_duration"
                default-value="200">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_transition_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_bar_set_transition_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2248">The transition duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running"
                version="1.0"
                transfer-ownership="none"
                getter="get_transition_running"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_bar_get_transition_running"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.c"
             line="2262">Whether or not the transition is currently running.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="HeaderBarClass"
            c:type="HdyHeaderBarClass"
            glib:is-gtype-struct-for="HeaderBar">
      <source-position filename="src/hdy-header-bar.h" line="54"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-header-bar.h"
             line="46">the parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="HeaderGroup"
           c:symbol-prefix="header_group"
           c:type="HdyHeaderGroup"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="HdyHeaderGroup"
           glib:get-type="hdy_header_group_get_type"
           glib:type-struct="HeaderGroupClass">
      <doc xml:space="preserve"
           filename="src/hdy-header-group.c"
           line="12">An object handling composite title bars.

The `HdyHeaderGroup` object handles the header bars of a composite title bar.
It splits the window decoration across the header bars, giving the left side
of the decorations to the leftmost header bar, and the right side of the
decorations to the rightmost header bar. See
[method@HeaderBar.set_decoration_layout].

The [property@HeaderGroup:decorate-all] property can be used in conjunction
with [property@Leaflet:folded] when the title bar is split across the pages
of a [class@Leaflet] to automatically display the decorations on all the
pages when the leaflet is folded.

You can nest header groups, which is convenient when you nest leaflets too:

```xml
&lt;object class="HdyHeaderGroup" id="inner_header_group"&gt;
  &lt;property name="decorate-all" bind-source="inner_leaflet" bind-property="folded" bind-flags="sync-create"/&gt;
  &lt;headerbars&gt;
    &lt;headerbar name="inner_header_bar_1"/&gt;
    &lt;headerbar name="inner_header_bar_2"/&gt;
  &lt;/headerbars&gt;
&lt;/object&gt;
&lt;object class="HdyHeaderGroup" id="outer_header_group"&gt;
  &lt;property name="decorate-all" bind-source="outer_leaflet" bind-property="folded" bind-flags="sync-create"/&gt;
  &lt;headerbars&gt;
    &lt;headerbar name="inner_header_group"/&gt;
    &lt;headerbar name="outer_header_bar"/&gt;
  &lt;/headerbars&gt;
&lt;/object&gt;
```</doc>
      <source-position filename="src/hdy-header-group.h" line="28"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_header_group_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="411">Creates a new `HdyHeaderGroup`.</doc>
        <source-position filename="src/hdy-header-group.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="416">the newly created `HdyHeaderGroup`</doc>
          <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
        </return-value>
      </constructor>
      <method name="add_gtk_header_bar"
              c:identifier="hdy_header_group_add_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="469">Adds @header_bar to @self.

When the widget is destroyed or no longer referenced elsewhere, it will be
removed from the header group.</doc>
        <source-position filename="src/hdy-header-group.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="471">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="472">the header bar to add</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_bar"
              c:identifier="hdy_header_group_add_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="443">Adds @header_bar to @self.

When the widget is destroyed or no longer referenced elsewhere, it will be
removed from the header group.</doc>
        <source-position filename="src/hdy-header-group.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="445">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="446">the header bar to add</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_group"
              c:identifier="hdy_header_group_add_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="495">Adds @header_group to @self.

When the nested group is no longer referenced elsewhere, it will be removed
from the header group.</doc>
        <source-position filename="src/hdy-header-group.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="497">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="498">the header group to add</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="hdy_header_group_get_children"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="972">Returns the list of children associated with @self.</doc>
        <source-position filename="src/hdy-header-group.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="978">the list of
  children</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="HeaderGroupChild"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="974">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decorate_all"
              c:identifier="hdy_header_group_get_decorate_all"
              glib:get-property="decorate-all"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="decorate-all"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1127">Gets whether the elements of the group should all receive the full
decoration.</doc>
        <source-position filename="src/hdy-header-group.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="1134">whether the elements of the group should all receive the full
  decoration</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1129">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_child"
              c:identifier="hdy_header_group_remove_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1078">Removes @child from @self.</doc>
        <source-position filename="src/hdy-header-group.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1080">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1081">the header group child to remove</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_gtk_header_bar"
              c:identifier="hdy_header_group_remove_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1028">Removes @header_bar from @self.</doc>
        <source-position filename="src/hdy-header-group.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1030">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1031">the header bar to remove</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_bar"
              c:identifier="hdy_header_group_remove_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1003">Removes @header_bar from @self.</doc>
        <source-position filename="src/hdy-header-group.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1005">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1006">the header bar to remove</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_group"
              c:identifier="hdy_header_group_remove_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1053">Removes a nested `HdyHeaderGroup` from @self.</doc>
        <source-position filename="src/hdy-header-group.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1055">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1056">the header group to remove</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decorate_all"
              c:identifier="hdy_header_group_set_decorate_all"
              glib:set-property="decorate-all"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="decorate-all"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="1098">Sets whether the elements of the group should all receive the full
decoration.</doc>
        <source-position filename="src/hdy-header-group.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1100">a header group</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="decorate_all" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="1101">whether the elements of the group should all receive the full
  decoration</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="decorate-all"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_decorate_all"
                getter="get_decorate_all"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_header_group_get_decorate_all"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_header_group_set_decorate_all"/>
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="839">Whether the elements of the group should all receive the full decoration.

This is useful in conjunction with [property@Leaflet:folded] when the
leaflet contains the header bars of the group, as you want them all to
display the complete decoration when the leaflet is folded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="update-decoration-layouts" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="859">This signal is emitted before updating the decoration layouts.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="HeaderGroupChild"
           c:symbol-prefix="header_group_child"
           c:type="HdyHeaderGroupChild"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="HdyHeaderGroupChild"
           glib:get-type="hdy_header_group_child_get_type"
           glib:type-struct="HeaderGroupChildClass">
      <doc xml:space="preserve"
           filename="src/hdy-header-group.c"
           line="65">A child object for [class@HeaderGroup].</doc>
      <source-position filename="src/hdy-header-group.h" line="23"/>
      <method name="get_child_type"
              c:identifier="hdy_header_group_child_get_child_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="954">Gets the child type.</doc>
        <source-position filename="src/hdy-header-group.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="960">the child type</doc>
          <type name="HeaderGroupChildType" c:type="HdyHeaderGroupChildType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="956">a header group child</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gtk_header_bar"
              c:identifier="hdy_header_group_child_get_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="912">Gets the child [class@Gtk.HeaderBar].

Use [method@HeaderGroupChild.get_child_type] to check the child type.</doc>
        <source-position filename="src/hdy-header-group.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="920">the child header bar</doc>
          <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="914">a header group child</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_bar"
              c:identifier="hdy_header_group_child_get_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="891">Gets the child [class@HeaderBar].

Use [method@HeaderGroupChild.get_child_type] to check the child type.</doc>
        <source-position filename="src/hdy-header-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="899">the child headerbar</doc>
          <type name="HeaderBar" c:type="HdyHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="893">a header group child</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_group"
              c:identifier="hdy_header_group_child_get_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="933">Gets the child [class@HeaderGroup].

Use [method@HeaderGroupChild.get_child_type] to check the child type.</doc>
        <source-position filename="src/hdy-header-group.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-header-group.c"
               line="941">the child header bar</doc>
          <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-header-group.c"
                 line="935">a header group child</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="HeaderGroupChildClass"
            c:type="HdyHeaderGroupChildClass"
            glib:is-gtype-struct-for="HeaderGroupChild">
      <source-position filename="src/hdy-header-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="HeaderGroupChildType"
                 version="1.0"
                 glib:type-name="HdyHeaderGroupChildType"
                 glib:get-type="hdy_header_group_child_type_get_type"
                 c:type="HdyHeaderGroupChildType">
      <doc xml:space="preserve"
           filename="src/hdy-header-group.c"
           line="50">Describes the child types handled by [class@HeaderGroup].

New values may be added to this enumeration over time.</doc>
      <member name="header_bar"
              value="0"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_BAR"
              glib:nick="header-bar"
              glib:name="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_BAR">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="52">The child is a [class@HeaderBar]</doc>
      </member>
      <member name="gtk_header_bar"
              value="1"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_GTK_HEADER_BAR"
              glib:nick="gtk-header-bar"
              glib:name="HDY_HEADER_GROUP_CHILD_TYPE_GTK_HEADER_BAR">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="53">The child is a
  [class@Gtk.HeaderBar]</doc>
      </member>
      <member name="header_group"
              value="2"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_GROUP"
              glib:nick="header-group"
              glib:name="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_GROUP">
        <doc xml:space="preserve"
             filename="src/hdy-header-group.c"
             line="55">The child is a
  [class@HeaderGroup]</doc>
      </member>
    </enumeration>
    <record name="HeaderGroupClass"
            c:type="HdyHeaderGroupClass"
            glib:is-gtype-struct-for="HeaderGroup">
      <source-position filename="src/hdy-header-group.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Keypad"
           c:symbol-prefix="keypad"
           c:type="HdyKeypad"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyKeypad"
           glib:get-type="hdy_keypad_get_type"
           glib:type-struct="KeypadClass">
      <doc xml:space="preserve"
           filename="src/hdy-keypad.c"
           line="13">A keypad for dialing numbers

The `HdyKeypad` widget is a keypad for entering numbers such as phone numbers
or PIN codes.

## CSS nodes

`HdyKeypad` has a single CSS node with name `keypad`.</doc>
      <source-position filename="src/hdy-keypad.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_keypad_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="388">Creates a new `HdyKeypad`.</doc>
        <source-position filename="src/hdy-keypad.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="395">the newly created `HdyKeypad`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="390">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="391">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_column_spacing"
              c:identifier="hdy_keypad_get_column_spacing"
              glib:get-property="column-spacing"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="column-spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="490">Returns the amount of space between the columns of @self.</doc>
        <source-position filename="src/hdy-keypad.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="496">the column spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="492">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_end_action"
              c:identifier="hdy_keypad_get_end_action"
              glib:get-property="end-action"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="end-action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="776">Gets the widget for the lower right corner (or left, in RTL locales).</doc>
        <source-position filename="src/hdy-keypad.h" line="73"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="782">the end action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="778">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry"
              c:identifier="hdy_keypad_get_entry"
              glib:get-property="entry"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="entry"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="658">Gets the connected entry.</doc>
        <source-position filename="src/hdy-keypad.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="664">the entry set</doc>
          <type name="Gtk.Entry" c:type="GtkEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="660">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_letters_visible"
              c:identifier="hdy_keypad_get_letters_visible"
              glib:get-property="letters-visible"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="letters-visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="541">Gets whether standard letters are displayed below the digits on the buttons.</doc>
        <source-position filename="src/hdy-keypad.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="547">whether the letters below the digits should be visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="543">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_spacing"
              c:identifier="hdy_keypad_get_row_spacing"
              glib:get-property="row-spacing"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="row-spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="438">Returns the amount of space between the rows of @self.</doc>
        <source-position filename="src/hdy-keypad.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="444">the row spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="440">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_action"
              c:identifier="hdy_keypad_get_start_action"
              glib:get-property="start-action"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="start-action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="717">Gets the widget for the lower left corner (or right, in RTL locales).</doc>
        <source-position filename="src/hdy-keypad.h" line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="723">the start action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="719">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_symbols_visible"
              c:identifier="hdy_keypad_get_symbols_visible"
              glib:get-property="symbols-visible"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="symbols-visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="592">Gets whether symbols are displayed.</doc>
        <source-position filename="src/hdy-keypad.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-keypad.c"
               line="598">whether symboles are visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="594">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_column_spacing"
              c:identifier="hdy_keypad_set_column_spacing"
              glib:set-property="column-spacing"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="column-spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="461">Sets the amount of space between columns of @self.</doc>
        <source-position filename="src/hdy-keypad.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="463">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="464">the amount of space to insert between columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_end_action"
              c:identifier="hdy_keypad_set_end_action"
              glib:set-property="end-action"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="end-action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="740">Sets the widget for the lower right corner (or left, in RTL locales).</doc>
        <source-position filename="src/hdy-keypad.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="742">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="end_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="743">the end action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entry"
              c:identifier="hdy_keypad_set_entry"
              glib:set-property="entry"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="entry"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="615">Binds @entry to @self.</doc>
        <source-position filename="src/hdy-keypad.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="617">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="entry"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="618">an entry</doc>
            <type name="Gtk.Entry" c:type="GtkEntry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_letters_visible"
              c:identifier="hdy_keypad_set_letters_visible"
              glib:set-property="letters-visible"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="letters-visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="513">Sets whether standard letters are displayed below the digits on the buttons.</doc>
        <source-position filename="src/hdy-keypad.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="515">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="516">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_spacing"
              c:identifier="hdy_keypad_set_row_spacing"
              glib:set-property="row-spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="409">Sets the amount of space between rows of @self.</doc>
        <source-position filename="src/hdy-keypad.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="411">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="412">the amount of space to insert between rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_action"
              c:identifier="hdy_keypad_set_start_action"
              glib:set-property="start-action"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="start-action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="681">Sets the widget for the lower left corner (or right, in RTL locales).</doc>
        <source-position filename="src/hdy-keypad.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="683">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="start_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="684">the start action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symbols_visible"
              c:identifier="hdy_keypad_set_symbols_visible"
              glib:set-property="symbols-visible"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="symbols-visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="564">Sets whether standard letters are displayed below the digits on the buttons.</doc>
        <source-position filename="src/hdy-keypad.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="566">a keypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-keypad.c"
                 line="567">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="column-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_column_spacing"
                getter="get_column_spacing"
                default-value="6">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_column_spacing"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_column_spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="263">The amount of space between two consecutive columns.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="end-action"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_end_action"
                getter="get_end_action">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_end_action"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_end_action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="325">The widget for the lower end corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="entry"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_entry"
                getter="get_entry">
        <attribute name="org.gtk.Property.get" value="hdy_keypad_get_entry"/>
        <attribute name="org.gtk.Property.set" value="hdy_keypad_set_entry"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="309">The entry widget connected to the keypad.

The entry will block any input not possible to type with the keypad.</doc>
        <type name="Gtk.Entry"/>
      </property>
      <property name="letters-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_letters_visible"
                getter="get_letters_visible"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_letters_visible"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_letters_visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="277">Whether standard letters should be displayed below the digits on the
buttons.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="row-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_row_spacing"
                getter="get_row_spacing"
                default-value="6">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_row_spacing"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_row_spacing"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="249">The amount of space between two consecutive rows.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="start-action"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_start_action"
                getter="get_start_action">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_start_action"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_start_action"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="339">The widget for the lower start corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="symbols-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_symbols_visible"
                getter="get_symbols_visible"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_keypad_get_symbols_visible"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_keypad_set_symbols_visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-keypad.c"
             line="292">Whether to display symbols.

This includes hash and asterisk buttons, and the plus symbol at the bottom
of its 0 button.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="KeypadClass"
            c:type="HdyKeypadClass"
            glib:is-gtype-struct-for="Keypad">
      <source-position filename="src/hdy-keypad.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-keypad.h"
             line="26">the parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Leaflet"
           c:symbol-prefix="leaflet"
           c:type="HdyLeaflet"
           version="1.0"
           parent="Gtk.Container"
           glib:type-name="HdyLeaflet"
           glib:get-type="hdy_leaflet_get_type"
           glib:type-struct="LeafletClass">
      <doc xml:space="preserve"
           filename="src/hdy-leaflet.c"
           line="15">An adaptive container acting like a box or a stack.

The `HdyLeaflet` widget can display its children like a [class@Gtk.Box] does
or like a [class@Gtk.Stack] does, adapting to size changes by switching
between the two modes.

When there is enough space the children are displayed side by side, otherwise
only one is displayed and the leaflet is said to be “folded”. The threshold
is dictated by the preferred minimum sizes of the children. When a leaflet is
folded, the children can be navigated using swipe gestures.

The “over” and “under” transition types stack the children one on top of the
other, while the “slide” transition puts the children side by side. While
navigating to a child on the side or below can be performed by swiping the
current child away, navigating to an upper child requires dragging it from
the edge where it resides. This doesn't affect non-dragging swipes.

The “over” and “under” transitions can draw their shadow on top of the
window's transparent areas, like the rounded corners. This is a side-effect
of allowing shadows to be drawn on top of OpenGL areas. It can be mitigated
by using [class@Window] or [class@ApplicationWindow] as they will crop
anything drawn beyond the rounded corners.

The child property `navigatable` can be set on `HdyLeaflet` children to
determine whether they can be navigated to when folded. If `FALSE`, the child
will be ignored by [method@Leaflet.get_adjacent_child],
[method@Leaflet.navigate], and swipe gestures. This can be used used to
prevent switching to widgets like separators.

## CSS nodes

`HdyLeaflet` has a single CSS node with name `leaflet`. The node will get the
style classes `.folded` when it is folded, `.unfolded` when it's not, or none
if it didn't compute its fold yet.</doc>
      <source-position filename="src/hdy-leaflet.h" line="42"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_leaflet_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1279">Creates a new `HdyLeaflet`.</doc>
        <source-position filename="src/hdy-leaflet.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="1284">the newly created `HdyLeaflet`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_adjacent_child"
              c:identifier="hdy_leaflet_get_adjacent_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="541">Finds the previous or next navigatable child.

This will be the same widget [method@Leaflet.navigate] will navigate to.

If there's no child to navigate to, `NULL` will be returned instead.</doc>
        <source-position filename="src/hdy-leaflet.h" line="103"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="552">the previous or next child</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="543">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="544">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_leaflet_get_can_swipe_back"
              glib:get-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="487">Gets whether swipe gestures switch to the previous navigatable child.</doc>
        <source-position filename="src/hdy-leaflet.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="493">`TRUE` if back swipe is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="489">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_forward"
              c:identifier="hdy_leaflet_get_can_swipe_forward"
              glib:get-property="can-swipe-forward"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="can-swipe-forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="523">Gets whether swipe gestures switch to the next navigatable child.</doc>
        <source-position filename="src/hdy-leaflet.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="529">`TRUE` if forward swipe is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="525">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_by_name"
              c:identifier="hdy_leaflet_get_child_by_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="587">Finds the child of @self with the name given as the argument.

Returns `NULL` if there is no child with this name.</doc>
        <source-position filename="src/hdy-leaflet.h" line="110"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="596">the requested child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="589">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="590">the name of the child to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_transition_duration"
              c:identifier="hdy_leaflet_get_child_transition_duration"
              glib:get-property="child-transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="child-transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="301">Gets the amount of time that transitions between children will take.</doc>
        <source-position filename="src/hdy-leaflet.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="307">the child transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="303">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_transition_running"
              c:identifier="hdy_leaflet_get_child_transition_running"
              glib:get-property="child-transition-running"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="child-transition-running"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="411">Returns whether @self is currently in a transition from one page to another.</doc>
        <source-position filename="src/hdy-leaflet.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="417">whether a transition is currently running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="413">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folded"
              c:identifier="hdy_leaflet_get_folded"
              glib:get-property="folded"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="folded"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="120">Gets whether @self is folded.</doc>
        <source-position filename="src/hdy-leaflet.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="126">whether @self is folded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="122">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_leaflet_get_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="165">Gets whether @self is homogeneous for the given fold and orientation.</doc>
        <source-position filename="src/hdy-leaflet.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="173">whether @self is homogeneous for the given fold and orientation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="167">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="168">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="169">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_leaflet_get_interpolate_size"
              glib:get-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="451">Gets whether to interpolate between the sizes of children on page switches.</doc>
        <source-position filename="src/hdy-leaflet.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="457">`TRUE` if child sizes are interpolated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="453">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode_transition_duration"
              c:identifier="hdy_leaflet_get_mode_transition_duration"
              glib:get-property="mode-transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="mode-transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="265">Gets the amount of time that transitions between modes in @self will take.</doc>
        <source-position filename="src/hdy-leaflet.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="271">the mode transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="267">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_leaflet_get_transition_type"
              glib:get-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="187">Gets the animation type that will be used for transitions between modes and
children.</doc>
        <source-position filename="src/hdy-leaflet.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="194">the current transition type of @self</doc>
          <type name="LeafletTransitionType"
                c:type="HdyLeafletTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="189">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_leaflet_get_visible_child"
              glib:get-property="visible-child"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="visible-child"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="337">Gets the visible child widget.</doc>
        <source-position filename="src/hdy-leaflet.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="343">the visible child widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="339">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child_name"
              c:identifier="hdy_leaflet_get_visible_child_name"
              glib:get-property="visible-child-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="visible-child-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="373">Gets the name of the currently visible child widget.</doc>
        <source-position filename="src/hdy-leaflet.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="379">the name of the visible child</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="375">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_child_after"
              c:identifier="hdy_leaflet_insert_child_after"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="629">Inserts @child in the position after @sibling in the list of children.

If @sibling is `NULL`, inserts @child at the first position.</doc>
        <source-position filename="src/hdy-leaflet.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="631">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="632">the widget to insert</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="633">the sibling after which to insert @child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="navigate"
              c:identifier="hdy_leaflet_navigate"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="565">Navigates to the previous or next navigatable child.

The switch is similar to performing a swipe gesture to go in @direction.</doc>
        <source-position filename="src/hdy-leaflet.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-leaflet.c"
               line="574">whether the visible child was changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="567">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="568">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="hdy_leaflet_prepend" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="609">Inserts @child at the first position in @self.</doc>
        <source-position filename="src/hdy-leaflet.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="611">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="612">the widget to prepend</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_child_after"
              c:identifier="hdy_leaflet_reorder_child_after"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="656">Moves @child to the position after @sibling in the list of children.

If @sibling is `NULL`, move @child to the first position.</doc>
        <source-position filename="src/hdy-leaflet.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="658">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="659">the widget to move, must be a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="660">the sibling to move @child after</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_leaflet_set_can_swipe_back"
              glib:set-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="469">Sets whether swipe gestures switch to the previous navigatable child.</doc>
        <source-position filename="src/hdy-leaflet.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="471">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="472">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_forward"
              c:identifier="hdy_leaflet_set_can_swipe_forward"
              glib:set-property="can-swipe-forward"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="can-swipe-forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="505">Sets whether swipe gestures switch to the next navigatable child.</doc>
        <source-position filename="src/hdy-leaflet.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="507">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="508">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_transition_duration"
              c:identifier="hdy_leaflet_set_child_transition_duration"
              glib:set-property="child-transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="child-transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="319">Sets the duration that transitions between children in @self will take.</doc>
        <source-position filename="src/hdy-leaflet.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="321">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="322">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_leaflet_set_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="138">Sets whether to be homogeneous for the given fold and orientation.

If it is homogeneous, the [class@Leaflet] will request the same
width or height for all its children depending on the orientation. If it
isn't and it is folded, the leaflet may change width or height when a
different child becomes visible.</doc>
        <source-position filename="src/hdy-leaflet.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="140">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="141">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="142">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="143">`TRUE` to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_leaflet_set_interpolate_size"
              glib:set-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="429">Sets whether @self will interpolate its size when changing the visible child.

If the [property@Leaflet:interpolate-size] property is set to `TRUE`, @self
will interpolate its size between the current one and the one it'll take
after changing the visible child, according to the set transition duration.</doc>
        <source-position filename="src/hdy-leaflet.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="431">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="432">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode_transition_duration"
              c:identifier="hdy_leaflet_set_mode_transition_duration"
              glib:set-property="mode-transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="mode-transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="283">Sets the duration that transitions between modes in @self will take.</doc>
        <source-position filename="src/hdy-leaflet.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="285">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="286">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_leaflet_set_transition_type"
              glib:set-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="222">Sets the animation type that will be used for transitions between modes and
children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about to
become current.</doc>
        <source-position filename="src/hdy-leaflet.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="224">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="225">the new transition type</doc>
            <type name="LeafletTransitionType"
                  c:type="HdyLeafletTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child"
              c:identifier="hdy_leaflet_set_visible_child"
              glib:set-property="visible-child"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="visible-child"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="355">Sets the currently visible widget when the leaflet is folded.</doc>
        <source-position filename="src/hdy-leaflet.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="357">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="visible_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="358">the new child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child_name"
              c:identifier="hdy_leaflet_set_visible_child_name"
              glib:set-property="visible-child-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="visible-child-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="391">Makes the child with the name @name visible.

See [method@Leaflet.set_visible_child] for more details.</doc>
        <source-position filename="src/hdy-leaflet.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="393">a leaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-leaflet.c"
                 line="394">the name of a child</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_can_swipe_back"
                getter="get_can_swipe_back"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_can_swipe_back"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_can_swipe_back"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1229">Whether swipe gestures allow switching to the previous navigatable child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-swipe-forward"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_can_swipe_forward"
                getter="get_can_swipe_forward"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_can_swipe_forward"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_can_swipe_forward"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1243">Whether swipe gestures allow switching to the next navigatable child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="child-transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_child_transition_duration"
                getter="get_child_transition_duration"
                default-value="200">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_child_transition_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_child_transition_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1187">The child transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="child-transition-running"
                version="1.0"
                transfer-ownership="none"
                getter="get_child_transition_running"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_child_transition_running"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1201">Whether a child transition is currently running.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="folded"
                version="1.0"
                transfer-ownership="none"
                getter="get_folded"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get" value="hdy_leaflet_get_folded"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1047">Whether the leaflet is folded.

The leaflet will be folded if the size allocated to it is smaller than the
sum of the natural size of its children, it will be unfolded otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-folded"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1064">Whether to allocate the same width for all children when folded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-unfolded"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1092">Whether to allocate the same width for all children when unfolded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_interpolate_size"
                getter="get_interpolate_size"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_interpolate_size"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_interpolate_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1215">Whether the size should smoothly change when changing between children.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mode-transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_mode_transition_duration"
                getter="get_mode_transition_duration"
                default-value="250">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_mode_transition_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_mode_transition_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1173">The mode transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-type"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_type"
                getter="get_transition_type"
                default-value="HDY_LEAFLET_TRANSITION_TYPE_OVER">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_transition_type"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_transition_type"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1155">The animation type used for transitions between modes and children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about
to become current.</doc>
        <type name="LeafletTransitionType"/>
      </property>
      <property name="vhomogeneous-folded"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1078">Whether to allocates the same height for all children when folded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="vhomogeneous-unfolded"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1106">Whether to allocate the same height for all children when unfolded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible-child"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visible_child"
                getter="get_visible_child">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_visible_child"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_visible_child"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1120">The widget currently visible when the leaflet is folded.

The transition is determined by [property@Leaflet:transition-type] and
[property@Leaflet:child-transition-duration]. The transition can be
cancelled by the user, in which case visible child will change back to the
previously visible child.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="visible-child-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_visible_child_name"
                getter="get_visible_child_name"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_leaflet_get_visible_child_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_leaflet_set_visible_child_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="1139">The name of the widget currently visible when the leaflet is folded.

See [property@Leaflet:visible-child].</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="LeafletClass"
            c:type="HdyLeafletClass"
            glib:is-gtype-struct-for="Leaflet">
      <source-position filename="src/hdy-leaflet.h" line="42"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.h"
             line="34">the parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="LeafletTransitionType"
                 version="1.0"
                 glib:type-name="HdyLeafletTransitionType"
                 glib:get-type="hdy_leaflet_transition_type_get_type"
                 c:type="HdyLeafletTransitionType">
      <doc xml:space="preserve"
           filename="src/hdy-leaflet.c"
           line="56">Describes the possible transitions in a [class@Leaflet] widget.

New values may be added to this enumeration over time.</doc>
      <member name="over"
              value="0"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_OVER"
              glib:nick="over"
              glib:name="HDY_LEAFLET_TRANSITION_TYPE_OVER">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="58">Cover the old page or uncover the new
  page, sliding from or towards the end according to orientation, text
  direction and children order</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_UNDER"
              glib:nick="under"
              glib:name="HDY_LEAFLET_TRANSITION_TYPE_UNDER">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="61">Uncover the new page or cover the old
  page, sliding from or towards the start according to orientation, text
  direction and children order</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_SLIDE"
              glib:nick="slide"
              glib:name="HDY_LEAFLET_TRANSITION_TYPE_SLIDE">
        <doc xml:space="preserve"
             filename="src/hdy-leaflet.c"
             line="64">Slide from left, right, up or down
  according to the orientation, text direction and the children order</doc>
      </member>
    </enumeration>
    <enumeration name="NavigationDirection"
                 version="1.0"
                 glib:type-name="HdyNavigationDirection"
                 glib:get-type="hdy_navigation_direction_get_type"
                 c:type="HdyNavigationDirection">
      <doc xml:space="preserve"
           filename="src/hdy-navigation-direction.c"
           line="10">Describes the direction of a swipe navigation gesture.</doc>
      <member name="back"
              value="0"
              c:identifier="HDY_NAVIGATION_DIRECTION_BACK"
              glib:nick="back"
              glib:name="HDY_NAVIGATION_DIRECTION_BACK">
        <doc xml:space="preserve"
             filename="src/hdy-navigation-direction.c"
             line="12">Corresponds to start or top, depending on
  orientation and text direction</doc>
      </member>
      <member name="forward"
              value="1"
              c:identifier="HDY_NAVIGATION_DIRECTION_FORWARD"
              glib:nick="forward"
              glib:name="HDY_NAVIGATION_DIRECTION_FORWARD">
        <doc xml:space="preserve"
             filename="src/hdy-navigation-direction.c"
             line="14">Corresponds to end or bottom, depending on
  orientation and text direction</doc>
      </member>
    </enumeration>
    <class name="PreferencesGroup"
           c:symbol-prefix="preferences_group"
           c:type="HdyPreferencesGroup"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyPreferencesGroup"
           glib:get-type="hdy_preferences_group_get_type"
           glib:type-struct="PreferencesGroupClass">
      <doc xml:space="preserve"
           filename="src/hdy-preferences-group.c"
           line="15">A group of preference rows.

A `HdyPreferencesGroup` represents a group or tightly related preferences,
which in turn are represented by [class@PreferencesRow].

To summarize the role of the preferences it gathers, a group can have both a
title and a description. The title will be used by [class@PreferencesWindow]
to let the user look for a preference.

## CSS nodes

`HdyPreferencesGroup` has a single CSS node with name `preferencesgroup`.</doc>
      <source-position filename="src/hdy-preferences-group.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_group_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="337">Creates a new `HdyPreferencesGroup`.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-group.c"
               line="342">the newly created `HdyPreferencesGroup`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_description"
              c:identifier="hdy_preferences_group_get_description"
              glib:get-property="description"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="description"/>
        <source-position filename="src/hdy-preferences-group.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-group.c"
               line="406">the description of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="404">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_preferences_group_get_title"
              glib:get-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="352">Gets the title of @self.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-group.c"
               line="358">the title of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="354">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_markup"
              c:identifier="hdy_preferences_group_get_use_markup"
              glib:get-property="use-markup"
              version="1.4">
        <attribute name="org.gtk.Method.get_property" value="use-markup"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="450">Gets whether @self uses markup for the title and description.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-group.c"
               line="456">whether @self uses markup for its labels</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="452">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="hdy_preferences_group_set_description"
              glib:set-property="description"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="description"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="422">Sets the description for @self.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="424">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="425">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_group_set_title"
              glib:set-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="374">Sets the title for @self.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="376">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="377">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_markup"
              c:identifier="hdy_preferences_group_set_use_markup"
              glib:set-property="use-markup"
              version="1.4">
        <attribute name="org.gtk.Method.set_property" value="use-markup"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="472">Sets whether @self uses markup for the title and description.</doc>
        <source-position filename="src/hdy-preferences-group.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="474">a preferences group</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="use_markup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-group.c"
                 line="475">whether to use markup</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_group_get_description"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_group_set_description"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="271">The description for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_group_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_group_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="285">The title for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-markup"
                version="1.4"
                writable="1"
                transfer-ownership="none"
                setter="set_use_markup"
                getter="get_use_markup"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_group_get_use_markup"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_group_set_use_markup"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.c"
             line="299">Whether to use markup for the title and description.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="PreferencesGroupClass"
            c:type="HdyPreferencesGroupClass"
            glib:is-gtype-struct-for="PreferencesGroup">
      <source-position filename="src/hdy-preferences-group.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-group.h"
             line="26">the parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesPage"
           c:symbol-prefix="preferences_page"
           c:type="HdyPreferencesPage"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyPreferencesPage"
           glib:get-type="hdy_preferences_page_get_type"
           glib:type-struct="PreferencesPageClass">
      <doc xml:space="preserve"
           filename="src/hdy-preferences-page.c"
           line="14">A page from [class@PreferencesWindow].

The `HdyPreferencesPage` widget gathers preferences groups into a single page
of a preferences window.

## CSS nodes

`HdyPreferencesPage` has a single CSS node with name `preferencespage`.</doc>
      <source-position filename="src/hdy-preferences-page.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_page_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="222">Creates a new `HdyPreferencesPage`.</doc>
        <source-position filename="src/hdy-preferences-page.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-page.c"
               line="227">the newly created `HdyPreferencesPage`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_icon_name"
              c:identifier="hdy_preferences_page_get_icon_name"
              glib:get-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="237">Gets the icon name for @self.</doc>
        <source-position filename="src/hdy-preferences-page.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-page.c"
               line="243">the icon name for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="239">a preferences page</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_preferences_page_get_title"
              glib:get-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="287">Gets the title of @self.</doc>
        <source-position filename="src/hdy-preferences-page.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-page.c"
               line="293">the title of the @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="289">a preferences page</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_preferences_page_set_icon_name"
              glib:set-property="icon-name"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="259">Sets the icon name for @self.</doc>
        <source-position filename="src/hdy-preferences-page.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="261">a preferences page</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="262">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_page_set_title"
              glib:set-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="309">Sets the title of @self.</doc>
        <source-position filename="src/hdy-preferences-page.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="311">a preferences page</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-page.c"
                 line="312">the title of the page</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_page_get_icon_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_page_set_icon_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="178">The icon name for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_page_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_page_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.c"
             line="192">The title for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="PreferencesPageClass"
            c:type="HdyPreferencesPageClass"
            glib:is-gtype-struct-for="PreferencesPage">
      <source-position filename="src/hdy-preferences-page.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-page.h"
             line="26">the parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesRow"
           c:symbol-prefix="preferences_row"
           c:type="HdyPreferencesRow"
           version="1.0"
           parent="Gtk.ListBoxRow"
           glib:type-name="HdyPreferencesRow"
           glib:get-type="hdy_preferences_row_get_type"
           glib:type-struct="PreferencesRowClass">
      <doc xml:space="preserve"
           filename="src/hdy-preferences-row.c"
           line="12">A [class@Gtk.ListBoxRow] used to present preferences.

The `HdyPreferencesRow` widget has a title that [class@PreferencesWindow]
will use to let the user look for a preference. It doesn't present the title
in any way and lets you present the preference as you please.

[class@ActionRow] and its derivatives are convenient to use as preference
rows as they take care of presenting the preference's title while letting you
compose the inputs of the preference around it.</doc>
      <source-position filename="src/hdy-preferences-row.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_row_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="142">Creates a new `HdyPreferencesRow`.</doc>
        <source-position filename="src/hdy-preferences-row.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-row.c"
               line="147">the newly created `HdyPreferencesRow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_title"
              c:identifier="hdy_preferences_row_get_title"
              glib:get-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="157">Gets the title of the preference represented by @self.</doc>
        <source-position filename="src/hdy-preferences-row.h" line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-row.c"
               line="163">the title of the preference represented
  by @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="159">a preferences row</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_preferences_row_get_use_underline"
              glib:get-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="208">Gets whether an embedded underline in the title indicates a mnemonic.</doc>
        <source-position filename="src/hdy-preferences-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-row.c"
               line="214">whether an embedded underline in the title indicates a mnemonic</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="210">a preferences row</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_row_set_title"
              glib:set-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="180">Sets the title of the preference represented by @self.</doc>
        <source-position filename="src/hdy-preferences-row.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="182">a preferences row</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="183">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_preferences_row_set_use_underline"
              glib:set-property="use-underline"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="use-underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="230">Sets whether an embedded underline in the title indicates a mnemonic.</doc>
        <source-position filename="src/hdy-preferences-row.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="232">a preferences row</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-row.c"
                 line="233">`TRUE` if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_row_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_row_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="106">The title of the preference represented by this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_use_underline"
                getter="get_use_underline"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_row_get_use_underline"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_row_set_use_underline"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.c"
             line="120">Whether an embedded underline in the title indicates a mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
      </field>
    </class>
    <record name="PreferencesRowClass"
            c:type="HdyPreferencesRowClass"
            glib:is-gtype-struct-for="PreferencesRow">
      <source-position filename="src/hdy-preferences-row.h" line="37"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-row.h"
             line="26">the parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesWindow"
           c:symbol-prefix="preferences_window"
           c:type="HdyPreferencesWindow"
           version="1.0"
           parent="Window"
           glib:type-name="HdyPreferencesWindow"
           glib:get-type="hdy_preferences_window_get_type"
           glib:type-struct="PreferencesWindowClass">
      <doc xml:space="preserve"
           filename="src/hdy-preferences-window.c"
           line="21">A window to present an application's preferences.

The `HdyPreferencesWindow` widget presents an application's preferences
gathered into pages and groups. The preferences are searchable by the user.

## CSS nodes

`HdyPreferencesWindow` has a main CSS node with the name `window` and the
style class `.preferences`.</doc>
      <source-position filename="src/hdy-preferences-window.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_window_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="607">Creates a new `HdyPreferencesWindow`.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-window.c"
               line="612">the newly created `HdyPreferencesWindow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="close_subpage"
              c:identifier="hdy_preferences_window_close_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="766">Closes the current subpage.

If there is no presented subpage, this does nothing.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="768">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_preferences_window_get_can_swipe_back"
              glib:get-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="706">Gets whether swipe gestures allow switching from a subpage to the
preferences.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-window.c"
               line="713">`TRUE` if back swipe is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="708">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_enabled"
              c:identifier="hdy_preferences_window_get_search_enabled"
              glib:get-property="search-enabled"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="search-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="622">Gets whether search is enabled for @self.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-preferences-window.c"
               line="628">whether search is enabled for @self</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="624">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="present_subpage"
              c:identifier="hdy_preferences_window_present_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="729">Sets @subpage as the window's subpage and opens it.

The transition can be cancelled by the user, in which case visible child will
change back to the previously visible child.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="731">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="subpage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="732">the subpage</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_preferences_window_set_can_swipe_back"
              glib:set-property="can-swipe-back"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="can-swipe-back"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="676">Sets whether swipe gestures allow switching from a subpage to the
preferences.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="678">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="679">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_enabled"
              c:identifier="hdy_preferences_window_set_search_enabled"
              glib:set-property="search-enabled"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="search-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="644">Sets whether search is enabled for @self.</doc>
        <source-position filename="src/hdy-preferences-window.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="646">a preferences window</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="search_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-preferences-window.c"
                 line="647">`TRUE` to enable search, `FALSE` to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_can_swipe_back"
                getter="get_can_swipe_back"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_window_get_can_swipe_back"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_window_set_can_swipe_back"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="554">Whether the window allows closing the subpage via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="search-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_search_enabled"
                getter="get_search_enabled"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_preferences_window_get_search_enabled"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_preferences_window_set_search_enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.c"
             line="540">Whether search is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Window" c:type="HdyWindow"/>
      </field>
    </class>
    <record name="PreferencesWindowClass"
            c:type="HdyPreferencesWindowClass"
            glib:is-gtype-struct-for="PreferencesWindow">
      <source-position filename="src/hdy-preferences-window.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/hdy-preferences-window.h"
             line="27">the parent class</doc>
        <type name="WindowClass" c:type="HdyWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="SearchBar"
           c:symbol-prefix="search_bar"
           c:type="HdySearchBar"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdySearchBar"
           glib:get-type="hdy_search_bar_get_type"
           glib:type-struct="SearchBarClass">
      <doc xml:space="preserve"
           filename="src/hdy-search-bar.c"
           line="49">A toolbar to integrate a search entry with.

`HdySearchBar` is a container made to have a search entry (possibly with
additional connex widgets, such as drop-down menus, or buttons) built-in. The
search bar would appear when a search is started through typing on the
keyboard, or the application’s search mode is toggled on.

For keyboard presses to start a search, events will need to be forwarded from
the top-level window that contains the search bar. See
[method@SearchBar.handle_event] for example code. Common shortcuts such as
&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F&lt;/kbd&gt; should be handled as an application action, or
through the menu items.

You will also need to tell the search bar about which entry you are using as
your search entry using [method@SearchBar.connect_entry]. The following
example shows you how to create a more complex search entry.

`HdySearchBar` is very similar to [class@Gtk.SearchBar], the main difference
being that it allows the search entry to fill all the available space. This
allows you to control your search entry's width with a [class@Clamp].

## CSS nodes

`HdySearchBar` has a single CSS node with name `searchbar`.</doc>
      <source-position filename="src/hdy-search-bar.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_search_bar_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="506">Creates a new `HdySearchBar.

You will need to tell it about which widget is going to be your text entry
using [method@SearchBar.connect_entry].</doc>
        <source-position filename="src/hdy-search-bar.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-search-bar.c"
               line="514">the newly created `HdySearchBar`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="connect_entry"
              c:identifier="hdy_search_bar_connect_entry"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="551">Sets the entry widget passed as the one to be used in this search bar.

The entry should be a descendant of the search bar. This is only required if
the entry isn’t the direct child of the search bar (as in our main example).</doc>
        <source-position filename="src/hdy-search-bar.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="553">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="554">an entry</doc>
            <type name="Gtk.Entry" c:type="GtkEntry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_search_mode"
              c:identifier="hdy_search_bar_get_search_mode"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="search-mode-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="573">Gets whether the search mode is on.</doc>
        <source-position filename="src/hdy-search-bar.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-search-bar.c"
               line="579">whether search mode is toggled on</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="575">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_close_button"
              c:identifier="hdy_search_bar_get_show_close_button"
              glib:get-property="show-close-button"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="show-close-button"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="613">Gets whether the close button is shown.</doc>
        <source-position filename="src/hdy-search-bar.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-search-bar.c"
               line="619">whether the close button is shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="615">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="handle_event"
              c:identifier="hdy_search_bar_handle_event"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="204">Handles key press events.

This function should be called when the top-level window which contains the
search bar received a key event.

If the key event is handled by the search bar, the bar will be shown, the
entry populated with the entered text and `GDK_EVENT_STOP` will be returned.
The caller should ensure that events are not propagated further.

If no entry has been connected to the search bar, using
[method@SearchBar.connect_entry], this function will return immediately with
a warning.

## Showing the search bar on key presses

```c
static gboolean
on_key_press_event (GtkWidget *widget,
                    GdkEvent  *event,
                    gpointer   user_data)
{
  HdySearchBar *bar = HDY_SEARCH_BAR (user_data);
  return hdy_search_bar_handle_event (self, event);
}

static void
create_toplevel (void)
{
  GtkWidget *window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  GtkWindow *search_bar = hdy_search_bar_new ();

  // Add more widgets to the window...

  g_signal_connect (window,
                   "key-press-event",
                    G_CALLBACK (on_key_press_event),
                    search_bar);
}
```</doc>
        <source-position filename="src/hdy-search-bar.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-search-bar.c"
               line="249">`GDK_EVENT_STOP` if the key press event resulted in text being
  entered in the search entry (and revealing the search bar if necessary),
  `GDK_EVENT_PROPAGATE` otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="206">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="207">a [struct@Gdk.Event] containing key press events</doc>
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_mode"
              c:identifier="hdy_search_bar_set_search_mode"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="search-mode-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="593">Switches the search mode on or off.</doc>
        <source-position filename="src/hdy-search-bar.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="595">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="search_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="596">the new state of the search mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_close_button"
              c:identifier="hdy_search_bar_set_show_close_button"
              glib:set-property="show-close-button"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="show-close-button"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="633">Shows or hides the close button.

Applications that already have a “search” toggle button should not show a
close button in their search bar, as it duplicates the role of the toggle
button.</doc>
        <source-position filename="src/hdy-search-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="635">a search bar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-search-bar.c"
                 line="636">whether the close button will be shown or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="search-mode-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_search_bar_get_search_mode"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_search_bar_set_search_mode"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="442">Whether the search mode is on and the search bar shown.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-close-button"
                version="1.0"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_show_close_button"
                getter="get_show_close_button"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_search_bar_get_show_close_button"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_search_bar_set_show_close_button"/>
        <doc xml:space="preserve"
             filename="src/hdy-search-bar.c"
             line="456">Whether to show the close button in the toolbar.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="SearchBarClass"
            c:type="HdySearchBarClass"
            glib:is-gtype-struct-for="SearchBar">
      <source-position filename="src/hdy-search-bar.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Squeezer"
           c:symbol-prefix="squeezer"
           c:type="HdySqueezer"
           version="1.0"
           parent="Gtk.Container"
           glib:type-name="HdySqueezer"
           glib:get-type="hdy_squeezer_get_type"
           glib:type-struct="SqueezerClass">
      <doc xml:space="preserve"
           filename="src/hdy-squeezer.c"
           line="27">A best fit container.

The `HdySqueezer` widget is a container which only shows the first of its
children that fits in the available size. It is convenient to offer different
widgets to represent the same data with different levels of detail, making
the widget seem to squeeze itself to fit in the available space.

Transitions between children can be animated as fades. This can be controlled
with [method@Squeezer.set_transition_type].

## CSS nodes

`HdySqueezer` has a single CSS node with name `squeezer`.</doc>
      <source-position filename="src/hdy-squeezer.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="hdy_squeezer_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1282">Creates a new `HdySqueezer`.</doc>
        <source-position filename="src/hdy-squeezer.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1287">the newly created `HdySqueezer`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child_enabled"
              c:identifier="hdy_squeezer_get_child_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1501">Gets whether @child is enabled.

See [method@Squeezer.set_child_enabled].</doc>
        <source-position filename="src/hdy-squeezer.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1510">whether @child is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1503">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1504">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_squeezer_get_homogeneous"
              glib:get-property="homogeneous"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1297">Gets whether @self is homogeneous.</doc>
        <source-position filename="src/hdy-squeezer.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1303">whether @self is homogeneous</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1299">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_squeezer_get_interpolate_size"
              glib:get-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1441">Gets whether @self should interpolate its size on visible child change.</doc>
        <source-position filename="src/hdy-squeezer.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1447">whether @self interpolates its size on visible child change</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1443">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_squeezer_get_transition_duration"
              glib:get-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1343">Gets the amount of time that transitions between children will take.</doc>
        <source-position filename="src/hdy-squeezer.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1349">the transition duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1345">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_squeezer_get_transition_running"
              glib:get-property="transition-running"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="transition-running"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1423">Gets whether a transition is currently running for @self.</doc>
        <source-position filename="src/hdy-squeezer.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1429">whether a transition is currently running</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1425">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_squeezer_get_transition_type"
              glib:get-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1383">Gets the animation type that will be used for transitions between children.</doc>
        <source-position filename="src/hdy-squeezer.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1389">the current transition type of @self</doc>
          <type name="SqueezerTransitionType"
                c:type="HdySqueezerTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1385">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_squeezer_get_visible_child"
              glib:get-property="visible-child"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="visible-child"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1483">Gets the currently visible child of @self.</doc>
        <source-position filename="src/hdy-squeezer.h" line="61"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1489">the visible child</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1485">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xalign"
              c:identifier="hdy_squeezer_get_xalign"
              glib:get-property="xalign"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="xalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1570">Gets the horizontal alignment.</doc>
        <source-position filename="src/hdy-squeezer.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1576">the xalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1572">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_yalign"
              c:identifier="hdy_squeezer_get_yalign"
              glib:get-property="yalign"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="yalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1613">Gets the vertical alignment.</doc>
        <source-position filename="src/hdy-squeezer.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-squeezer.c"
               line="1619">the yalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1615">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child_enabled"
              c:identifier="hdy_squeezer_set_child_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1530">Sets whether @child is enabled.

If a child is disabled, it will be ignored when looking for the child fitting
the available size best. This allows to programmatically and prematurely hide
a child of @self even if it fits in the available space.

This can be used e.g. to ensure a certain child is hidden below a certain
window width, or any other constraint you find suitable.</doc>
        <source-position filename="src/hdy-squeezer.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1532">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1533">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1534">whether to enable the child</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_squeezer_set_homogeneous"
              glib:set-property="homogeneous"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1315">Sets whether all children have the same size for the opposite orientation.</doc>
        <source-position filename="src/hdy-squeezer.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1317">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1318">`TRUE` to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_squeezer_set_interpolate_size"
              glib:set-property="interpolate-size"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="interpolate-size"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1459">Sets whether @self should interpolate its size on visible child change.</doc>
        <source-position filename="src/hdy-squeezer.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1461">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1462">`TRUE` to interpolate the size</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_squeezer_set_transition_duration"
              glib:set-property="transition-duration"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="transition-duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1361">Sets the duration that transitions between children in @self will take.</doc>
        <source-position filename="src/hdy-squeezer.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1363">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1364">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_squeezer_set_transition_type"
              glib:set-property="transition-type"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="transition-type"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1401">Sets the animation type that will be used for transitions between children.</doc>
        <source-position filename="src/hdy-squeezer.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1403">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1404">the new transition type</doc>
            <type name="SqueezerTransitionType"
                  c:type="HdySqueezerTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_xalign"
              c:identifier="hdy_squeezer_set_xalign"
              glib:set-property="xalign"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="xalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1588">Sets the horizontal alignment.</doc>
        <source-position filename="src/hdy-squeezer.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1590">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="xalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1591">the new xalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_yalign"
              c:identifier="hdy_squeezer_set_yalign"
              glib:set-property="yalign"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="yalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1631">Sets the vertical alignment.</doc>
        <source-position filename="src/hdy-squeezer.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1633">a squeezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="yalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-squeezer.c"
                 line="1634">the new yalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <property name="homogeneous"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_homogeneous"
                getter="get_homogeneous"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_homogeneous"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_homogeneous"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1109">Whether all children have the same size for the opposite orientation.

For example, if a squeezer is horizontal and is homogeneous, it will request
the same height for all its children. If it isn't, the squeezer may change
size when a different child becomes visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_interpolate_size"
                getter="get_interpolate_size"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_interpolate_size"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_interpolate_size"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1190">Whether the squeezer interpolates its size when changing the visible child.

If `TRUE`, the squeezer will interpolate its size between the one of the
previous visible child and the one of the new visible child, according to
the set transition duration and the orientation, e.g. if the squeezer is
horizontal, it will interpolate the its height.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_duration"
                getter="get_transition_duration"
                default-value="200">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_transition_duration"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_transition_duration"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1141">The animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running"
                version="1.0"
                transfer-ownership="none"
                getter="get_transition_running"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_transition_running"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1176">Whether a transition is currently running.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_transition_type"
                getter="get_transition_type"
                default-value="HDY_SQUEEZER_TRANSITION_TYPE_NONE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_transition_type"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_transition_type"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1155">The type of animation used for transitions between children.

Available types include various kinds of fades and slides.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <type name="SqueezerTransitionType"/>
      </property>
      <property name="visible-child"
                version="1.0"
                transfer-ownership="none"
                getter="get_visible_child">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_visible_child"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1127">The currently visible child.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="xalign"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_xalign"
                getter="get_xalign"
                default-value="0.500000">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_xalign"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_xalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1209">The horizontal alignment, from 0 (start) to 1 (end).

The xalign property determines the horizontal alignment of the children
inside the squeezer's size allocation. Compare this to
[property@Gtk.Widget:halign], which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.

This will affect the position of children too wide to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="yalign"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_yalign"
                getter="get_yalign"
                default-value="0.500000">
        <attribute name="org.gtk.Property.get"
                   value="hdy_squeezer_get_yalign"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_squeezer_set_yalign"/>
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="1232">The vertical alignment, from 0 (start) to 1 (end).

The yalign property determines the vertical alignment of the children
inside the squeezer's size allocation. Compare this to
[property@Gtk.Widget:valign], which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.

This will affect the position of children too tall to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="SqueezerClass"
            c:type="HdySqueezerClass"
            glib:is-gtype-struct-for="Squeezer">
      <source-position filename="src/hdy-squeezer.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
    </record>
    <enumeration name="SqueezerTransitionType"
                 version="1.0"
                 glib:type-name="HdySqueezerTransitionType"
                 glib:get-type="hdy_squeezer_transition_type_get_type"
                 c:type="HdySqueezerTransitionType">
      <doc xml:space="preserve"
           filename="src/hdy-squeezer.c"
           line="47">Describes the possible transitions in a [class@Squeezer] widget.</doc>
      <member name="none"
              value="0"
              c:identifier="HDY_SQUEEZER_TRANSITION_TYPE_NONE"
              glib:nick="none"
              glib:name="HDY_SQUEEZER_TRANSITION_TYPE_NONE">
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="49">No transition</doc>
      </member>
      <member name="crossfade"
              value="1"
              c:identifier="HDY_SQUEEZER_TRANSITION_TYPE_CROSSFADE"
              glib:nick="crossfade"
              glib:name="HDY_SQUEEZER_TRANSITION_TYPE_CROSSFADE">
        <doc xml:space="preserve"
             filename="src/hdy-squeezer.c"
             line="50">A cross-fade</doc>
      </member>
    </enumeration>
    <class name="StatusPage"
           c:symbol-prefix="status_page"
           c:type="HdyStatusPage"
           version="1.2"
           parent="Gtk.Bin"
           glib:type-name="HdyStatusPage"
           glib:get-type="hdy_status_page_get_type"
           glib:type-struct="StatusPageClass">
      <doc xml:space="preserve"
           filename="src/hdy-status-page.c"
           line="12">A page used for empty/error states and similar use-cases.

The `HdyStatusPage` widget can have an icon, a title, a description and a
custom widget which is displayed below them.

## CSS nodes

`HdyStatusPage` has a main CSS node with name `statuspage`.</doc>
      <source-position filename="src/hdy-status-page.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_status_page_new" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="276">Creates a new `HdyStatusPage`.</doc>
        <source-position filename="src/hdy-status-page.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-status-page.c"
               line="281">the newly created `HdyStatusPage`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_description"
              c:identifier="hdy_status_page_get_description"
              glib:get-property="description"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="description"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="378">Gets the description for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-status-page.c"
               line="384">the description for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="380">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_status_page_get_icon_name"
              glib:get-property="icon-name"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="291">Gets the icon name for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="28"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-status-page.c"
               line="297">the icon name for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="293">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_status_page_get_title"
              glib:get-property="title"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="336">Gets the title for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="34"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-status-page.c"
               line="342">the title for @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="338">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="hdy_status_page_set_description"
              glib:set-property="description"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="description"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="396">Sets the description for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="398">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="399">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_status_page_set_icon_name"
              glib:set-property="icon-name"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="icon-name"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="307">Sets the icon name for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="309">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="310">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_status_page_set_title"
              glib:set-property="title"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="354">Sets the title for @self.</doc>
        <source-position filename="src/hdy-status-page.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="356">a status page</doc>
            <type name="StatusPage" c:type="HdyStatusPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-status-page.c"
                 line="357">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description">
        <attribute name="org.gtk.Property.get"
                   value="hdy_status_page_get_description"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_status_page_set_description"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="240">The description to be displayed below the title.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-name"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_status_page_get_icon_name"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_status_page_set_icon_name"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="212">The name of the icon to be used.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title">
        <attribute name="org.gtk.Property.get"
                   value="hdy_status_page_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_status_page_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-status-page.c"
             line="226">The title to be displayed below the icon.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="StatusPageClass"
            c:type="HdyStatusPageClass"
            glib:is-gtype-struct-for="StatusPage">
      <source-position filename="src/hdy-status-page.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="StyleManager"
           c:symbol-prefix="style_manager"
           c:type="HdyStyleManager"
           version="1.6"
           parent="GObject.Object"
           glib:type-name="HdyStyleManager"
           glib:get-type="hdy_style_manager_get_type"
           glib:type-struct="StyleManagerClass">
      <doc xml:space="preserve"
           filename="src/hdy-style-manager.c"
           line="36">A class for managing application-wide styling.

`HdyStyleManager` provides a way to query and influence the application
styles, such as whether to use dark or high contrast appearance.

It allows to set the color scheme via the
[property@StyleManager:color-scheme] property, and to query the current
appearance, as well as whether a system-wide color scheme preference exists.

Important: [property@Gtk.Settings:gtk-application-prefer-dark-theme] should
not be used together with `HdyStyleManager` and will result in a warning.
Color schemes should be used instead.</doc>
      <source-position filename="src/hdy-style-manager.h" line="33"/>
      <function name="get_default"
                c:identifier="hdy_style_manager_get_default"
                version="1.6">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="680">Gets the default [class@StyleManager] instance.

It manages all [class@Gdk.Display] instances unless the style manager for
that display has an override.

See [func@StyleManager.get_for_display].</doc>
        <source-position filename="src/hdy-style-manager.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="690">the default style manager</doc>
          <type name="StyleManager" c:type="HdyStyleManager*"/>
        </return-value>
      </function>
      <function name="get_for_display"
                c:identifier="hdy_style_manager_get_for_display"
                version="1.6">
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="703">Gets the [class@StyleManager] instance managing @display.

It can be used to override styles for that specific display instead of the
whole application.

Most applications should use [func@StyleManager.get_default] instead.</doc>
        <source-position filename="src/hdy-style-manager.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="714">the style manager for @display</doc>
          <type name="StyleManager" c:type="HdyStyleManager*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="705">a display</doc>
            <type name="Gdk.Display" c:type="GdkDisplay*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_color_scheme"
              c:identifier="hdy_style_manager_get_color_scheme"
              glib:get-property="color-scheme"
              version="1.6">
        <attribute name="org.gtk.Method.get_property" value="color-scheme"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="752">Gets the requested application color scheme.</doc>
        <source-position filename="src/hdy-style-manager.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="758">the color scheme</doc>
          <type name="ColorScheme" c:type="HdyColorScheme"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="754">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dark"
              c:identifier="hdy_style_manager_get_dark"
              glib:get-property="dark"
              version="1.6">
        <attribute name="org.gtk.Method.get_property" value="dark"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="833">Gets whether the application is using dark appearance.</doc>
        <source-position filename="src/hdy-style-manager.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="839">whether the application is using dark appearance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="835">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="hdy_style_manager_get_display"
              glib:get-property="display"
              version="1.6">
        <attribute name="org.gtk.Method.get_property" value="display"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="731">Gets the display the style manager is associated with.

The display will be `NULL` for the style manager returned by
[func@StyleManager.get_default].</doc>
        <source-position filename="src/hdy-style-manager.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="740">(nullable): the display</doc>
          <type name="Gdk.Display" c:type="GdkDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="733">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_high_contrast"
              c:identifier="hdy_style_manager_get_high_contrast"
              glib:get-property="high-contrast"
              version="1.6">
        <attribute name="org.gtk.Method.get_property" value="high-contrast"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="851">Gets whether the application is using high contrast appearance.</doc>
        <source-position filename="src/hdy-style-manager.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="857">whether the application is using high contrast appearance</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="853">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_system_supports_color_schemes"
              c:identifier="hdy_style_manager_get_system_supports_color_schemes"
              glib:get-property="system-supports-color-schemes"
              version="1.6">
        <attribute name="org.gtk.Method.get_property"
                   value="system-supports-color-schemes"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="815">Gets whether the system supports color schemes.</doc>
        <source-position filename="src/hdy-style-manager.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-style-manager.c"
               line="821">whether the system supports color schemes</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="817">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color_scheme"
              c:identifier="hdy_style_manager_set_color_scheme"
              glib:set-property="color-scheme"
              version="1.6">
        <attribute name="org.gtk.Method.set_property" value="color-scheme"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="770">Sets the requested application color scheme.

The effective appearance will be decided based on the application color
scheme and the system preferred color scheme. The
[property@StyleManager:dark] property can be used to query the current
effective appearance.</doc>
        <source-position filename="src/hdy-style-manager.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="772">a style manager</doc>
            <type name="StyleManager" c:type="HdyStyleManager*"/>
          </instance-parameter>
          <parameter name="color_scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-style-manager.c"
                 line="773">the color scheme</doc>
            <type name="ColorScheme" c:type="HdyColorScheme"/>
          </parameter>
        </parameters>
      </method>
      <property name="color-scheme"
                version="1.6"
                writable="1"
                transfer-ownership="none"
                setter="set_color_scheme"
                getter="get_color_scheme"
                default-value="HDY_COLOR_SCHEME_DEFAULT">
        <attribute name="org.gtk.Property.get"
                   value="hdy_style_manager_get_color_scheme"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_style_manager_set_color_scheme"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="544">The requested application color scheme.

The effective appearance will be decided based on the application color
scheme and the system preferred color scheme. The
[property@StyleManager:dark] property can be used to query the current
effective appearance.

The `HDY_COLOR_SCHEME_PREFER_LIGHT` color scheme results in the application
using light appearance unless the system prefers dark colors. This is the
default value.

The `HDY_COLOR_SCHEME_PREFER_DARK` color scheme results in the application
using dark appearance, but can still switch to the light appearance if the
system can prefers it, for example, when the high contrast preference is
enabled.

The `HDY_COLOR_SCHEME_FORCE_LIGHT` and `HDY_COLOR_SCHEME_FORCE_DARK` values
ignore the system preference entirely, they are useful if the application
wants to match its UI to its content or to provide a separate color scheme
switcher.

If a per-[class@Gdk.Display] style manager has its color scheme set to
`HDY_COLOR_SCHEME_DEFAULT`, it will inherit the color scheme from the
default style manager.

For the default style manager, `HDY_COLOR_SCHEME_DEFAULT` is equivalent to
`HDY_COLOR_SCHEME_FORCE_LIGHT`.

The [property@StyleManager:system-supports-color-schemes] property can be
used to check if the current environment provides a color scheme
preference.</doc>
        <type name="ColorScheme"/>
      </property>
      <property name="dark"
                version="1.6"
                transfer-ownership="none"
                getter="get_dark"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_style_manager_get_dark"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="611">Whether the application is using dark appearance.

This property can be used to query the current appearance, as requested via
[property@StyleManager:color-scheme].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="display"
                version="1.6"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_display">
        <attribute name="org.gtk.Property.get"
                   value="hdy_style_manager_get_display"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="527">The display the style manager is associated with.

The display will be `NULL` for the style manager returned by
[func@StyleManager.get_default].</doc>
        <type name="Gdk.Display"/>
      </property>
      <property name="high-contrast"
                version="1.6"
                transfer-ownership="none"
                getter="get_high_contrast"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_style_manager_get_high_contrast"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="628">Whether the application is using high contrast appearance.

This cannot be overridden by applications.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="system-supports-color-schemes"
                version="1.6"
                transfer-ownership="none"
                getter="get_system_supports_color_schemes"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_style_manager_get_system_supports_color_schemes"/>
        <doc xml:space="preserve"
             filename="src/hdy-style-manager.c"
             line="589">Whether the system supports color schemes.

This property can be used to check if the current environment provides a
color scheme preference. For example, applications might want to show a
separate appearance switcher if it's set to `FALSE`.

It's only set at startup and cannot change its value later.

See [property@StyleManager:color-scheme].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="StyleManagerClass"
            c:type="HdyStyleManagerClass"
            glib:is-gtype-struct-for="StyleManager">
      <source-position filename="src/hdy-style-manager.h" line="33"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SwipeGroup"
           c:symbol-prefix="swipe_group"
           c:type="HdySwipeGroup"
           version="1.0"
           deprecated="1"
           deprecated-version="1.4"
           parent="GObject.Object"
           glib:type-name="HdySwipeGroup"
           glib:get-type="hdy_swipe_group_get_type"
           glib:type-struct="SwipeGroupClass">
      <doc xml:space="preserve"
           filename="src/hdy-swipe-group.c"
           line="21">An object for syncing swipeable widgets.

The `HdySwipeGroup` object can be used to sync multiple swipeable widgets
that implement the [iface@Swipeable] interface, such as [class@Carousel], so
that animating one of them also animates all the other widgets in the group.

This can be useful for syncing widgets between a window's titlebar and
content area.

## HdySwipeGroup as GtkBuildable

`HdySwipeGroup` can be created in an UI definition. The list of swipeable
widgets is specified with a &amp;lt;swipeables&amp;gt; element containing multiple
&amp;lt;swipeable&amp;gt; elements with their ”name” attribute specifying the id of
the widgets.

```xml
&lt;object class="HdySwipeGroup"&gt;
  &lt;swipeables&gt;
    &lt;swipeable name="carousel1"/&gt;
    &lt;swipeable name="carousel2"/&gt;
  &lt;/swipeables&gt;
&lt;/object&gt;
```

`HdySwipeGroup` has been deprecated, [class@Window] and
[class@ApplicationWindow] allow using a single leaflet for both content and
header bar, without the need to sync them.</doc>
      <source-position filename="src/hdy-swipe-group.h" line="23"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_swipe_group_new"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.4">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-group.c"
             line="97">Creates a new `HdySwipeGroup`.</doc>
        <source-position filename="src/hdy-swipe-group.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-group.c"
               line="102">the newly created `HdySwipeGroup`</doc>
          <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
        </return-value>
      </constructor>
      <method name="add_swipeable"
              c:identifier="hdy_swipe_group_add_swipeable"
              version="1.0"
              deprecated="1"
              deprecated-version="1.4">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-group.c"
             line="221">Adds a swipeable to @self.

When the widget is destroyed or no longer referenced elsewhere, it will be
removed from the swipe group.</doc>
        <source-position filename="src/hdy-swipe-group.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-group.c"
                 line="223">a swipe group</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-group.c"
                 line="224">the [iface@Swipeable] to add</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipeables"
              c:identifier="hdy_swipe_group_get_swipeables"
              version="1.0"
              deprecated="1"
              deprecated-version="1.4">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-group.c"
             line="293">Gets the list of swipeables associated with @self.</doc>
        <source-position filename="src/hdy-swipe-group.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-group.c"
               line="299">a list of swipeables</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Swipeable"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-group.c"
                 line="295">a swipe group</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_swipeable"
              c:identifier="hdy_swipe_group_remove_swipeable"
              version="1.0"
              deprecated="1"
              deprecated-version="1.4">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-group.c"
             line="261">Removes a widget from a [class@SwipeGroup].</doc>
        <source-position filename="src/hdy-swipe-group.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-group.c"
                 line="263">a swipe group</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-group.c"
                 line="264">the [iface@Swipeable] to remove</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SwipeGroupClass"
            c:type="HdySwipeGroupClass"
            glib:is-gtype-struct-for="SwipeGroup">
      <source-position filename="src/hdy-swipe-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SwipeTracker"
           c:symbol-prefix="swipe_tracker"
           c:type="HdySwipeTracker"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="HdySwipeTracker"
           glib:get-type="hdy_swipe_tracker_get_type"
           glib:type-struct="SwipeTrackerClass">
      <doc xml:space="preserve"
           filename="src/hdy-swipe-tracker.c"
           line="34">Swipe tracker used in [class@Carousel] and [class@Leaflet].

The `HdySwipeTracker` object can be used for implementing widgets with swipe
gestures. It supports touch-based swipes, pointer dragging, and touchpad
scrolling.

The widgets will probably want to expose [property@SwipeTracker:enabled]
property. If they expect to use horizontal orientation,
[property@SwipeTracker:reversed] property can be used for supporting RTL text
direction.</doc>
      <source-position filename="src/hdy-swipe-tracker.h" line="23"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_swipe_tracker_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1215">Creates a new `HdySwipeTracker` object on @widget.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1221">the newly created `HdySwipeTracker`</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1217">a swipeable to add the tracker on</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_allow_long_swipes"
              c:identifier="hdy_swipe_tracker_get_allow_long_swipes"
              glib:get-property="allow-long-swipes"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="allow-long-swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1391">Whether to allow swiping for more than one snap point at a time.

If the value is `FALSE`, each swipe can only move to the adjacent snap
points.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1400">whether long swipes are allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1393">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allow_mouse_drag"
              c:identifier="hdy_swipe_tracker_get_allow_mouse_drag"
              glib:get-property="allow-mouse-drag"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="allow-mouse-drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1343">Get whether @self can be dragged with mouse pointer.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1349">`TRUE` is mouse dragging is allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1345">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="hdy_swipe_tracker_get_enabled"
              glib:get-property="enabled"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1253">Get whether @self is enabled.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1259">`TRUE` if @self is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1255">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reversed"
              c:identifier="hdy_swipe_tracker_get_reversed"
              glib:get-property="reversed"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="reversed"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1299">Get whether @self is reversing the swipe direction.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1305">`TRUE` is the direction is reversed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1301">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipeable"
              c:identifier="hdy_swipe_tracker_get_swipeable"
              glib:get-property="swipeable"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="swipeable"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1235">Get @self's swipeable widget.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipe-tracker.c"
               line="1241">the swipeable widget</doc>
          <type name="Swipeable" c:type="HdySwipeable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1237">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allow_long_swipes"
              c:identifier="hdy_swipe_tracker_set_allow_long_swipes"
              glib:set-property="allow-long-swipes"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="allow-long-swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1412">Sets whether to allow swiping for more than one snap point at a time.

If the value is `FALSE`, each swipe can only move to the adjacent snap
points.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1414">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="allow_long_swipes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1415">whether to allow long swipes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="hdy_swipe_tracker_set_allow_mouse_drag"
              glib:set-property="allow-mouse-drag"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="allow-mouse-drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1361">Set whether @self can be dragged with mouse pointer.

This should usually be `FALSE`.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1363">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1364">whether to allow mouse dragging</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="hdy_swipe_tracker_set_enabled"
              glib:set-property="enabled"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1271">Set whether @self is enabled.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1273">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1274">whether to enable to swipe tracker</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reversed"
              c:identifier="hdy_swipe_tracker_set_reversed"
              glib:set-property="reversed"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="reversed"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1317">Set whether to reverse the swipe direction.

If @self is horizontal, can be used for supporting RTL text direction.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1319">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="reversed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1320">whether to reverse the swipe direction</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="shift_position"
              c:identifier="hdy_swipe_tracker_shift_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1440">Move the current progress value by @delta.

This can be used to adjust the current position if snap points move during
the gesture.</doc>
        <source-position filename="src/hdy-swipe-tracker.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1442">a swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="delta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1443">the position delta</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-long-swipes"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_long_swipes"
                getter="get_allow_long_swipes"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_swipe_tracker_get_allow_long_swipes"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_swipe_tracker_set_allow_long_swipes"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1118">Whether to allow swiping for more than one snap point at a time.

If the value is `FALSE`, each swipe can only move to the adjacent snap
points.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_mouse_drag"
                getter="get_allow_mouse_drag"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_swipe_tracker_get_allow_mouse_drag"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_swipe_tracker_set_allow_mouse_drag"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1102">Whether to allow dragging with mouse pointer.

This should usually be `FALSE`.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_enabled"
                getter="get_enabled"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_swipe_tracker_get_enabled"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_swipe_tracker_set_enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1068">Whether the swipe tracker is enabled.

When it's not enabled, no events will be processed. Usually widgets will
want to expose this via a property.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reversed"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_reversed"
                getter="get_reversed"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_swipe_tracker_get_reversed"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_swipe_tracker_set_reversed"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1085">Whether to reverse the swipe direction.

If the swipe tracker is horizontal, it can be used for supporting RTL text
direction.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="swipeable"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_swipeable">
        <attribute name="org.gtk.Property.get"
                   value="hdy_swipe_tracker_get_swipeable"/>
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1054">The widget the swipe tracker is attached to. Must not be `NULL`.</doc>
        <type name="Swipeable"/>
      </property>
      <glib:signal name="begin-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1141">This signal is emitted when a possible swipe is detected.

The @direction value can be used to restrict the swipe to a certain
direction.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1144">the direction of the swipe</doc>
            <type name="NavigationDirection"/>
          </parameter>
          <parameter name="direct" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1145">`TRUE` if the swipe is directly triggered by a gesture,
  `FALSE` if it's triggered via a [class@SwipeGroup]</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="end-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1184">This signal is emitted as soon as the gesture has stopped.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1187">snap-back animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="to" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1188">the progress value to animate to</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="update-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipe-tracker.c"
             line="1165">This signal is emitted every time the progress value changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipe-tracker.c"
                 line="1168">the current animation progress value</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SwipeTrackerClass"
            c:type="HdySwipeTrackerClass"
            glib:is-gtype-struct-for="SwipeTracker">
      <source-position filename="src/hdy-swipe-tracker.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Swipeable"
               c:symbol-prefix="swipeable"
               c:type="HdySwipeable"
               version="1.0"
               glib:type-name="HdySwipeable"
               glib:get-type="hdy_swipeable_get_type"
               glib:type-struct="SwipeableInterface">
      <doc xml:space="preserve"
           filename="src/hdy-swipeable.c"
           line="11">An interface for swipeable widgets.

The `HdySwipeable` interface is implemented by all swipeable widgets. They
can be synced using [class@SwipeGroup].

See [class@SwipeTracker] for details about implementing it.</doc>
      <source-position filename="src/hdy-swipeable.h" line="62"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="get_cancel_progress"
                      invoker="get_cancel_progress"
                      version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="225">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="src/hdy-swipeable.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="231">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="227">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_distance" invoker="get_distance" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="149">Gets the swipe distance of @self.

This corresponds to how many pixels 1 unit represents.</doc>
        <source-position filename="src/hdy-swipeable.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="157">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="151">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_progress" invoker="get_progress" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="202">Gets the current progress of @self.</doc>
        <source-position filename="src/hdy-swipeable.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="208">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="204">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_snap_points"
                      invoker="get_snap_points"
                      version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="174">Gets the snap points of @self.

Each snap point represents a progress value that is considered acceptable to
end the swipe on.</doc>
        <source-position filename="src/hdy-swipeable.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="184">the snap points</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="176">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="177">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_area"
                      invoker="get_swipe_area"
                      version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="248">Gets the area @self can start a swipe from for the given direction and
gesture type.

This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
[class@SwipeGroup]).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="src/hdy-swipeable.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="250">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="251">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="252">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="253">a pointer to a rectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_tracker"
                      invoker="get_swipe_tracker"
                      version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="126">Gets the [class@SwipeTracker] used by this swipeable widget.</doc>
        <source-position filename="src/hdy-swipeable.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="132">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="128">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="switch_child" invoker="switch_child" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="75">Switches to child with index @index.

See [signal@Swipeable::child-switched].</doc>
        <source-position filename="src/hdy-swipeable.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="77">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="78">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="79">animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_child_switched"
              c:identifier="hdy_swipeable_emit_child_switched"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="102">Emits [signal@Swipeable::child-switched] signal.

This should be called when the widget switches visible child widget.

@duration can be 0 if the child is switched without animation.</doc>
        <source-position filename="src/hdy-swipeable.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="104">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="105">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="106">animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cancel_progress"
              c:identifier="hdy_swipeable_get_cancel_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="225">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="src/hdy-swipeable.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="231">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="227">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="hdy_swipeable_get_distance"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="149">Gets the swipe distance of @self.

This corresponds to how many pixels 1 unit represents.</doc>
        <source-position filename="src/hdy-swipeable.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="157">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="151">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="hdy_swipeable_get_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="202">Gets the current progress of @self.</doc>
        <source-position filename="src/hdy-swipeable.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="208">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="204">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap_points"
              c:identifier="hdy_swipeable_get_snap_points"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="174">Gets the snap points of @self.

Each snap point represents a progress value that is considered acceptable to
end the swipe on.</doc>
        <source-position filename="src/hdy-swipeable.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="184">the snap points</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="176">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="177">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_area"
              c:identifier="hdy_swipeable_get_swipe_area"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="248">Gets the area @self can start a swipe from for the given direction and
gesture type.

This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
[class@SwipeGroup]).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="src/hdy-swipeable.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="250">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="251">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="252">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="253">a pointer to a rectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_tracker"
              c:identifier="hdy_swipeable_get_swipe_tracker"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="126">Gets the [class@SwipeTracker] used by this swipeable widget.</doc>
        <source-position filename="src/hdy-swipeable.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-swipeable.c"
               line="132">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="128">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="switch_child"
              c:identifier="hdy_swipeable_switch_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="75">Switches to child with index @index.

See [signal@Swipeable::child-switched].</doc>
        <source-position filename="src/hdy-swipeable.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="77">a swipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="78">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="79">animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="child-switched" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.c"
             line="50">Emitted when the widget's visible child is changed.

@duration can be 0 if the child is switched without animation.

This is used by [class@SwipeGroup], applications should not connect to it.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="53">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="54">animation duration, in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="SwipeableInterface"
            c:type="HdySwipeableInterface"
            glib:is-gtype-struct-for="Swipeable"
            version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-swipeable.h"
           line="26">An interface for swipeable widgets.</doc>
      <source-position filename="src/hdy-swipeable.h" line="62"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="src/hdy-swipeable.h"
             line="28">the parent interface</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="switch_child">
        <callback name="switch_child">
          <source-position filename="src/hdy-swipeable.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="77">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="78">the index of the child to switch to</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="duration" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="79">animation duration, in milliseconds</doc>
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_tracker">
        <callback name="get_swipe_tracker">
          <source-position filename="src/hdy-swipeable.h" line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="132">the swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="128">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_distance">
        <callback name="get_distance">
          <source-position filename="src/hdy-swipeable.h" line="50"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="157">the swipe distance in pixels</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="151">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_snap_points">
        <callback name="get_snap_points">
          <source-position filename="src/hdy-swipeable.h" line="51"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="184">the snap points</doc>
            <array length="1" zero-terminated="0" c:type="gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="176">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="n_snap_points"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="177">location to return the number of the snap points</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_progress">
        <callback name="get_progress">
          <source-position filename="src/hdy-swipeable.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="208">the current progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="204">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_cancel_progress">
        <callback name="get_cancel_progress">
          <source-position filename="src/hdy-swipeable.h" line="54"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-swipeable.c"
                 line="231">the cancel progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="227">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_area">
        <callback name="get_swipe_area">
          <source-position filename="src/hdy-swipeable.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="250">a swipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="navigation_direction" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="251">the direction of the swipe</doc>
              <type name="NavigationDirection"
                    c:type="HdyNavigationDirection"/>
            </parameter>
            <parameter name="is_drag" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="252">whether the swipe is caused by a dragging gesture</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="rect"
                       direction="out"
                       caller-allocates="1"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/hdy-swipeable.c"
                   line="253">a pointer to a rectangle to store the swipe area</doc>
              <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="TabBar"
           c:symbol-prefix="tab_bar"
           c:type="HdyTabBar"
           version="1.2"
           parent="Gtk.Bin"
           glib:type-name="HdyTabBar"
           glib:get-type="hdy_tab_bar_get_type"
           glib:type-struct="TabBarClass">
      <doc xml:space="preserve"
           filename="src/hdy-tab-bar.c"
           line="15">A tab bar for [class@TabView].

The `HdyTabBar` widget is a tab bar that can be used with conjunction with
[class@TabView].

`HdyTabBar` can autohide and can optionally contain action widgets on both
sides of the tabs.

When there's not enough space to show all the tabs, `HdyTabBar` will scroll
them. Pinned tabs always stay visible and aren't a part of the scrollable
area.

## CSS nodes

`HdyTabBar` has a single CSS node with name `tabbar`.</doc>
      <source-position filename="src/hdy-tab-bar.h" line="26"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_tab_bar_new" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="785">Creates a new `HdyTabBar` widget.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="790">a new `HdyTabBar`</doc>
          <type name="TabBar" c:type="HdyTabBar*"/>
        </return-value>
      </constructor>
      <method name="get_autohide"
              c:identifier="hdy_tab_bar_get_autohide"
              glib:get-property="autohide"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="autohide"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1000">Gets whether the tabs automatically hide.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1006">whether the tabs automatically hide</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1002">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_end_action_widget"
              c:identifier="hdy_tab_bar_get_end_action_widget"
              glib:get-property="end-action-widget"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="end-action-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="948">Gets the widget shown after the tabs.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="44"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="954">the widget shown after the tabs</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="950">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expand_tabs"
              c:identifier="hdy_tab_bar_get_expand_tabs"
              glib:get-property="expand-tabs"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="expand-tabs"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1071">Gets whether tabs should expand.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1077">whether tabs should expand</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1073">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extra_drag_dest_targets"
              c:identifier="hdy_tab_bar_get_extra_drag_dest_targets"
              glib:get-property="extra-drag-dest-targets"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="extra-drag-dest-targets"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1166">Gets extra drag destination targets.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="71"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1172">extra drag targets</doc>
          <type name="Gtk.TargetList" c:type="GtkTargetList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1168">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inverted"
              c:identifier="hdy_tab_bar_get_inverted"
              glib:get-property="inverted"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="inverted"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1120">Gets whether tabs use inverted layout.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1126">whether tabs use inverted layout</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1122">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_overflowing"
              c:identifier="hdy_tab_bar_get_is_overflowing"
              glib:get-property="is-overflowing"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="is-overflowing"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1225">Gets whether @self is overflowing.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1231">whether @self is overflowing</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1227">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_action_widget"
              c:identifier="hdy_tab_bar_get_start_action_widget"
              glib:get-property="start-action-widget"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="start-action-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="896">Gets the widget shown before the tabs.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="38"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="902">the widget shown before the tabs</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="898">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tabs_revealed"
              c:identifier="hdy_tab_bar_get_tabs_revealed"
              glib:get-property="tabs-revealed"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="tabs-revealed"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1053">Gets the value of the [property@TabBar:tabs-revealed] property.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="1059">whether the tabs are current revealed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1055">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view"
              c:identifier="hdy_tab_bar_get_view"
              glib:get-property="view"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="view"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="800">Gets the [class@TabView] @self controls.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="32"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-bar.c"
               line="806">the [class@TabView] @self controls</doc>
          <type name="TabView" c:type="HdyTabView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="802">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_autohide"
              c:identifier="hdy_tab_bar_set_autohide"
              glib:set-property="autohide"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="autohide"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1018">Sets whether the tabs automatically hide.

If @autohide is `TRUE`, the tab bar disappears when the associated
[class@TabView] has 0 or 1 tab, no pinned tabs, and no tab is being
transferred.

Autohide is enabled by default.

See [property@TabBar:tabs-revealed].</doc>
        <source-position filename="src/hdy-tab-bar.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1020">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="autohide" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1021">whether the tabs automatically hide</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_end_action_widget"
              c:identifier="hdy_tab_bar_set_end_action_widget"
              glib:set-property="end-action-widget"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="end-action-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="966">Sets the widget to show after the tabs.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="968">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="969">the widget to show after the tabs</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expand_tabs"
              c:identifier="hdy_tab_bar_set_expand_tabs"
              glib:set-property="expand-tabs"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="expand-tabs"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1089">Sets whether tabs should expand.

If @expand_tabs is `TRUE`, the tabs will always vary width filling the whole
width when possible, otherwise tabs will always have the minimum possible
size.

Expand is enabled by default.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1091">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="expand_tabs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1092">whether to expand tabs</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_extra_drag_dest_targets"
              c:identifier="hdy_tab_bar_set_extra_drag_dest_targets"
              glib:set-property="extra-drag-dest-targets"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="extra-drag-dest-targets"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1184">Sets extra drag destination targets.

This allows to drag arbitrary content onto tabs, for example URLs in a web
browser.

If a tab is hovered for a certain period of time while dragging the content,
it will be automatically selected.

After content is dropped, the [signal@TabBar::extra-drag-data-received]
signal can be used to retrieve and process the drag data.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1186">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="extra_drag_dest_targets"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1187">extra drag targets</doc>
            <type name="Gtk.TargetList" c:type="GtkTargetList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_inverted"
              c:identifier="hdy_tab_bar_set_inverted"
              glib:set-property="inverted"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="inverted"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="1138">Sets whether tabs tabs use inverted layout.

If @inverted is `TRUE`, non-pinned tabs will have the close button at the
beginning and the indicator at the end rather than the opposite.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1140">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="inverted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="1141">whether tabs use inverted layout</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_action_widget"
              c:identifier="hdy_tab_bar_set_start_action_widget"
              glib:set-property="start-action-widget"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="start-action-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="914">Sets the widget to show before the tabs.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="916">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="917">the widget to show before the tabs</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_view"
              c:identifier="hdy_tab_bar_set_view"
              glib:set-property="view"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="view"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="818">Sets the [class@TabView] @self controls.</doc>
        <source-position filename="src/hdy-tab-bar.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="820">a tab bar</doc>
            <type name="TabBar" c:type="HdyTabBar*"/>
          </instance-parameter>
          <parameter name="view"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="821">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </parameter>
        </parameters>
      </method>
      <property name="autohide"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_autohide"
                getter="get_autohide"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_autohide"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_autohide"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="549">Whether tabs automatically hide.

If set to `TRUE`, the tab bar disappears when the associated
[class@TabView] has 0 or 1 tab, no pinned tabs, and no tab is being
transferred.

See [property@TabBar:tabs-revealed].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="end-action-widget"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_end_action_widget"
                getter="get_end_action_widget">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_end_action_widget"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_end_action_widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="535">The widget shown after the tabs.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="expand-tabs"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_expand_tabs"
                getter="get_expand_tabs"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_expand_tabs"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_expand_tabs"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="585">Whether tabs should expand.

If set to `TRUE`, the tabs will always vary width filling the whole width
when possible, otherwise tabs will always have the minimum possible size.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="extra-drag-dest-targets"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_extra_drag_dest_targets"
                getter="get_extra_drag_dest_targets">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_extra_drag_dest_targets"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_extra_drag_dest_targets"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="619">Extra drag destination targets.

Allows to drag arbitrary content onto tabs, for example URLs in a web
browser.

If a tab is hovered for a certain period of time while dragging the
content, it will be automatically selected.

After content is dropped, the [signal@TabBar::extra-drag-data-received]
signal can be used to retrieve and process the drag data.</doc>
        <type name="Gtk.TargetList"/>
      </property>
      <property name="inverted"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_inverted"
                getter="get_inverted"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_inverted"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_inverted"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="602">Whether tabs use inverted layout.

If set to `TRUE`, non-pinned tabs will have the close button at the
beginning and the indicator at the end rather than the opposite.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="is-overflowing"
                version="1.2"
                transfer-ownership="none"
                getter="get_is_overflowing"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_is_overflowing"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="642">Whether the tab bar is overflowing.

If set to `TRUE`, all tabs cannot be displayed at once and require
scrolling.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="start-action-widget"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_start_action_widget"
                getter="get_start_action_widget">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_start_action_widget"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_bar_set_start_action_widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="521">The widget shown before the tabs.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="tabs-revealed"
                version="1.2"
                transfer-ownership="none"
                getter="get_tabs_revealed"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_bar_get_tabs_revealed"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="569">Whether tabs are currently revealed.

See [property@TabBar:autohide].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="view"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_view"
                getter="get_view">
        <attribute name="org.gtk.Property.get" value="hdy_tab_bar_get_view"/>
        <attribute name="org.gtk.Property.set" value="hdy_tab_bar_set_view"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="507">The [class@TabView] the tab bar controls.</doc>
        <type name="TabView"/>
      </property>
      <glib:signal name="extra-drag-data-received" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-bar.c"
             line="661">Emitted when content allowed via [property@TabBar:extra-drag-dest-targets]
is dropped onto a tab.

See [signal@Gtk.Widget::drag-data-received].</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="664">the tab page matching the tab the content was dropped onto</doc>
            <type name="TabPage"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="665">the drag context</doc>
            <type name="Gdk.DragContext"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="666">the received data</doc>
            <type name="Gtk.SelectionData"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="667">the info that has been registered with the target in the
  [struct@Gtk.TargetList]</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-bar.c"
                 line="669">the timestamp at which the data was received</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TabBarClass"
            c:type="HdyTabBarClass"
            glib:is-gtype-struct-for="TabBar">
      <source-position filename="src/hdy-tab-bar.h" line="26"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="TabPage"
           c:symbol-prefix="tab_page"
           c:type="HdyTabPage"
           version="1.2"
           parent="GObject.Object"
           glib:type-name="HdyTabPage"
           glib:get-type="hdy_tab_page_get_type"
           glib:type-struct="TabPageClass">
      <doc xml:space="preserve"
           filename="src/hdy-tab-view.c"
           line="62">An auxiliary class used by [class@TabView].</doc>
      <source-position filename="src/hdy-tab-view.h" line="24"/>
      <method name="get_child"
              c:identifier="hdy_tab_page_get_child"
              glib:get-property="child"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="child"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1486">Gets the child of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1492">the child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1488">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="hdy_tab_page_get_icon"
              glib:get-property="icon"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1642">Gets the icon of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="51"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1648">the icon of @self</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1644">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_indicator_activatable"
              c:identifier="hdy_tab_page_get_indicator_activatable"
              glib:get-property="indicator-activatable"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="indicator-activatable"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1769">Gets whether the indicator of @self is activatable.</doc>
        <source-position filename="src/hdy-tab-view.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1775">whether the indicator is activatable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1771">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_indicator_icon"
              c:identifier="hdy_tab_page_get_indicator_icon"
              glib:get-property="indicator-icon"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="indicator-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1727">Gets the indicator icon of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="63"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1733">the indicator icon of @self</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1729">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_loading"
              c:identifier="hdy_tab_page_get_loading"
              glib:get-property="loading"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="loading"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1684">Gets whether @self is loading.</doc>
        <source-position filename="src/hdy-tab-view.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1690">whether @self is loading</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1686">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_needs_attention"
              c:identifier="hdy_tab_page_get_needs_attention"
              glib:get-property="needs-attention"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="needs-attention"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1812">Gets whether @self needs attention.</doc>
        <source-position filename="src/hdy-tab-view.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1818">whether @self needs attention</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1814">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="hdy_tab_page_get_parent"
              glib:get-property="parent"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="parent"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1504">Gets the parent page of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="30"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1510">the parent page of @self</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1506">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pinned"
              c:identifier="hdy_tab_page_get_pinned"
              glib:get-property="pinned"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="pinned"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1540">Gets whether @self is pinned.</doc>
        <source-position filename="src/hdy-tab-view.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1546">whether @self is pinned</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1542">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected"
              c:identifier="hdy_tab_page_get_selected"
              glib:get-property="selected"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="selected"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1522">Gets whether @self is selected.</doc>
        <source-position filename="src/hdy-tab-view.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1528">whether @self is selected</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1524">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_tab_page_get_title"
              glib:get-property="title"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1558">Gets the title of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="39"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1564">the title of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1560">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip"
              c:identifier="hdy_tab_page_get_tooltip"
              glib:get-property="tooltip"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="tooltip"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1600">Gets the tooltip of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="45"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1606">the tooltip of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1602">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon"
              c:identifier="hdy_tab_page_set_icon"
              glib:set-property="icon"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1660">Sets the icon of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1662">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1663">the icon of @self</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indicator_activatable"
              c:identifier="hdy_tab_page_set_indicator_activatable"
              glib:set-property="indicator-activatable"
              version="1.2">
        <attribute name="org.gtk.Method.set_property"
                   value="indicator-activatable"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1787">Sets whether the indicator of @self is activatable.</doc>
        <source-position filename="src/hdy-tab-view.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1789">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1790">whether the indicator is activatable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_indicator_icon"
              c:identifier="hdy_tab_page_set_indicator_icon"
              glib:set-property="indicator-icon"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="indicator-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1745">Sets the indicator icon of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1747">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="indicator_icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1748">the indicator icon of @self</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_loading"
              c:identifier="hdy_tab_page_set_loading"
              glib:set-property="loading"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="loading"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1702">Sets whether @self is loading.</doc>
        <source-position filename="src/hdy-tab-view.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1704">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="loading" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1705">whether @self is loading</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_needs_attention"
              c:identifier="hdy_tab_page_set_needs_attention"
              glib:set-property="needs-attention"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="needs-attention"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1830">Sets whether @self needs attention.</doc>
        <source-position filename="src/hdy-tab-view.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1832">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="needs_attention" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1833">whether @self needs attention</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_tab_page_set_title"
              glib:set-property="title"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1576">Sets the title of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1578">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1579">the title of @self</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tooltip"
              c:identifier="hdy_tab_page_set_tooltip"
              glib:set-property="tooltip"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="tooltip"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1618">Sets the tooltip of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1620">a tab page</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </instance-parameter>
          <parameter name="tooltip"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1621">the tooltip of @self</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="child"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_child">
        <attribute name="org.gtk.Property.get" value="hdy_tab_page_get_child"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="369">The child of the page.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="icon"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_icon"
                getter="get_icon">
        <attribute name="org.gtk.Property.get" value="hdy_tab_page_get_icon"/>
        <attribute name="org.gtk.Property.set" value="hdy_tab_page_set_icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="465">The icon of the page.

[class@TabBar] displays the icon next to the title.

It will not show the icon if [property@TabPage:loading] is set to `TRUE`,
or if the page is pinned and [propertyTabPage:indicator-icon] is set.</doc>
        <type name="Gio.Icon"/>
      </property>
      <property name="indicator-activatable"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_indicator_activatable"
                getter="get_indicator_activatable"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_indicator_activatable"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_page_set_indicator_activatable"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="528">Whether the indicator icon is activatable.

If set to `TRUE`, [signal@TabView::indicator-activated] will be emitted
when the indicator icon is clicked.

If [property@TabPage:indicator-icon] is not set, does nothing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="indicator-icon"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_indicator_icon"
                getter="get_indicator_icon">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_indicator_icon"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_page_set_indicator_icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="503">An indicator icon for the page.

A common use case is an audio or camera indicator in a web browser.

[class@TabPage] will show it at the beginning of the tab, alongside icon
representing [property@TabPage:icon] or loading spinner.

If the page is pinned, the indicator will be shown instead of icon or
spinner.

If [property@TabPage:indicator-activatable] is set to `TRUE`, the indicator
icon can act as a button.</doc>
        <type name="Gio.Icon"/>
      </property>
      <property name="loading"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_loading"
                getter="get_loading"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_loading"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_page_set_loading"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="484">Whether the page is loading.

If set to `TRUE`, [class@TabBar] will display a spinner in place of icon.

If the page is pinned and [property@TabPage:indicator-icon] is set, the
loading status will not be visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="needs-attention"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_needs_attention"
                getter="get_needs_attention"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_needs_attention"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_page_set_needs_attention"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="547">Whether the page needs attention.

[class@TabBar] will display a glow under the tab representing the page if
set to `TRUE`. If the tab is not visible, the corresponding edge of the tab
bar will be highlighted.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="parent"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_parent">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_parent"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="383">The parent page of the page.

See [method@TabView.add_page] and [method@TabView.close_page].</doc>
        <type name="TabPage"/>
      </property>
      <property name="pinned"
                version="1.2"
                transfer-ownership="none"
                getter="get_pinned"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_pinned"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="413">Whether the page is pinned.

See [method@TabView.set_page_pinned].</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="selected"
                version="1.2"
                transfer-ownership="none"
                getter="get_selected"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_selected"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="399">Whether the page is selected.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <attribute name="org.gtk.Property.get" value="hdy_tab_page_get_title"/>
        <attribute name="org.gtk.Property.set" value="hdy_tab_page_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="429">The title of the page.

[class@TabBar] will display it in the center of the tab unless it's pinned,
and will use it as a tooltip unless [property@TabPage:tooltip] is set.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tooltip"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_tooltip"
                getter="get_tooltip"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_page_get_tooltip"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_page_set_tooltip"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="446">The tooltip of the page.

The tooltip can be marked up with the Pango text markup language.

If not set, [class@TabBar] will use [property@TabPage:title] as a tooltip
instead.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="TabPageClass"
            c:type="HdyTabPageClass"
            glib:is-gtype-struct-for="TabPage">
      <source-position filename="src/hdy-tab-view.h" line="24"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="TabView"
           c:symbol-prefix="tab_view"
           c:type="HdyTabView"
           version="1.2"
           parent="Gtk.Bin"
           glib:type-name="HdyTabView"
           glib:get-type="hdy_tab_view_get_type"
           glib:type-struct="TabViewClass">
      <doc xml:space="preserve"
           filename="src/hdy-tab-view.c"
           line="21">A dynamic tabbed container.

`HdyTabView` is a container which shows one child at a time. While it
provides keyboard shortcuts for switching between pages, it does not provide
a visible tab bar and relies on external widgets for that, such as
[class@TabBar].

`HdyTabView` maintains a [class@TabPage] object for each page,which holds
additional per-page properties. You can obtain the [class@TabPage] for a page
with [method@TabView.get_page], and as return value for
[method@TabView.append] and other functions for adding children.

`HdyTabView` only aims to be useful for dynamic tabs in multi-window
document-based applications, such as web browsers, file managers, text
editors or terminals. It does not aim to replace [class@Gtk.Notebook] for use
cases such as tabbed dialogs.

As such, it does not support disabling page reordering or detaching, or
adding children via [iface@Gtk.Buildable].

## CSS nodes

`HdyTabView` has a main CSS node with the name `tabview`.

It contains the subnode overlay, which contains subnodes stack and widget.
The stack subnode contains the added pages.

```
tabview
╰── overlay
    ├── stack
    │   ╰── [ Children ]
    ╰── widget
```</doc>
      <source-position filename="src/hdy-tab-view.h" line="83"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_tab_view_new" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1855">Creates a new `HdyTabView`.</doc>
        <source-position filename="src/hdy-tab-view.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1860">the newly created `HdyTabView`</doc>
          <type name="TabView" c:type="HdyTabView*"/>
        </return-value>
      </constructor>
      <method name="add_page"
              c:identifier="hdy_tab_view_add_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2434">Adds @child to @self with @parent as the parent.

This function can be used to automatically position new pages, and to select
the correct page when this page is closed while being selected (see
[method@TabView.close_page].

If @parent is `NULL`, this function is equivalent to [method@TabView.append].</doc>
        <source-position filename="src/hdy-tab-view.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2448">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2436">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2437">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2438">a parent page for @child</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append" c:identifier="hdy_tab_view_append" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2537">Inserts @child as the last non-pinned page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2544">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2539">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2540">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_pinned"
              c:identifier="hdy_tab_view_append_pinned"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2607">Inserts @child as the last pinned page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2614">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2609">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2610">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_other_pages"
              c:identifier="hdy_tab_view_close_other_pages"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2708">Requests to close all pages other than @page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2710">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2711">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_page"
              c:identifier="hdy_tab_view_close_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2628">Requests to close @page.

Calling this function will result in [signal@TabView::close-page] signal
being emitted for @page. Closing the page can then be confirmed or denied via
[method@TabView.close_page_finish].

If the page is waiting for a [method@TabView.close_page_finish] call, this
function will do nothing.

The default handler for [signal@TabView::close-page] will immediately confirm
closing the page if it's non-pinned, or reject it if it's pinned. This
behavior can be changed by registering your own handler for that signal.

If @page was selected, another page will be selected instead:

If the [property@TabPage:parent] value is `NULL`, the next page will be
selected when possible, or if the page was already last, the previous page
will be selected instead.

If it's not `NULL`, the previous page will be selected if it's a descendant
(possibly indirect) of the parent. If both the previous page and the parent
are pinned, the parent will be selected instead.</doc>
        <source-position filename="src/hdy-tab-view.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2630">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2631">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_page_finish"
              c:identifier="hdy_tab_view_close_page_finish"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2675">Completes a [method@TabView.close_page] call for @page.

If @confirm is `TRUE`, @page will be closed. If it's `FALSE`, ite will be
reverted to its previous state and [method@TabView.close_page] can be called
for it again.

This function should not be called unless a custom handler for
[signal@TabView::close-page] is used.</doc>
        <source-position filename="src/hdy-tab-view.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2677">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2678">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
          <parameter name="confirm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2679">whether to confirm or deny closing @page</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_pages_after"
              c:identifier="hdy_tab_view_close_pages_after"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2765">Requests to close all pages after @page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2767">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2768">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_pages_before"
              c:identifier="hdy_tab_view_close_pages_before"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2737">Requests to close all pages before @page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="181"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2739">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2740">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_icon"
              c:identifier="hdy_tab_view_get_default_icon"
              glib:get-property="default-icon"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="default-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2113">Gets default icon of @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2119">the default icon of @self</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2115">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_transferring_page"
              c:identifier="hdy_tab_view_get_is_transferring_page"
              glib:get-property="is-transferring-page"
              version="1.2">
        <attribute name="org.gtk.Method.get_property"
                   value="is-transferring-page"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1908">Whether a page is being transferred.

Gets the value of [property@TabView:is-transferring-page] property.</doc>
        <source-position filename="src/hdy-tab-view.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1916">whether a page is being transferred</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1910">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_menu_model"
              c:identifier="hdy_tab_view_get_menu_model"
              glib:get-property="menu-model"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="menu-model"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2164">Gets the tab context menu model for @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="114"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2170">the tab context menu model for @self</doc>
          <type name="Gio.MenuModel" c:type="GMenuModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2166">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages"
              c:identifier="hdy_tab_view_get_n_pages"
              glib:get-property="n-pages"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="n-pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1870">Gets the number of pages in @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1876">the number of pages in @self</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1872">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pinned_pages"
              c:identifier="hdy_tab_view_get_n_pinned_pages"
              glib:get-property="n-pinned-pages"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="n-pinned-pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1888">Gets the number of pinned pages in @self.

See [method@TabView.set_page_pinned].</doc>
        <source-position filename="src/hdy-tab-view.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1896">the number of pinned pages in @self</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1890">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nth_page"
              c:identifier="hdy_tab_view_get_nth_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2377">Gets the [class@TabPage] representing the child at @position.</doc>
        <source-position filename="src/hdy-tab-view.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2384">the page object at @position</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2379">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2380">the index of the page in @self, starting from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_page"
              c:identifier="hdy_tab_view_get_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2346">Gets the [class@TabPage] object representing @child.</doc>
        <source-position filename="src/hdy-tab-view.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2353">the [class@TabPage] representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2348">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2349">a child in @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_page_position"
              c:identifier="hdy_tab_view_get_page_position"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2403">Finds the position of @page in @self, starting from 0.</doc>
        <source-position filename="src/hdy-tab-view.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2410">the position of @page in @self</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2405">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2406">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pages"
              c:identifier="hdy_tab_view_get_pages"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="3046">Returns a [iface@Gio.ListModel] containing the pages of @self.

This model can be used to keep an up to date view of the pages.</doc>
        <source-position filename="src/hdy-tab-view.h" line="211"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="3054">the model containing pages of @self</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="3048">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_page"
              c:identifier="hdy_tab_view_get_selected_page"
              glib:get-property="selected-page"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="selected-page"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1928">Gets the currently selected page in @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="97"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1934">the selected page in @self</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1930">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shortcut_widget"
              c:identifier="hdy_tab_view_get_shortcut_widget"
              glib:get-property="shortcut-widget"
              version="1.2">
        <attribute name="org.gtk.Method.get_property" value="shortcut-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2210">Gets the shortcut widget for @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="120"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2216">the shortcut widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2212">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="hdy_tab_view_insert" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2488">Inserts a non-pinned page at @position.

It's an error to try to insert a page before a pinned page, in that case
[method@TabView.insert_pinned] should be used instead.</doc>
        <source-position filename="src/hdy-tab-view.h" line="148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2499">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2490">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2491">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2492">the position to add @child at, starting from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_pinned"
              c:identifier="hdy_tab_view_insert_pinned"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2558">Inserts a pinned page at @position.

It's an error to try to insert a pinned page after a non-pinned page, in that
case [method@TabView.insert] should be used instead.</doc>
        <source-position filename="src/hdy-tab-view.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2569">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2560">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2561">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2562">the position to add @child at, starting from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="hdy_tab_view_prepend" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2516">Inserts @child as the first non-pinned page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2523">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2518">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2519">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend_pinned"
              c:identifier="hdy_tab_view_prepend_pinned"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2586">Inserts @child as the first pinned page.</doc>
        <source-position filename="src/hdy-tab-view.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2593">the page object representing @child</doc>
          <type name="TabPage" c:type="HdyTabPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2588">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2589">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_backward"
              c:identifier="hdy_tab_view_reorder_backward"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2849">Reorders @page to before its previous page if possible.</doc>
        <source-position filename="src/hdy-tab-view.h" line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2856">whether @page was moved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2851">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2852">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_first"
              c:identifier="hdy_tab_view_reorder_first"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2915">Reorders @page to the first possible position.</doc>
        <source-position filename="src/hdy-tab-view.h" line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2922">whether @page was moved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2917">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2918">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_forward"
              c:identifier="hdy_tab_view_reorder_forward"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2882">Reorders @page to after its next page if possible.</doc>
        <source-position filename="src/hdy-tab-view.h" line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2889">whether @page was moved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2884">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2885">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_last"
              c:identifier="hdy_tab_view_reorder_last"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2943">Reorders @page to the last possible position.</doc>
        <source-position filename="src/hdy-tab-view.h" line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2950">whether @page was moved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2945">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2946">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_page"
              c:identifier="hdy_tab_view_reorder_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2793">Reorders @page to @position.

It's a programmer error to try to reorder a pinned page after a non-pinned
one, or a non-pinned page before a pinned one.</doc>
        <source-position filename="src/hdy-tab-view.h" line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2804">whether @page was moved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2795">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2796">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2797">the position to insert the page at, starting at 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_next_page"
              c:identifier="hdy_tab_view_select_next_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2020">Selects the page after the currently selected page.

If the last page was already selected, this function does nothing.</doc>
        <source-position filename="src/hdy-tab-view.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="2028">whether the selected page was changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2022">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_previous_page"
              c:identifier="hdy_tab_view_select_previous_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1985">Selects the page before the currently selected page.

If the first page was already selected, this function does nothing.</doc>
        <source-position filename="src/hdy-tab-view.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1993">whether the selected page was changed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1987">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_icon"
              c:identifier="hdy_tab_view_set_default_icon"
              glib:set-property="default-icon"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="default-icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2131">Sets default page icon for @self.

If a page doesn't provide its own icon via [property@TabPage:icon], default
icon may be used instead for contexts where having an icon is necessary.

[class@TabBar] will use default icon for pinned tabs in case the page is not
loading, doesn't have an icon and an indicator. Default icon is never used
for tabs that aren't pinned.

By default, `hdy-tab-icon-missing-symbolic` icon is used.</doc>
        <source-position filename="src/hdy-tab-view.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2133">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="default_icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2134">the default icon</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_menu_model"
              c:identifier="hdy_tab_view_set_menu_model"
              glib:set-property="menu-model"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="menu-model"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2182">Sets the tab context menu model for @self.

When a context menu is shown for a tab, it will be constructed from the
provided menu model. Use [signal@TabView::setup-menu] signal to set up the
menu actions for the particular tab.</doc>
        <source-position filename="src/hdy-tab-view.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2184">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="menu_model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2185">a menu model</doc>
            <type name="Gio.MenuModel" c:type="GMenuModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_page_pinned"
              c:identifier="hdy_tab_view_set_page_pinned"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2270">Pins or unpins @page.

Pinned pages are guaranteed to be placed before all non-pinned pages; at any
given moment the first [property@TabView:n-pinned-pages] pages in @self are
guaranteed to be pinned.

When a page is pinned or unpinned, it's automatically reordered: pinning a
page moves it after other pinned pages; unpinning a page moves it before
other non-pinned pages.

Pinned pages can still be reordered between each other.

[class@TabBar] will display pinned pages in a compact form, never showing the
title or close button, and only showing a single icon, selected in the
following order:

1. [property@TabPage:indicator-icon]
2. A spinner if [property@TabPage:loading] is `TRUE`
3. [property@TabPage:icon]
4. [property@TabView:default-icon]

Pinned pages cannot be closed by default, see [signal@TabView::close-page]
for how to override that behavior.</doc>
        <source-position filename="src/hdy-tab-view.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2272">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2273">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
          <parameter name="pinned" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2274">whether @page should be pinned</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selected_page"
              c:identifier="hdy_tab_view_set_selected_page"
              glib:set-property="selected-page"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="selected-page"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1946">Sets the currently selected page in @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1948">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="selected_page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1949">a page in @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_shortcut_widget"
              c:identifier="hdy_tab_view_set_shortcut_widget"
              glib:set-property="shortcut-widget"
              version="1.2">
        <attribute name="org.gtk.Method.set_property" value="shortcut-widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="2228">Sets the shortcut widget for @self.</doc>
        <source-position filename="src/hdy-tab-view.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2230">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="2231">a shortcut widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transfer_page"
              c:identifier="hdy_tab_view_transfer_page"
              version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="3006">Transfers @page from @self to @other_view.

The @page object will be reused.

It's a programmer error to try to insert a pinned page after a non-pinned
one, or a non-pinned page before a pinned one.</doc>
        <source-position filename="src/hdy-tab-view.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="3008">a tab view</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="3009">a page of @self</doc>
            <type name="TabPage" c:type="HdyTabPage*"/>
          </parameter>
          <parameter name="other_view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="3010">the tab view to transfer the page to</doc>
            <type name="TabView" c:type="HdyTabView*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="3011">the position to insert the page at, starting at 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="default-icon"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_default_icon"
                getter="get_default_icon">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_default_icon"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_view_set_default_icon"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1176">Default page icon.

If a page doesn't provide its own icon via [property@TabPage:icon], default
icon may be used instead for contexts where having an icon is necessary.

[class@TabBar] will use default icon for pinned tabs in case the page is
not loading, doesn't have an icon and an indicator. Default icon is never
used for tabs that aren't pinned.</doc>
        <type name="Gio.Icon"/>
      </property>
      <property name="is-transferring-page"
                version="1.2"
                transfer-ownership="none"
                getter="get_is_transferring_page"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_is_transferring_page"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1142">Whether a page is being transferred.

This property will be set to `TRUE` when a drag-n-drop tab transfer starts
on any [class@TabView], and to `FALSE` after it ends.

During the transfer, children cannot receive pointer input and a tab can be
safely dropped on the tab view.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="menu-model"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_menu_model"
                getter="get_menu_model">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_menu_model"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_view_set_menu_model"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1197">Tab context menu model.

When a context menu is shown for a tab, it will be constructed from the
provided menu model. Use [signal@TabView::setup-menu] signal to set up the
menu actions for the particular tab.</doc>
        <type name="Gio.MenuModel"/>
      </property>
      <property name="n-pages"
                version="1.2"
                transfer-ownership="none"
                getter="get_n_pages"
                default-value="0">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_n_pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1112">The number of pages in the tab view.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="n-pinned-pages"
                version="1.2"
                transfer-ownership="none"
                getter="get_n_pinned_pages"
                default-value="0">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_n_pinned_pages"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1126">The number of pinned pages in the tab view.

See [method@TabView.set_page_pinned].</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="selected-page"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_selected_page"
                getter="get_selected_page">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_selected_page"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_view_set_selected_page"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1162">The currently selected page.</doc>
        <type name="TabPage"/>
      </property>
      <property name="shortcut-widget"
                version="1.2"
                writable="1"
                transfer-ownership="none"
                setter="set_shortcut_widget"
                getter="get_shortcut_widget">
        <attribute name="org.gtk.Property.get"
                   value="hdy_tab_view_get_shortcut_widget"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_tab_view_set_shortcut_widget"/>
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1215">Tab shortcut widget.

Has the following shortcuts:

* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Page Up&lt;/kbd&gt; - switch to the previous page
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Page Down&lt;/kbd&gt; - switch to the next page
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Home&lt;/kbd&gt; - switch to the first page
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt; - switch to the last page
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Page Up&lt;/kbd&gt; - move the current page
    backward
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Page Down&lt;/kbd&gt; - move the current
    page forward
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Home&lt;/kbd&gt; - move the current page at
    the start
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt; - move the current page at
     the end
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt; - switch to the next page, with looping
* &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt; - switch to the previous
    page, with looping
* &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;1&lt;/kbd&gt;⋯&lt;kbd&gt;9&lt;/kbd&gt; - switch to pages 1-9
* &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;0&lt;/kbd&gt; - switch to page 10

These shortcuts are always available on @self, this property is useful if
they should be available globally.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <glib:signal name="close-page" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1325">Emitted after [method@TabView.close_page] has been called for @page.

The handler is expected to call [method@TabView.close_page_finish] to
confirm or reject the closing.

The default handler will immediately confirm closing for non-pinned pages,
or reject it for pinned pages, equivalent to the following example:

```c
static gboolean
close_page_cb (HdyTabView *view,
               HdyTabPage *page,
               gpointer    user_data)
{
  hdy_tab_view_close_page_finish (view, page, !hdy_tab_page_get_pinned (page));

  return GDK_EVENT_STOP;
}
```

The [method@TabView.close_page_finish] doesn't have to happen during the
handler, so can be used to do asynchronous checks before confirming the
closing.

A typical reason to connect to this signal is to show a confirmation dialog
for closing a tab.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1328">a page of the view</doc>
            <type name="TabPage"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="create-window" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1394">Emitted when a tab should be transferred into a new window.

This can happen after a tab has been dropped on desktop.

The signal handler is expected to create a new window, position it as
needed and return its `HdyTabView`that the page will be transferred into.</doc>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-tab-view.c"
               line="1404">the [class@TabView] from the new
  window</doc>
          <type name="TabView"/>
        </return-value>
      </glib:signal>
      <glib:signal name="indicator-activated" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1419">Emitted after the indicator icon on @page has been activated.

See [property@TabPage:indicator-icon] and
[property@TabPage:indicator-activatable].</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1422">a page of the view</doc>
            <type name="TabPage"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="page-attached" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1254">Emitted when a page has been created or transferred to the view.

A typical reason to connect to this signal would be to connect to page
signals for things such as updating window title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1257">a page of the view</doc>
            <type name="TabPage"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1258">the position of the page, starting from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="page-detached" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1277">Emitted when a page has been removed or transferred to another view.

A typical reason to connect to this signal would be to disconnect signal
handlers connected in the [signal@TabView::page-attached] handler.

It is important not to try and destroy the page child in the handler of
this function as the child might merely be moved to another window; use
child dispose handler for that or do it in sync with your
[method@TabView.close_page_finish] calls.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1280">a page of the view</doc>
            <type name="TabPage"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1281">the position of the removed page, starting from 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="page-reordered" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1305">This signal is emitted after @page has been reordered to @position.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1308">a page of the view</doc>
            <type name="TabPage"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1309">the position @page was moved to, starting at 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="setup-menu" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="src/hdy-tab-view.c"
             line="1370">Emitted when a context menu is opened or closed for @page.

If the menu has been closed, @page will be set to `NULL`.

It can be used to set up menu actions before showing the menu, for example
disable actions not applicable to @page.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-tab-view.c"
                 line="1373">a page of @self</doc>
            <type name="TabPage"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TabViewClass"
            c:type="HdyTabViewClass"
            glib:is-gtype-struct-for="TabView">
      <source-position filename="src/hdy-tab-view.h" line="83"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="TitleBar"
           c:symbol-prefix="title_bar"
           c:type="HdyTitleBar"
           version="1.0"
           deprecated="1"
           deprecated-version="1.4"
           parent="Gtk.Bin"
           glib:type-name="HdyTitleBar"
           glib:get-type="hdy_title_bar_get_type"
           glib:type-struct="TitleBarClass">
      <doc xml:space="preserve"
           filename="src/hdy-title-bar.c"
           line="14">A simple title bar container.

`HdyTitleBar` is meant to be used as the top-level widget of your window's
title bar. It will be drawn with the same style as a [class@Gtk.HeaderBar]
but it won't force a widget layout on you: you can put whatever widget you
want in it, including a [class@Gtk.HeaderBar].

`HdyTitleBar` becomes really useful when you want to animate header bars,
like an adaptive application using [class@Leaflet] would do.

`HdyTitleBar` has been deprecated, header bars can be animated without it
when placed inside [class@Window] or [class@ApplicationWindow].

## CSS nodes

`HdyTitleBar` has a single CSS node with name `headerbar`.</doc>
      <source-position filename="src/hdy-title-bar.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_title_bar_new"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.4">
        <doc xml:space="preserve"
             filename="src/hdy-title-bar.c"
             line="357">Creates a new `HdyTitleBar`.</doc>
        <source-position filename="src/hdy-title-bar.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-title-bar.c"
               line="362">a new `HdyTitleBar`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_selection_mode"
              c:identifier="hdy_title_bar_get_selection_mode"
              glib:get-property="selection-mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.4">
        <attribute name="org.gtk.Method.get_property" value="selection-mode"/>
        <doc xml:space="preserve"
             filename="src/hdy-title-bar.c"
             line="92">Returns whether whether @self is in selection mode.</doc>
        <source-position filename="src/hdy-title-bar.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-title-bar.c"
               line="98">`TRUE` if the title bar is in selection mode</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-title-bar.c"
                 line="94">a title bar</doc>
            <type name="TitleBar" c:type="HdyTitleBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_selection_mode"
              c:identifier="hdy_title_bar_set_selection_mode"
              glib:set-property="selection-mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.4">
        <attribute name="org.gtk.Method.set_property" value="selection-mode"/>
        <doc xml:space="preserve"
             filename="src/hdy-title-bar.c"
             line="56">Sets whether @self is in selection mode.</doc>
        <source-position filename="src/hdy-title-bar.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-title-bar.c"
                 line="58">a title bar</doc>
            <type name="TitleBar" c:type="HdyTitleBar*"/>
          </instance-parameter>
          <parameter name="selection_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-title-bar.c"
                 line="59">`TRUE` to enable the selection mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="selection-mode"
                version="1.0"
                deprecated="1"
                deprecated-version="1.4"
                writable="1"
                transfer-ownership="none"
                setter="set_selection_mode"
                getter="get_selection_mode"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_title_bar_set_selection_mode"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_title_bar_set_selection_mode"/>
        <doc xml:space="preserve"
             filename="src/hdy-title-bar.c"
             line="318">Whether or not the title bar is in selection mode.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="TitleBarClass"
            c:type="HdyTitleBarClass"
            glib:is-gtype-struct-for="TitleBar">
      <source-position filename="src/hdy-title-bar.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="ValueObject"
           c:symbol-prefix="value_object"
           c:type="HdyValueObject"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="HdyValueObject"
           glib:get-type="hdy_value_object_get_type"
           glib:type-struct="ValueObjectClass">
      <doc xml:space="preserve"
           filename="src/hdy-value-object.c"
           line="12">An object representing a [struct@GObject.Value].

The `HdyValueObject` object represents a [struct@GObject.Value], allowing it
to be used with [iface@Gio.ListModel].</doc>
      <source-position filename="src/hdy-value-object.h" line="23"/>
      <constructor name="new"
                   c:identifier="hdy_value_object_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="40">Creates a new `HdyValueObject`.</doc>
        <source-position filename="src/hdy-value-object.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="46">a new `HdyValueObject`</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="42">the value to store</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_collect"
                   c:identifier="hdy_value_object_new_collect"
                   version="1.0"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="58">Creates a new `HdyValueObject`.

This is a convenience method which uses the `G_VALUE_COLLECT` macro
internally.</doc>
        <source-position filename="src/hdy-value-object.h" line="28"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="68">a new `HdyValueObject`</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="60">the type of the value</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="61">the value to store</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_string"
                   c:identifier="hdy_value_object_new_string"
                   version="1.0"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="93">Creates a new `HdyValueObject`.

This is a convenience method to create a [class@ValueObject] that stores a
string.</doc>
        <source-position filename="src/hdy-value-object.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="102">a new `HdyValueObject`</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="95">the string to store</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_take_string"
                   c:identifier="hdy_value_object_new_take_string"
                   version="1.0"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="116">Creates a new `HdyValueObject`.

This is a convenience method to create a [class@ValueObject] that stores a
string taking ownership of it.</doc>
        <source-position filename="src/hdy-value-object.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="125">a new `HdyValueObject`</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="118">the string to store</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy_value"
              c:identifier="hdy_value_object_copy_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="239">Copy data from the contained [struct@GObject.Value] into @dest.</doc>
        <source-position filename="src/hdy-value-object.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="241">the value</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="242">value with correct type to copy into</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string"
              c:identifier="hdy_value_object_dup_string"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="271">Gets a copy of the contained string if the value is of type `G_TYPE_STRING`.</doc>
        <source-position filename="src/hdy-value-object.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="277">a copy of the contained string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="273">the value</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="hdy_value_object_get_string"
              version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="255">Returns the contained string if the value is of type `G_TYPE_STRING`.</doc>
        <source-position filename="src/hdy-value-object.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="261">the contained string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="257">the value</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="hdy_value_object_get_value"
              glib:get-property="value"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="value"/>
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="223">Return the contained value.</doc>
        <source-position filename="src/hdy-value-object.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-value-object.c"
               line="229">the contained [struct@GObject.Value]</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-value-object.c"
                 line="225">the value</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_value">
        <attribute name="org.gtk.Property.get"
                   value="hdy_value_object_get_value"/>
        <doc xml:space="preserve"
             filename="src/hdy-value-object.c"
             line="200">The contained value.</doc>
        <type name="GObject.Value"/>
      </property>
    </class>
    <record name="ValueObjectClass"
            c:type="HdyValueObjectClass"
            glib:is-gtype-struct-for="ValueObject">
      <source-position filename="src/hdy-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ViewSwitcher"
           c:symbol-prefix="view_switcher"
           c:type="HdyViewSwitcher"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcher"
           glib:get-type="hdy_view_switcher_get_type"
           glib:type-struct="ViewSwitcherClass">
      <doc xml:space="preserve"
           filename="src/hdy-view-switcher.c"
           line="19">An adaptive view switcher.

An adaptive view switcher, designed to switch between multiple views in a
similar fashion than a [class@Gtk.StackSwitcher].

Depending on the available width, the view switcher can adapt from a wide
mode showing the view's icon and title side by side, to a narrow mode showing
the view's icon and title one on top of the other, in a more compact way.
This can be controlled via the policy property.

To look good in a header bar, an `HdyViewSwitcher` requires to fill its full
height. Contrary to [class@Gtk.HeaderBar], [class@HeaderBar] doesn't force a
vertical alignment on its title widget, so we recommend it over
[class@Gtk.HeaderBar].

## CSS nodes

`HdyViewSwitcher` has a single CSS node with name `viewswitcher`.</doc>
      <source-position filename="src/hdy-view-switcher.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="578">Creates a new `HdyViewSwitcher`.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher.c"
               line="583">the newly created `HdyViewSwitcher`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_narrow_ellipsize"
              c:identifier="hdy_view_switcher_get_narrow_ellipsize"
              glib:get-property="narrow-ellipsize"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="narrow-ellipsize"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="636">Get the ellipsizing position of the narrow mode label.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher.c"
               line="642">a [enum@Pango.EllipsizeMode]</doc>
          <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="638">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_get_policy"
              glib:get-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="593">Gets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher.c"
               line="599">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="595">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_get_stack"
              glib:get-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="685">Gets the stack controlled by @self.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher.c"
               line="691">the stack</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="687">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_narrow_ellipsize"
              c:identifier="hdy_view_switcher_set_narrow_ellipsize"
              glib:set-property="narrow-ellipsize"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="narrow-ellipsize"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="654">Sets the mode used to ellipsize the text in narrow mode.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="656">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="657">a [enum@Pango.EllipsizeMode]</doc>
            <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_set_policy"
              glib:set-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="611">Sets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="613">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="614">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_set_stack"
              glib:set-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="703">Sets the [class@Gtk.Stack] to control.</doc>
        <source-position filename="src/hdy-view-switcher.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="705">a view switcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher.c"
                 line="706">a stack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="narrow-ellipsize"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_narrow_ellipsize"
                getter="get_narrow_ellipsize"
                default-value="PANGO_ELLIPSIZE_NONE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_get_narrow_ellipsize"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_set_narrow_ellipsize"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="521">The preferred place to ellipsize the string.

If the narrow mode label does not have enough room to display the entire
string, specified as a [enum@Pango.EllipsizeMode].

Note that setting this property to a value other than
`PANGO_ELLIPSIZE_NONE` has the side-effect that the label requests only
enough space to display the ellipsis.</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="policy"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_policy"
                getter="get_policy"
                default-value="HDY_VIEW_SWITCHER_POLICY_AUTO">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_get_policy"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_set_policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="507">The policy to determine which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_stack"
                getter="get_stack">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_get_stack"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_set_stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="543">The [class@Gtk.Stack] the view switcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <class name="ViewSwitcherBar"
           c:symbol-prefix="view_switcher_bar"
           c:type="HdyViewSwitcherBar"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcherBar"
           glib:get-type="hdy_view_switcher_bar_get_type"
           glib:type-struct="ViewSwitcherBarClass">
      <doc xml:space="preserve"
           filename="src/hdy-view-switcher-bar.c"
           line="14">A view switcher action bar.

An action bar letting you switch between multiple views offered by a
[class@Gtk.Stack], via an [class@ViewSwitcher]. It is designed to be put at
the bottom of a window and to be revealed only on really narrow windows e.g.
on mobile phones. It can't be revealed if there are less than two pages.

`HdyViewSwitcherBar` is intended to be used together with
[class@ViewSwitcherTitle].

A common use case is to bind the [property@ViewSwitcherBar:reveal] property
to [property@ViewSwitcherTitle:title-visible] to automatically reveal the
view switcher bar when the title label is displayed in place of the view
switcher, as follows:

```xml
&lt;object class="GtkWindow"/&gt;
  &lt;child type="titlebar"&gt;
    &lt;object class="HdyHeaderBar"&gt;
      &lt;property name="centering-policy"&gt;strict&lt;/property&gt;
      &lt;child type="title"&gt;
        &lt;object class="HdyViewSwitcherTitle"
                id="view_switcher_title"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;child&gt;
        &lt;object class="GtkStack" id="stack"/&gt;
      &lt;/child&gt;
      &lt;child&gt;
        &lt;object class="HdyViewSwitcherBar"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
          &lt;property name="reveal"
                    bind-source="view_switcher_title"
                    bind-property="title-visible"
                    bind-flags="sync-create"/&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
```

## CSS nodes

`HdyViewSwitcherBar` has a single CSS node with name `viewswitcherbar`.</doc>
      <source-position filename="src/hdy-view-switcher-bar.h" line="25"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_bar_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="237">Creates a new `HdyViewSwitcherBar`.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-bar.c"
               line="242">the newly created `HdyViewSwitcherBar`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_bar_get_policy"
              glib:get-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="252">Gets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-bar.c"
               line="258">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="254">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal"
              c:identifier="hdy_view_switcher_bar_get_reveal"
              glib:get-property="reveal"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="reveal"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="351">Gets whether @self should be revealed or hidden.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-bar.c"
               line="357">whether @self is revealed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="353">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_bar_get_stack"
              glib:get-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="295">Get the [class@Gtk.Stack] being controlled by the [class@ViewSwitcher].</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-bar.c"
               line="301">the stack</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="297">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_bar_set_policy"
              glib:set-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="270">Sets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="272">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="273">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal"
              c:identifier="hdy_view_switcher_bar_set_reveal"
              glib:set-property="reveal"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="reveal"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="369">Sets whether @self should be revealed or not.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="371">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="reveal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="372">`TRUE` to reveal @self</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_bar_set_stack"
              glib:set-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="313">Sets the [class@Gtk.Stack] to control.</doc>
        <source-position filename="src/hdy-view-switcher-bar.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="315">a view switcher bar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-bar.c"
                 line="316">a stack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_policy"
                getter="get_policy"
                default-value="HDY_VIEW_SWITCHER_POLICY_NARROW">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_bar_get_policy"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_bar_set_policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="170">The policy used to determine which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="reveal"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_reveal"
                getter="get_reveal"
                default-value="FALSE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_bar_get_reveal"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_bar_set_reveal"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="198">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="stack"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_stack"
                getter="get_stack">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_bar_get_stack"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_bar_set_stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-bar.c"
             line="184">The [class@Gtk.Stack] the [class@ViewSwitcher] controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <record name="ViewSwitcherBarClass"
            c:type="HdyViewSwitcherBarClass"
            glib:is-gtype-struct-for="ViewSwitcherBar">
      <source-position filename="src/hdy-view-switcher-bar.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <record name="ViewSwitcherClass"
            c:type="HdyViewSwitcherClass"
            glib:is-gtype-struct-for="ViewSwitcher">
      <source-position filename="src/hdy-view-switcher.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <enumeration name="ViewSwitcherPolicy"
                 version="1.0"
                 glib:type-name="HdyViewSwitcherPolicy"
                 glib:get-type="hdy_view_switcher_policy_get_type"
                 c:type="HdyViewSwitcherPolicy">
      <doc xml:space="preserve"
           filename="src/hdy-view-switcher.c"
           line="44">Describes the adaptive modes of [class@ViewSwitcher].</doc>
      <member name="auto"
              value="0"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_AUTO"
              glib:nick="auto"
              glib:name="HDY_VIEW_SWITCHER_POLICY_AUTO">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="46">Automatically adapt to the best fitting mode</doc>
      </member>
      <member name="narrow"
              value="1"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_NARROW"
              glib:nick="narrow"
              glib:name="HDY_VIEW_SWITCHER_POLICY_NARROW">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="47">Force the narrow mode</doc>
      </member>
      <member name="wide"
              value="2"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_WIDE"
              glib:nick="wide"
              glib:name="HDY_VIEW_SWITCHER_POLICY_WIDE">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher.c"
             line="48">Force the wide mode</doc>
      </member>
    </enumeration>
    <class name="ViewSwitcherTitle"
           c:symbol-prefix="view_switcher_title"
           c:type="HdyViewSwitcherTitle"
           version="1.0"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcherTitle"
           glib:get-type="hdy_view_switcher_title_get_type"
           glib:type-struct="ViewSwitcherTitleClass">
      <doc xml:space="preserve"
           filename="src/hdy-view-switcher-title.c"
           line="14">A view switcher title.

A widget letting you switch between multiple views contained by a
[class@Gtk.Stack], via an [class@ViewSwitcher].

It is designed to be used as the title widget of a [class@HeaderBar], and
will display the window's title when the window is too narrow to fit the view
switcher e.g. on mobile phones, or if there are less than two views.

`HdyViewSwitcherTitle` is intended to be used together with
[class@ViewSwitcherBar].

A common use case is to bind the [property@ViewSwitcherBar:reveal] property
to [property@ViewSwitcherTitle:title-visible] to automatically reveal the
view switcher bar when the title label is displayed in place of the view
switcher, as follows:

```xml
&lt;object class="GtkWindow"/&gt;
  &lt;child type="titlebar"&gt;
    &lt;object class="HdyHeaderBar"&gt;
      &lt;property name="centering-policy"&gt;strict&lt;/property&gt;
      &lt;child type="title"&gt;
        &lt;object class="HdyViewSwitcherTitle"
                id="view_switcher_title"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;child&gt;
        &lt;object class="GtkStack" id="stack"/&gt;
      &lt;/child&gt;
      &lt;child&gt;
        &lt;object class="HdyViewSwitcherBar"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
          &lt;property name="reveal"
                    bind-source="view_switcher_title"
                    bind-property="title-visible"
                    bind-flags="sync-create"/&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
```

## CSS nodes

`HdyViewSwitcherTitle` has a single CSS node with name `viewswitchertitle`.</doc>
      <source-position filename="src/hdy-view-switcher-title.h" line="25"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_title_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="347">Creates a new `HdyViewSwitcherTitle`.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="352">the newly created `HdyViewSwitcherTitle`</doc>
          <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_title_get_policy"
              glib:get-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="362">Gets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="368">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="364">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_title_get_stack"
              glib:get-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="405">Gets the stack controlled by @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="411">the stack</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="407">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_view_switcher_title_get_subtitle"
              glib:get-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="503">Gets the subtitle of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="49"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="509">the subtitle of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="505">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_view_switcher_title_get_title"
              glib:get-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="461">Gets the title of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="467">the title of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="463">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_visible"
              c:identifier="hdy_view_switcher_title_get_title_visible"
              glib:get-property="title-visible"
              version="1.0">
        <attribute name="org.gtk.Method.get_property" value="title-visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="589">Gets whether the title of @self is currently visible.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="595">whether the title of @self is currently visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="591">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view_switcher_enabled"
              c:identifier="hdy_view_switcher_title_get_view_switcher_enabled"
              glib:get-property="view-switcher-enabled"
              version="1.0">
        <attribute name="org.gtk.Method.get_property"
                   value="view-switcher-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="545">Gets whether @self's view switcher is enabled.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-view-switcher-title.c"
               line="551">whether the view switcher is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="547">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_title_set_policy"
              glib:set-property="policy"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="380">Sets the policy of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="382">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="383">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_title_set_stack"
              glib:set-property="stack"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="423">Sets the [class@Gtk.Stack] to control.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="425">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="426">a stack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_view_switcher_title_set_subtitle"
              glib:set-property="subtitle"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="521">Sets the subtitle of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="523">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="524">a subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_view_switcher_title_set_title"
              glib:set-property="title"
              version="1.0">
        <attribute name="org.gtk.Method.set_property" value="title"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="479">Sets the title of @self.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="481">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="482">a title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_view_switcher_enabled"
              c:identifier="hdy_view_switcher_title_set_view_switcher_enabled"
              glib:set-property="view-switcher-enabled"
              version="1.0">
        <attribute name="org.gtk.Method.set_property"
                   value="view-switcher-enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="563">Sets whether @self's view switcher is enabled.</doc>
        <source-position filename="src/hdy-view-switcher-title.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="565">a view switcher title</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/hdy-view-switcher-title.c"
                 line="566">`TRUE` to enable the view switcher, `FALSE` to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_policy"
                getter="get_policy"
                default-value="HDY_VIEW_SWITCHER_POLICY_AUTO">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_policy"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_title_set_policy"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="223">The policy used to determine which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_stack"
                getter="get_stack">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_stack"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_title_set_stack"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="237">The [class@Gtk.Stack] the [class@ViewSwitcher] controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_subtitle"
                getter="get_subtitle"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_subtitle"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_title_set_subtitle"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="268">The subtitle of the [class@ViewSwitcher].

The subtitle should give a user additional details.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_title"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_title_set_title"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="251">The title of the [class@ViewSwitcher].

The title should give a user additional details. A good title should not
include the application name.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title-visible"
                version="1.0"
                transfer-ownership="none"
                getter="get_title_visible"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_title_visible"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="305">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="view-switcher-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none"
                setter="set_view_switcher_enabled"
                getter="get_view_switcher_enabled"
                default-value="TRUE">
        <attribute name="org.gtk.Property.get"
                   value="hdy_view_switcher_title_get_view_switcher_enabled"/>
        <attribute name="org.gtk.Property.set"
                   value="hdy_view_switcher_title_set_view_switcher_enabled"/>
        <doc xml:space="preserve"
             filename="src/hdy-view-switcher-title.c"
             line="284">Whether the bar should be revealed or hidden.

If it is disabled, the title will be displayed instead. This allows to
programmatically hide the view switcher even if it fits in the available
space.

This can be used e.g. to ensure the view switcher is hidden below a certain
window width, or any other constraint you find suitable.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ViewSwitcherTitleClass"
            c:type="HdyViewSwitcherTitleClass"
            glib:is-gtype-struct-for="ViewSwitcherTitle">
      <source-position filename="src/hdy-view-switcher-title.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="HdyWindow"
           version="1.0"
           parent="Gtk.Window"
           glib:type-name="HdyWindow"
           glib:get-type="hdy_window_get_type"
           glib:type-struct="WindowClass">
      <doc xml:space="preserve"
           filename="src/hdy-window.c"
           line="12">A freeform window.

The `HdyWindow` widget is a subclass of [class@Gtk.Window] which has no
titlebar area and provides rounded corners on all sides, ensuring they can
never be overlapped by the content. This makes it safe to use headerbars in
the content area as follows:

```xml
&lt;object class="HdyWindow"/&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;property name="visible"&gt;True&lt;/property&gt;
      &lt;property name="orientation"&gt;vertical&lt;/property&gt;
      &lt;child&gt;
        &lt;object class="HdyHeaderBar"&gt;
          &lt;property name="visible"&gt;True&lt;/property&gt;
          &lt;property name="show-close-button"&gt;True&lt;/property&gt;
        &lt;/object&gt;
      &lt;/child&gt;
      &lt;child&gt;
        &lt;!-- ... --&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
```

It's recommended to use [class@HeaderBar] with `HdyWindow`, as unlike
[class@Gtk.HeaderBar] it remains draggable inside the window. Otherwise,
[class@WindowHandle] can be used.

`HdyWindow` allows to easily implement titlebar autohiding by putting the
headerbar inside a [class@Gtk.Revealer], and to show titlebar above content
by putting it into a [class@Gtk.Overlay] instead of [class@Gtk.Box].

If the window has a [class@Gtk.GLArea], it may bring a slight performance
regression when the window is not fullscreen, tiled or maximized.

Using [method@Gtk.Window.get_titlebar] and [method@Gtk.Window.set_titlebar]
is not supported and will result in a crash.

## CSS nodes

`HdyWindow` has a main CSS node with the name `window` and style classes
`.background`, `.csd` and `.unified`.

The `.solid-csd` style class on the main node is used for client-side
decorations without invisible borders.

`HdyWindow` also represents window states with the following style classes on
the main node: `.tiled`, `.maximized`, `.fullscreen`.

It contains the subnodes decoration for window shadow and/or border,
decoration-overlay for the sheen on top of the window, `widget.titlebar`, and
deck, which contains the child inside the window.</doc>
      <source-position filename="src/hdy-window.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_window_new" version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-window.c"
             line="179">Creates a new `HdyWindow`.</doc>
        <source-position filename="src/hdy-window.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-window.c"
               line="184">the newly created `HdyWindow`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
    </class>
    <record name="WindowClass"
            c:type="HdyWindowClass"
            glib:is-gtype-struct-for="Window">
      <source-position filename="src/hdy-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="WindowHandle"
           c:symbol-prefix="window_handle"
           c:type="HdyWindowHandle"
           version="1.0"
           parent="Gtk.EventBox"
           glib:type-name="HdyWindowHandle"
           glib:get-type="hdy_window_handle_get_type"
           glib:type-struct="WindowHandleClass">
      <doc xml:space="preserve"
           filename="src/hdy-window-handle.c"
           line="12">A bin that acts like a titlebar.

`HdyWindowHandle` is a [class@Gtk.Bin] subclass that can be dragged to move
its [class@Gtk.Window], and handles right click, middle click and double
click as expected from a titlebar. This is particularly useful with
[class@Window] or [class@ApplicationWindow].

It isn't necessary to use `HdyWindowHandle` if you use [class@HeaderBar].

It can be safely nested or used in the actual window titlebar.

## CSS nodes

`HdyWindowHandle` has a single CSS node with name `windowhandle`.</doc>
      <source-position filename="src/hdy-window-handle.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_window_handle_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="src/hdy-window-handle.c"
             line="69">Creates a new `HdyWindowHandle`.</doc>
        <source-position filename="src/hdy-window-handle.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-window-handle.c"
               line="74">the newly created `HdyWindowHandle`</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
    </class>
    <record name="WindowHandleClass"
            c:type="HdyWindowHandleClass"
            glib:is-gtype-struct-for="WindowHandle">
      <source-position filename="src/hdy-window-handle.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
      </field>
    </record>
    <function name="ease_out_cubic"
              c:identifier="hdy_ease_out_cubic"
              version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-animation.c"
           line="247">Computes the ease out for a value.</doc>
      <source-position filename="src/hdy-animation.h" line="23"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/hdy-animation.c"
             line="253">the ease out for @t</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="t" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-animation.c"
               line="249">the term</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_value_row_name"
              c:identifier="hdy_enum_value_row_name"
              version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-combo-row.c"
           line="819">Returns the name of a [class@EnumValueObject].

This is a default implementation of [callback@ComboRowGetEnumValueNameFunc]
to be used with [method@ComboRow.set_for_enum]. If the enumeration has a
nickname, it will return it, otherwise it will return its name.</doc>
      <source-position filename="src/hdy-combo-row.h" line="119"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/hdy-combo-row.c"
             line="830">a displayable name that represents @value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="821">the value from the enum from which to get a name</doc>
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/hdy-combo-row.c"
               line="822">unused user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_enable_animations"
              c:identifier="hdy_get_enable_animations"
              version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-animation.c"
           line="198">Checks whether animations are enabled for @widget.

This should be used when implementing an animated widget to know whether to
animate it or not.</doc>
      <source-position filename="src/hdy-animation.h" line="20"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/hdy-animation.c"
             line="207">whether animations are enabled for @widget</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/hdy-animation.c"
               line="200">a widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="hdy_init" version="1.0">
      <doc xml:space="preserve"
           filename="src/hdy-main.c"
           line="165">Initializes Libhandy.

Call this function just after initializing GTK, if you are using
[class@Gtk.Application] it means it must be called when the
[signal@Gio.Application::startup] signal is emitted.

If Libhandy has already been initialized, the function will simply return.

This makes sure translations, types, themes, and icons for the Handy library
are set up properly.</doc>
      <source-position filename="src/hdy-main.h" line="19"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
