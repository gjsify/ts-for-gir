<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gdk" version="2.0"/>
  <include name="Gtk" version="2.0"/>
  <include name="Pango" version="1.0"/>
  <namespace name="Vte"
             version="0.0"
             shared-library="libvte.so.9"
             c:identifier-prefixes="Vte"
             c:symbol-prefixes="vte">
    <record name="CharAttributes" c:type="VteCharAttributes">
      <source-position filename="vte.h" line="244"/>
      <field name="row" readable="0" private="1">
        <type name="glong" c:type="long"/>
      </field>
      <field name="column" readable="0" private="1">
        <type name="glong" c:type="long"/>
      </field>
      <field name="fore" readable="0" private="1">
        <type name="Gdk.Color" c:type="GdkColor"/>
      </field>
      <field name="back" readable="0" private="1">
        <type name="Gdk.Color" c:type="GdkColor"/>
      </field>
      <field name="underline" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="strikethrough" readable="0" bits="1" private="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <function-macro name="IS_PTY" c:identifier="VTE_IS_PTY" introspectable="0">
      <source-position filename="vtepty.h" line="81"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PTY_CLASS"
                    c:identifier="VTE_IS_PTY_CLASS"
                    introspectable="0">
      <source-position filename="vtepty.h" line="82"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TERMINAL"
                    c:identifier="VTE_IS_TERMINAL"
                    introspectable="0">
      <source-position filename="vte.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TERMINAL_CLASS"
                    c:identifier="VTE_IS_TERMINAL_CLASS"
                    introspectable="0">
      <source-position filename="vte.h" line="53"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PTY" c:identifier="VTE_PTY" introspectable="0">
      <source-position filename="vtepty.h" line="79"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PTY_CLASS"
                    c:identifier="VTE_PTY_CLASS"
                    introspectable="0">
      <source-position filename="vtepty.h" line="80"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PTY_GET_CLASS"
                    c:identifier="VTE_PTY_GET_CLASS"
                    introspectable="0">
      <source-position filename="vtepty.h" line="83"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Pty"
           c:symbol-prefix="pty"
           c:type="VtePty"
           version="0.26"
           parent="GObject.Object"
           glib:type-name="VtePty"
           glib:get-type="vte_pty_get_type"
           glib:type-struct="PtyClass">
      <source-position filename="vtepty.h" line="86"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="vte_pty_new"
                   version="0.26"
                   throws="1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1722">Allocates a new pseudo-terminal.

You can later use fork() or the g_spawn_async() family of functions
to start a process on the PTY.

If using fork(), you MUST call vte_pty_child_setup() in the child.

If using g_spawn_async() and friends, you MUST either use
vte_pty_child_setup() directly as the child setup function, or call
vte_pty_child_setup() from your own child setup function supplied.
Also, you MUST pass the %G_SPAWN_DO_NOT_REAP_CHILD flag.

If GNOME PTY Helper is available and
unless some of the %VTE_PTY_NO_LASTLOG, %VTE_PTY_NO_UTMP or
%VTE_PTY_NO_WTMP flags are passed in @flags, the
session is logged in the corresponding lastlog, utmp or wtmp
system files.  When passing %VTE_PTY_NO_HELPER in @flags, the
GNOME PTY Helper is bypassed entirely.

When passing %VTE_PTY_NO_FALLBACK in @flags,
and opening a PTY using the PTY helper fails, there will
be no fallback to allocate a PTY using Unix98 PTY functions.</doc>
        <source-position filename="vtepty.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="pty.c"
               line="1750">a new #VtePty, or %NULL on error with @error filled in</doc>
          <type name="Pty" c:type="VtePty*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1724">flags from #VtePtyFlags</doc>
            <type name="PtyFlags" c:type="VtePtyFlags"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_foreign"
                   c:identifier="vte_pty_new_foreign"
                   version="0.26"
                   throws="1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1765">Creates a new #VtePty for the PTY master @fd.

No entry will be made in the lastlog, utmp or wtmp system files.

Note that the newly created #VtePty will take ownership of @fd
and close it on finalize.</doc>
        <source-position filename="vtepty.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="pty.c"
               line="1777">a new #VtePty for @fd, or %NULL on error with @error filled in</doc>
          <type name="Pty" c:type="VtePty*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1767">a file descriptor to the PTY</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="child_setup"
              c:identifier="vte_pty_child_setup"
              version="0.26">
        <doc xml:space="preserve" filename="pty.c" line="227">FIXMEchpe</doc>
        <source-position filename="vtepty.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="229">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="vte_pty_close" version="0.26">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1413">Cleans up the PTY, specifically any logging performed for the session.
The file descriptor to the PTY master remains open.</doc>
        <source-position filename="vtepty.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1415">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fd"
              c:identifier="vte_pty_get_fd"
              glib:get-property="fd">
        <source-position filename="vtepty.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="pty.c"
               line="1798">the file descriptor of the PTY master in @pty. The
  file descriptor belongs to @pty and must not be closed</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1796">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="vte_pty_get_size"
              version="0.26"
              throws="1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="674">Reads the pseudo terminal's window size.

If getting the window size failed, @error will be set to a #GIOError.</doc>
        <source-position filename="vtepty.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="pty.c"
               line="685">%TRUE on success, %FALSE on failure with @error filled in</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="676">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
          <parameter name="rows"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="677">a location to store the number of rows, or %NULL</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="columns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="678">a location to store the number of columns, or %NULL</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="vte_pty_set_size"
              version="0.26"
              throws="1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="614">Attempts to resize the pseudo terminal's window size.  If successful, the
OS kernel will send #SIGWINCH to the child process group.

If setting the window size failed, @error will be set to a #GIOError.</doc>
        <source-position filename="vtepty.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="pty.c"
               line="626">%TRUE on success, %FALSE on failure with @error filled in</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="616">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="617">the desired number of rows</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="618">the desired number of columns</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_term"
              c:identifier="vte_pty_set_term"
              glib:set-property="term"
              version="0.26">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1814">Sets what value of the TERM environment variable to set just after forking.</doc>
        <source-position filename="vtepty.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1816">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
          <parameter name="emulation"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1817">the name of a terminal description, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_utf8"
              c:identifier="vte_pty_set_utf8"
              version="0.26"
              throws="1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1355">Tells the kernel whether the terminal is UTF-8 or not, in case it can make
use of the info.  Linux 2.6.5 or so defines IUTF8 to make the line
discipline do multibyte backspace correctly.</doc>
        <source-position filename="vtepty.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="pty.c"
               line="1365">%TRUE on success, %FALSE on failure with @error filled in</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1357">a #VtePty</doc>
            <type name="Pty" c:type="VtePty*"/>
          </instance-parameter>
          <parameter name="utf8" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="pty.c"
                 line="1358">whether or not the pty is in UTF-8 mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="fd"
                version="0.26"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_fd"
                default-value="-1">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1666">The file descriptor of the PTY master.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="flags"
                version="0.26"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                default-value="VTE_PTY_DEFAULT">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1648">Controls how the session is recorded in lastlog, utmp, and wtmp,
and whether to use the GNOME PTY helper.</doc>
        <type name="PtyFlags"/>
      </property>
      <property name="term"
                version="0.26"
                writable="1"
                transfer-ownership="none"
                setter="set_term"
                default-value="xterm">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1682">The value to set for the TERM environment variable just after
forking.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="PtyClass"
            c:type="VtePtyClass"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="Pty">
      <source-position filename="vtepty.h" line="86"/>
    </record>
    <enumeration name="PtyError"
                 version="0.26"
                 glib:type-name="VtePtyError"
                 glib:get-type="vte_pty_error_get_type"
                 c:type="VtePtyError"
                 glib:error-domain="vte-pty-error">
      <member name="pty_helper_failed"
              value="0"
              c:identifier="VTE_PTY_ERROR_PTY_HELPER_FAILED"
              glib:nick="pty-helper-failed"
              glib:name="VTE_PTY_ERROR_PTY_HELPER_FAILED">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="53">failure when using the GNOME PTY helper to
  allocate the PTY</doc>
      </member>
      <member name="pty98_failed"
              value="1"
              c:identifier="VTE_PTY_ERROR_PTY98_FAILED"
              glib:nick="pty98-failed"
              glib:name="VTE_PTY_ERROR_PTY98_FAILED">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="55">failure when using PTY98 to allocate the PTY</doc>
      </member>
      <function name="quark" c:identifier="vte_pty_error_quark" version="0.26">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1701">Error domain for VTE PTY errors. Errors in this domain will be from the #VtePtyError
enumeration. See #GError for more information on error domains.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="pty.c"
               line="1707">the error domain for VTE PTY errors</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="PtyFlags"
              version="0.26"
              glib:type-name="VtePtyFlags"
              glib:get-type="vte_pty_flags_get_type"
              c:type="VtePtyFlags">
      <member name="no_lastlog"
              value="1"
              c:identifier="VTE_PTY_NO_LASTLOG"
              glib:nick="no-lastlog"
              glib:name="VTE_PTY_NO_LASTLOG">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="32">don't record the session in lastlog</doc>
      </member>
      <member name="no_utmp"
              value="2"
              c:identifier="VTE_PTY_NO_UTMP"
              glib:nick="no-utmp"
              glib:name="VTE_PTY_NO_UTMP">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="33">don't record the session in utmp</doc>
      </member>
      <member name="no_wtmp"
              value="4"
              c:identifier="VTE_PTY_NO_WTMP"
              glib:nick="no-wtmp"
              glib:name="VTE_PTY_NO_WTMP">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="34">don't record the session in wtmp</doc>
      </member>
      <member name="no_helper"
              value="8"
              c:identifier="VTE_PTY_NO_HELPER"
              glib:nick="no-helper"
              glib:name="VTE_PTY_NO_HELPER">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="35">don't use the GNOME PTY helper to allocate the PTY</doc>
      </member>
      <member name="no_fallback"
              value="16"
              c:identifier="VTE_PTY_NO_FALLBACK"
              glib:nick="no-fallback"
              glib:name="VTE_PTY_NO_FALLBACK">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="36">when allocating the PTY with the PTY helper fails,
  don't fall back to try using PTY98</doc>
      </member>
      <member name="default"
              value="0"
              c:identifier="VTE_PTY_DEFAULT"
              glib:nick="default"
              glib:name="VTE_PTY_DEFAULT">
        <doc xml:space="preserve"
             filename="vtepty.h"
             line="38">the default flags</doc>
      </member>
    </bitfield>
    <callback name="SelectionFunc" c:type="VteSelectionFunc">
      <doc xml:space="preserve"
           filename="vte.c"
           line="6221">Specifies the type of a selection function used to check whether
a cell has to be selected or not.</doc>
      <source-position filename="vte.h" line="255"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="vte.c"
             line="6231">%TRUE if cell has to be selected; %FALSE if otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="terminal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6223">terminal in which the cell is.</doc>
          <type name="Terminal" c:type="VteTerminal*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6224">column in which the cell is.</doc>
          <type name="glong" c:type="glong"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6225">row in which the cell is.</doc>
          <type name="glong" c:type="glong"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6226">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="TERMINAL"
                    c:identifier="VTE_TERMINAL"
                    introspectable="0">
      <source-position filename="vte.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TERMINAL_CLASS"
                    c:identifier="VTE_TERMINAL_CLASS"
                    introspectable="0">
      <source-position filename="vte.h" line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TERMINAL_GET_CLASS"
                    c:identifier="VTE_TERMINAL_GET_CLASS"
                    introspectable="0">
      <source-position filename="vte.h" line="54"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Terminal"
           c:symbol-prefix="terminal"
           c:type="VteTerminal"
           parent="Gtk.Widget"
           glib:type-name="VteTerminal"
           glib:get-type="vte_terminal_get_type"
           glib:type-struct="TerminalClass">
      <doc xml:space="preserve"
           filename="vte.h"
           line="61">All of these fields should be considered read-only and deprecated.</doc>
      <source-position filename="vte.h" line="185"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="vte_terminal_new">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2472">Creates a new terminal widget.</doc>
        <source-position filename="vte.h" line="263"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="2477">a new #VteTerminal object</doc>
          <type name="Terminal" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="beep">
        <source-position filename="vte.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="char_size_changed">
        <source-position filename="vte.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="char_width" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="char_height" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_exited">
        <source-position filename="vte.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="commit">
        <source-position filename="vte.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="contents_changed">
        <source-position filename="vte.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_clipboard" invoker="copy_clipboard">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13077">Places the selected text in the terminal in the #GDK_SELECTION_CLIPBOARD
selection.</doc>
        <source-position filename="vte.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13079">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="cursor_moved">
        <source-position filename="vte.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="decrease_font_size">
        <source-position filename="vte.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deiconify_window">
        <source-position filename="vte.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="emulation_changed">
        <source-position filename="vte.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="encoding_changed">
        <source-position filename="vte.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eof">
        <source-position filename="vte.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="icon_title_changed">
        <source-position filename="vte.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="iconify_window">
        <source-position filename="vte.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="increase_font_size">
        <source-position filename="vte.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lower_window">
        <source-position filename="vte.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="maximize_window">
        <source-position filename="vte.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_window">
        <source-position filename="vte.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paste_clipboard" invoker="paste_clipboard">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13098">Sends the contents of the #GDK_SELECTION_CLIPBOARD selection to the
terminal's child.  If necessary, the data is converted from UTF-8 to the
terminal's current encoding. It's called on paste menu item, or when
user presses Shift+Insert.</doc>
        <source-position filename="vte.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13100">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="raise_window">
        <source-position filename="vte.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="refresh_window">
        <source-position filename="vte.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="resize_window">
        <source-position filename="vte.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="restore_window">
        <source-position filename="vte.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="vte.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="status_line_changed">
        <source-position filename="vte.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text_deleted">
        <source-position filename="vte.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text_inserted">
        <source-position filename="vte.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text_modified">
        <source-position filename="vte.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text_scrolled">
        <source-position filename="vte.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="delta" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="window_title_changed">
        <source-position filename="vte.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="copy_clipboard" c:identifier="vte_terminal_copy_clipboard">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13077">Places the selected text in the terminal in the #GDK_SELECTION_CLIPBOARD
selection.</doc>
        <source-position filename="vte.h" line="291"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13079">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="copy_primary" c:identifier="vte_terminal_copy_primary">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13114">Places the selected text in the terminal in the #GDK_SELECTION_PRIMARY
selection.</doc>
        <source-position filename="vte.h" line="293"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13116">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="feed" c:identifier="vte_terminal_feed">
        <doc xml:space="preserve"
             filename="vte.c"
             line="4615">Interprets @data as if it were data received from a child process.  This
can either be used to drive the terminal without a child process, or just
to mess with your users.</doc>
        <source-position filename="vte.h" line="285"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4617">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4618">a string in the terminal's current encoding
@length the length of the string</doc>
            <array length="1" zero-terminated="0" c:type="const char*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="feed_child" c:identifier="vte_terminal_feed_child">
        <doc xml:space="preserve"
             filename="vte.c"
             line="4818">Sends a block of UTF-8 text to the child as if it were entered by the user
at the keyboard.</doc>
        <source-position filename="vte.h" line="286"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4820">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4821">data to send to the child</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4822">length of @text in bytes, or -1 if @text is NUL-terminated</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="feed_child_binary"
              c:identifier="vte_terminal_feed_child_binary"
              version="0.12.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="4840">Sends a block of binary data to the child.</doc>
        <source-position filename="vte.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4842">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4843">data to send to the child</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="4844">length of @data</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="fork_command_full"
              c:identifier="vte_terminal_fork_command_full"
              version="0.26"
              throws="1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3821">Starts the specified command under a newly-allocated controlling
pseudo-terminal.  The @argv and @envv lists should be %NULL-terminated.
The "TERM" environment variable is automatically set to reflect the
terminal widget's emulation setting.
@pty_flags controls logging the session to the specified system log files.

Note that %G_SPAWN_DO_NOT_REAP_CHILD will always be added to @spawn_flags.

Note that unless @spawn_flags contains %G_SPAWN_LEAVE_DESCRIPTORS_OPEN, all file
descriptors except stdin/stdout/stderr will be closed before calling exec()
in the child.

See vte_pty_new(), g_spawn_async() and vte_terminal_watch_child() for more information.</doc>
        <source-position filename="vte.h" line="272"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="3850">%TRUE on success, or %FALSE on error with @error filled in</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3823">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="pty_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3824">flags from #VtePtyFlags</doc>
            <type name="PtyFlags" c:type="VtePtyFlags"/>
          </parameter>
          <parameter name="working_directory"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3825">the name of a directory the command should start
  in, or %NULL to use the current working directory</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="argv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3827">child's argument vector</doc>
            <array c:type="char**">
              <type name="filename"/>
            </array>
          </parameter>
          <parameter name="envv"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3828">a list of environment
  variables to be added to the environment before starting the process, or %NULL</doc>
            <array c:type="char**">
              <type name="filename"/>
            </array>
          </parameter>
          <parameter name="spawn_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3830">flags from #GSpawnFlags</doc>
            <type name="GLib.SpawnFlags" c:type="GSpawnFlags"/>
          </parameter>
          <parameter name="child_setup"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="6">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3831">function to run in the child just before exec(), or %NULL</doc>
            <type name="GLib.SpawnChildSetupFunc"
                  c:type="GSpawnChildSetupFunc"/>
          </parameter>
          <parameter name="child_setup_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3832">user data for @child_setup</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="child_pid"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3833">a location to store the child PID, or %NULL</doc>
            <type name="GLib.Pid" c:type="GPid*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_adjustment"
              c:identifier="vte_terminal_get_adjustment"
              deprecated="1"
              deprecated-version="0.28">
        <doc xml:space="preserve"
             filename="vte.c"
             line="14160">An accessor function provided for the benefit of language bindings.</doc>
        <doc-deprecated xml:space="preserve">Use gtk_scrollable_get_vadjustment() instead</doc-deprecated>
        <source-position filename="vte.h" line="490"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14166">the contents of @terminal's adjustment field</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14162">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allow_bold"
              c:identifier="vte_terminal_get_allow_bold"
              glib:get-property="allow-bold">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12976">Checks whether or not the terminal will attempt to draw bold text by
repainting text with a one-pixel offset.</doc>
        <source-position filename="vte.h" line="390"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="12983">%TRUE if bolding is enabled, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12978">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_audible_bell"
              c:identifier="vte_terminal_get_audible_bell"
              glib:get-property="audible-bell">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12886">Checks whether or not the terminal will beep when the child outputs the
"bl" sequence.</doc>
        <source-position filename="vte.h" line="306"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="12893">%TRUE if audible bell is enabled, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12888">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_char_height"
              c:identifier="vte_terminal_get_char_height">
        <source-position filename="vte.h" line="494"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14195">the height of a character cell</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14193">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_char_width" c:identifier="vte_terminal_get_char_width">
        <source-position filename="vte.h" line="493"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14181">the width of a character cell</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14179">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_exit_status"
              c:identifier="vte_terminal_get_child_exit_status"
              version="0.20">
        <doc xml:space="preserve"
             filename="vte.c"
             line="14463">Gets the exit status of the command started by vte_terminal_fork_command().
See your C library's documentation for more details on how to interpret the
exit status.

Note that this function may only be called from the signal handler of
the #VteTerminal::child-exited signal.</doc>
        <source-position filename="vte.h" line="500"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14474">the child's exit status</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14465">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_count"
              c:identifier="vte_terminal_get_column_count">
        <source-position filename="vte.h" line="496"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14259">the number of columns</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14257">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cursor_blink_mode"
              c:identifier="vte_terminal_get_cursor_blink_mode"
              glib:get-property="cursor-blink-mode"
              version="0.17.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13611">Returns the currently set cursor blink mode.</doc>
        <source-position filename="vte.h" line="370"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="13617">cursor blink mode.</doc>
          <type name="TerminalCursorBlinkMode"
                c:type="VteTerminalCursorBlinkMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13613">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cursor_position"
              c:identifier="vte_terminal_get_cursor_position">
        <doc xml:space="preserve"
             filename="vte.c"
             line="6501">Reads the location of the insertion cursor and returns it.  The row
coordinate is absolute.</doc>
        <source-position filename="vte.h" line="436"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6503">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="column"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6504">a location to store the column, or %NULL</doc>
            <type name="glong" c:type="glong*"/>
          </parameter>
          <parameter name="row"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6505">a location to store the row, or %NULL</doc>
            <type name="glong" c:type="glong*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cursor_shape"
              c:identifier="vte_terminal_get_cursor_shape"
              glib:get-property="cursor-shape"
              version="0.17.6">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13655">Returns the currently set cursor shape.</doc>
        <source-position filename="vte.h" line="375"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="13661">cursor shape.</doc>
          <type name="TerminalCursorShape" c:type="VteTerminalCursorShape"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13657">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_emulation"
              c:identifier="vte_terminal_get_default_emulation"
              version="0.11.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="8212">Queries the terminal for its default emulation, which is attempted if the
terminal type passed to vte_terminal_set_emulation() is %NULL.</doc>
        <source-position filename="vte.h" line="474"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="8219">an interned string containing the name of the default terminal
  type the widget attempts to emulate</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="8214">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_emulation"
              c:identifier="vte_terminal_get_emulation"
              glib:get-property="emulation">
        <doc xml:space="preserve"
             filename="vte.c"
             line="8230">Queries the terminal for its current emulation, as last set by a call to
vte_terminal_set_emulation().</doc>
        <source-position filename="vte.h" line="473"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="8237">an interned string containing the name of the terminal type the
  widget is attempting to emulate</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="8232">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_encoding"
              c:identifier="vte_terminal_get_encoding"
              glib:get-property="encoding">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2334">Determines the name of the encoding in which the terminal expects data to be
encoded.</doc>
        <source-position filename="vte.h" line="478"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="2341">the current encoding for the terminal</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2336">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font" c:identifier="vte_terminal_get_font">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7944">Queries the terminal for information about the fonts which will be
used to draw text in the terminal.</doc>
        <source-position filename="vte.h" line="388"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="7951">a #PangoFontDescription describing the font the terminal is
  currently using to render text</doc>
          <type name="Pango.FontDescription"
                c:type="const PangoFontDescription*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7946">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_selection"
              c:identifier="vte_terminal_get_has_selection">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13503">Checks if the terminal currently contains selected text.  Note that this
is different from determining if the terminal is the owner of any
#GtkClipboard items.</doc>
        <source-position filename="vte.h" line="393"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="13511">%TRUE if part of the text in the terminal is selected.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13505">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_title"
              c:identifier="vte_terminal_get_icon_title"
              glib:get-property="icon-title">
        <source-position filename="vte.h" line="498"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14285">the icon title</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14283">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mouse_autohide"
              c:identifier="vte_terminal_get_mouse_autohide">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13931">Determines the value of the terminal's mouse autohide setting.  When
autohiding is enabled, the mouse cursor will be hidden when the user presses
a key and shown when the user moves the mouse.  This setting can be changed
using vte_terminal_set_mouse_autohide().</doc>
        <source-position filename="vte.h" line="409"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="13940">%TRUE if autohiding is enabled, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13933">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pty_object"
              c:identifier="vte_terminal_get_pty_object"
              glib:get-property="pty-object"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="14445">Returns the #VtePty of @terminal.</doc>
        <source-position filename="vte.h" line="484"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14451">a #VtePty, or %NULL</doc>
          <type name="Pty" c:type="VtePty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14447">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_count" c:identifier="vte_terminal_get_row_count">
        <source-position filename="vte.h" line="495"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14246">the number of rows</doc>
          <type name="glong" c:type="glong"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14243">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status_line"
              c:identifier="vte_terminal_get_status_line">
        <doc xml:space="preserve"
             filename="vte.c"
             line="14113">Some terminal emulations specify a status line which is separate from the
main display area, and define a means for applications to move the cursor
to the status line and back.</doc>
        <source-position filename="vte.h" line="481"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14121">the current contents of the terminal's status line.
  For terminals like "xterm", this will usually be the empty string.  The string
  must not be modified or freed by the caller.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14115">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="vte_terminal_get_text">
        <doc xml:space="preserve"
             filename="vte.c"
             line="6437">Extracts a view of the visible part of the terminal.  If @is_selected is not
%NULL, characters will only be read if @is_selected returns %TRUE after being
passed the column and row, respectively.  A #VteCharAttributes structure
is added to @attributes for each byte added to the returned string detailing
the character's position, colors, and other characteristics.</doc>
        <source-position filename="vte.h" line="422"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6450">a newly allocated text string, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6439">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="is_selected"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6440">a #VteSelectionFunc callback</doc>
            <type name="SelectionFunc" c:type="VteSelectionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6441">user data to be passed to the callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="attributes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6442">location for storing text attributes</doc>
            <array zero-terminated="0" name="GLib.Array" c:type="GArray*">
              <type name="CharAttributes"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_include_trailing_spaces"
              c:identifier="vte_terminal_get_text_include_trailing_spaces"
              version="0.11.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="6467">Extracts a view of the visible part of the terminal.  If @is_selected is not
%NULL, characters will only be read if @is_selected returns %TRUE after being
passed the column and row, respectively.  A #VteCharAttributes structure
is added to @attributes for each byte added to the returned string detailing
the character's position, colors, and other characteristics. This function
differs from vte_terminal_get_text() in that trailing spaces at the end of
lines are included.</doc>
        <source-position filename="vte.h" line="426"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6482">a newly allocated text string, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6469">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="is_selected"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6470">a #VteSelectionFunc callback</doc>
            <type name="SelectionFunc" c:type="VteSelectionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6471">user data to be passed to the callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="attributes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6472">location for storing text attributes</doc>
            <array zero-terminated="0" name="GLib.Array" c:type="GArray*">
              <type name="CharAttributes"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_text_range" c:identifier="vte_terminal_get_text_range">
        <doc xml:space="preserve"
             filename="vte.c"
             line="6234">Extracts a view of the visible part of the terminal.  If @is_selected is not
%NULL, characters will only be read if @is_selected returns %TRUE after being
passed the column and row, respectively.  A #VteCharAttributes structure
is added to @attributes for each byte added to the returned string detailing
the character's position, colors, and other characteristics.  The
entire scrollback buffer is scanned, so it is possible to read the entire
contents of the buffer using this function.</doc>
        <source-position filename="vte.h" line="430"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="vte.c"
               line="6253">a newly allocated text string, or %NULL.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6236">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="start_row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6237">first row to search for data</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="start_col" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6238">first column to search for data</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="end_row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6239">last row to search for data</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="end_col" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6240">last column to search for data</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="is_selected"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6241">a #VteSelectionFunc callback</doc>
            <type name="SelectionFunc" c:type="VteSelectionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6242">user data to be passed to the callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="attributes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="6243">location for storing text attributes</doc>
            <array zero-terminated="0" name="GLib.Array" c:type="GArray*">
              <type name="CharAttributes"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_visible_bell"
              c:identifier="vte_terminal_get_visible_bell"
              glib:get-property="visible-bell">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12930">Checks whether or not the terminal will present a visible bell to the
user when the child outputs the "bl" sequence.  The terminal
will clear itself to the default foreground color and then repaint itself.</doc>
        <source-position filename="vte.h" line="308"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="12938">%TRUE if visible bell is enabled, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12932">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_window_title"
              c:identifier="vte_terminal_get_window_title"
              glib:get-property="window-title">
        <source-position filename="vte.h" line="497"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="14272">the window title</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14270">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="im_append_menuitems"
              c:identifier="vte_terminal_im_append_menuitems">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13147">Appends menu items for various input methods to the given menu.  The
user can select one of these items to modify the input method used by
the terminal.</doc>
        <source-position filename="vte.h" line="381"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13149">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="menushell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13150">a GtkMenuShell</doc>
            <type name="Gtk.MenuShell" c:type="GtkMenuShell*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_word_char" c:identifier="vte_terminal_is_word_char">
        <doc xml:space="preserve"
             filename="vte.c"
             line="5614">Checks if a particular character is considered to be part of a word or not,
based on the values last passed to vte_terminal_set_word_chars().</doc>
        <source-position filename="vte.h" line="399"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="5622">%TRUE if the character is considered to be part of a word</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="5616">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="c" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="5617">a candidate Unicode code point</doc>
            <type name="gunichar" c:type="gunichar"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_add_gregex"
              c:identifier="vte_terminal_match_add_gregex"
              version="0.17.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1335">Adds the regular expression @regex to the list of matching expressions.  When the
user moves the mouse cursor over a section of displayed text which matches
this expression, the text will be highlighted.</doc>
        <source-position filename="vte.h" line="443"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="1345">an integer associated with this expression</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1337">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="regex" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1338">a #GRegex</doc>
            <type name="GLib.Regex" c:type="GRegex*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1339">the #GRegexMatchFlags to use when matching the regex</doc>
            <type name="GLib.RegexMatchFlags" c:type="GRegexMatchFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_check" c:identifier="vte_terminal_match_check">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1963">Checks if the text in and around the specified position matches any of the
regular expressions previously set using vte_terminal_match_add().  If a
match exists, the text string is returned and if @tag is not %NULL, the number
associated with the matched regular expression will be stored in @tag.

If more than one regular expression has been set with
vte_terminal_match_add(), then expressions are checked in the order in
which they were added.</doc>
        <source-position filename="vte.h" line="457"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="vte.c"
               line="1979">a newly allocated string which matches one of the previously
  set regular expressions</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1965">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1966">the text column</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1967">the text row</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="tag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1968">a location to store the tag, or %NULL</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_clear_all"
              c:identifier="vte_terminal_match_clear_all">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1210">Clears the list of regular expressions the terminal uses to highlight text
when the user moves the mouse cursor.</doc>
        <source-position filename="vte.h" line="439"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1212">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="match_remove" c:identifier="vte_terminal_match_remove">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1236">Removes the regular expression which is associated with the given @tag from
the list of expressions which the terminal will highlight when the user
moves the mouse cursor over matching text.</doc>
        <source-position filename="vte.h" line="452"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1238">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1239">the tag of the regex to remove</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_set_cursor"
              c:identifier="vte_terminal_match_set_cursor"
              version="0.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1394">Sets which cursor the terminal will use if the pointer is over the pattern
specified by @tag.  The terminal keeps a reference to @cursor.</doc>
        <source-position filename="vte.h" line="445"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1396">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1397">the tag of the regex which should use the specified cursor</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="cursor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1398">the #GdkCursor which the terminal should use when the pattern is
  highlighted, or %NULL to use the standard cursor</doc>
            <type name="Gdk.Cursor" c:type="GdkCursor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_set_cursor_name"
              c:identifier="vte_terminal_match_set_cursor_name"
              version="0.17.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1450">Sets which cursor the terminal will use if the pointer is over the pattern
specified by @tag.</doc>
        <source-position filename="vte.h" line="449"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1452">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1453">the tag of the regex which should use the specified cursor</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="cursor_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1454">the name of the cursor</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_set_cursor_type"
              c:identifier="vte_terminal_match_set_cursor_type"
              version="0.11.9">
        <doc xml:space="preserve"
             filename="vte.c"
             line="1422">Sets which cursor the terminal will use if the pointer is over the pattern
specified by @tag.</doc>
        <source-position filename="vte.h" line="447"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1424">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1425">the tag of the regex which should use the specified cursor</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="cursor_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="1426">a #GdkCursorType</doc>
            <type name="Gdk.CursorType" c:type="GdkCursorType"/>
          </parameter>
        </parameters>
      </method>
      <method name="paste_clipboard"
              c:identifier="vte_terminal_paste_clipboard">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13098">Sends the contents of the #GDK_SELECTION_CLIPBOARD selection to the
terminal's child.  If necessary, the data is converted from UTF-8 to the
terminal's current encoding. It's called on paste menu item, or when
user presses Shift+Insert.</doc>
        <source-position filename="vte.h" line="292"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13100">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="paste_primary" c:identifier="vte_terminal_paste_primary">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13129">Sends the contents of the #GDK_SELECTION_PRIMARY selection to the terminal's
child.  If necessary, the data is converted from UTF-8 to the terminal's
current encoding.  The terminal will call also paste the
#GDK_SELECTION_PRIMARY selection when the user clicks with the the second
mouse button.</doc>
        <source-position filename="vte.h" line="294"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13131">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pty_new"
              c:identifier="vte_terminal_pty_new"
              version="0.26"
              throws="1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3573">Creates a new #VtePty, and sets the emulation property
from #VteTerminal:emulation.

See vte_pty_new() for more information.</doc>
        <source-position filename="vte.h" line="265"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="vte.c"
               line="3584">a new #VtePty</doc>
          <type name="Pty" c:type="VtePty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3575">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3576">flags from #VtePtyFlags</doc>
            <type name="PtyFlags" c:type="VtePtyFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="vte_terminal_reset">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13949">Resets as much of the terminal's internal state as possible, discarding any
unprocessed input data, resetting character attributes, cursor state,
national character set state, status line, terminal modes (insert/delete),
selection state, and encoding.</doc>
        <source-position filename="vte.h" line="412"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13951">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="clear_tabstops" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13952">whether to reset tabstops</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="clear_history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13953">whether to empty the terminal's scrollback buffer</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_find_next"
              c:identifier="vte_terminal_search_find_next"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="15407">Searches the next string matching the search regex set with
vte_terminal_search_set_gregex().</doc>
        <source-position filename="vte.h" line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="15414">%TRUE if a match was found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15409">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_find_previous"
              c:identifier="vte_terminal_search_find_previous"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="15390">Searches the previous string matching the search regex set with
vte_terminal_search_set_gregex().</doc>
        <source-position filename="vte.h" line="467"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="15397">%TRUE if a match was found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15392">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_get_gregex"
              c:identifier="vte_terminal_search_get_gregex"
              version="0.26">
        <source-position filename="vte.h" line="463"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="15158">the search #GRegex regex set in @terminal, or %NULL</doc>
          <type name="GLib.Regex" c:type="GRegex*"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15156">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_get_wrap_around"
              c:identifier="vte_terminal_search_get_wrap_around"
              version="0.26">
        <source-position filename="vte.h" line="466"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="15193">whether searching will wrap around</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15191">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_set_gregex"
              c:identifier="vte_terminal_search_set_gregex"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="15125">Sets the #GRegex regex to search for. Unsets the search regex when passed %NULL.</doc>
        <source-position filename="vte.h" line="461"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15127">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="regex"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15128">a #GRegex, or %NULL</doc>
            <type name="GLib.Regex" c:type="GRegex*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_set_wrap_around"
              c:identifier="vte_terminal_search_set_wrap_around"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="15170">Sets whether search should wrap around to the beginning of the
terminal content when reaching its end.</doc>
        <source-position filename="vte.h" line="464"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15172">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="wrap_around" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15173">whether search should wrap</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_all"
              c:identifier="vte_terminal_select_all"
              version="0.16">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7131">Selects all text within the terminal (including the scrollback buffer).</doc>
        <source-position filename="vte.h" line="297"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7133">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_none"
              c:identifier="vte_terminal_select_none"
              version="0.16">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7162">Clears the current selection.</doc>
        <source-position filename="vte.h" line="298"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7164">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allow_bold"
              c:identifier="vte_terminal_set_allow_bold"
              glib:set-property="allow-bold">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12947">Controls whether or not the terminal will attempt to draw bold text,
either by using a bold font variant or by repainting text with a different
offset.</doc>
        <source-position filename="vte.h" line="389"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12949">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="allow_bold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12950">%TRUE if the terminal should attempt to draw bold text</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_audible_bell"
              c:identifier="vte_terminal_set_audible_bell"
              glib:set-property="audible-bell">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12860">Controls whether or not the terminal will beep when the child outputs the
"bl" sequence.</doc>
        <source-position filename="vte.h" line="305"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12862">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="is_audible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12863">%TRUE if the terminal should beep</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_image"
              c:identifier="vte_terminal_set_background_image">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13397">Sets a background image for the widget.  Text which would otherwise be
drawn using the default background color will instead be drawn over the
specified image.  If necessary, the image will be tiled to cover the
widget's entire visible area. If specified by
vte_terminal_set_background_saturation(), the terminal will tint its
in-memory copy of the image before applying it to the terminal.</doc>
        <source-position filename="vte.h" line="356"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13399">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13400">a #GdkPixbuf to use, or %NULL to unset the background</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_image_file"
              c:identifier="vte_terminal_set_background_image_file"
              glib:set-property="background-image-file">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13459">Sets a background image for the widget.  If specified by
vte_terminal_set_background_saturation(), the terminal will tint its
in-memory copy of the image before applying it to the terminal.</doc>
        <source-position filename="vte.h" line="357"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13461">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13462">path to an image file</doc>
            <type name="filename" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_saturation"
              c:identifier="vte_terminal_set_background_saturation"
              glib:set-property="background-saturation">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13276">If a background image has been set using
vte_terminal_set_background_image(),
vte_terminal_set_background_image_file(), or
vte_terminal_set_background_transparent(), and the saturation value is less
than 1.0, the terminal will adjust the colors of the image before drawing
the image.  To do so, the terminal will create a copy of the background
image (or snapshot of the root window) and modify its pixel values.</doc>
        <source-position filename="vte.h" line="361"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13278">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="saturation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13279">a floating point value between 0.0 and 1.0.</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_tint_color"
              c:identifier="vte_terminal_set_background_tint_color"
              glib:set-property="background-tint-color"
              version="0.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13313">If a background image has been set using
vte_terminal_set_background_image(),
vte_terminal_set_background_image_file(), or
vte_terminal_set_background_transparent(), and the value set by
vte_terminal_set_background_saturation() is less than one, the terminal
will adjust the color of the image before drawing the image.  To do so,
the terminal will create a copy of the background image (or snapshot of
the root window) and modify its pixel values.  The initial tint color
is black.</doc>
        <source-position filename="vte.h" line="359"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13315">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13316">a color which the terminal background should be tinted to if its
  saturation is not 1.0.</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_transparent"
              c:identifier="vte_terminal_set_background_transparent"
              glib:set-property="background-transparent">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13363">Sets the terminal's background image to the pixmap stored in the root
window, adjusted so that if there are no windows below your application,
the widget will appear to be transparent.</doc>
        <source-position filename="vte.h" line="363"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13365">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="transparent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13366">whether the terminal should fake transparency</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_backspace_binding"
              c:identifier="vte_terminal_set_backspace_binding"
              glib:set-property="backspace-binding">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13848">Modifies the terminal's backspace key binding, which controls what
string or control sequence the terminal sends to its child when the user
presses the backspace key.</doc>
        <source-position filename="vte.h" line="402"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13850">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="binding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13851">a #VteTerminalEraseBinding for the backspace key</doc>
            <type name="TerminalEraseBinding"
                  c:type="VteTerminalEraseBinding"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_background"
              c:identifier="vte_terminal_set_color_background">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2632">Sets the background color for text which does not have a specific background
color assigned.  Only has effect when no background image is set and when
the terminal is not transparent.</doc>
        <source-position filename="vte.h" line="321"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2634">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="background" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2635">the new background color</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_bold" c:identifier="vte_terminal_set_color_bold">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2574">Sets the color used to draw bold text in the default foreground color.</doc>
        <source-position filename="vte.h" line="317"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2576">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="bold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2577">the new bold color</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_cursor"
              c:identifier="vte_terminal_set_color_cursor"
              version="0.11.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2654">Sets the background color for text which is under the cursor.  If %NULL, text
under the cursor will be drawn with foreground and background colors
reversed.</doc>
        <source-position filename="vte.h" line="323"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2656">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="cursor_background"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2657">the new color to use for the text cursor, or %NULL</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_dim" c:identifier="vte_terminal_set_color_dim">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2593">Sets the color used to draw dim text in the default foreground color.</doc>
        <source-position filename="vte.h" line="315"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2595">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="dim" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2596">the new dim color</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_foreground"
              c:identifier="vte_terminal_set_color_foreground">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2612">Sets the foreground color used to draw normal text</doc>
        <source-position filename="vte.h" line="319"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2614">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="foreground" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2615">the new foreground color</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_highlight"
              c:identifier="vte_terminal_set_color_highlight"
              version="0.11.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2687">Sets the background color for text which is highlighted.  If %NULL,
highlighted text (which is usually highlighted because it is selected) will
be drawn with foreground and background colors reversed.</doc>
        <source-position filename="vte.h" line="325"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2689">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="highlight_background"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2690">the new color to use for highlighted text, or %NULL</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_colors" c:identifier="vte_terminal_set_colors">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2720">The terminal widget uses a 28-color model comprised of the default foreground
and background colors, the bold foreground color, the dim foreground
color, an eight color palette, bold versions of the eight color palette,
and a dim version of the the eight color palette.

@palette_size must be either 0, 8, 16, or 24, or between 25 and 255 inclusive.
If @foreground is %NULL and
@palette_size is greater than 0, the new foreground color is taken from
@palette[7].  If @background is %NULL and @palette_size is greater than 0,
the new background color is taken from @palette[0].  If
@palette_size is 8 or 16, the third (dim) and possibly the second (bold)
8-color palettes are extrapolated from the new background color and the items
in @palette.</doc>
        <source-position filename="vte.h" line="327"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2722">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="foreground"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2723">the new foreground color, or %NULL</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="background"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2724">the new background color, or %NULL</doc>
            <type name="Gdk.Color" c:type="const GdkColor*"/>
          </parameter>
          <parameter name="palette" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2725">the color palette</doc>
            <array length="3" zero-terminated="0" c:type="const GdkColor*">
              <type name="Gdk.Color"/>
            </array>
          </parameter>
          <parameter name="palette_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2726">the number of entries in @palette</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_blink_mode"
              c:identifier="vte_terminal_set_cursor_blink_mode"
              glib:set-property="cursor-blink-mode"
              version="0.17.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13568">Sets whether or not the cursor will blink. Using %VTE_CURSOR_BLINK_SYSTEM
will use the #GtkSettings::gtk-cursor-blink setting.</doc>
        <source-position filename="vte.h" line="368"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13570">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13571">the #VteTerminalCursorBlinkMode to use</doc>
            <type name="TerminalCursorBlinkMode"
                  c:type="VteTerminalCursorBlinkMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_shape"
              c:identifier="vte_terminal_set_cursor_shape"
              glib:set-property="cursor-shape"
              version="0.20">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13629">Sets the shape of the cursor drawn.</doc>
        <source-position filename="vte.h" line="373"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13631">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="shape" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13632">the #VteTerminalCursorShape to use</doc>
            <type name="TerminalCursorShape" c:type="VteTerminalCursorShape"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_colors"
              c:identifier="vte_terminal_set_default_colors">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3090">Reset the terminal palette to reasonable compiled-in default color.</doc>
        <source-position filename="vte.h" line="353"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3092">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_delete_binding"
              c:identifier="vte_terminal_set_delete_binding"
              glib:set-property="delete-binding">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13876">Modifies the terminal's delete key binding, which controls what
string or control sequence the terminal sends to its child when the user
presses the delete key.</doc>
        <source-position filename="vte.h" line="404"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13878">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="binding" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13879">a #VteTerminalEraseBinding for the delete key</doc>
            <type name="TerminalEraseBinding"
                  c:type="VteTerminalEraseBinding"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_emulation"
              c:identifier="vte_terminal_set_emulation"
              glib:set-property="emulation">
        <doc xml:space="preserve"
             filename="vte.c"
             line="8130">Sets what type of terminal the widget attempts to emulate by scanning for
control sequences defined in the system's termcap file.  Unless you
are interested in this feature, always use "xterm".</doc>
        <source-position filename="vte.h" line="472"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="8132">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="emulation"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="8133">the name of a terminal description, or %NULL to use the default</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_encoding"
              c:identifier="vte_terminal_set_encoding"
              glib:set-property="encoding">
        <doc xml:space="preserve"
             filename="vte.c"
             line="2240">Changes the encoding the terminal will expect data from the child to
be encoded with.  For certain terminal types, applications executing in the
terminal can change the encoding.  The default encoding is defined by the
application's locale settings.</doc>
        <source-position filename="vte.h" line="477"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2242">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="codeset"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="2243">a valid #GIConv target, or %NULL to use the default encoding</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font" c:identifier="vte_terminal_set_font">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7873">Sets the font used for rendering all text displayed by the terminal,
overriding any fonts set using gtk_widget_modify_font().  The terminal
will immediately attempt to load the desired font, retrieve its
metrics, and attempt to resize itself to keep the same number of rows
and columns.</doc>
        <source-position filename="vte.h" line="385"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7875">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="font_desc"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7876">a #PangoFontDescription for the desired font, or %NULL</doc>
            <type name="Pango.FontDescription"
                  c:type="const PangoFontDescription*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font_from_string"
              c:identifier="vte_terminal_set_font_from_string">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7927">A convenience function which converts @name into a #PangoFontDescription and
passes it to vte_terminal_set_font().</doc>
        <source-position filename="vte.h" line="387"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7929">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7930">a pango font description in string form</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mouse_autohide"
              c:identifier="vte_terminal_set_mouse_autohide">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13903">Changes the value of the terminal's mouse autohide setting.  When autohiding
is enabled, the mouse cursor will be hidden when the user presses a key and
shown when the user moves the mouse.  This setting can be read using
vte_terminal_get_mouse_autohide().</doc>
        <source-position filename="vte.h" line="408"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13905">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13906">whether the mouse pointer should autohide</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_opacity" c:identifier="vte_terminal_set_opacity">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3065">Sets the opacity of the terminal background, were 0 means completely
transparent and 65535 means completely opaque.</doc>
        <source-position filename="vte.h" line="365"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3067">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3068">the new opacity</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pty_object"
              c:identifier="vte_terminal_set_pty_object"
              glib:set-property="pty-object"
              version="0.26.">
        <doc xml:space="preserve"
             filename="vte.c"
             line="14324">Sets @pty as the PTY to use in @terminal.
Use %NULL to unset the PTY.</doc>
        <source-position filename="vte.h" line="483"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14326">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="pty"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="14327">a #VtePty, or %NULL</doc>
            <type name="Pty" c:type="VtePty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_background"
              c:identifier="vte_terminal_set_scroll_background"
              glib:set-property="scroll-background"
              version="0.11">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12992">Controls whether or not the terminal will scroll the background image (if
one is set) when the text in the window must be scrolled.</doc>
        <source-position filename="vte.h" line="309"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12994">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="scroll" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12995">whether the terminal should scroll the background image along with
  the text</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_on_keystroke"
              c:identifier="vte_terminal_set_scroll_on_keystroke"
              glib:set-property="scroll-on-keystroke">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13038">Controls whether or not the terminal will forcibly scroll to the bottom of
the viewable history when the user presses a key.  Modifier keys do not
trigger this behavior.</doc>
        <source-position filename="vte.h" line="311"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13040">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="scroll" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13041">whether the terminal should scroll on keystrokes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_on_output"
              c:identifier="vte_terminal_set_scroll_on_output"
              glib:set-property="scroll-on-output">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13023">Controls whether or not the terminal will forcibly scroll to the bottom of
the viewable history when the new data is received from the child.</doc>
        <source-position filename="vte.h" line="310"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13025">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="scroll" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13026">whether the terminal should scroll on output</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scrollback_lines"
              c:identifier="vte_terminal_set_scrollback_lines"
              glib:set-property="scrollback-lines">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13673">Sets the length of the scrollback buffer used by the terminal.  The size of
the scrollback buffer will be set to the larger of this value and the number
of visible rows the widget can display, so 0 can safely be used to disable
scrollback.

A negative value means "infinite scrollback".

Note that this setting only affects the normal screen buffer.
For terminal types which have an alternate screen buffer, no scrollback is
allowed on the alternate screen buffer.</doc>
        <source-position filename="vte.h" line="378"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13675">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="lines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13676">the length of the history buffer</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="vte_terminal_set_size">
        <doc xml:space="preserve"
             filename="vte.c"
             line="7981">Attempts to change the terminal's size in terms of rows and columns.  If
the attempt succeeds, the widget will resize itself to the proper size.</doc>
        <source-position filename="vte.h" line="301"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7983">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7984">the desired number of columns</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="7985">the desired number of rows</doc>
            <type name="glong" c:type="glong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_bell"
              c:identifier="vte_terminal_set_visible_bell"
              glib:set-property="visible-bell">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12902">Controls whether or not the terminal will present a visible bell to the
user when the child outputs the "bl" sequence.  The terminal
will clear itself to the default foreground color and then repaint itself.</doc>
        <source-position filename="vte.h" line="307"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12904">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="is_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12905">whether the terminal should flash on bell</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_word_chars"
              c:identifier="vte_terminal_set_word_chars"
              glib:set-property="word-chars">
        <doc xml:space="preserve"
             filename="vte.c"
             line="13755">When the user double-clicks to start selection, the terminal will extend
the selection on word boundaries.  It will treat characters included in @spec
as parts of words, and all other characters as word separators.  Ranges of
characters can be specified by separating them with a hyphen.

As a special case, if @spec is %NULL or the empty string, the terminal will
treat all graphic non-punctuation non-space characters as word characters.</doc>
        <source-position filename="vte.h" line="398"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13757">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="spec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="13758">a specification</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="watch_child"
              c:identifier="vte_terminal_watch_child"
              version="0.26">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3608">Watches @child_pid. When the process exists, the #VteReaper::child-exited
signal will be called. Use vte_terminal_get_child_exit_status() to
retrieve the child's exit status.

Prior to calling this function, a #VtePty must have been set in @terminal
using vte_terminal_set_pty_object().
When the child exits, the terminal's #VtePty will be set to %NULL.

Note: g_child_watch_add() or g_child_watch_add_full() must not have
been called for @child_pid, nor a #GSource for it been created with
g_child_watch_source_new().

Note: when using the g_spawn_async() family of functions,
the %G_SPAWN_DO_NOT_REAP_CHILD flag MUST have been passed.</doc>
        <source-position filename="vte.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3610">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="child_pid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="3611">a #GPid</doc>
            <type name="GLib.Pid" c:type="GPid"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_contents"
              c:identifier="vte_terminal_write_contents"
              version="0.24"
              throws="1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="15081">Write contents of the current contents of @terminal (including any
scrollback history) to @stream according to @flags.

If @cancellable is not %NULL, then the operation can be cancelled by triggering
the cancellable object from another thread. If the operation was cancelled,
the error %G_IO_ERROR_CANCELLED will be returned in @error.

This is a synchronous operation and will make the widget (and input
processing) during the write operation, which may take a long time
depending on scrollback history and @stream availability for writing.</doc>
        <source-position filename="vte.h" line="516"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="vte.c"
               line="15100">%TRUE on success, %FALSE if there was an error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="terminal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15083">a #VteTerminal</doc>
            <type name="Terminal" c:type="VteTerminal*"/>
          </instance-parameter>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15084">a #GOutputStream to write to</doc>
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15085">a set of #VteTerminalWriteFlags</doc>
            <type name="TerminalWriteFlags" c:type="VteTerminalWriteFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="15086">a #GCancellable object, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-bold"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_allow_bold"
                getter="get_allow_bold"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12380">Controls whether or not the terminal will attempt to draw bold text.
This may happen either by using a bold font variant, or by
repainting text with a different offset.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="audible-bell"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_audible_bell"
                getter="get_audible_bell"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12396">Controls whether or not the terminal will beep when the child outputs the
"bl" sequence.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="background-image-file"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_background_image_file"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12411">Sets a background image file for the widget.  If specified by
#VteTerminal:background-saturation:, the terminal will tint its
in-memory copy of the image before applying it to the terminal.</doc>
        <type name="filename" c:type="gchar*"/>
      </property>
      <property name="background-image-pixbuf"
                version="0.20"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12427">Sets a background image for the widget.  Text which would otherwise be
drawn using the default background color will instead be drawn over the
specified image.  If necessary, the image will be tiled to cover the
widget's entire visible area. If specified by
#VteTerminal:background-saturation:, the terminal will tint its
in-memory copy of the image before applying it to the terminal.</doc>
        <type name="GdkPixbuf.Pixbuf"/>
      </property>
      <property name="background-opacity"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                default-value="1.000000">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12446">Sets the opacity of the terminal background, were 0.0 means completely
transparent and 1.0 means completely opaque.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="background-saturation"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_background_saturation"
                default-value="0.400000">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12462">If a background image has been set using #VteTerminal:background-image-file: or
#VteTerminal:background-image-pixbuf:, or #VteTerminal:background-transparent:,
and the saturation value is less
than 1.0, the terminal will adjust the colors of the image before drawing
the image.  To do so, the terminal will create a copy of the background
image (or snapshot of the root window) and modify its pixel values.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="background-tint-color"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_background_tint_color">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12482">If a background image has been set using #VteTerminal:background-image-file: or
#VteTerminal:background-image-pixbuf:, or #VteTerminal:background-transparent:, and
and the value set by VteTerminal:background-saturation: is less than 1.0,
the terminal
will adjust the color of the image before drawing the image.  To do so,
the terminal will create a copy of the background image (or snapshot of
the root window) and modify its pixel values.  The initial tint color
is black.</doc>
        <type name="Gdk.Color"/>
      </property>
      <property name="background-transparent"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_background_transparent"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12503">Sets whther the terminal uses the pixmap stored in the root
window as the background, adjusted so that if there are no windows
below your application, the widget will appear to be transparent.

Note: When using a compositing window manager, you should instead
set a RGBA colourmap on the toplevel window, so you get real transparency.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="backspace-binding"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_backspace_binding"
                default-value="VTE_ERASE_AUTO">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12522">*Controls what string or control sequence the terminal sends to its child
when the user presses the backspace key.</doc>
        <type name="TerminalEraseBinding"/>
      </property>
      <property name="cursor-blink-mode"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_cursor_blink_mode"
                getter="get_cursor_blink_mode"
                default-value="VTE_CURSOR_BLINK_SYSTEM">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12538">Sets whether or not the cursor will blink. Using %VTE_CURSOR_BLINK_SYSTEM
will use the #GtkSettings::gtk-cursor-blink setting.</doc>
        <type name="TerminalCursorBlinkMode"/>
      </property>
      <property name="cursor-shape"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_cursor_shape"
                getter="get_cursor_shape"
                default-value="VTE_CURSOR_SHAPE_BLOCK">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12554">Controls the shape of the cursor.</doc>
        <type name="TerminalCursorShape"/>
      </property>
      <property name="delete-binding"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_delete_binding"
                default-value="VTE_ERASE_AUTO">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12569">Controls what string or control sequence the terminal sends to its child
when the user presses the delete key.</doc>
        <type name="TerminalEraseBinding"/>
      </property>
      <property name="emulation"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_emulation"
                getter="get_emulation"
                default-value="xterm">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12585">Sets what type of terminal the widget attempts to emulate by scanning for
control sequences defined in the system's termcap file.  Unless you
are interested in this feature, always use the default which is "xterm".</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="encoding"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_encoding"
                getter="get_encoding"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12601">Controls the encoding the terminal will expect data from the child to
be encoded with.  For certain terminal types, applications executing in the
terminal can change the encoding.  The default is defined by the
application's locale settings.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="font-desc"
                version="0.20"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12618">Specifies the font used for rendering all text displayed by the terminal,
overriding any fonts set using gtk_widget_modify_font().  The terminal
will immediately attempt to load the desired font, retrieve its
metrics, and attempt to resize itself to keep the same number of rows
and columns.</doc>
        <type name="Pango.FontDescription"/>
      </property>
      <property name="icon-title"
                version="0.20"
                transfer-ownership="none"
                getter="get_icon_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12636">The terminal's so-called icon title, or %NULL if no icon title has been set.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="pointer-autohide"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12650">Controls the value of the terminal's mouse autohide setting.  When autohiding
is enabled, the mouse cursor will be hidden when the user presses a key and
shown when the user moves the mouse.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pty"
                version="0.20"
                deprecated="1"
                deprecated-version="0.26"
                writable="1"
                transfer-ownership="none"
                default-value="-1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12666">The file descriptor of the master end of the terminal's PTY.</doc>
        <doc-deprecated xml:space="preserve">Use the #VteTerminal:pty-object property instead</doc-deprecated>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="pty-object"
                version="0.26"
                writable="1"
                transfer-ownership="none"
                setter="set_pty_object"
                getter="get_pty_object">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12683">The PTY object for the terminal.</doc>
        <type name="Pty"/>
      </property>
      <property name="scroll-background"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_scroll_background"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12698">Controls whether or not the terminal will scroll the background image (if
one is set) when the text in the window must be scrolled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="scroll-on-keystroke"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_scroll_on_keystroke"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12733">Controls whether or not the terminal will forcibly scroll to the bottom of
the viewable history when the user presses a key.  Modifier keys do not
trigger this behavior.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="scroll-on-output"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_scroll_on_output"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12749">Controls whether or not the terminal will forcibly scroll to the bottom of
the viewable history when the new data is received from the child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="scrollback-lines"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_scrollback_lines"
                default-value="100">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12713">The length of the scrollback buffer used by the terminal.  The size of
the scrollback buffer will be set to the larger of this value and the number
of visible rows the widget can display, so 0 can safely be used to disable
scrollback.  Note that this setting only affects the normal screen buffer.
For terminal types which have an alternate screen buffer, no scrollback is
allowed on the alternate screen buffer.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="visible-bell"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_visible_bell"
                getter="get_visible_bell"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12798">Controls whether the terminal will present a visible bell to the
user when the child outputs the "bl" sequence.  The terminal
will clear itself to the default foreground color and then repaint itself.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="window-title"
                version="0.20"
                transfer-ownership="none"
                getter="get_window_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12764">The terminal's title.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="word-chars"
                version="0.20"
                writable="1"
                transfer-ownership="none"
                setter="set_word_chars"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12778">When the user double-clicks to start selection, the terminal will extend
the selection on word boundaries.  It will treat characters the word-chars
characters as parts of words, and all other characters as word separators.
Ranges of characters can be specified by separating them with a hyphen.

As a special case, when setting this to %NULL or the empty string, the terminal will
treat all graphic non-punctuation non-space characters as word characters.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="widget">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <field name="adjustment" readable="0" private="1">
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </field>
      <field name="char_width" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="char_height" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="char_ascent" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="char_descent" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="row_count" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="column_count" readable="0" private="1">
        <type name="glong" c:type="glong"/>
      </field>
      <field name="window_title" readable="0" private="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="icon_title" readable="0" private="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="pvt" readable="0" private="1">
        <type name="TerminalPrivate" c:type="VteTerminalPrivate*"/>
      </field>
      <glib:signal name="beep" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12364">This signal is emitted when the a child sends a beep request to the
terminal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="char-size-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11991">Emitted whenever selection of a new font causes the values of the
%char_width or %char_height fields to change.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11994">the new character cell width</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11995">the new character cell height</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-exited" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11887">This signal is emitted when the terminal detects that a child started
using vte_terminal_fork_command() has exited.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="commit" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11954">Emitted whenever the terminal receives input from the user and
prepares to send it to the child process.  The signal is emitted even
when there is no child process.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11957">a string of text</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11958">the length of that string of text</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="contents-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12026">Emitted whenever the visible appearance of the terminal has changed.
Used primarily by #VteTerminalAccessible.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="copy-clipboard" when="last" action="1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12332">Emitted whenever vte_terminal_copy_clipboard() is called.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="cursor-moved" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12043">Emitted whenever the cursor moves to a new character cell.  Used
primarily by #VteTerminalAccessible.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="decrease-font-size" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12241">Emitted when the user hits the '-' key while holding the Control key.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="deiconify-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12060">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="emulation-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11974">Emitted whenever the terminal's emulation changes, only possible at
the parent application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="encoding-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11936">Emitted whenever the terminal's current encoding has changed, either
as a result of receiving a control sequence which toggled between the
local and UTF-8 encodings, or at the parent application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="eof" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11869">Emitted when the terminal receives an end-of-file from a child which
is running in the terminal.  This signal is frequently (but not
always) emitted with a #VteTerminal::child-exited signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="icon-title-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11920">Emitted when the terminal's %icon_title field is modified.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="iconify-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12076">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="increase-font-size" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12225">Emitted when the user hits the '+' key while holding the Control key.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="lower-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12108">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="maximize-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12156">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="move-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12190">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12193">the terminal's desired location, X coordinate</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12194">the terminal's desired location, Y coordinate</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="paste-clipboard" when="last" action="1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12348">Emitted whenever vte_terminal_paste_clipboard() is called.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="raise-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12092">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="refresh-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12124">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="resize-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12172">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12175">the desired width in pixels, including padding</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12176">the desired height in pixels, including padding</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="restore-window" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12140">Emitted at the child application's request.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="selection-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12010">Emitted whenever the contents of terminal's selection changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="set-scroll-adjustments" when="last" version="0.17.1">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11837">Set the scroll adjustments for the terminal. Usually scrolled containers
like #GtkScrolledWindow will emit this signal to connect two instances
of #GtkScrollbar to the scroll directions of the #VteTerminal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="horizontal"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11840">the horizontal #GtkAdjustment (unused in #VteTerminal)</doc>
            <type name="Gtk.Adjustment"/>
          </parameter>
          <parameter name="vertical"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="11841">the vertical #GtkAdjustment</doc>
            <type name="Gtk.Adjustment"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="status-line-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12208">Emitted whenever the contents of the status line are modified or
cleared.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="text-deleted" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12293">An internal signal used for communication between the terminal and
its accessibility peer. May not be emitted under certain
circumstances.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="text-inserted" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12275">An internal signal used for communication between the terminal and
its accessibility peer. May not be emitted under certain
circumstances.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="text-modified" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12257">An internal signal used for communication between the terminal and
its accessibility peer. May not be emitted under certain
circumstances.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="text-scrolled" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="12311">An internal signal used for communication between the terminal and
its accessibility peer. May not be emitted under certain
circumstances.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="delta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="vte.c"
                 line="12314">the number of lines scrolled</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="window-title-changed" when="last">
        <doc xml:space="preserve"
             filename="vte.c"
             line="11904">Emitted when the terminal's %window_title field is modified.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <enumeration name="TerminalAntiAlias"
                 glib:type-name="VteTerminalAntiAlias"
                 glib:get-type="vte_terminal_anti_alias_get_type"
                 c:type="VteTerminalAntiAlias">
      <member name="use_default"
              value="0"
              c:identifier="VTE_ANTI_ALIAS_USE_DEFAULT"
              glib:nick="use-default"
              glib:name="VTE_ANTI_ALIAS_USE_DEFAULT">
      </member>
      <member name="force_enable"
              value="1"
              c:identifier="VTE_ANTI_ALIAS_FORCE_ENABLE"
              glib:nick="force-enable"
              glib:name="VTE_ANTI_ALIAS_FORCE_ENABLE">
      </member>
      <member name="force_disable"
              value="2"
              c:identifier="VTE_ANTI_ALIAS_FORCE_DISABLE"
              glib:nick="force-disable"
              glib:name="VTE_ANTI_ALIAS_FORCE_DISABLE">
      </member>
    </enumeration>
    <record name="TerminalClass"
            c:type="VteTerminalClass"
            glib:is-gtype-struct-for="Terminal">
      <doc xml:space="preserve"
           filename="vte.h"
           line="84">All of these fields should be considered read-only, except for derived classes.</doc>
      <source-position filename="vte.h" line="185"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="eof">
        <callback name="eof">
          <source-position filename="vte.h" line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_exited">
        <callback name="child_exited">
          <source-position filename="vte.h" line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="emulation_changed">
        <callback name="emulation_changed">
          <source-position filename="vte.h" line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="encoding_changed">
        <callback name="encoding_changed">
          <source-position filename="vte.h" line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="char_size_changed">
        <callback name="char_size_changed">
          <source-position filename="vte.h" line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
            <parameter name="char_width" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="char_height" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="window_title_changed">
        <callback name="window_title_changed">
          <source-position filename="vte.h" line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="icon_title_changed">
        <callback name="icon_title_changed">
          <source-position filename="vte.h" line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="vte.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="contents_changed">
        <callback name="contents_changed">
          <source-position filename="vte.h" line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cursor_moved">
        <callback name="cursor_moved">
          <source-position filename="vte.h" line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="status_line_changed">
        <callback name="status_line_changed">
          <source-position filename="vte.h" line="106"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="commit">
        <callback name="commit">
          <source-position filename="vte.h" line="107"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deiconify_window">
        <callback name="deiconify_window">
          <source-position filename="vte.h" line="109"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="iconify_window">
        <callback name="iconify_window">
          <source-position filename="vte.h" line="110"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="raise_window">
        <callback name="raise_window">
          <source-position filename="vte.h" line="111"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lower_window">
        <callback name="lower_window">
          <source-position filename="vte.h" line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refresh_window">
        <callback name="refresh_window">
          <source-position filename="vte.h" line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="restore_window">
        <callback name="restore_window">
          <source-position filename="vte.h" line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="maximize_window">
        <callback name="maximize_window">
          <source-position filename="vte.h" line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="resize_window">
        <callback name="resize_window">
          <source-position filename="vte.h" line="116"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_window">
        <callback name="move_window">
          <source-position filename="vte.h" line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="increase_font_size">
        <callback name="increase_font_size">
          <source-position filename="vte.h" line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="decrease_font_size">
        <callback name="decrease_font_size">
          <source-position filename="vte.h" line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_modified">
        <callback name="text_modified">
          <source-position filename="vte.h" line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_inserted">
        <callback name="text_inserted">
          <source-position filename="vte.h" line="123"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_deleted">
        <callback name="text_deleted">
          <source-position filename="vte.h" line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="text_scrolled">
        <callback name="text_scrolled">
          <source-position filename="vte.h" line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
            <parameter name="delta" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_clipboard">
        <callback name="copy_clipboard">
          <source-position filename="vte.h" line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="vte.c"
                   line="13079">a #VteTerminal</doc>
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paste_clipboard">
        <callback name="paste_clipboard">
          <source-position filename="vte.h" line="127"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="vte.c"
                   line="13100">a #VteTerminal</doc>
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_scroll_adjustments">
        <callback name="set_scroll_adjustments">
          <source-position filename="vte.h" line="130"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="widget" transfer-ownership="none">
              <type name="Gtk.Widget" c:type="GtkWidget*"/>
            </parameter>
            <parameter name="hadjustment" transfer-ownership="none">
              <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
            </parameter>
            <parameter name="vadjustment" transfer-ownership="none">
              <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="beep">
        <callback name="beep">
          <source-position filename="vte.h" line="135"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="terminal" transfer-ownership="none">
              <type name="Terminal" c:type="VteTerminal*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="vte_reserved3">
        <callback name="vte_reserved3">
          <source-position filename="vte.h" line="142"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="vte_reserved4">
        <callback name="vte_reserved4">
          <source-position filename="vte.h" line="143"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="eof_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="child_exited_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="emulation_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="encoding_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="char_size_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="window_title_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="icon_title_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="selection_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="contents_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="cursor_moved_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="status_line_changed_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="commit_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="deiconify_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="iconify_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="raise_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="lower_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="refresh_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="restore_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="maximize_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="resize_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="move_window_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="increase_font_size_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="decrease_font_size_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="text_modified_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="text_inserted_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="text_deleted_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="text_scrolled_signal" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved1" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved2" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved3" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved4" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved5" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="reserved6" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="TerminalClassPrivate"
            c:type="VteTerminalClassPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="vte.h" line="59"/>
    </record>
    <enumeration name="TerminalCursorBlinkMode"
                 glib:type-name="VteTerminalCursorBlinkMode"
                 glib:get-type="vte_terminal_cursor_blink_mode_get_type"
                 c:type="VteTerminalCursorBlinkMode">
      <doc xml:space="preserve"
           filename="vte.h"
           line="207">An enumerated type which can be used to indicate the cursor blink mode
for the terminal.</doc>
      <member name="system"
              value="0"
              c:identifier="VTE_CURSOR_BLINK_SYSTEM"
              glib:nick="system"
              glib:name="VTE_CURSOR_BLINK_SYSTEM">
        <doc xml:space="preserve"
             filename="vte.h"
             line="209">Follow GTK+ settings for cursor blinking.</doc>
      </member>
      <member name="on"
              value="1"
              c:identifier="VTE_CURSOR_BLINK_ON"
              glib:nick="on"
              glib:name="VTE_CURSOR_BLINK_ON">
        <doc xml:space="preserve"
             filename="vte.h"
             line="210">Cursor blinks.</doc>
      </member>
      <member name="off"
              value="2"
              c:identifier="VTE_CURSOR_BLINK_OFF"
              glib:nick="off"
              glib:name="VTE_CURSOR_BLINK_OFF">
        <doc xml:space="preserve"
             filename="vte.h"
             line="211">Cursor does not blink.</doc>
      </member>
    </enumeration>
    <enumeration name="TerminalCursorShape"
                 glib:type-name="VteTerminalCursorShape"
                 glib:get-type="vte_terminal_cursor_shape_get_type"
                 c:type="VteTerminalCursorShape">
      <doc xml:space="preserve"
           filename="vte.h"
           line="222">An enumerated type which can be used to indicate what should the terminal
draw at the cursor position.</doc>
      <member name="block"
              value="0"
              c:identifier="VTE_CURSOR_SHAPE_BLOCK"
              glib:nick="block"
              glib:name="VTE_CURSOR_SHAPE_BLOCK">
        <doc xml:space="preserve"
             filename="vte.h"
             line="224">Draw a block cursor.  This is the default.</doc>
      </member>
      <member name="ibeam"
              value="1"
              c:identifier="VTE_CURSOR_SHAPE_IBEAM"
              glib:nick="ibeam"
              glib:name="VTE_CURSOR_SHAPE_IBEAM">
        <doc xml:space="preserve"
             filename="vte.h"
             line="225">Draw a vertical bar on the left side of character.
This is similar to the default cursor for other GTK+ widgets.</doc>
      </member>
      <member name="underline"
              value="2"
              c:identifier="VTE_CURSOR_SHAPE_UNDERLINE"
              glib:nick="underline"
              glib:name="VTE_CURSOR_SHAPE_UNDERLINE">
        <doc xml:space="preserve"
             filename="vte.h"
             line="227">Draw a horizontal bar below the character.</doc>
      </member>
    </enumeration>
    <enumeration name="TerminalEraseBinding"
                 glib:type-name="VteTerminalEraseBinding"
                 glib:get-type="vte_terminal_erase_binding_get_type"
                 c:type="VteTerminalEraseBinding">
      <doc xml:space="preserve"
           filename="vte.h"
           line="187">An enumerated type which can be used to indicate which string the terminal
should send to an application when the user presses the Delete or Backspace
keys.</doc>
      <member name="auto"
              value="0"
              c:identifier="VTE_ERASE_AUTO"
              glib:nick="auto"
              glib:name="VTE_ERASE_AUTO">
        <doc xml:space="preserve"
             filename="vte.h"
             line="189">For backspace, attempt to determine the right value from the terminal's IO settings.  For delete, use the control sequence.</doc>
      </member>
      <member name="ascii_backspace"
              value="1"
              c:identifier="VTE_ERASE_ASCII_BACKSPACE"
              glib:nick="ascii-backspace"
              glib:name="VTE_ERASE_ASCII_BACKSPACE">
        <doc xml:space="preserve"
             filename="vte.h"
             line="190">Send an ASCII backspace character (0x08).</doc>
      </member>
      <member name="ascii_delete"
              value="2"
              c:identifier="VTE_ERASE_ASCII_DELETE"
              glib:nick="ascii-delete"
              glib:name="VTE_ERASE_ASCII_DELETE">
        <doc xml:space="preserve"
             filename="vte.h"
             line="191">Send an ASCII delete character (0x7F).</doc>
      </member>
      <member name="delete_sequence"
              value="3"
              c:identifier="VTE_ERASE_DELETE_SEQUENCE"
              glib:nick="delete-sequence"
              glib:name="VTE_ERASE_DELETE_SEQUENCE">
        <doc xml:space="preserve"
             filename="vte.h"
             line="192">Send the "@@7" control sequence.</doc>
      </member>
      <member name="tty"
              value="4"
              c:identifier="VTE_ERASE_TTY"
              glib:nick="tty"
              glib:name="VTE_ERASE_TTY">
        <doc xml:space="preserve"
             filename="vte.h"
             line="193">Send terminal's "erase" setting.</doc>
      </member>
    </enumeration>
    <record name="TerminalPrivate"
            c:type="VteTerminalPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="vte.h" line="57"/>
    </record>
    <enumeration name="TerminalWriteFlags"
                 glib:type-name="VteTerminalWriteFlags"
                 glib:get-type="vte_terminal_write_flags_get_type"
                 c:type="VteTerminalWriteFlags">
      <doc xml:space="preserve"
           filename="vte.h"
           line="505">A flag type to determine how terminal contents should be written
to an output stream.</doc>
      <member name="default"
              value="0"
              c:identifier="VTE_TERMINAL_WRITE_DEFAULT"
              glib:nick="default"
              glib:name="VTE_TERMINAL_WRITE_DEFAULT">
        <doc xml:space="preserve"
             filename="vte.h"
             line="507">Write contents as UTF-8 text.  This is the default.</doc>
      </member>
    </enumeration>
    <function name="get_user_shell"
              c:identifier="vte_get_user_shell"
              version="0.28">
      <doc xml:space="preserve"
           filename="vte.c"
           line="3677">Gets the user's shell, or %NULL. In the latter case, the
system default (usually "/bin/sh") should be used.</doc>
      <source-position filename="vte.h" line="486"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="vte.c"
             line="3683">a newly allocated string with the
  user's shell, or %NULL</doc>
        <type name="filename" c:type="char*"/>
      </return-value>
    </function>
    <function name="pty_error_quark"
              c:identifier="vte_pty_error_quark"
              moved-to="PtyError.quark"
              version="0.26">
      <doc xml:space="preserve"
           filename="pty.c"
           line="1701">Error domain for VTE PTY errors. Errors in this domain will be from the #VtePtyError
enumeration. See #GError for more information on error domains.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="pty.c"
             line="1707">the error domain for VTE PTY errors</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="vte-pty">
      <doc xml:space="preserve"
           filename="pty.c"
           line="20">The terminal widget uses these functions to start commands with new controlling
pseudo-terminals and to resize pseudo-terminals.</doc>
    </docsection>
    <docsection name="vte-terminal">
      <doc xml:space="preserve"
           filename="vte.c"
           line="20">A VteTerminal is a terminal emulator implemented as a GTK2 widget.</doc>
    </docsection>
  </namespace>
</repository>
