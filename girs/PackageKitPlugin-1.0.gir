<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="PackageKitGlib" version="1.0"/>
  <c:include name="plugin/packagekit-plugin.h"/>
  <namespace name="PackageKitPlugin"
             version="1.0"
             shared-library=""
             c:identifier-prefixes="Pk"
             c:symbol-prefixes="pk">
    <constant name="BACKEND_PERCENTAGE_INVALID"
              value="101"
              c:type="PK_BACKEND_PERCENTAGE_INVALID">
      <doc xml:space="preserve">The unknown percentage value</doc>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Backend"
           c:symbol-prefix="backend"
           c:type="PkBackend"
           parent="GObject.Object"
           glib:type-name="PkBackend"
           glib:get-type="pk_backend_get_type"
           glib:type-struct="BackendClass">
      <constructor name="new" c:identifier="pk_backend_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A new backend class backend.</doc>
          <type name="Backend" c:type="PkBackend*"/>
        </return-value>
        <parameters>
          <parameter name="conf" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="bool_to_string" c:identifier="pk_backend_bool_to_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <function name="initialize" c:identifier="pk_backend_initialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="conf" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </parameter>
        </parameters>
      </function>
      <method name="accept_eula" c:identifier="pk_backend_accept_eula">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="eula_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel" c:identifier="pk_backend_cancel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="depends_on" c:identifier="pk_backend_depends_on">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="recursive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="pk_backend_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="download_packages"
              c:identifier="pk_backend_download_packages">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="directory" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_accepted_eula_string"
              c:identifier="pk_backend_get_accepted_eula_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_author" c:identifier="pk_backend_get_author">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories" c:identifier="pk_backend_get_categories">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description" c:identifier="pk_backend_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_details" c:identifier="pk_backend_get_details">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_details_local"
              c:identifier="pk_backend_get_details_local">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_distro_upgrades"
              c:identifier="pk_backend_get_distro_upgrades">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_files" c:identifier="pk_backend_get_files">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_files_local" c:identifier="pk_backend_get_files_local">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_filters" c:identifier="pk_backend_get_filters">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_groups" c:identifier="pk_backend_get_groups">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_types" c:identifier="pk_backend_get_mime_types">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="pk_backend_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packages" c:identifier="pk_backend_get_packages">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_repo_list" c:identifier="pk_backend_get_repo_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_roles" c:identifier="pk_backend_get_roles">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_detail"
              c:identifier="pk_backend_get_update_detail">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_updates" c:identifier="pk_backend_get_updates">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
        </parameters>
      </method>
      <method name="implement" c:identifier="pk_backend_implement">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <type name="PackageKitGlib.RoleEnum" c:type="PkRoleEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_files" c:identifier="pk_backend_install_files">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="full_paths" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_packages"
              c:identifier="pk_backend_install_packages">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_signature"
              c:identifier="pk_backend_install_signature">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="PackageKitGlib.SigTypeEnum" c:type="PkSigTypeEnum"/>
          </parameter>
          <parameter name="key_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_eula_valid" c:identifier="pk_backend_is_eula_valid">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="eula_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_implemented" c:identifier="pk_backend_is_implemented">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <type name="PackageKitGlib.RoleEnum" c:type="PkRoleEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_online" c:identifier="pk_backend_is_online">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="pk_backend_load" throws="1">
        <doc xml:space="preserve">Responsible for initialising the external backend object.

Typically this will involve taking database locks for exclusive package access.
This method should only be called from the engine, unless the backend object
is used in self-check code, in which case the lock and unlock will have to
be done manually.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="refresh_cache" c:identifier="pk_backend_refresh_cache">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="force" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_packages" c:identifier="pk_backend_remove_packages">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="allow_deps" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="autoremove" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="repair_system" c:identifier="pk_backend_repair_system">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
        </parameters>
      </method>
      <method name="repo_enable" c:identifier="pk_backend_repo_enable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="repo_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="repo_list_changed"
              c:identifier="pk_backend_repo_list_changed">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="repo_remove" c:identifier="pk_backend_repo_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="repo_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="autoremove" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="repo_set_data" c:identifier="pk_backend_repo_set_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="repo_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parameter" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="required_by" c:identifier="pk_backend_required_by">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="recursive" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_job" c:identifier="pk_backend_reset_job">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="resolve" c:identifier="pk_backend_resolve">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="packages" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_details" c:identifier="pk_backend_search_details">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_files" c:identifier="pk_backend_search_files">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_groups" c:identifier="pk_backend_search_groups">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_names" c:identifier="pk_backend_search_names">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_job" c:identifier="pk_backend_start_job">
        <doc xml:space="preserve">This is called just before the threaded transaction method, and in
the newly created thread context. e.g.

&gt;&gt;&gt; desc-&gt;job_start(backend)
    (locked backend)
&gt;&gt;&gt; desc-&gt;backend_method_we_want_to_run(backend)
&lt;&lt;&lt; ::Package(PK_INFO_ENUM_INSTALLING,"hal;0.1.1;i386;fedora","Hardware Stuff")
&gt;&gt;&gt; desc-&gt;job_stop(backend)
    (unlocked backend)
&lt;&lt;&lt; ::Finished()

or in the case of backend_method_we_want_to_run() failure:
&gt;&gt;&gt; desc-&gt;job_start(backend)
    (locked backend)
&gt;&gt;&gt; desc-&gt;backend_method_we_want_to_run(backend)
&lt;&lt;&lt; ::ErrorCode(PK_ERROR_ENUM_FAILED_TO_FIND,"no package")
&gt;&gt;&gt; desc-&gt;job_stop(backend)
    (unlocked backend)
&lt;&lt;&lt; ::Finished()

or in the case of job_start() failure:
&gt;&gt;&gt; desc-&gt;job_start(backend)
    (failed to lock backend)
&lt;&lt;&lt; ::ErrorCode(PK_ERROR_ENUM_FAILED_TO_LOCK,"no pid file")
&gt;&gt;&gt; desc-&gt;job_stop(backend)
&lt;&lt;&lt; ::Finished()

It is *not* called for non-threaded backends, as multiple processes
would be inherently racy.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_job" c:identifier="pk_backend_stop_job">
        <doc xml:space="preserve">Always run for each transaction, *even* when the job_start()
vfunc fails.

This method has no return value as the ErrorCode should have already
been set.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_parallelization"
              c:identifier="pk_backend_supports_parallelization">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thread_start" c:identifier="pk_backend_thread_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="func" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="thread_stop" c:identifier="pk_backend_thread_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="func" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unload" c:identifier="pk_backend_unload">
        <doc xml:space="preserve">Responsible for finalising the external backend object.

Typically this will involve releasing database locks for any other access.
This method should only be called from the engine, unless the backend object
is used in self-check code, in which case it will have to be done manually.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_packages" c:identifier="pk_backend_update_packages">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="watch_file" c:identifier="pk_backend_watch_file">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="BackendFileChanged" c:type="PkBackendFileChanged"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="what_provides" c:identifier="pk_backend_what_provides">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
          <parameter name="filters" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
          <parameter name="search" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BackendPrivate" c:type="PkBackendPrivate*"/>
      </field>
    </class>
    <record name="BackendClass"
            c:type="PkBackendClass"
            glib:is-gtype-struct-for="Backend">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="BackendFileChanged" c:type="PkBackendFileChanged">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="backend" transfer-ownership="none">
          <type name="Backend" c:type="PkBackend*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="BackendJob"
           c:symbol-prefix="backend_job"
           c:type="PkBackendJob"
           parent="GObject.Object"
           glib:type-name="PkBackendJob"
           glib:get-type="pk_backend_job_get_type"
           glib:type-struct="BackendJobClass">
      <constructor name="new" c:identifier="pk_backend_job_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A new job class instance.</doc>
          <type name="BackendJob" c:type="PkBackendJob*"/>
        </return-value>
        <parameters>
          <parameter name="conf" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="category" c:identifier="pk_backend_job_category">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="parent_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cat_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="summary" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="details" c:identifier="pk_backend_job_details">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="summary" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="license" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="PackageKitGlib.GroupEnum" c:type="PkGroupEnum"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="distro_upgrade"
              c:identifier="pk_backend_job_distro_upgrade">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="PackageKitGlib.DistroUpgradeEnum"
                  c:type="PkDistroUpgradeEnum"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="summary" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="error_code"
              c:identifier="pk_backend_job_error_code"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="PackageKitGlib.ErrorEnum" c:type="PkErrorEnum"/>
          </parameter>
          <parameter name="details" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="eula_required" c:identifier="pk_backend_job_eula_required">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="eula_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="vendor_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="license_agreement" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="files" c:identifier="pk_backend_job_files">
        <doc xml:space="preserve">package_id is NULL when we are using this as a calback from DownloadPackages</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="finished" c:identifier="pk_backend_job_finished">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allow_cancel"
              c:identifier="pk_backend_job_get_allow_cancel">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_backend" c:identifier="pk_backend_job_get_backend">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Associated PkBackend instance</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background"
              c:identifier="pk_backend_job_get_background">
        <return-value transfer-ownership="none">
          <type name="HintEnum" c:type="PkHintEnum"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cache_age" c:identifier="pk_backend_job_get_cache_age">
        <doc xml:space="preserve">Gets the maximum cache age in seconds.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the cache age in seconds, or 0 for unset or %G_MAXUINT for 'infinity'</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cmdline" c:identifier="pk_backend_job_get_cmdline">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exit_code" c:identifier="pk_backend_job_get_exit_code">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.ExitEnum" c:type="PkExitEnum"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frontend_socket"
              c:identifier="pk_backend_job_get_frontend_socket">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">session frontend_socket, e.g. /tmp/socket.345</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interactive"
              c:identifier="pk_backend_job_get_interactive">
        <return-value transfer-ownership="none">
          <type name="HintEnum" c:type="PkHintEnum"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_error_set"
              c:identifier="pk_backend_job_get_is_error_set">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_finished"
              c:identifier="pk_backend_job_get_is_finished">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locale" c:identifier="pk_backend_job_get_locale">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">session locale, e.g. en_GB</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locked" c:identifier="pk_backend_job_get_locked">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_no_proxy" c:identifier="pk_backend_job_get_no_proxy">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">comma seporated value of proxy exlude string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pac" c:identifier="pk_backend_job_get_pac">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">proxy PAC filename</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parameters"
              c:identifier="pk_backend_job_get_parameters">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_ftp" c:identifier="pk_backend_job_get_proxy_ftp">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">proxy string in the form username:password@server:port</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_http"
              c:identifier="pk_backend_job_get_proxy_http">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">proxy string in the form username:password@server:port</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_https"
              c:identifier="pk_backend_job_get_proxy_https">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">proxy string in the form username:password@server:port</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_proxy_socks"
              c:identifier="pk_backend_job_get_proxy_socks">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">proxy string in the form username:password@server:port</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_role" c:identifier="pk_backend_job_get_role">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.RoleEnum" c:type="PkRoleEnum"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_runtime" c:identifier="pk_backend_job_get_runtime">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">time running in ms</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_started" c:identifier="pk_backend_job_get_started">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transaction_flags"
              c:identifier="pk_backend_job_get_transaction_flags">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid" c:identifier="pk_backend_job_get_uid">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_data" c:identifier="pk_backend_job_get_user_data">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Job user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vfunc_enabled"
              c:identifier="pk_backend_job_get_vfunc_enabled">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="signal_kind" transfer-ownership="none">
            <type name="BackendJobSignal" c:type="PkBackendJobSignal"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_set_error_code"
              c:identifier="pk_backend_job_has_set_error_code">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="media_change_required"
              c:identifier="pk_backend_job_media_change_required">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="media_type" transfer-ownership="none">
            <type name="PackageKitGlib.MediaTypeEnum"
                  c:type="PkMediaTypeEnum"/>
          </parameter>
          <parameter name="media_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="media_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="not_implemented_yet"
              c:identifier="pk_backend_job_not_implemented_yet">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="package" c:identifier="pk_backend_job_package">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="PackageKitGlib.InfoEnum" c:type="PkInfoEnum"/>
          </parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="summary" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="repo_detail" c:identifier="pk_backend_job_repo_detail">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="repo_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="repo_signature_required"
              c:identifier="pk_backend_job_repo_signature_required">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="repository_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_url" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_userid" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_fingerprint" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_timestamp" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="PackageKitGlib.SigTypeEnum" c:type="PkSigTypeEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="require_restart"
              c:identifier="pk_backend_job_require_restart">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="restart" transfer-ownership="none">
            <type name="PackageKitGlib.RestartEnum" c:type="PkRestartEnum"/>
          </parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="pk_backend_job_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allow_cancel"
              c:identifier="pk_backend_job_set_allow_cancel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="allow_cancel" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_backend" c:identifier="pk_backend_job_set_backend">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background"
              c:identifier="pk_backend_job_set_background">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="background" transfer-ownership="none">
            <type name="HintEnum" c:type="PkHintEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cache_age" c:identifier="pk_backend_job_set_cache_age">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="cache_age" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cmdline" c:identifier="pk_backend_job_set_cmdline">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="cmdline" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_download_size_remaining"
              c:identifier="pk_backend_job_set_download_size_remaining">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="download_size_remaining" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exit_code" c:identifier="pk_backend_job_set_exit_code">
        <doc xml:space="preserve">Should only be used internally, or from PkRunner when setting CANCELLED.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="exit" transfer-ownership="none">
            <type name="PackageKitGlib.ExitEnum" c:type="PkExitEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_frontend_socket"
              c:identifier="pk_backend_job_set_frontend_socket">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="frontend_socket" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interactive"
              c:identifier="pk_backend_job_set_interactive">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="interactive" transfer-ownership="none">
            <type name="HintEnum" c:type="PkHintEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_item_progress"
              c:identifier="pk_backend_job_set_item_progress">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="PackageKitGlib.StatusEnum" c:type="PkStatusEnum"/>
          </parameter>
          <parameter name="percentage" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locale" c:identifier="pk_backend_job_set_locale">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked" c:identifier="pk_backend_job_set_locked">
        <doc xml:space="preserve">Set if your backend job currently locks the cache, so no other tool will
have write  access on it. (read-only transactions will still be permitted)</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parameters"
              c:identifier="pk_backend_job_set_parameters">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_percentage"
              c:identifier="pk_backend_job_set_percentage">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="percentage" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_proxy" c:identifier="pk_backend_job_set_proxy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="proxy_http" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="proxy_https" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="proxy_ftp" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="proxy_socks" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="no_proxy" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="pac" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_role" c:identifier="pk_backend_job_set_role">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <type name="PackageKitGlib.RoleEnum" c:type="PkRoleEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_speed" c:identifier="pk_backend_job_set_speed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="speed" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_started" c:identifier="pk_backend_job_set_started">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="started" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_status" c:identifier="pk_backend_job_set_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="PackageKitGlib.StatusEnum" c:type="PkStatusEnum"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transaction_flags"
              c:identifier="pk_backend_job_set_transaction_flags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="transaction_flags" transfer-ownership="none">
            <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uid" c:identifier="pk_backend_job_set_uid">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="uid" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_data" c:identifier="pk_backend_job_set_user_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vfunc" c:identifier="pk_backend_job_set_vfunc">
        <doc xml:space="preserve">Connect backend</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <doc xml:space="preserve">A valid PkBackendJob</doc>
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="signal_kind" transfer-ownership="none">
            <doc xml:space="preserve">Kind of the backend signal we want to connect</doc>
            <type name="BackendJobSignal" c:type="PkBackendJobSignal"/>
          </parameter>
          <parameter name="vfunc"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve">The function we want to call</doc>
            <type name="BackendJobVFunc" c:type="PkBackendJobVFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:space="preserve">User data we want to pass to the callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="thread_create" c:identifier="pk_backend_job_thread_create">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <type name="BackendJobThreadFunc" c:type="PkBackendJobThreadFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_detail" c:identifier="pk_backend_job_update_detail">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
          <parameter name="package_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="updates" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="obsoletes" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="vendor_urls" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="bugzilla_urls" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cve_urls" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="restart" transfer-ownership="none">
            <type name="PackageKitGlib.RestartEnum" c:type="PkRestartEnum"/>
          </parameter>
          <parameter name="update_text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="changelog" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="PackageKitGlib.UpdateStateEnum"
                  c:type="PkUpdateStateEnum"/>
          </parameter>
          <parameter name="issued" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="updated" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="use_background"
              c:identifier="pk_backend_job_use_background">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="BackendJobPrivate" c:type="PkBackendJobPrivate*"/>
      </field>
    </class>
    <record name="BackendJobClass"
            c:type="PkBackendJobClass"
            glib:is-gtype-struct-for="BackendJob">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="BackendJobPrivate"
            c:type="PkBackendJobPrivate"
            disguised="1">
    </record>
    <enumeration name="BackendJobSignal" c:type="PkBackendJobSignal">
      <member name="allow_cancel"
              value="0"
              c:identifier="PK_BACKEND_SIGNAL_ALLOW_CANCEL">
      </member>
      <member name="details"
              value="1"
              c:identifier="PK_BACKEND_SIGNAL_DETAILS">
      </member>
      <member name="error_code"
              value="2"
              c:identifier="PK_BACKEND_SIGNAL_ERROR_CODE">
      </member>
      <member name="distro_upgrade"
              value="3"
              c:identifier="PK_BACKEND_SIGNAL_DISTRO_UPGRADE">
      </member>
      <member name="finished"
              value="4"
              c:identifier="PK_BACKEND_SIGNAL_FINISHED">
      </member>
      <member name="package"
              value="5"
              c:identifier="PK_BACKEND_SIGNAL_PACKAGE">
      </member>
      <member name="item_progress"
              value="6"
              c:identifier="PK_BACKEND_SIGNAL_ITEM_PROGRESS">
      </member>
      <member name="files" value="7" c:identifier="PK_BACKEND_SIGNAL_FILES">
      </member>
      <member name="percentage"
              value="8"
              c:identifier="PK_BACKEND_SIGNAL_PERCENTAGE">
      </member>
      <member name="remaining"
              value="9"
              c:identifier="PK_BACKEND_SIGNAL_REMAINING">
      </member>
      <member name="speed" value="10" c:identifier="PK_BACKEND_SIGNAL_SPEED">
      </member>
      <member name="download_size_remaining"
              value="11"
              c:identifier="PK_BACKEND_SIGNAL_DOWNLOAD_SIZE_REMAINING">
      </member>
      <member name="repo_detail"
              value="12"
              c:identifier="PK_BACKEND_SIGNAL_REPO_DETAIL">
      </member>
      <member name="repo_signature_required"
              value="13"
              c:identifier="PK_BACKEND_SIGNAL_REPO_SIGNATURE_REQUIRED">
      </member>
      <member name="eula_required"
              value="14"
              c:identifier="PK_BACKEND_SIGNAL_EULA_REQUIRED">
      </member>
      <member name="media_change_required"
              value="15"
              c:identifier="PK_BACKEND_SIGNAL_MEDIA_CHANGE_REQUIRED">
      </member>
      <member name="require_restart"
              value="16"
              c:identifier="PK_BACKEND_SIGNAL_REQUIRE_RESTART">
      </member>
      <member name="status_changed"
              value="17"
              c:identifier="PK_BACKEND_SIGNAL_STATUS_CHANGED">
      </member>
      <member name="locked_changed"
              value="18"
              c:identifier="PK_BACKEND_SIGNAL_LOCKED_CHANGED">
      </member>
      <member name="update_detail"
              value="19"
              c:identifier="PK_BACKEND_SIGNAL_UPDATE_DETAIL">
      </member>
      <member name="category"
              value="20"
              c:identifier="PK_BACKEND_SIGNAL_CATEGORY">
      </member>
      <member name="last" value="21" c:identifier="PK_BACKEND_SIGNAL_LAST">
      </member>
    </enumeration>
    <callback name="BackendJobThreadFunc" c:type="PkBackendJobThreadFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job" transfer-ownership="none">
          <type name="BackendJob" c:type="PkBackendJob*"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="BackendJobVFunc" c:type="PkBackendJobVFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job" transfer-ownership="none">
          <type name="BackendJob" c:type="PkBackendJob*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="BackendPrivate" c:type="PkBackendPrivate" disguised="1">
    </record>
    <enumeration name="HintEnum" c:type="PkHintEnum">
      <member name="false" value="0" c:identifier="PK_HINT_ENUM_FALSE">
      </member>
      <member name="true" value="1" c:identifier="PK_HINT_ENUM_TRUE">
      </member>
      <member name="unset" value="2" c:identifier="PK_HINT_ENUM_UNSET">
      </member>
      <member name="invalid" value="3" c:identifier="PK_HINT_ENUM_INVALID">
      </member>
      <member name="last" value="4" c:identifier="PK_HINT_ENUM_LAST">
      </member>
    </enumeration>
    <record name="Plugin" c:type="PkPlugin">
      <field name="module" introspectable="0" writable="1">
        <type c:type="GModule*"/>
      </field>
      <field name="backend" writable="1">
        <type name="Backend" c:type="PkBackend*"/>
      </field>
      <field name="job" writable="1">
        <type name="BackendJob" c:type="PkBackendJob*"/>
      </field>
      <field name="priv" writable="1">
        <type name="PluginPrivate" c:type="PkPluginPrivate*"/>
      </field>
      <method name="destroy" c:identifier="pk_plugin_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="initialize" c:identifier="pk_plugin_initialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="state_changed" c:identifier="pk_plugin_state_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="transaction_content_types"
              c:identifier="pk_plugin_transaction_content_types">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_finished_end"
              c:identifier="pk_plugin_transaction_finished_end">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_finished_results"
              c:identifier="pk_plugin_transaction_finished_results">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_get_action"
              c:identifier="pk_plugin_transaction_get_action">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
          <parameter name="action_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_run" c:identifier="pk_plugin_transaction_run">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_started"
              c:identifier="pk_plugin_transaction_started">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="PkPlugin*"/>
          </instance-parameter>
          <parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </parameter>
        </parameters>
      </method>
      <function name="get_description"
                c:identifier="pk_plugin_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
      </function>
    </record>
    <callback name="PluginFunc" c:type="PkPluginFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <type name="Plugin" c:type="PkPlugin*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PluginGetActionFunc" c:type="PkPluginGetActionFunc">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <type name="Plugin" c:type="PkPlugin*"/>
        </parameter>
        <parameter name="transaction" transfer-ownership="none">
          <type name="Transaction" c:type="PkTransaction*"/>
        </parameter>
        <parameter name="action_id" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PluginGetDescFunc" c:type="PkPluginGetDescFunc">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </callback>
    <enumeration name="PluginPhase" c:type="PkPluginPhase">
      <member name="init" value="0" c:identifier="PK_PLUGIN_PHASE_INIT">
      </member>
      <member name="transaction_content_types"
              value="1"
              c:identifier="PK_PLUGIN_PHASE_TRANSACTION_CONTENT_TYPES">
      </member>
      <member name="transaction_run"
              value="2"
              c:identifier="PK_PLUGIN_PHASE_TRANSACTION_RUN">
      </member>
      <member name="transaction_started"
              value="3"
              c:identifier="PK_PLUGIN_PHASE_TRANSACTION_STARTED">
      </member>
      <member name="transaction_finished_results"
              value="4"
              c:identifier="PK_PLUGIN_PHASE_TRANSACTION_FINISHED_RESULTS">
      </member>
      <member name="transaction_finished_end"
              value="5"
              c:identifier="PK_PLUGIN_PHASE_TRANSACTION_FINISHED_END">
      </member>
      <member name="destroy" value="6" c:identifier="PK_PLUGIN_PHASE_DESTROY">
      </member>
      <member name="state_changed"
              value="7"
              c:identifier="PK_PLUGIN_PHASE_STATE_CHANGED">
      </member>
      <member name="unknown" value="8" c:identifier="PK_PLUGIN_PHASE_UNKNOWN">
      </member>
    </enumeration>
    <record name="PluginPrivate" c:type="PkPluginPrivate" disguised="1">
    </record>
    <callback name="PluginTransactionFunc" c:type="PkPluginTransactionFunc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <type name="Plugin" c:type="PkPlugin*"/>
        </parameter>
        <parameter name="transaction" transfer-ownership="none">
          <type name="Transaction" c:type="PkTransaction*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="TRANSACTION_ALL_BACKEND_SIGNALS"
              value="4294967295"
              c:type="PK_TRANSACTION_ALL_BACKEND_SIGNALS">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="TRANSACTION_NO_BACKEND_SIGNALS"
              value="0"
              c:type="PK_TRANSACTION_NO_BACKEND_SIGNALS">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Transaction"
           c:symbol-prefix="transaction"
           c:type="PkTransaction"
           parent="GObject.Object"
           glib:type-name="PkTransaction"
           glib:get-type="pk_transaction_get_type"
           glib:type-struct="TransactionClass">
      <constructor name="new" c:identifier="pk_transaction_new">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new PkTransaction object.</doc>
          <type name="Transaction" c:type="PkTransaction*"/>
        </return-value>
        <parameters>
          <parameter name="conf" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
          <parameter name="introspection" transfer-ownership="none">
            <type name="Gio.DBusNodeInfo" c:type="GDBusNodeInfo*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="error_quark" c:identifier="pk_transaction_error_quark">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Our personal error quark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="state_to_string"
                c:identifier="pk_transaction_state_to_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="TransactionState" c:type="PkTransactionState"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_supported_content_type"
              c:identifier="pk_transaction_add_supported_content_type">
        <doc xml:space="preserve">Designed to be used by plugins.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel_bg" c:identifier="pk_transaction_cancel_bg">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_backend_job"
              c:identifier="pk_transaction_get_backend_job">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Current PkBackendJob for this transaction</doc>
          <type name="BackendJob" c:type="PkBackendJob*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_conf" c:identifier="pk_transaction_get_conf">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">GKeyFile of this transaction</doc>
          <type name="GLib.KeyFile" c:type="GKeyFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_full_paths"
              c:identifier="pk_transaction_get_full_paths">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Cached paths</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_package_ids"
              c:identifier="pk_transaction_get_package_ids">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Cached package-ids</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_results" c:identifier="pk_transaction_get_results">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Results of the transaction</doc>
          <type name="PackageKitGlib.Results" c:type="PkResults*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_role" c:identifier="pk_transaction_get_role">
        <return-value transfer-ownership="none">
          <type name="PackageKitGlib.RoleEnum" c:type="PkRoleEnum"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="pk_transaction_get_state">
        <return-value transfer-ownership="none">
          <type name="TransactionState" c:type="PkTransactionState"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tid" c:identifier="pk_transaction_get_tid">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transaction_flags"
              c:identifier="pk_transaction_get_transaction_flags">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">transaction flags for the transaction</doc>
          <type name="PackageKitGlib.Bitfield" c:type="PkBitfield"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid" c:identifier="pk_transaction_get_uid">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values" c:identifier="pk_transaction_get_values">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Cached values</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_exclusive" c:identifier="pk_transaction_is_exclusive">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_finished_with_lock_required"
              c:identifier="pk_transaction_is_finished_with_lock_required">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_exclusive"
              c:identifier="pk_transaction_make_exclusive">
        <doc xml:space="preserve">Make this transaction exclusive.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_after_lock_error"
              c:identifier="pk_transaction_reset_after_lock_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="run" c:identifier="pk_transaction_run">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_backend" c:identifier="pk_transaction_set_backend">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="Backend" c:type="PkBackend*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_full_paths"
              c:identifier="pk_transaction_set_full_paths">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="full_paths" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_package_ids"
              c:identifier="pk_transaction_set_package_ids">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="package_ids" transfer-ownership="none">
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_plugins"
              c:identifier="pk_transaction_set_plugins"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="plugins" transfer-ownership="none">
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_state" c:identifier="pk_transaction_set_state">
        <doc xml:space="preserve">A transaction can have only one state at any time as it is processed.
Typically, these states will be:

1. 'new'
2. 'waiting for auth'  &lt;--- waiting for PolicyKit (optional)
3. 'committed'	 &lt;--- when the client sets the role
4. 'ready'	     &lt;--- when the transaction is ready to be run
5. 'running'	   &lt;--- where PkBackend gets used
6. 'finished'</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="TransactionState" c:type="PkTransactionState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_supported_roles"
              c:identifier="pk_transaction_set_supported_roles"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="plugins" transfer-ownership="none">
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="signals_reset" c:identifier="pk_transaction_signals_reset">
        <doc xml:space="preserve">Connect all backend_signals to the PkTransaction.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="job" transfer-ownership="none">
            <type name="BackendJob" c:type="PkBackendJob*"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_auth_checks"
              c:identifier="pk_transaction_skip_auth_checks">
        <doc xml:space="preserve">Skip authorization checks.
NOTE: This is *only* for testing, do never
use it somewhere else!</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transaction" transfer-ownership="none">
            <type name="Transaction" c:type="PkTransaction*"/>
          </instance-parameter>
          <parameter name="skip_checks" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TransactionPrivate" c:type="PkTransactionPrivate*"/>
      </field>
      <glib:signal name="finished" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="TransactionClass"
            c:type="PkTransactionClass"
            glib:is-gtype-struct-for="Transaction">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="TransactionPrivate"
            c:type="PkTransactionPrivate"
            disguised="1">
    </record>
    <enumeration name="TransactionState" c:type="PkTransactionState">
      <member name="new" value="0" c:identifier="PK_TRANSACTION_STATE_NEW">
      </member>
      <member name="waiting_for_auth"
              value="1"
              c:identifier="PK_TRANSACTION_STATE_WAITING_FOR_AUTH">
      </member>
      <member name="committed"
              value="2"
              c:identifier="PK_TRANSACTION_STATE_COMMITTED">
      </member>
      <member name="ready" value="3" c:identifier="PK_TRANSACTION_STATE_READY">
      </member>
      <member name="running"
              value="4"
              c:identifier="PK_TRANSACTION_STATE_RUNNING">
      </member>
      <member name="finished"
              value="5"
              c:identifier="PK_TRANSACTION_STATE_FINISHED">
      </member>
      <member name="unknown"
              value="6"
              c:identifier="PK_TRANSACTION_STATE_UNKNOWN">
      </member>
    </enumeration>
    <function name="directory_remove_contents"
              c:identifier="pk_directory_remove_contents">
      <doc xml:space="preserve">Does not remove the directory itself, only the contents.</doc>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="directory" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_resource" c:identifier="pk_get_resource">
      <return-value transfer-ownership="full">
        <type name="Gio.Resource" c:type="GResource*"/>
      </return-value>
    </function>
    <function name="hint_enum_from_string"
              c:identifier="pk_hint_enum_from_string">
      <return-value transfer-ownership="none">
        <type name="HintEnum" c:type="PkHintEnum"/>
      </return-value>
      <parameters>
        <parameter name="hint" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="hint_enum_to_string" c:identifier="pk_hint_enum_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="hint" transfer-ownership="none">
          <type name="HintEnum" c:type="PkHintEnum"/>
        </parameter>
      </parameters>
    </function>
    <function name="load_introspection"
              c:identifier="pk_load_introspection"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Gio.DBusNodeInfo" c:type="GDBusNodeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="plugin_get_description"
              c:identifier="pk_plugin_get_description"
              moved-to="Plugin.get_description">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
    <function name="strlen" c:identifier="pk_strlen">
      <doc xml:space="preserve">This function is a much safer way of doing strlen as it checks for NULL and
a stupidly long string.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the length of the string, or len if the string is too long.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve">The text to check</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <doc xml:space="preserve">The maximum length of the string</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="strtoint" c:identifier="pk_strtoint">
      <doc xml:space="preserve">Converts a string into a signed integer value in a safe way.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">%TRUE if the string was converted correctly</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve">The text the convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve">The return numeric return value</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="strtouint" c:identifier="pk_strtouint">
      <doc xml:space="preserve">Converts a string into a unsigned integer value in a safe way.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">%TRUE if the string was converted correctly</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve">The text the convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve">The return numeric return value</doc>
          <type name="guint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="strtouint64" c:identifier="pk_strtouint64">
      <doc xml:space="preserve">Converts a string into a unsigned integer value in a safe way.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">%TRUE if the string was converted correctly</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve">The text the convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve">The return numeric return value</doc>
          <type name="guint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="strzero" c:identifier="pk_strzero">
      <doc xml:space="preserve">This function is a much safer way of doing "if (strlen (text) == 0))"
as it does not rely on text being NULL terminated. It's also much
quicker as it only checks the first byte rather than scanning the whole
string just to verify it's not zero length.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">%TRUE if the string was converted correctly</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve">The text to check</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
