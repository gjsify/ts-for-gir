<?xml version="1.0"?>
<!-- GitgExt-1.0.gir generated by valac 0.57.0.169-9de8e, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="Gtk" version="3.0"/>
<include name="Gio" version="2.0"/>
<include name="Gdk" version="3.0"/>
<include name="Ggit" version="1.0"/>
<include name="Gitg" version="1.0"/>
<package name="gitg-ext-1.0"/>
<c:include name="libgitg-ext.h"/>
<namespace name="GitgExt" version="1.0" c:prefix="GitgExt" c:identifier-prefixes="GitgExt" c:symbol-prefixes="gitg_ext">
	<bitfield name="ExternalChangeHint" c:type="GitgExtExternalChangeHint" glib:type-name="GitgExtExternalChangeHint" glib:get-type="gitg_ext_external_change_hint_get_type">
		<member name="none" c:identifier="GITG_EXT_EXTERNAL_CHANGE_HINT_NONE" value="0"/>
		<member name="refs" c:identifier="GITG_EXT_EXTERNAL_CHANGE_HINT_REFS" value="(null)"/>
		<member name="index" c:identifier="GITG_EXT_EXTERNAL_CHANGE_HINT_INDEX" value="(null)"/>
	</bitfield>
	<enumeration name="SelectionMode" c:type="GitgExtSelectionMode" glib:type-name="GitgExtSelectionMode" glib:get-type="gitg_ext_selection_mode_get_type">
		<member name="normal" c:identifier="GITG_EXT_SELECTION_MODE_NORMAL" value="0"/>
		<member name="selection" c:identifier="GITG_EXT_SELECTION_MODE_SELECTION" value="1"/>
	</enumeration>
	<class name="CommandLines" c:type="GitgExtCommandLines" c:symbol-prefix="command_lines" glib:type-name="GitgExtCommandLines" glib:get-type="gitg_ext_command_lines_get_type" glib:type-struct="CommandLinesClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CommandLinesPrivate" c:type="GitgExtCommandLinesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_ext_command_lines_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.CommandLines" c:type="GitgExtCommandLines*"/>
			</return-value>
			<parameters>
				<parameter name="command_lines" transfer-ownership="none">
					<array length="1" c:type="GitgExtCommandLine**">
						<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
					</array>
				</parameter>
				<parameter name="command_lines_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_for" c:identifier="gitg_ext_command_lines_get_for">
			<return-value transfer-ownership="full" nullable="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLines" c:type="GitgExtCommandLines*"/>
				</instance-parameter>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_finished" c:identifier="gitg_ext_command_lines_parse_finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLines" c:type="GitgExtCommandLines*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="apply" c:identifier="gitg_ext_command_lines_apply">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLines" c:type="GitgExtCommandLines*"/>
				</instance-parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CommandLinesClass" c:type="GitgExtCommandLinesClass" glib:is-gtype-struct-for="CommandLines">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CommandLinesPrivate" c:type="GitgExtCommandLinesPrivate" disguised="1"/>
	<class name="MessageBus" c:type="GitgExtMessageBus" c:symbol-prefix="message_bus" glib:type-name="GitgExtMessageBus" glib:get-type="gitg_ext_message_bus_get_type" glib:type-struct="MessageBusClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="MessageBusPrivate" c:type="GitgExtMessageBusPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gitg_ext_message_bus_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
			</return-value>
		</constructor>
		<function name="get_default" c:identifier="gitg_ext_message_bus_get_default">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
			</return-value>
		</function>
		<method name="lookup" c:identifier="gitg_ext_message_bus_lookup">
			<return-value transfer-ownership="full">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="register" c:identifier="gitg_ext_message_bus_register">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="message_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unregister" c:identifier="gitg_ext_message_bus_unregister">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unregister_all" c:identifier="gitg_ext_message_bus_unregister_all">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="object_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="is_registered" c:identifier="gitg_ext_message_bus_is_registered">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="connect" c:identifier="gitg_ext_message_bus_connect">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" closure="2" scope="notified" destroy="3">
					<type name="GitgExt.MessageCallback" c:type="GitgExtMessageCallback"/>
				</parameter>
				<parameter name="callback_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<method name="disconnect" c:identifier="gitg_ext_message_bus_disconnect">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="block" c:identifier="gitg_ext_message_bus_block">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="unblock" c:identifier="gitg_ext_message_bus_unblock">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="send_message" c:identifier="gitg_ext_message_bus_send_message">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</parameter>
			</parameters>
		</method>
		<method name="send" c:identifier="gitg_ext_message_bus_send" introspectable="0">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
				<parameter name="firstprop" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="registered">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="unregistered">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<virtual-method name="dispatch" invoker="dispatch">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="dispatch">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="message" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="MessageBusClass" c:type="GitgExtMessageBusClass" glib:is-gtype-struct-for="MessageBus">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="dispatch">
			<callback name="message_bus_dispatch" c:type="message_bus_dispatch">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
					</parameter>
					<parameter name="message" transfer-ownership="none">
						<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="MessageBusPrivate" c:type="GitgExtMessageBusPrivate" disguised="1"/>
	<class name="MessageId" c:type="GitgExtMessageId" c:symbol-prefix="message_id" glib:type-name="GitgExtMessageId" glib:get-type="gitg_ext_message_id_get_type" glib:type-struct="MessageIdClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="MessageIdPrivate" c:type="GitgExtMessageIdPrivate*"/>
		</field>
		<method name="hash" c:identifier="gitg_ext_message_id_hash">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="equal" c:identifier="gitg_ext_message_id_equal">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gitg_ext_message_id_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
			</return-value>
			<parameters>
				<parameter name="object_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="copy" c:identifier="gitg_ext_message_id_copy">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="valid_object_path" c:identifier="gitg_ext_message_id_valid_object_path">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<property name="object-path" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_object_path" c:identifier="gitg_ext_message_id_get_object_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_object_path" c:identifier="gitg_ext_message_id_set_object_path">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="method" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_method" c:identifier="gitg_ext_message_id_get_method">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_method" c:identifier="gitg_ext_message_id_set_method">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gitg_ext_message_id_get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="MessageIdClass" c:type="GitgExtMessageIdClass" glib:is-gtype-struct-for="MessageId">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="MessageIdPrivate" c:type="GitgExtMessageIdPrivate" disguised="1"/>
	<class name="Message" c:type="GitgExtMessage" c:symbol-prefix="message" glib:type-name="GitgExtMessage" glib:get-type="gitg_ext_message_get_type" glib:type-struct="MessageClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="MessagePrivate" c:type="GitgExtMessagePrivate*"/>
		</field>
		<method name="has" c:identifier="gitg_ext_message_has">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</instance-parameter>
				<parameter name="propname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<function name="type_has" c:identifier="gitg_ext_message_type_has">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="propname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="type_check" c:identifier="gitg_ext_message_type_check">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="propname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</function>
		<property name="id" writable="1" construct="1">
			<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
		</property>
		<method name="get_id" c:identifier="gitg_ext_message_get_id">
			<return-value transfer-ownership="none">
				<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_id" c:identifier="gitg_ext_message_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.MessageId" c:type="GitgExtMessageId*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="MessageClass" c:type="GitgExtMessageClass" glib:is-gtype-struct-for="Message">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="MessagePrivate" c:type="GitgExtMessagePrivate" disguised="1"/>
	<class name="UI" c:type="GitgExtUI" c:symbol-prefix="ui" glib:type-name="GitgExtUI" glib:get-type="gitg_ext_ui_get_type" glib:type-struct="UIClass" glib:fundamental="1" glib:ref-func="gitg_ext_ui_ref" glib:unref-func="gitg_ext_ui_unref" glib:set-value-func="gitg_ext_value_set_ui" glib:get-value-func="gitg_ext_value_get_ui">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="UIPrivate" c:type="GitgExtUIPrivate*"/>
		</field>
		<function name="from_builder" c:identifier="gitg_ext_ui_from_builder" introspectable="0">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.Object" c:type="GObject*"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gitg_ext_ui_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.UI" c:type="GitgExtUI*"/>
			</return-value>
		</constructor>
	</class>
	<record name="UIClass" c:type="GitgExtUIClass" glib:is-gtype-struct-for="UI">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="UIPrivate" c:type="GitgExtUIPrivate" disguised="1"/>
	<class name="UserQueryResponse" c:type="GitgExtUserQueryResponse" c:symbol-prefix="user_query_response" glib:type-name="GitgExtUserQueryResponse" glib:get-type="gitg_ext_user_query_response_get_type" glib:type-struct="UserQueryResponseClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="UserQueryResponsePrivate" c:type="GitgExtUserQueryResponsePrivate*"/>
		</field>
		<field name="text" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="response_type" writable="1">
			<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
		</field>
		<constructor name="new" c:identifier="gitg_ext_user_query_response_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.UserQueryResponse" c:type="GitgExtUserQueryResponse*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="response_type" transfer-ownership="none">
					<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="UserQueryResponseClass" c:type="GitgExtUserQueryResponseClass" glib:is-gtype-struct-for="UserQueryResponse">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="UserQueryResponsePrivate" c:type="GitgExtUserQueryResponsePrivate" disguised="1"/>
	<class name="UserQuery" c:type="GitgExtUserQuery" c:symbol-prefix="user_query" glib:type-name="GitgExtUserQuery" glib:get-type="gitg_ext_user_query_get_type" glib:type-struct="UserQueryClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="UserQueryPrivate" c:type="GitgExtUserQueryPrivate*"/>
		</field>
		<field name="_responses" writable="1">
			<array c:type="GitgExtUserQueryResponse**">
				<type name="GitgExt.UserQueryResponse" c:type="GitgExtUserQueryResponse*"/>
			</array>
		</field>
		<field name="_responses_length1">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="get_responses" c:identifier="gitg_ext_user_query_get_responses">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GitgExtUserQueryResponse**">
					<type name="GitgExt.UserQueryResponse" c:type="GitgExtUserQueryResponse*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_responses" c:identifier="gitg_ext_user_query_set_responses">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<array length="1" c:type="GitgExtUserQueryResponse**">
						<type name="GitgExt.UserQueryResponse" c:type="GitgExtUserQueryResponse*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="full" c:identifier="gitg_ext_user_query_new_full" introspectable="0">
			<return-value transfer-ownership="full">
				<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message_type" transfer-ownership="none">
					<type name="Gtk.MessageType" c:type="GtkMessageType"/>
				</parameter>
				<parameter name="..." transfer-ownership="none">
					<varargs/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gitg_ext_user_query_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
			</return-value>
		</constructor>
		<property name="title" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="gitg_ext_user_query_get_title">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_title" c:identifier="gitg_ext_user_query_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="message" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_message" c:identifier="gitg_ext_user_query_get_message">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_message" c:identifier="gitg_ext_user_query_set_message">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="message-type" writable="1">
			<type name="Gtk.MessageType" c:type="GtkMessageType"/>
		</property>
		<method name="get_message_type" c:identifier="gitg_ext_user_query_get_message_type">
			<return-value transfer-ownership="none">
				<type name="Gtk.MessageType" c:type="GtkMessageType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_message_type" c:identifier="gitg_ext_user_query_set_message_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gtk.MessageType" c:type="GtkMessageType"/>
				</parameter>
			</parameters>
		</method>
		<property name="default-response" writable="1">
			<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
		</property>
		<method name="get_default_response" c:identifier="gitg_ext_user_query_get_default_response">
			<return-value transfer-ownership="none">
				<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_default_response" c:identifier="gitg_ext_user_query_set_default_response">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
				</parameter>
			</parameters>
		</method>
		<property name="default-is-destructive" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_is_destructive" c:identifier="gitg_ext_user_query_get_default_is_destructive">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_default_is_destructive" c:identifier="gitg_ext_user_query_set_default_is_destructive">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="message-use-markup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_message_use_markup" c:identifier="gitg_ext_user_query_get_message_use_markup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_message_use_markup" c:identifier="gitg_ext_user_query_set_message_use_markup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="quit">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="response">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="response_type" transfer-ownership="none">
					<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="UserQueryClass" c:type="GitgExtUserQueryClass" glib:is-gtype-struct-for="UserQuery">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="UserQueryPrivate" c:type="GitgExtUserQueryPrivate" disguised="1"/>
	<interface name="Action" c:type="GitgExtAction" c:symbol-prefix="action" glib:type-name="GitgExtAction" glib:get-type="gitg_ext_action_get_type" glib:type-struct="ActionIface">
		<prerequisite name="GitgExt.UIElement"/>
		<method name="populate_menu" c:identifier="gitg_ext_action_populate_menu">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="menu" transfer-ownership="none">
					<type name="Gtk.Menu" c:type="GtkMenu*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="populate_menu" invoker="populate_menu">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="menu" transfer-ownership="none">
					<type name="Gtk.Menu" c:type="GtkMenu*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="fetch" c:identifier="gitg_ext_action_fetch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="fetch_finish" c:identifier="gitg_ext_action_fetch_finish">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="fetch" invoker="fetch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="fetch_finish" invoker="fetch_finish">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Action" c:type="GitgExtAction*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ActionIface" c:type="GitgExtActionIface" glib:is-gtype-struct-for="Action">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="populate_menu">
			<callback name="populate_menu" c:type="populate_menu">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Action" c:type="GitgExtAction*"/>
					</parameter>
					<parameter name="menu" transfer-ownership="none">
						<type name="Gtk.Menu" c:type="GtkMenu*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="fetch">
			<callback name="fetch" c:type="fetch">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Action" c:type="GitgExtAction*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="fetch_finish">
			<callback name="fetch_finish" c:type="fetch_finish">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Action" c:type="GitgExtAction*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Activity" c:type="GitgExtActivity" c:symbol-prefix="activity" glib:type-name="GitgExtActivity" glib:get-type="gitg_ext_activity_get_type" glib:type-struct="ActivityIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GitgExt.UIElement"/>
		<method name="is_default_for" c:identifier="gitg_ext_activity_is_default_for">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</instance-parameter>
				<parameter name="action" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_default_for" invoker="is_default_for">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</instance-parameter>
				<parameter name="action" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_key_pressed" c:identifier="gitg_ext_activity_on_key_pressed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Gdk.EventKey" c:type="GdkEventKey*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_key_pressed" invoker="on_key_pressed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Gdk.EventKey" c:type="GdkEventKey*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ActivityIface" c:type="GitgExtActivityIface" glib:is-gtype-struct-for="Activity">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="is_default_for">
			<callback name="is_default_for" c:type="is_default_for">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
					</parameter>
					<parameter name="action" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_key_pressed">
			<callback name="on_key_pressed" c:type="on_key_pressed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="Gdk.EventKey" c:type="GdkEventKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Application" c:type="GitgExtApplication" c:symbol-prefix="application" glib:type-name="GitgExtApplication" glib:get-type="gitg_ext_application_get_type" glib:type-struct="ApplicationIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_verified_committer" c:identifier="gitg_ext_application_get_verified_committer">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Signature" c:type="GgitSignature*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_verified_committer" invoker="get_verified_committer">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Ggit.Signature" c:type="GgitSignature*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_activity_by_id" c:identifier="gitg_ext_application_get_activity_by_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_activity_by_id" invoker="get_activity_by_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_activity_by_id" c:identifier="gitg_ext_application_set_activity_by_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_activity_by_id" invoker="set_activity_by_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="user_query" c:identifier="gitg_ext_application_user_query">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="user_query" invoker="user_query">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="user_query_async" c:identifier="gitg_ext_application_user_query_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="user_query_finish" c:identifier="gitg_ext_application_user_query_finish">
			<return-value transfer-ownership="full">
				<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="user_query_async" invoker="user_query_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="query" transfer-ownership="none">
					<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="user_query_finish" invoker="user_query_finish">
			<return-value transfer-ownership="full">
				<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="show_infobar" c:identifier="gitg_ext_application_show_infobar">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="primary_msg" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_msg" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Gtk.MessageType" c:type="GtkMessageType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="show_infobar" invoker="show_infobar">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="primary_msg" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_msg" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Gtk.MessageType" c:type="GtkMessageType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="open_new" c:identifier="gitg_ext_application_open_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Ggit.Repository" c:type="GgitRepository*"/>
				</parameter>
				<parameter name="hint" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="open_new" invoker="open_new">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="repository" transfer-ownership="none">
					<type name="Ggit.Repository" c:type="GgitRepository*"/>
				</parameter>
				<parameter name="hint" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="open_repository" c:identifier="gitg_ext_application_open_repository">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="open_repository" invoker="open_repository">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="repository" writable="1">
			<type name="Gitg.Repository" c:type="GitgRepository*"/>
		</property>
		<method name="get_repository" c:identifier="gitg_ext_application_get_repository">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_repository" invoker="get_repository">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Repository" c:type="GitgRepository*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_repository" c:identifier="gitg_ext_application_set_repository">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_repository" invoker="set_repository">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="message-bus">
			<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
		</property>
		<method name="get_message_bus" c:identifier="gitg_ext_application_get_message_bus">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_message_bus" invoker="get_message_bus">
			<return-value transfer-ownership="full">
				<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="current-activity">
			<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
		</property>
		<method name="get_current_activity" c:identifier="gitg_ext_application_get_current_activity">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_current_activity" invoker="get_current_activity">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="environment">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_environment" c:identifier="gitg_ext_application_get_environment">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_environment" invoker="get_environment">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="notifications">
			<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
		</property>
		<method name="get_notifications" c:identifier="gitg_ext_application_get_notifications">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_notifications" invoker="get_notifications">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="busy" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_busy" c:identifier="gitg_ext_application_get_busy">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_busy" invoker="get_busy">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_busy" c:identifier="gitg_ext_application_set_busy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_busy" invoker="set_busy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="remote-lookup">
			<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
		</property>
		<method name="get_remote_lookup" c:identifier="gitg_ext_application_get_remote_lookup">
			<return-value transfer-ownership="full">
				<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_remote_lookup" invoker="get_remote_lookup">
			<return-value transfer-ownership="full">
				<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="repository-changed-externally">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="hint" transfer-ownership="none">
					<type name="GitgExt.ExternalChangeHint" c:type="GitgExtExternalChangeHint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="repository-commits-changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="ApplicationIface" c:type="GitgExtApplicationIface" glib:is-gtype-struct-for="Application">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_verified_committer">
			<callback name="get_verified_committer" c:type="get_verified_committer">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Ggit.Signature" c:type="GgitSignature*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_activity_by_id">
			<callback name="get_activity_by_id" c:type="get_activity_by_id">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_activity_by_id">
			<callback name="set_activity_by_id" c:type="set_activity_by_id">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="user_query">
			<callback name="user_query" c:type="user_query">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="query" transfer-ownership="none">
						<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="user_query_async">
			<callback name="user_query_async" c:type="user_query_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="query" transfer-ownership="none">
						<type name="GitgExt.UserQuery" c:type="GitgExtUserQuery*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="user_query_finish">
			<callback name="user_query_finish" c:type="user_query_finish">
				<return-value transfer-ownership="full">
					<type name="Gtk.ResponseType" c:type="GtkResponseType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="show_infobar">
			<callback name="show_infobar" c:type="show_infobar">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="primary_msg" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="secondary_msg" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="Gtk.MessageType" c:type="GtkMessageType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="open_new">
			<callback name="open_new" c:type="open_new">
				<return-value transfer-ownership="full">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="repository" transfer-ownership="none">
						<type name="Ggit.Repository" c:type="GgitRepository*"/>
					</parameter>
					<parameter name="hint" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="open_repository">
			<callback name="open_repository" c:type="open_repository">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="path" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_repository">
			<callback name="get_repository" c:type="get_repository">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Gitg.Repository" c:type="GitgRepository*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_repository">
			<callback name="set_repository" c:type="set_repository">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="Gitg.Repository" c:type="GitgRepository*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_message_bus">
			<callback name="get_message_bus" c:type="get_message_bus">
				<return-value transfer-ownership="full">
					<type name="GitgExt.MessageBus" c:type="GitgExtMessageBus*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_current_activity">
			<callback name="get_current_activity" c:type="get_current_activity">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GitgExt.Activity" c:type="GitgExtActivity*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_environment">
			<callback name="get_environment" c:type="get_environment">
				<return-value transfer-ownership="full">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_notifications">
			<callback name="get_notifications" c:type="get_notifications">
				<return-value transfer-ownership="full">
					<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_busy">
			<callback name="get_busy" c:type="get_busy">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_busy">
			<callback name="set_busy" c:type="set_busy">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_remote_lookup">
			<callback name="get_remote_lookup" c:type="get_remote_lookup">
				<return-value transfer-ownership="full">
					<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CommandLine" c:type="GitgExtCommandLine" c:symbol-prefix="command_line" glib:type-name="GitgExtCommandLine" glib:get-type="gitg_ext_command_line_get_type" glib:type-struct="CommandLineIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_option_group" c:identifier="gitg_ext_command_line_get_option_group">
			<return-value transfer-ownership="full">
				<type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_option_group" invoker="get_option_group">
			<return-value transfer-ownership="full">
				<type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="parse_finished" c:identifier="gitg_ext_command_line_parse_finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="parse_finished" invoker="parse_finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="apply" c:identifier="gitg_ext_command_line_apply">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="apply" invoker="apply">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
				</instance-parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CommandLineIface" c:type="GitgExtCommandLineIface" glib:is-gtype-struct-for="CommandLine">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_option_group">
			<callback name="get_option_group" c:type="get_option_group">
				<return-value transfer-ownership="full">
					<type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="parse_finished">
			<callback name="parse_finished" c:type="parse_finished">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="apply">
			<callback name="apply" c:type="apply">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommandLine" c:type="GitgExtCommandLine*"/>
					</parameter>
					<parameter name="application" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CommitAction" c:type="GitgExtCommitAction" c:symbol-prefix="commit_action" glib:type-name="GitgExtCommitAction" glib:get-type="gitg_ext_commit_action_get_type" glib:type-struct="CommitActionIface">
		<prerequisite name="GitgExt.Action"/>
		<property name="action-interface" writable="1" construct="1">
			<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
		</property>
		<method name="get_action_interface" c:identifier="gitg_ext_commit_action_get_action_interface">
			<return-value transfer-ownership="none">
				<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_action_interface" invoker="get_action_interface">
			<return-value transfer-ownership="none">
				<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_action_interface" c:identifier="gitg_ext_commit_action_set_action_interface">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_action_interface" invoker="set_action_interface">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="commit" writable="1" construct="1">
			<type name="Gitg.Commit" c:type="GitgCommit*"/>
		</property>
		<method name="get_commit" c:identifier="gitg_ext_commit_action_get_commit">
			<return-value transfer-ownership="none">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_commit" invoker="get_commit">
			<return-value transfer-ownership="none">
				<type name="Gitg.Commit" c:type="GitgCommit*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_commit" c:identifier="gitg_ext_commit_action_set_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_commit" invoker="set_commit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="CommitActionIface" c:type="GitgExtCommitActionIface" glib:is-gtype-struct-for="CommitAction">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_action_interface">
			<callback name="get_action_interface" c:type="get_action_interface">
				<return-value transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_action_interface">
			<callback name="set_action_interface" c:type="set_action_interface">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_commit">
			<callback name="get_commit" c:type="get_commit">
				<return-value transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_commit">
			<callback name="set_commit" c:type="set_commit">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.CommitAction" c:type="GitgExtCommitAction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gitg.Commit" c:type="GitgCommit*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HistoryPanel" c:type="GitgExtHistoryPanel" c:symbol-prefix="history_panel" glib:type-name="GitgExtHistoryPanel" glib:get-type="gitg_ext_history_panel_get_type" glib:type-struct="HistoryPanelIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GitgExt.UIElement"/>
		<property name="history" writable="1" construct="1">
			<type name="GitgExt.History" c:type="GitgExtHistory*"/>
		</property>
		<method name="get_history" c:identifier="gitg_ext_history_panel_get_history">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.History" c:type="GitgExtHistory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_history" invoker="get_history">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.History" c:type="GitgExtHistory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_history" c:identifier="gitg_ext_history_panel_set_history">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_history" invoker="set_history">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="HistoryPanelIface" c:type="GitgExtHistoryPanelIface" glib:is-gtype-struct-for="HistoryPanel">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_history">
			<callback name="get_history" c:type="get_history">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_history">
			<callback name="set_history" c:type="set_history">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.HistoryPanel" c:type="GitgExtHistoryPanel*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="GitgExt.History" c:type="GitgExtHistory*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="History" c:type="GitgExtHistory" c:symbol-prefix="history" glib:type-name="GitgExtHistory" glib:get-type="gitg_ext_history_get_type" glib:type-struct="HistoryIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GitgExt.Activity"/>
		<method name="foreach_selected" c:identifier="gitg_ext_history_foreach_selected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="GitgExt.ForeachCommitSelectionFunc" c:type="GitgExtForeachCommitSelectionFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="foreach_selected" invoker="foreach_selected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="GitgExt.ForeachCommitSelectionFunc" c:type="GitgExtForeachCommitSelectionFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select" c:identifier="gitg_ext_history_select">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</instance-parameter>
				<parameter name="commit" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select" invoker="select">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.History" c:type="GitgExtHistory*"/>
				</instance-parameter>
				<parameter name="commit" transfer-ownership="none">
					<type name="Gitg.Commit" c:type="GitgCommit*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="selection-changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="HistoryIface" c:type="GitgExtHistoryIface" glib:is-gtype-struct-for="History">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="foreach_selected">
			<callback name="foreach_selected" c:type="foreach_selected">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.History" c:type="GitgExtHistory*"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="2" scope="call">
						<type name="GitgExt.ForeachCommitSelectionFunc" c:type="GitgExtForeachCommitSelectionFunc"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="select">
			<callback name="select" c:type="select">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.History" c:type="GitgExtHistory*"/>
					</parameter>
					<parameter name="commit" transfer-ownership="none">
						<type name="Gitg.Commit" c:type="GitgCommit*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Notification" c:type="GitgExtNotification" c:symbol-prefix="notification" glib:type-name="GitgExtNotification" glib:get-type="gitg_ext_notification_get_type" glib:type-struct="NotificationIface">
		<prerequisite name="GObject.Object"/>
		<property name="widget">
			<type name="Gtk.Widget" c:type="GtkWidget*"/>
		</property>
		<method name="get_widget" c:identifier="gitg_ext_notification_get_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_widget" invoker="get_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="close">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="delay" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="NotificationIface" c:type="GitgExtNotificationIface" glib:is-gtype-struct-for="Notification">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_widget">
			<callback name="get_widget" c:type="get_widget">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Notifications" c:type="GitgExtNotifications" c:symbol-prefix="notifications" glib:type-name="GitgExtNotifications" glib:get-type="gitg_ext_notifications_get_type" glib:type-struct="NotificationsIface">
		<prerequisite name="GObject.Object"/>
		<method name="add" c:identifier="gitg_ext_notifications_add">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
				</instance-parameter>
				<parameter name="notification" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add" invoker="add">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
				</instance-parameter>
				<parameter name="notification" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove" c:identifier="gitg_ext_notifications_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
				</instance-parameter>
				<parameter name="notification" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</parameter>
				<parameter name="delay" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
				</instance-parameter>
				<parameter name="notification" transfer-ownership="none">
					<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
				</parameter>
				<parameter name="delay" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="NotificationsIface" c:type="GitgExtNotificationsIface" glib:is-gtype-struct-for="Notifications">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="add">
			<callback name="add" c:type="add">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
					</parameter>
					<parameter name="notification" transfer-ownership="none">
						<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Notifications" c:type="GitgExtNotifications*"/>
					</parameter>
					<parameter name="notification" transfer-ownership="none">
						<type name="GitgExt.Notification" c:type="GitgExtNotification*"/>
					</parameter>
					<parameter name="delay" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Preferences" c:type="GitgExtPreferences" c:symbol-prefix="preferences" glib:type-name="GitgExtPreferences" glib:get-type="gitg_ext_preferences_get_type" glib:type-struct="PreferencesIface">
		<prerequisite name="GObject.Object"/>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gitg_ext_preferences_get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="display-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_name" c:identifier="gitg_ext_preferences_get_display_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_display_name" invoker="get_display_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="widget">
			<type name="Gtk.Widget" c:type="GtkWidget*"/>
		</property>
		<method name="get_widget" c:identifier="gitg_ext_preferences_get_widget">
			<return-value transfer-ownership="full">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_widget" invoker="get_widget">
			<return-value transfer-ownership="full">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="PreferencesIface" c:type="GitgExtPreferencesIface" glib:is-gtype-struct-for="Preferences">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_display_name">
			<callback name="get_display_name" c:type="get_display_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_widget">
			<callback name="get_widget" c:type="get_widget">
				<return-value transfer-ownership="full">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Preferences" c:type="GitgExtPreferences*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="RefActionInterface" c:type="GitgExtRefActionInterface" c:symbol-prefix="ref_action_interface" glib:type-name="GitgExtRefActionInterface" glib:get-type="gitg_ext_ref_action_interface_get_type" glib:type-struct="RefActionInterfaceIface">
		<prerequisite name="GObject.Object"/>
		<method name="add_ref" c:identifier="gitg_ext_ref_action_interface_add_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_ref" invoker="add_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_ref" c:identifier="gitg_ext_ref_action_interface_remove_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_ref" invoker="remove_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_ref" c:identifier="gitg_ext_ref_action_interface_replace_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="old_ref" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="new_ref" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_ref" invoker="replace_ref">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="old_ref" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="new_ref" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_busy" c:identifier="gitg_ext_ref_action_interface_set_busy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="busy" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_busy" invoker="set_busy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="busy" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="edit_ref_name" c:identifier="gitg_ext_ref_action_interface_edit_ref_name">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" closure="2" scope="notified" destroy="3">
					<type name="GitgExt.RefNameEditingDone" c:type="GitgExtRefNameEditingDone"/>
				</parameter>
				<parameter name="callback_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="edit_ref_name" invoker="edit_ref_name">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="reference" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" closure="2" scope="notified" destroy="3">
					<type name="GitgExt.RefNameEditingDone" c:type="GitgExtRefNameEditingDone"/>
				</parameter>
				<parameter name="callback_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="refresh" c:identifier="gitg_ext_ref_action_interface_refresh">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="refresh" invoker="refresh">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="application" writable="1" construct="1">
			<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
		</property>
		<method name="get_application" c:identifier="gitg_ext_ref_action_interface_get_application">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_application" invoker="get_application">
			<return-value transfer-ownership="full">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_application" c:identifier="gitg_ext_ref_action_interface_set_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_application" invoker="set_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="references">
			<type name="Gee.List" c:type="GeeList*">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</type>
		</property>
		<method name="get_references" c:identifier="gitg_ext_ref_action_interface_get_references">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_references" invoker="get_references">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="RefActionInterfaceIface" c:type="GitgExtRefActionInterfaceIface" glib:is-gtype-struct-for="RefActionInterface">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="add_ref">
			<callback name="add_ref" c:type="add_ref">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="reference" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_ref">
			<callback name="remove_ref" c:type="remove_ref">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="reference" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_ref">
			<callback name="replace_ref" c:type="replace_ref">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="old_ref" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="new_ref" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_busy">
			<callback name="set_busy" c:type="set_busy">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="reference" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="busy" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="edit_ref_name">
			<callback name="edit_ref_name" c:type="edit_ref_name">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="reference" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
					<parameter name="callback" transfer-ownership="none" closure="3" scope="notified" destroy="4">
						<type name="GitgExt.RefNameEditingDone" c:type="GitgExtRefNameEditingDone"/>
					</parameter>
					<parameter name="callback_target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="refresh">
			<callback name="refresh" c:type="refresh">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_application">
			<callback name="get_application" c:type="get_application">
				<return-value transfer-ownership="full">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_application">
			<callback name="set_application" c:type="set_application">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_references">
			<callback name="get_references" c:type="get_references">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="RefAction" c:type="GitgExtRefAction" c:symbol-prefix="ref_action" glib:type-name="GitgExtRefAction" glib:get-type="gitg_ext_ref_action_get_type" glib:type-struct="RefActionIface">
		<prerequisite name="GitgExt.Action"/>
		<property name="action-interface" writable="1" construct="1">
			<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
		</property>
		<method name="get_action_interface" c:identifier="gitg_ext_ref_action_get_action_interface">
			<return-value transfer-ownership="none">
				<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_action_interface" invoker="get_action_interface">
			<return-value transfer-ownership="none">
				<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_action_interface" c:identifier="gitg_ext_ref_action_set_action_interface">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_action_interface" invoker="set_action_interface">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="reference" writable="1" construct="1">
			<type name="Gitg.Ref" c:type="GitgRef*"/>
		</property>
		<method name="get_reference" c:identifier="gitg_ext_ref_action_get_reference">
			<return-value transfer-ownership="none">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_reference" invoker="get_reference">
			<return-value transfer-ownership="none">
				<type name="Gitg.Ref" c:type="GitgRef*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_reference" c:identifier="gitg_ext_ref_action_set_reference">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_reference" invoker="set_reference">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="RefActionIface" c:type="GitgExtRefActionIface" glib:is-gtype-struct-for="RefAction">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_action_interface">
			<callback name="get_action_interface" c:type="get_action_interface">
				<return-value transfer-ownership="none">
					<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_action_interface">
			<callback name="set_action_interface" c:type="set_action_interface">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GitgExt.RefActionInterface" c:type="GitgExtRefActionInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_reference">
			<callback name="get_reference" c:type="get_reference">
				<return-value transfer-ownership="none">
					<type name="Gitg.Ref" c:type="GitgRef*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_reference">
			<callback name="set_reference" c:type="set_reference">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RefAction" c:type="GitgExtRefAction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gitg.Ref" c:type="GitgRef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="RemoteLookup" c:type="GitgExtRemoteLookup" c:symbol-prefix="remote_lookup" glib:type-name="GitgExtRemoteLookup" glib:get-type="gitg_ext_remote_lookup_get_type" glib:type-struct="RemoteLookupIface">
		<prerequisite name="GObject.Object"/>
		<method name="lookup" c:identifier="gitg_ext_remote_lookup_lookup">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Remote" c:type="GitgRemote*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup" invoker="lookup">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gitg.Remote" c:type="GitgRemote*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="RemoteLookupIface" c:type="GitgExtRemoteLookupIface" glib:is-gtype-struct-for="RemoteLookup">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="lookup">
			<callback name="lookup" c:type="lookup">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Gitg.Remote" c:type="GitgRemote*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.RemoteLookup" c:type="GitgExtRemoteLookup*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Searchable" c:type="GitgExtSearchable" c:symbol-prefix="searchable" glib:type-name="GitgExtSearchable" glib:get-type="gitg_ext_searchable_get_type" glib:type-struct="SearchableIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GitgExt.Activity"/>
		<property name="search-text" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_search_text" c:identifier="gitg_ext_searchable_get_search_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_search_text" invoker="get_search_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_search_text" c:identifier="gitg_ext_searchable_set_search_text">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_search_text" invoker="set_search_text">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="search-visible" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_search_visible" c:identifier="gitg_ext_searchable_get_search_visible">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_search_visible" invoker="get_search_visible">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_search_visible" c:identifier="gitg_ext_searchable_set_search_visible">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_search_visible" invoker="set_search_visible">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="search-available">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_search_available" c:identifier="gitg_ext_searchable_get_search_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_search_available" invoker="get_search_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="search-entry" readable="0" writable="1">
			<type name="Gtk.Entry" c:type="GtkEntry*"/>
		</property>
		<method name="set_search_entry" c:identifier="gitg_ext_searchable_set_search_entry">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gtk.Entry" c:type="GtkEntry*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_search_entry" invoker="set_search_entry">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gtk.Entry" c:type="GtkEntry*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="SearchableIface" c:type="GitgExtSearchableIface" glib:is-gtype-struct-for="Searchable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_search_text">
			<callback name="get_search_text" c:type="get_search_text">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_search_text">
			<callback name="set_search_text" c:type="set_search_text">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_search_visible">
			<callback name="get_search_visible" c:type="get_search_visible">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_search_visible">
			<callback name="set_search_visible" c:type="set_search_visible">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_search_available">
			<callback name="get_search_available" c:type="get_search_available">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_search_entry">
			<callback name="set_search_entry" c:type="set_search_entry">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Searchable" c:type="GitgExtSearchable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="Gtk.Entry" c:type="GtkEntry*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Selectable" c:type="GitgExtSelectable" c:symbol-prefix="selectable" glib:type-name="GitgExtSelectable" glib:get-type="gitg_ext_selectable_get_type" glib:type-struct="SelectableIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GitgExt.Activity"/>
		<property name="selectable-mode" writable="1">
			<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
		</property>
		<method name="get_selectable_mode" c:identifier="gitg_ext_selectable_get_selectable_mode">
			<return-value transfer-ownership="none">
				<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_selectable_mode" invoker="get_selectable_mode">
			<return-value transfer-ownership="none">
				<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_selectable_mode" c:identifier="gitg_ext_selectable_set_selectable_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_selectable_mode" invoker="set_selectable_mode">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="selectable-available">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_selectable_available" c:identifier="gitg_ext_selectable_get_selectable_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_selectable_available" invoker="get_selectable_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="selectable-mode-tooltip">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_selectable_mode_tooltip" c:identifier="gitg_ext_selectable_get_selectable_mode_tooltip">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_selectable_mode_tooltip" invoker="get_selectable_mode_tooltip">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="action-widget">
			<type name="Gtk.Widget" c:type="GtkWidget*"/>
		</property>
		<method name="get_action_widget" c:identifier="gitg_ext_selectable_get_action_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_action_widget" invoker="get_action_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="SelectableIface" c:type="GitgExtSelectableIface" glib:is-gtype-struct-for="Selectable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_selectable_mode">
			<callback name="get_selectable_mode" c:type="get_selectable_mode">
				<return-value transfer-ownership="none">
					<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_selectable_mode">
			<callback name="set_selectable_mode" c:type="set_selectable_mode">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GitgExt.SelectionMode" c:type="GitgExtSelectionMode"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_selectable_available">
			<callback name="get_selectable_available" c:type="get_selectable_available">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_selectable_mode_tooltip">
			<callback name="get_selectable_mode_tooltip" c:type="get_selectable_mode_tooltip">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_action_widget">
			<callback name="get_action_widget" c:type="get_action_widget">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.Selectable" c:type="GitgExtSelectable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="UIElement" c:type="GitgExtUIElement" c:symbol-prefix="ui_element" glib:type-name="GitgExtUIElement" glib:get-type="gitg_ext_ui_element_get_type" glib:type-struct="UIElementIface">
		<prerequisite name="GObject.Object"/>
		<method name="negotiate_order" c:identifier="gitg_ext_ui_element_negotiate_order">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="negotiate_order" invoker="negotiate_order">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="application" writable="1" construct="1">
			<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
		</property>
		<method name="get_application" c:identifier="gitg_ext_ui_element_get_application">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_application" invoker="get_application">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_application" c:identifier="gitg_ext_ui_element_set_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_application" invoker="set_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gitg_ext_ui_element_get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="display-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_name" c:identifier="gitg_ext_ui_element_get_display_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_display_name" invoker="get_display_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="description">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_description" c:identifier="gitg_ext_ui_element_get_description">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_description" invoker="get_description">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_icon" c:identifier="gitg_ext_ui_element_get_icon">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_icon" invoker="get_icon">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_widget" c:identifier="gitg_ext_ui_element_get_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_widget" invoker="get_widget">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_shortcut" c:identifier="gitg_ext_ui_element_get_shortcut">
			<return-value transfer-ownership="full" nullable="1">
				<type name="guint" c:type="guint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_shortcut" invoker="get_shortcut">
			<return-value transfer-ownership="full" nullable="1">
				<type name="guint" c:type="guint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_available" c:identifier="gitg_ext_ui_element_get_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_available" invoker="get_available">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_enabled" c:identifier="gitg_ext_ui_element_get_enabled">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_enabled" invoker="get_enabled">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="activate">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="UIElementIface" c:type="GitgExtUIElementIface" glib:is-gtype-struct-for="UIElement">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="negotiate_order">
			<callback name="negotiate_order" c:type="negotiate_order">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_application">
			<callback name="get_application" c:type="get_application">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_application">
			<callback name="set_application" c:type="set_application">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="GitgExt.Application" c:type="GitgExtApplication*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_display_name">
			<callback name="get_display_name" c:type="get_display_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_description">
			<callback name="get_description" c:type="get_description">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_icon">
			<callback name="get_icon" c:type="get_icon">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_widget">
			<callback name="get_widget" c:type="get_widget">
				<return-value transfer-ownership="full" nullable="1">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_shortcut">
			<callback name="get_shortcut" c:type="get_shortcut">
				<return-value transfer-ownership="full" nullable="1">
					<type name="guint" c:type="guint*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_available">
			<callback name="get_available" c:type="get_available">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_enabled">
			<callback name="get_enabled" c:type="get_enabled">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GitgExt.UIElement" c:type="GitgExtUIElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="ForeachCommitSelectionFunc" c:type="GitgExtForeachCommitSelectionFunc">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="object" transfer-ownership="none">
				<type name="Ggit.Commit" c:type="GgitCommit*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="MessageCallback" c:type="GitgExtMessageCallback">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="message" transfer-ownership="none">
				<type name="GitgExt.Message" c:type="GitgExtMessage*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="RefNameEditingDone" c:type="GitgExtRefNameEditingDone">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="new_name" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="cancelled" transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="2">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
</namespace>
</repository>
