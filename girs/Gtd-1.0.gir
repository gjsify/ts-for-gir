<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="4.0"/>
  <namespace name="Gtd"
             version="1.0"
             shared-library="libgtd.so.0"
             c:identifier-prefixes="Gtd"
             c:symbol-prefixes="gtd">
    <interface name="Activatable"
               c:symbol-prefix="activatable"
               c:type="GtdActivatable"
               glib:type-name="GtdActivatable"
               glib:get-type="gtd_activatable_get_type"
               glib:type-struct="ActivatableInterface">
      <source-position filename="src/core/gtd-activatable.h" line="42"/>
      <virtual-method name="activate" invoker="activate">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="70">Activates the extension. This is the starting point where
the implementation does everything it needs to do. Avoid
doing it earlier than this call.

This function is called after the extension is loaded and
the signals are connected. If you want to do anything before
that, the _init function should be used instead.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="72">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deactivate" invoker="deactivate">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="91">Deactivates the extension. Here, the extension should remove
all providers and panels it set.

This function is called before the extension is removed. At
this point, the plugin manager already removed all providers
and widgets this extension exported. If you want to do anything
after the extension is removed, use GObject::finalize instead.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="93">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferences_panel"
                      invoker="get_preferences_panel">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="112">Retrieve the preferences panel of @activatable if any.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-activatable.c"
               line="118">a #GtkWidget, or %NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="114">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="gtd_activatable_activate">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="70">Activates the extension. This is the starting point where
the implementation does everything it needs to do. Avoid
doing it earlier than this call.

This function is called after the extension is loaded and
the signals are connected. If you want to do anything before
that, the _init function should be used instead.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="72">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="deactivate" c:identifier="gtd_activatable_deactivate">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="91">Deactivates the extension. Here, the extension should remove
all providers and panels it set.

This function is called before the extension is removed. At
this point, the plugin manager already removed all providers
and widgets this extension exported. If you want to do anything
after the extension is removed, use GObject::finalize instead.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="93">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_preferences_panel"
              c:identifier="gtd_activatable_get_preferences_panel"
              glib:get-property="preferences-panel">
        <doc xml:space="preserve"
             filename="src/core/gtd-activatable.c"
             line="112">Retrieve the preferences panel of @activatable if any.</doc>
        <source-position filename="src/core/gtd-activatable.h" line="48"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-activatable.c"
               line="118">a #GtkWidget, or %NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="114">a #GtdActivatable</doc>
            <type name="Activatable" c:type="GtdActivatable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="preferences-panel"
                transfer-ownership="none"
                getter="get_preferences_panel">
        <type name="Gtk.Widget"/>
      </property>
    </interface>
    <record name="ActivatableInterface"
            c:type="GtdActivatableInterface"
            glib:is-gtype-struct-for="Activatable">
      <source-position filename="src/core/gtd-activatable.h" line="42"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="src/core/gtd-activatable.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="activatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-activatable.c"
                   line="72">a #GtdActivatable</doc>
              <type name="Activatable" c:type="GtdActivatable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deactivate">
        <callback name="deactivate">
          <source-position filename="src/core/gtd-activatable.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="activatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-activatable.c"
                   line="93">a #GtdActivatable</doc>
              <type name="Activatable" c:type="GtdActivatable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_preferences_panel">
        <callback name="get_preferences_panel">
          <source-position filename="src/core/gtd-activatable.h" line="41"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-activatable.c"
                 line="118">a #GtkWidget, or %NULL</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="activatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-activatable.c"
                   line="114">a #GtdActivatable</doc>
              <type name="Activatable" c:type="GtdActivatable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="Animatable" c:type="GtdAnimatable" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="27"/>
    </record>
    <record name="Application"
            c:type="GtdApplication"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="28"/>
    </record>
    <class name="BinLayout"
           c:symbol-prefix="bin_layout"
           c:type="GtdBinLayout"
           parent="Gtk.LayoutManager"
           glib:type-name="GtdBinLayout"
           glib:get-type="gtd_bin_layout_get_type"
           glib:type-struct="BinLayoutClass">
      <source-position filename="src/gui/gtd-bin-layout.h" line="28"/>
      <constructor name="new" c:identifier="gtd_bin_layout_new">
        <source-position filename="src/gui/gtd-bin-layout.h" line="30"/>
        <return-value transfer-ownership="full">
          <type name="Gtk.LayoutManager" c:type="GtkLayoutManager*"/>
        </return-value>
      </constructor>
    </class>
    <record name="BinLayoutClass"
            c:type="GtdBinLayoutClass"
            glib:is-gtype-struct-for="BinLayout">
      <source-position filename="src/gui/gtd-bin-layout.h" line="28"/>
      <field name="parent_class">
        <type name="Gtk.LayoutManagerClass" c:type="GtkLayoutManagerClass"/>
      </field>
    </record>
    <class name="Clock"
           c:symbol-prefix="clock"
           c:type="GtdClock"
           parent="Object"
           glib:type-name="GtdClock"
           glib:get-type="gtd_clock_get_type"
           glib:type-struct="ClockClass">
      <source-position filename="src/core/gtd-clock.h" line="29"/>
      <constructor name="new" c:identifier="gtd_clock_new">
        <source-position filename="src/core/gtd-clock.h" line="31"/>
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GtdClock*"/>
        </return-value>
      </constructor>
      <glib:signal name="day-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="hour-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="minute-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ClockClass"
            c:type="GtdClockClass"
            glib:is-gtype-struct-for="Clock">
      <source-position filename="src/core/gtd-clock.h" line="29"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GtdObjectClass"/>
      </field>
    </record>
    <record name="DoneButton" c:type="GtdDoneButton" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="30"/>
    </record>
    <callback name="ErrorActionFunc" c:type="GtdErrorActionFunc">
      <source-position filename="src/core/gtd-manager.h" line="35"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="notification" transfer-ownership="none">
          <type name="Notification" c:type="GtdNotification*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="InitialSetupWindow"
            c:type="GtdInitialSetupWindow"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="32"/>
    </record>
    <record name="Interval" c:type="GtdInterval" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="31"/>
    </record>
    <class name="ListModelFilter"
           c:symbol-prefix="list_model_filter"
           c:type="GtdListModelFilter"
           parent="GObject.Object"
           glib:type-name="GtdListModelFilter"
           glib:get-type="gtd_list_model_filter_get_type"
           glib:type-struct="ListModelFilterClass">
      <source-position filename="src/models/gtd-list-model-filter.h"
                       line="31"/>
      <implements name="Gio.ListModel"/>
      <constructor name="new" c:identifier="gtd_list_model_filter_new">
        <source-position filename="src/models/gtd-list-model-filter.h"
                         line="33"/>
        <return-value transfer-ownership="full">
          <type name="ListModelFilter" c:type="GtdListModelFilter*"/>
        </return-value>
        <parameters>
          <parameter name="child_model" transfer-ownership="none">
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_child_model"
              c:identifier="gtd_list_model_filter_get_child_model"
              glib:get-property="child-model">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-model-filter.c"
             line="463">Gets the child model that is being filtered.</doc>
        <source-position filename="src/models/gtd-list-model-filter.h"
                         line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/models/gtd-list-model-filter.c"
               line="469">A #GListModel.</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-model-filter.c"
                 line="465">A #GtdListModelFilter</doc>
            <type name="ListModelFilter" c:type="GtdListModelFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="invalidate"
              c:identifier="gtd_list_model_filter_invalidate">
        <source-position filename="src/models/gtd-list-model-filter.h"
                         line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ListModelFilter" c:type="GtdListModelFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_filter_func"
              c:identifier="gtd_list_model_filter_set_filter_func">
        <source-position filename="src/models/gtd-list-model-filter.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ListModelFilter" c:type="GtdListModelFilter*"/>
          </instance-parameter>
          <parameter name="filter_func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <type name="ListModelFilterFunc" c:type="GtdListModelFilterFunc"/>
          </parameter>
          <parameter name="filter_func_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="filter_func_data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="child-model"
                transfer-ownership="none"
                getter="get_child_model">
        <type name="Gio.ListModel"/>
      </property>
    </class>
    <record name="ListModelFilterClass"
            c:type="GtdListModelFilterClass"
            glib:is-gtype-struct-for="ListModelFilter">
      <source-position filename="src/models/gtd-list-model-filter.h"
                       line="31"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="ListModelFilterFunc" c:type="GtdListModelFilterFunc">
      <source-position filename="src/models/gtd-list-model-filter.h"
                       line="28"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="ListStore"
           c:symbol-prefix="list_store"
           c:type="GtdListStore"
           parent="GObject.Object"
           glib:type-name="GtdListStore"
           glib:get-type="gtd_list_store_get_type"
           glib:type-struct="ListStoreClass">
      <doc xml:space="preserve"
           filename="src/models/gtd-list-store.c"
           line="27">#GtdListStore is a simple implementation of #GListModel that stores all
items in memory.

It provides insertions, deletions, and lookups in logarithmic time
with a fast path for the common case of iterating the list linearly.</doc>
      <source-position filename="src/models/gtd-list-store.h" line="29"/>
      <implements name="Gio.ListModel"/>
      <constructor name="new" c:identifier="gtd_list_store_new">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="240">Creates a new #GtdListStore with items of type @item_type. @item_type
must be a subclass of #GObject.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/models/gtd-list-store.c"
               line="247">a new #GtdListStore</doc>
          <type name="ListStore" c:type="GtdListStore*"/>
        </return-value>
        <parameters>
          <parameter name="item_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="242">the #GType of items in the list</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append" c:identifier="gtd_list_store_append">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="362">Appends @item to @store. @item must be of type #GtdListStore:item-type.

This function takes a ref on @item.

Use gtd_list_store_splice() to append multiple items at the same time
efficiently.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="364">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="365">the new item</doc>
            <type name="GObject.Object" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_item_position"
              c:identifier="gtd_list_store_get_item_position">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="545">Retrieves the position of @items inside @store. It is a programming
error to pass an @item that is not contained in @store.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/models/gtd-list-store.c"
               line="553">the position of @item in @store.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="547">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="item"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="548">the item to retrieve the position</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="gtd_list_store_insert">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="262">Inserts @item into @store at @position. @item must be of type
#GtdListStore:item-type or derived from it. @position must be smaller
than the length of the list, or equal to it to append.

This function takes a ref on @item.

Use gtd_list_store_splice() to insert multiple items at the same time
efficiently.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="264">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="265">the position at which to insert the new item</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="266">the new item</doc>
            <type name="GObject.Object" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_sorted" c:identifier="gtd_list_store_insert_sorted">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="297">Inserts @item into @store at a position to be determined by the
@compare_func.

The list must already be sorted before calling this function or the
result is undefined.  Usually you would approach this by only ever
inserting items by way of this function.

This function takes a ref on @item.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/models/gtd-list-store.c"
               line="313">the position at which @item was inserted</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="299">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="300">the new item</doc>
            <type name="GObject.Object" c:type="gpointer"/>
          </parameter>
          <parameter name="compare_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="301">pairwise comparison function for sorting</doc>
            <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="302">user data for @compare_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gtd_list_store_remove">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="392">Removes the item from @store.

Use gtd_list_store_splice() to remove multiple items at the same time
efficiently.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="394">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="item"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="395">the item that is to be removed</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all" c:identifier="gtd_list_store_remove_all">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="451">Removes all items from @store.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="453">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_at_position"
              c:identifier="gtd_list_store_remove_at_position">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="424">Removes the item from @store that is at @position. @position must be
smaller than the current length of the list.

Use gtd_list_store_splice() to remove multiple items at the same time
efficiently.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="426">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="427">the position of the item that is to be removed</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort" c:identifier="gtd_list_store_sort">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="338">Sort the items in @store according to @compare_func.</doc>
        <source-position filename="src/models/gtd-list-store.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="340">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="compare_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="341">pairwise comparison function for sorting</doc>
            <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="342">user data for @compare_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice" c:identifier="gtd_list_store_splice">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="472">Changes @store by removing @n_removals items and adding @n_additions
items to it. @additions must contain @n_additions items of type
#GtdListStore:item-type.  %NULL is not permitted.

This function is more efficient than gtd_list_store_insert() and
gtd_list_store_remove(), because it only emits
#GListModel::items-changed once for the change.

This function takes a ref on each item in @additions.

The parameters @position and @n_removals must be correct (ie:
@position + @n_removals must be less than or equal to the length of
the list at the time this function is called).</doc>
        <source-position filename="src/models/gtd-list-store.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="474">a #GtdListStore</doc>
            <type name="ListStore" c:type="GtdListStore*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="475">the position at which to make the change</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_removals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="476">the number of items to remove</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="additions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="477">the items to add</doc>
            <array length="3" zero-terminated="0" c:type="gpointer*">
              <type name="GObject.Object"/>
            </array>
          </parameter>
          <parameter name="n_additions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/models/gtd-list-store.c"
                 line="478">the number of items to add</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="item-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/models/gtd-list-store.c"
             line="168">The type of items contained in this list store. Items must be
subclasses of #GObject.</doc>
        <type name="GType" c:type="GType"/>
      </property>
    </class>
    <record name="ListStoreClass"
            c:type="GtdListStoreClass"
            glib:is-gtype-struct-for="ListStore">
      <source-position filename="src/models/gtd-list-store.h" line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ListView" c:type="GtdListView" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="33"/>
    </record>
    <class name="Manager"
           c:symbol-prefix="manager"
           c:type="GtdManager"
           parent="Object"
           glib:type-name="GtdManager"
           glib:get-type="gtd_manager_get_type"
           glib:type-struct="ManagerClass">
      <source-position filename="src/core/gtd-manager.h" line="30"/>
      <constructor name="new" c:identifier="gtd_manager_new">
        <source-position filename="src/core/gtd-manager.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="Manager" c:type="GtdManager*"/>
        </return-value>
      </constructor>
      <function name="get_default" c:identifier="gtd_manager_get_default">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="527">Retrieves the singleton #GtdManager instance. You should always
use this function instead of @gtd_manager_new.</doc>
        <source-position filename="src/core/gtd-manager.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="533">the singleton #GtdManager instance.</doc>
          <type name="Manager" c:type="GtdManager*"/>
        </return-value>
      </function>
      <method name="add_provider" c:identifier="gtd_manager_add_provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="567">Adds @provider to the list of providers.</doc>
        <source-position filename="src/core/gtd-manager.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="569">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="570">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_error_message"
              c:identifier="gtd_manager_emit_error_message"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="758">Reports an error.</doc>
        <source-position filename="src/core/gtd-manager.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="761">the title of the error</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="762">detailed description of the error</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="function"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="763">function to be called when the notification is dismissed</doc>
            <type name="ErrorActionFunc" c:type="GtdErrorActionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="764">user data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_tasks_model"
              c:identifier="gtd_manager_get_all_tasks_model">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="840">Retrieves the #GListModel containing #GtdTasks from
@self. You can use the this model to bind to GtkListBox
or other widgets.

The model is sorted.</doc>
        <source-position filename="src/core/gtd-manager.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="850">a #GListModel</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="842">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_clock"
              c:identifier="gtd_manager_get_clock"
              glib:get-property="clock">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="802">Retrieves the #GtdClock from @self. You can use the
clock to know when your code should be updated.</doc>
        <source-position filename="src/core/gtd-manager.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="809">a #GtdClock</doc>
          <type name="Clock" c:type="GtdClock*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="804">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_provider"
              c:identifier="gtd_manager_get_default_provider"
              glib:get-property="default-provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="647">Retrieves the default provider location. Default is "local".</doc>
        <source-position filename="src/core/gtd-manager.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="653">the default provider.</doc>
          <type name="Provider" c:type="GtdProvider*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="649">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inbox" c:identifier="gtd_manager_get_inbox">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="686">Retrieves the local inbox.</doc>
        <source-position filename="src/core/gtd-manager.h" line="56"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="692">a #GtdTaskList</doc>
          <type name="TaskList" c:type="GtdTaskList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="688">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inbox_model"
              c:identifier="gtd_manager_get_inbox_model">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="884">Retrieves the #GListModel containing #GtdTaskLists that are
inbox.</doc>
        <source-position filename="src/core/gtd-manager.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="891">a #GListModel</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="886">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_first_run"
              c:identifier="gtd_manager_get_is_first_run">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="726">Retrieves the 'first-run' setting.</doc>
        <source-position filename="src/core/gtd-manager.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="732">%TRUE if GNOME To Do was never run before, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="728">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_providers" c:identifier="gtd_manager_get_providers">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="550">Retrieves the list of available #GtdProvider.</doc>
        <source-position filename="src/core/gtd-manager.h" line="43"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="556">a newly allocated #GList of
#GtdStorage. Free with @g_list_free after use.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Provider"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="552">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_providers_model"
              c:identifier="gtd_manager_get_providers_model">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="901">Retrieves the #GListModel containing #GtdProviders.</doc>
        <source-position filename="src/core/gtd-manager.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="907">a #GListModel</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="903">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_settings" c:identifier="gtd_manager_get_settings">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="710">Retrieves the internal #GSettings from @manager.</doc>
        <source-position filename="src/core/gtd-manager.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="716">the internal #GSettings of @manager</doc>
          <type name="Gio.Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="712">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_task_lists_model"
              c:identifier="gtd_manager_get_task_lists_model">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="819">Retrieves the #GListModel containing #GtdTaskLists from
@self. You can use the this model to bind to GtkListBox
or other widgets.

The model is sorted.</doc>
        <source-position filename="src/core/gtd-manager.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="829">a #GListModel</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="821">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tasks_model"
              c:identifier="gtd_manager_get_tasks_model">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="860">Retrieves the #GListModel containing #GtdTasks from
@self. You can use the this model to bind to GtkListBox
or other widgets.

The model returned by this function is filtered to only
contain tasks from unarchived lists. If you need all tasks,
see gtd_manager_get_all_tasks_model().

The model is sorted.</doc>
        <source-position filename="src/core/gtd-manager.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-manager.c"
               line="874">a #GListModel</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="862">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_provider"
              c:identifier="gtd_manager_remove_provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="609">Removes @provider from the list of providers.</doc>
        <source-position filename="src/core/gtd-manager.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="611">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="612">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_notification"
              c:identifier="gtd_manager_send_notification">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="786">Sends a notification to the notification system.</doc>
        <source-position filename="src/core/gtd-manager.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="788">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="789">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_provider"
              c:identifier="gtd_manager_set_default_provider"
              glib:set-property="default-provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="663">Sets the provider.</doc>
        <source-position filename="src/core/gtd-manager.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="665">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="provider"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="666">the default provider.</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_first_run"
              c:identifier="gtd_manager_set_is_first_run">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="742">Sets the 'first-run' setting.</doc>
        <source-position filename="src/core/gtd-manager.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="744">a #GtdManager</doc>
            <type name="Manager" c:type="GtdManager*"/>
          </instance-parameter>
          <parameter name="is_first_run" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="745">%TRUE to make it first run, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="clock" transfer-ownership="none" getter="get_clock">
        <type name="Clock"/>
      </property>
      <property name="default-provider"
                writable="1"
                transfer-ownership="none"
                setter="set_default_provider"
                getter="get_default_provider">
        <type name="Provider"/>
      </property>
      <property name="plugin-manager"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <glib:signal name="list-added" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="365">The ::list-added signal is emmited after a #GtdTaskList
is connected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="368">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="list-changed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="384">The ::list-changed signal is emmited after a #GtdTaskList
has any of it's properties changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="387">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="list-removed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="403">The ::list-removed signal is emmited after a #GtdTaskList
is disconnected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="406">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="provider-added" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="465">The ::provider-added signal is emmited after a #GtdProvider
is added.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="468">a #GtdProvider</doc>
            <type name="Provider"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="provider-removed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="484">The ::provider-removed signal is emmited after a #GtdProvider
is removed from the list.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="487">a #GtdProvider</doc>
            <type name="Provider"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show-error-message" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="422">Notifies about errors, and sends the error message for widgets
to display.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="primary_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="425">the primary message</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="secondary_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="426">the detailed explanation of the error or the text to the notification button.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="427">optionally action of type GtdNotificationActionFunc ignored if it's null.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="428">user data passed to the action.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show-notification" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-manager.c"
             line="447">Sends a notification.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-manager.c"
                 line="450">the #GtdNotification</doc>
            <type name="Notification"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ManagerClass"
            c:type="GtdManagerClass"
            glib:is-gtype-struct-for="Manager">
      <source-position filename="src/core/gtd-manager.h" line="30"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GtdObjectClass"/>
      </field>
    </record>
    <record name="MarkdownRenderer"
            c:type="GtdMarkdownRenderer"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="35"/>
    </record>
    <class name="MaxSizeLayout"
           c:symbol-prefix="max_size_layout"
           c:type="GtdMaxSizeLayout"
           parent="Gtk.LayoutManager"
           glib:type-name="GtdMaxSizeLayout"
           glib:get-type="gtd_max_size_layout_get_type"
           glib:type-struct="MaxSizeLayoutClass">
      <source-position filename="src/gui/gtd-max-size-layout.h" line="28"/>
      <constructor name="new" c:identifier="gtd_max_size_layout_new">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="306">Creates a new #GtdMaxSizeLayout.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="30"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/gui/gtd-max-size-layout.c"
               line="311">a #GtdMaxSizeLayout</doc>
          <type name="Gtk.LayoutManager" c:type="GtkLayoutManager*"/>
        </return-value>
      </constructor>
      <method name="get_max_height"
              c:identifier="gtd_max_size_layout_get_max_height"
              glib:get-property="max-height">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="319">Retrieves the maximum height of @self.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-max-size-layout.c"
               line="324">maximum height</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_width"
              c:identifier="gtd_max_size_layout_get_max_width"
              glib:get-property="max-width">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="357">Retrieves the maximum width of @self.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-max-size-layout.c"
               line="362">maximum width</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_width_chars"
              c:identifier="gtd_max_size_layout_get_max_width_chars"
              glib:get-property="max-width-chars">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="396">Retrieves the maximum width in characters of @self.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-max-size-layout.c"
               line="401">maximum width in characters</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width_chars"
              c:identifier="gtd_max_size_layout_get_width_chars"
              glib:get-property="width-chars">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="436">Retrieves the minimum width in characters of @self.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-max-size-layout.c"
               line="441">minimum width in characters</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_max_height"
              c:identifier="gtd_max_size_layout_set_max_height"
              glib:set-property="max-height">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="334">Sets the maximum height @self has.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-max-size-layout.c"
                 line="336">a #GtdMaxSizeLayout</doc>
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
          <parameter name="max_height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_width"
              c:identifier="gtd_max_size_layout_set_max_width"
              glib:set-property="max-width">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="373">Sets the maximum width @self has.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-max-size-layout.c"
                 line="375">a #GtdMaxSizeLayout</doc>
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
          <parameter name="max_width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_width_chars"
              c:identifier="gtd_max_size_layout_set_max_width_chars"
              glib:set-property="max-width-chars">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="411">Sets the maximum width @self has, in characters length. It is a programming
error to set a value smaller than #GtdMaxSizeLayout:width-layout.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-max-size-layout.c"
                 line="413">a #GtdMaxSizeLayout</doc>
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
          <parameter name="max_width_chars" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width_chars"
              c:identifier="gtd_max_size_layout_set_width_chars"
              glib:set-property="width-chars">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="451">Sets the minimum width @self has, in characters length. It is a programming
error to set a value bigger than #GtdMaxSizeLayout:max-width-layout.</doc>
        <source-position filename="src/gui/gtd-max-size-layout.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-max-size-layout.c"
                 line="453">a #GtdMaxSizeLayout</doc>
            <type name="MaxSizeLayout" c:type="GtdMaxSizeLayout*"/>
          </instance-parameter>
          <parameter name="width_chars" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="max-height"
                writable="1"
                transfer-ownership="none"
                setter="set_max_height"
                getter="get_max_height"
                default-value="-1">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="242">Sets the maximum height of the #GtkWidget.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-width"
                writable="1"
                transfer-ownership="none"
                setter="set_max_width"
                getter="get_max_width"
                default-value="-1">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="255">Sets the maximum width of the #GtkWidget.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-width-chars"
                writable="1"
                transfer-ownership="none"
                setter="set_max_width_chars"
                getter="get_max_width_chars"
                default-value="-1">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="268">Sets the maximum size of the #GtkWidget in characters.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="width-chars"
                writable="1"
                transfer-ownership="none"
                setter="set_width_chars"
                getter="get_width_chars"
                default-value="-1">
        <doc xml:space="preserve"
             filename="src/gui/gtd-max-size-layout.c"
             line="281">Sets the size of the #GtkWidget in characters.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="MaxSizeLayoutClass"
            c:type="GtdMaxSizeLayoutClass"
            glib:is-gtype-struct-for="MaxSizeLayout">
      <source-position filename="src/gui/gtd-max-size-layout.h" line="28"/>
      <field name="parent_class">
        <type name="Gtk.LayoutManagerClass" c:type="GtkLayoutManagerClass"/>
      </field>
    </record>
    <class name="MenuButton"
           c:symbol-prefix="menu_button"
           c:type="GtdMenuButton"
           parent="Gtk.Widget"
           glib:type-name="GtdMenuButton"
           glib:get-type="gtd_menu_button_get_type"
           glib:type-struct="MenuButtonClass">
      <source-position filename="src/gui/gtd-menu-button.h" line="33"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="gtd_menu_button_new">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="527">Creates a new #GtdMenuButton widget with downwards-pointing
arrow as the only child. You can replace the child widget
with another #GtkWidget should you wish to.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="534">The newly created #GtdMenuButton widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_align_widget"
              c:identifier="gtd_menu_button_get_align_widget"
              glib:get-property="align-widget">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="638">Returns the parent #GtkWidget to use to line up with menu.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="644">a #GtkWidget value or %NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_direction"
              c:identifier="gtd_menu_button_get_direction"
              glib:get-property="direction">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="695">Returns the direction the popup will be pointing at when popped up.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="701">a #GtkArrowType value</doc>
          <type name="Gtk.ArrowType" c:type="GtkArrowType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gicon"
              c:identifier="gtd_menu_button_get_gicon"
              glib:get-property="gicon"
              introspectable="0">
        <source-position filename="src/gui/gtd-menu-button.h" line="74"/>
        <return-value>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_frame"
              c:identifier="gtd_menu_button_get_has_frame"
              glib:get-property="has-frame">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="921">Returns whether the button has a frame.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="927">%TRUE if the button has a frame</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gtd_menu_button_get_label"
              glib:get-property="label">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="873">Gets the label shown in the button</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="879">the label shown in the button</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_menu_model"
              c:identifier="gtd_menu_button_get_menu_model"
              glib:get-property="menu-model">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="589">Returns the #GMenuModel used to generate the popup.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="62"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="595">a #GMenuModel or %NULL</doc>
          <type name="Gio.MenuModel" c:type="GMenuModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_popover"
              c:identifier="gtd_menu_button_get_popover"
              glib:get-property="popover">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="765">Returns the #GtkPopover that pops out of the button.
If the button is not using a #GtkPopover, this function
returns %NULL.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="52"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="773">a #GtkPopover or %NULL</doc>
          <type name="Gtk.Popover" c:type="GtkPopover*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="gtd_menu_button_get_use_underline"
              glib:get-property="use-underline">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="1038">Returns whether an embedded underline in the text indicates a
mnemonic. See gtd_menu_button_set_use_underline().</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-menu-button.c"
               line="1045">%TRUE whether an embedded underline in the text indicates
    the mnemonic accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="popdown" c:identifier="gtd_menu_button_popdown">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="955">Dismiss the menu.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="popup" c:identifier="gtd_menu_button_popup">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="939">Pop up the menu.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_align_widget"
              c:identifier="gtd_menu_button_set_align_widget"
              glib:set-property="align-widget">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="607">Sets the #GtkWidget to use to line the menu with when popped up.
Note that the @align_widget must contain the #GtdMenuButton itself.

Setting it to %NULL means that the menu will be aligned with the
button itself.

Note that this property is only used with menus currently,
and not for popovers.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="align_widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="610">a #GtkWidget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_create_popup_func"
              c:identifier="gtd_menu_button_set_create_popup_func">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="971">Sets @func to be called when a popup is about to be shown.
@func should use one of

 - gtd_menu_button_set_popover()
 - gtd_menu_button_set_menu_model()

to set a popup for @menu_button.
If @func is non-%NULL, @menu_button will always be sensitive.

Using this function will not reset the menu widget attached to @menu_button.
Instead, this can be done manually in @func.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="974">function to call when a popuop is about to
  be shown, but none has been provided via other means, or %NULL
  to reset to default behavior.</doc>
            <type name="MenuButtonCreatePopupFunc"
                  c:type="GtdMenuButtonCreatePopupFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="977">user data to pass to @func.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="978">destroy notify for @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_direction"
              c:identifier="gtd_menu_button_set_direction"
              glib:set-property="direction">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="656">Sets the direction in which the popup will be popped up, as
well as changing the arrow’s direction. The child will not
be changed to an arrow if it was customized.

If the does not fit in the available space in the given direction,
GTK+ will its best to keep it inside the screen and fully visible.

If you pass %GTK_ARROW_NONE for a @direction, the popup will behave
as if you passed %GTK_ARROW_DOWN (although you won’t see any arrows).</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="659">a #GtkArrowType</doc>
            <type name="Gtk.ArrowType" c:type="GtkArrowType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gicon"
              c:identifier="gtd_menu_button_set_gicon"
              glib:set-property="gicon">
        <source-position filename="src/gui/gtd-menu-button.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_has_frame"
              c:identifier="gtd_menu_button_set_has_frame"
              glib:set-property="has-frame">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="899">Sets the style of the button.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="has_frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="902">whether the button should have a visible frame</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gtd_menu_button_set_label"
              glib:set-property="label">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="837">Sets the label to show inside the menu button.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="840">the label</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_menu_model"
              c:identifier="gtd_menu_button_set_menu_model"
              glib:set-property="menu-model">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="542">Sets the #GMenuModel from which the popup will be constructed,
or %NULL to dissociate any existing menu model and disable the button.

A #GtkPopover will be created from the menu model with gtk_popover_menu_new_from_model().
Actions will be connected as documented for this function.

If #GtdMenuButton:popover is already set, it will be dissociated from the @menu_button,
and the property is set to %NULL.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="menu_model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="545">a #GMenuModel, or %NULL to unset and disable the
  button</doc>
            <type name="Gio.MenuModel" c:type="GMenuModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_popover"
              c:identifier="gtd_menu_button_set_popover"
              glib:set-property="popover">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="713">Sets the #GtkPopover that will be popped up when the @menu_button is clicked,
or %NULL to dissociate any existing popover and disable the button.

If #GtdMenuButton:menu-model is set, the menu model is dissociated from the
@menu_button, and the property is set to %NULL.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="popover"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="716">a #GtkPopover, or %NULL to unset and disable the button</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="gtd_menu_button_set_use_underline"
              glib:set-property="use-underline">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="1012">If true, an underline in the text indicates the next character should be
used for the mnemonic accelerator key.</doc>
        <source-position filename="src/gui/gtd-menu-button.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="MenuButton" c:type="GtdMenuButton*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-menu-button.c"
                 line="1015">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="align-widget"
                writable="1"
                transfer-ownership="none"
                setter="set_align_widget"
                getter="get_align_widget">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="428">The #GtkWidget to use to align the menu with.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="direction"
                writable="1"
                transfer-ownership="none"
                setter="set_direction"
                getter="get_direction"
                default-value="GTK_ARROW_DOWN">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="440">The #GtkArrowType representing the direction in which the
menu or popover will be popped out.</doc>
        <type name="Gtk.ArrowType"/>
      </property>
      <property name="gicon"
                writable="1"
                transfer-ownership="none"
                setter="set_gicon"
                getter="get_gicon">
        <type name="Gio.Icon"/>
      </property>
      <property name="has-frame"
                writable="1"
                transfer-ownership="none"
                setter="set_has_frame"
                getter="get_has_frame"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="label"
                writable="1"
                transfer-ownership="none"
                setter="set_label"
                getter="get_label"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="menu-model"
                writable="1"
                transfer-ownership="none"
                setter="set_menu_model"
                getter="get_menu_model">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="413">The #GMenuModel from which the popup will be created.

See gtd_menu_button_set_menu_model() for the interaction with the
#GtdMenuButton:popup property.</doc>
        <type name="Gio.MenuModel"/>
      </property>
      <property name="popover"
                writable="1"
                transfer-ownership="none"
                setter="set_popover"
                getter="get_popover">
        <doc xml:space="preserve"
             filename="src/gui/gtd-menu-button.c"
             line="454">The #GtkPopover that will be popped up when the button is clicked.</doc>
        <type name="Gtk.Popover"/>
      </property>
      <property name="use-underline"
                writable="1"
                transfer-ownership="none"
                setter="set_use_underline"
                getter="get_use_underline"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
    </class>
    <record name="MenuButtonClass"
            c:type="GtdMenuButtonClass"
            glib:is-gtype-struct-for="MenuButton">
      <source-position filename="src/gui/gtd-menu-button.h" line="33"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <callback name="MenuButtonCreatePopupFunc"
              c:type="GtdMenuButtonCreatePopupFunc">
      <doc xml:space="preserve"
           filename="src/gui/gtd-menu-button.h"
           line="35">User-provided callback function to create a popup for @menu_button on demand.
This function is called when the popoup of @menu_button is shown, but none has
been provided via gtd_menu_buton_set_popup(), gtd_menu_button_set_popover()
or gtd_menu_button_set_menu_model().</doc>
      <source-position filename="src/gui/gtd-menu-button.h" line="44"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="MenuButton" c:type="GtdMenuButton*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Notification"
           c:symbol-prefix="notification"
           c:type="GtdNotification"
           parent="Object"
           glib:type-name="GtdNotification"
           glib:get-type="gtd_notification_get_type"
           glib:type-struct="NotificationClass">
      <source-position filename="src/core/gtd-notification.h" line="32"/>
      <constructor name="new" c:identifier="gtd_notification_new">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="310">Creates a new notification with @text and @timeout. If @timeout is
0, the notification is indefinitely displayed.</doc>
        <source-position filename="src/core/gtd-notification.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-notification.c"
               line="318">a new #GtdNotification</doc>
          <type name="Notification" c:type="GtdNotification*"/>
        </return-value>
        <parameters>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="312">text of the notification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="313">time for the notification to stay visible</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="execute_primary_action"
              c:identifier="gtd_notification_execute_primary_action">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="489">Executes the primary action of @notification if set.</doc>
        <source-position filename="src/core/gtd-notification.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="491">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="execute_secondary_action"
              c:identifier="gtd_notification_execute_secondary_action">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="510">Executes the secondary action of @notification if any.</doc>
        <source-position filename="src/core/gtd-notification.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="512">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="gtd_notification_get_text"
              glib:get-property="text">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="406">Gets the text of @notification.</doc>
        <source-position filename="src/core/gtd-notification.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-notification.c"
               line="412">the text of @notification.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="408">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timeout"
              c:identifier="gtd_notification_get_timeout"
              glib:get-property="timeout">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="448">Retrieves the timeout of @notification.</doc>
        <source-position filename="src/core/gtd-notification.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-notification.c"
               line="453">the timeout of @notification.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_primary_action"
              c:identifier="gtd_notification_set_primary_action">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="330">Sets the primary action of @notification, which is triggered
on dismiss or timeout.</doc>
        <source-position filename="src/core/gtd-notification.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="332">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="333">the primary action function</doc>
            <type name="NotificationActionFunc"
                  c:type="GtdNotificationActionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="334">data passed to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_secondary_action"
              c:identifier="gtd_notification_set_secondary_action">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="363">Sets the secondary action of @notification, which is triggered
only on user explicit input.</doc>
        <source-position filename="src/core/gtd-notification.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="365">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="366">the name of the secondary action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="367">the secondary action function</doc>
            <type name="NotificationActionFunc"
                  c:type="GtdNotificationActionFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="368">data passed to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text"
              c:identifier="gtd_notification_set_text"
              glib:set-property="text">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="422">Sets the text of @notification to @text.</doc>
        <source-position filename="src/core/gtd-notification.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="424">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="425">the user-visible text of @notification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeout"
              c:identifier="gtd_notification_set_timeout"
              glib:set-property="timeout">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="463">Sets the timeout of @notification to @timeout. Set it to %0 to disable
the timeout.</doc>
        <source-position filename="src/core/gtd-notification.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="465">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="466">the time to wait before running @notification, in miliseconds</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="gtd_notification_start">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="535">Starts the timeout of notification. Use gtd_notification_stop()
to stop it.</doc>
        <source-position filename="src/core/gtd-notification.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="537">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop" c:identifier="gtd_notification_stop">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="565">Stops the timeout of notification. Use gtd_notification_start()
to start it.</doc>
        <source-position filename="src/core/gtd-notification.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-notification.c"
                 line="567">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="has-primary-action"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-secondary-action"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="secondary-action-name"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="text"
                writable="1"
                transfer-ownership="none"
                setter="set_text"
                getter="get_text">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="timeout"
                writable="1"
                transfer-ownership="none"
                setter="set_timeout"
                getter="get_timeout"
                default-value="7500.000000">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <glib:signal name="executed" when="first">
        <doc xml:space="preserve"
             filename="src/core/gtd-notification.c"
             line="284">The ::executed signal is emmited after the primary or secondary
#GtdNotification action is executed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <callback name="NotificationActionFunc" c:type="GtdNotificationActionFunc">
      <doc xml:space="preserve"
           filename="src/core/gtd-notification.h"
           line="34">Will be called when the primary or secondary action of @notification
is executed.</doc>
      <source-position filename="src/core/gtd-notification.h" line="42"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="notification" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-notification.h"
               line="36">the #GtdNotification running the function</doc>
          <type name="Notification" c:type="GtdNotification*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-notification.h"
               line="37">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="NotificationClass"
            c:type="GtdNotificationClass"
            glib:is-gtype-struct-for="Notification">
      <source-position filename="src/core/gtd-notification.h" line="32"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GtdObjectClass"/>
      </field>
    </record>
    <record name="NotificationWidget"
            c:type="GtdNotificationWidget"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="37"/>
    </record>
    <class name="Object"
           c:symbol-prefix="object"
           c:type="GtdObject"
           parent="GObject.Object"
           glib:type-name="GtdObject"
           glib:get-type="gtd_object_get_type"
           glib:type-struct="ObjectClass">
      <source-position filename="src/core/gtd-object.h" line="39"/>
      <constructor name="new" c:identifier="gtd_object_new">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="190">Creates a new #GtdObject object.</doc>
        <source-position filename="src/core/gtd-object.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-object.c"
               line="196">a new #GtdObject</doc>
          <type name="Object" c:type="GtdObject*"/>
        </return-value>
        <parameters>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="192">unique identifier of the object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_uid" invoker="get_uid">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="204">Retrieves the internal unique identifier of @object.</doc>
        <source-position filename="src/core/gtd-object.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-object.c"
               line="210">the unique identifier of @object. Do
not free after usage.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="206">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_uid" invoker="set_uid">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="226">Sets the unique identifier of @object to @uid. Only
a #GtdBackend should do it.</doc>
        <source-position filename="src/core/gtd-object.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="228">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="229">the unique identifier of @object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_loading"
              c:identifier="gtd_object_get_loading"
              glib:get-property="loading">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="248">Whether @object is loading or not.</doc>
        <source-position filename="src/core/gtd-object.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-object.c"
               line="254">%TRUE if @object is loading, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="250">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid"
              c:identifier="gtd_object_get_uid"
              glib:get-property="uid">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="204">Retrieves the internal unique identifier of @object.</doc>
        <source-position filename="src/core/gtd-object.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-object.c"
               line="210">the unique identifier of @object. Do
not free after usage.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="206">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pop_loading" c:identifier="gtd_object_pop_loading">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="290">Decreases the loading counter of @object by one. The object is marked
as loading while the loading counter is greater than zero.

It is a programming error to pop more times then push the loading the
counter.</doc>
        <source-position filename="src/core/gtd-object.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="292">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_loading" c:identifier="gtd_object_push_loading">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="268">Increases the loading counter of @object by one. The object is marked
as loading while the loading counter is greater than zero.</doc>
        <source-position filename="src/core/gtd-object.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="270">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_uid"
              c:identifier="gtd_object_set_uid"
              glib:set-property="uid">
        <doc xml:space="preserve"
             filename="src/core/gtd-object.c"
             line="226">Sets the unique identifier of @object to @uid. Only
a #GtdBackend should do it.</doc>
        <source-position filename="src/core/gtd-object.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="228">a #GtdObject</doc>
            <type name="Object" c:type="GtdObject*"/>
          </instance-parameter>
          <parameter name="uid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="229">the unique identifier of @object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="loading"
                transfer-ownership="none"
                getter="get_loading"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="uid"
                writable="1"
                transfer-ownership="none"
                setter="set_uid"
                getter="get_uid"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ObjectClass"
            c:type="GtdObjectClass"
            glib:is-gtype-struct-for="Object">
      <source-position filename="src/core/gtd-object.h" line="39"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_uid">
        <callback name="get_uid">
          <source-position filename="src/core/gtd-object.h" line="36"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-object.c"
                 line="210">the unique identifier of @object. Do
not free after usage.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-object.c"
                   line="206">a #GtdObject</doc>
              <type name="Object" c:type="GtdObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_uid">
        <callback name="set_uid">
          <source-position filename="src/core/gtd-object.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-object.c"
                   line="228">a #GtdObject</doc>
              <type name="Object" c:type="GtdObject*"/>
            </parameter>
            <parameter name="uid" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-object.c"
                   line="229">the unique identifier of @object</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="OmniArea"
           c:symbol-prefix="omni_area"
           c:type="GtdOmniArea"
           parent="Widget"
           glib:type-name="GtdOmniArea"
           glib:get-type="gtd_omni_area_get_type"
           glib:type-struct="OmniAreaClass">
      <source-position filename="src/gui/gtd-omni-area.h" line="31"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <method name="push_message" c:identifier="gtd_omni_area_push_message">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area.c"
             line="168">Pushes a new message to @self.</doc>
        <source-position filename="src/gui/gtd-omni-area.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="170">a #GtdOmniArea</doc>
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="171">an identifier for this notification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="172">user visible text of the notification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="icon"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="173">a #GIcon</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="withdraw_message"
              c:identifier="gtd_omni_area_withdraw_message">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area.c"
             line="221">Withdraws a message from @self. If a message with @id doesn't
exist, nothing happens.</doc>
        <source-position filename="src/gui/gtd-omni-area.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="223">a #GtdOmniArea</doc>
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area.c"
                 line="224">an identifier for this notification</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <interface name="OmniAreaAddin"
               c:symbol-prefix="omni_area_addin"
               c:type="GtdOmniAreaAddin"
               glib:type-name="GtdOmniAreaAddin"
               glib:get-type="gtd_omni_area_addin_get_type"
               glib:type-struct="OmniAreaAddinInterface">
      <source-position filename="src/gui/gtd-omni-area-addin.h" line="41"/>
      <virtual-method name="load" invoker="load">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area-addin.c"
             line="32">Requests that the #GtdOmniAreaAddin initialize, possibly modifying
@omni_bar as necessary.</doc>
        <source-position filename="src/gui/gtd-omni-area-addin.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="34">an #GtdOmniAreaAddin</doc>
            <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
          </instance-parameter>
          <parameter name="omni_area" transfer-ownership="none">
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unload" invoker="unload">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area-addin.c"
             line="51">Requests that the #GtdOmniAreaAddin shutdown, possibly modifying
@omni_bar as necessary to return it to the original state before
the addin was loaded.</doc>
        <source-position filename="src/gui/gtd-omni-area-addin.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="53">an #GtdOmniAreaAddin</doc>
            <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
          </instance-parameter>
          <parameter name="omni_area" transfer-ownership="none">
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="load" c:identifier="gtd_omni_area_addin_load">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area-addin.c"
             line="32">Requests that the #GtdOmniAreaAddin initialize, possibly modifying
@omni_bar as necessary.</doc>
        <source-position filename="src/gui/gtd-omni-area-addin.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="34">an #GtdOmniAreaAddin</doc>
            <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
          </instance-parameter>
          <parameter name="omni_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="35">an #GtdOmniArea</doc>
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unload" c:identifier="gtd_omni_area_addin_unload">
        <doc xml:space="preserve"
             filename="src/gui/gtd-omni-area-addin.c"
             line="51">Requests that the #GtdOmniAreaAddin shutdown, possibly modifying
@omni_bar as necessary to return it to the original state before
the addin was loaded.</doc>
        <source-position filename="src/gui/gtd-omni-area-addin.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="53">an #GtdOmniAreaAddin</doc>
            <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
          </instance-parameter>
          <parameter name="omni_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-omni-area-addin.c"
                 line="54">an #GtdOmniArea</doc>
            <type name="OmniArea" c:type="GtdOmniArea*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="OmniAreaAddinInterface"
            c:type="GtdOmniAreaAddinInterface"
            glib:is-gtype-struct-for="OmniAreaAddin">
      <source-position filename="src/gui/gtd-omni-area-addin.h" line="41"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="load">
        <callback name="load">
          <source-position filename="src/gui/gtd-omni-area-addin.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-omni-area-addin.c"
                   line="34">an #GtdOmniAreaAddin</doc>
              <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
            </parameter>
            <parameter name="omni_area" transfer-ownership="none">
              <type name="OmniArea" c:type="GtdOmniArea*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unload">
        <callback name="unload">
          <source-position filename="src/gui/gtd-omni-area-addin.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-omni-area-addin.c"
                   line="53">an #GtdOmniAreaAddin</doc>
              <type name="OmniAreaAddin" c:type="GtdOmniAreaAddin*"/>
            </parameter>
            <parameter name="omni_area" transfer-ownership="none">
              <type name="OmniArea" c:type="GtdOmniArea*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="OmniAreaClass"
            c:type="GtdOmniAreaClass"
            glib:is-gtype-struct-for="OmniArea">
      <source-position filename="src/gui/gtd-omni-area.h" line="31"/>
      <field name="parent_class">
        <type name="WidgetClass" c:type="GtdWidgetClass"/>
      </field>
    </record>
    <interface name="Panel"
               c:symbol-prefix="panel"
               c:type="GtdPanel"
               glib:type-name="GtdPanel"
               glib:get-type="gtd_panel_get_type"
               glib:type-struct="PanelInterface">
      <source-position filename="src/gui/gtd-panel.h" line="54"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="activate" invoker="activate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="283">Activates the panel with @parameters. The passed parameters
are in free form, to allow panels have any input they want.

This is an optional vfunc.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="285">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
          <parameter name="parameters"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="286">parameters of the panel</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_header_widgets" invoker="get_header_widgets">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="171">Retrieves the list of widgets to be placed at headerbar. The
position of the widget is determined by the #GtkWidget::halign
property.

Widgets with @GTK_ALIGN_START halign will be packed into the
start of the headerbar, and @GTK_ALIGN_END at the end. Other
values are silently ignored.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="40"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="183">the list of #GtkWidget</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Gtk.Widget"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="173">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="211">Retrieves the icon of @self.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="44"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="217">a #GIcon</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="213">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_menu" invoker="get_menu">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="194">Retrieves the gear menu of @panel.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="200">a #GMenu</doc>
          <type name="Gio.Menu" c:type="const GMenu*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="196">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_panel_name" invoker="get_panel_name">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="137">Retrieves the name of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="143">the name of @panel</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="139">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_panel_title" invoker="get_panel_title">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="154">Retrieves the title of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="160">the title of @panel</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="156">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_popover" invoker="get_popover">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="228">Retrieves the popover of @self. It is used as the
window menu when available.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="235">a #GtkPopover</doc>
          <type name="Gtk.Popover" c:type="GtkPopover*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="230">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_priority" invoker="get_priority">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="248">Retrieves the priority of @self. This value is used to
determine the position of the panel in the sidebar.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="255">the priority of @self</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="250">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_subtitle" invoker="get_subtitle">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="266">Retrieves the subtitle of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="272">the subtitle of @panel</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="268">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="gtd_panel_activate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="283">Activates the panel with @parameters. The passed parameters
are in free form, to allow panels have any input they want.

This is an optional vfunc.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="285">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
          <parameter name="parameters"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="286">parameters of the panel</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_header_widgets"
              c:identifier="gtd_panel_get_header_widgets">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="171">Retrieves the list of widgets to be placed at headerbar. The
position of the widget is determined by the #GtkWidget::halign
property.

Widgets with @GTK_ALIGN_START halign will be packed into the
start of the headerbar, and @GTK_ALIGN_END at the end. Other
values are silently ignored.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="60"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="183">the list of #GtkWidget</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Gtk.Widget"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="173">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gtd_panel_get_icon"
              glib:get-property="icon">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="211">Retrieves the icon of @self.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="64"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="217">a #GIcon</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="213">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_menu"
              c:identifier="gtd_panel_get_menu"
              glib:get-property="menu">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="194">Retrieves the gear menu of @panel.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="200">a #GMenu</doc>
          <type name="Gio.Menu" c:type="const GMenu*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="196">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_panel_name" c:identifier="gtd_panel_get_panel_name">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="137">Retrieves the name of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="143">the name of @panel</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="139">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_panel_title" c:identifier="gtd_panel_get_panel_title">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="154">Retrieves the title of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="160">the title of @panel</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="panel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="156">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_popover" c:identifier="gtd_panel_get_popover">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="228">Retrieves the popover of @self. It is used as the
window menu when available.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="66"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="235">a #GtkPopover</doc>
          <type name="Gtk.Popover" c:type="GtkPopover*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="230">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="gtd_panel_get_priority"
              glib:get-property="priority">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="248">Retrieves the priority of @self. This value is used to
determine the position of the panel in the sidebar.</doc>
        <source-position filename="src/gui/gtd-panel.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="255">the priority of @self</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="250">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="gtd_panel_get_subtitle"
              glib:get-property="subtitle">
        <doc xml:space="preserve"
             filename="src/gui/gtd-panel.c"
             line="266">Retrieves the subtitle of @panel</doc>
        <source-position filename="src/gui/gtd-panel.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/gui/gtd-panel.c"
               line="272">the subtitle of @panel</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="268">a #GtdPanel</doc>
            <type name="Panel" c:type="GtdPanel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="icon" transfer-ownership="none" getter="get_icon">
        <type name="Gio.Icon"/>
      </property>
      <property name="menu" transfer-ownership="none" getter="get_menu">
        <type name="Gio.Menu"/>
      </property>
      <property name="name" transfer-ownership="none" default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="priority"
                transfer-ownership="none"
                getter="get_priority"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="subtitle"
                transfer-ownership="none"
                getter="get_subtitle"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title" transfer-ownership="none" default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </interface>
    <record name="PanelInterface"
            c:type="GtdPanelInterface"
            glib:is-gtype-struct-for="Panel">
      <source-position filename="src/gui/gtd-panel.h" line="54"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_panel_name">
        <callback name="get_panel_name">
          <source-position filename="src/gui/gtd-panel.h" line="36"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="143">the name of @panel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="panel" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="139">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_panel_title">
        <callback name="get_panel_title">
          <source-position filename="src/gui/gtd-panel.h" line="38"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="160">the title of @panel</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="panel" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="156">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_header_widgets">
        <callback name="get_header_widgets">
          <source-position filename="src/gui/gtd-panel.h" line="40"/>
          <return-value transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="183">the list of #GtkWidget</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Gtk.Widget"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="panel" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="173">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_menu">
        <callback name="get_menu">
          <source-position filename="src/gui/gtd-panel.h" line="42"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="200">a #GMenu</doc>
            <type name="Gio.Menu" c:type="const GMenu*"/>
          </return-value>
          <parameters>
            <parameter name="panel" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="196">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon">
          <source-position filename="src/gui/gtd-panel.h" line="44"/>
          <return-value transfer-ownership="full" nullable="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="217">a #GIcon</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="213">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_popover">
        <callback name="get_popover">
          <source-position filename="src/gui/gtd-panel.h" line="46"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="235">a #GtkPopover</doc>
            <type name="Gtk.Popover" c:type="GtkPopover*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="230">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_priority">
        <callback name="get_priority">
          <source-position filename="src/gui/gtd-panel.h" line="48"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="255">the priority of @self</doc>
            <type name="guint32" c:type="guint32"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="250">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_subtitle">
        <callback name="get_subtitle">
          <source-position filename="src/gui/gtd-panel.h" line="50"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-panel.c"
                 line="272">the subtitle of @panel</doc>
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="268">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="src/gui/gtd-panel.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="285">a #GtdPanel</doc>
              <type name="Panel" c:type="GtdPanel*"/>
            </parameter>
            <parameter name="parameters"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-panel.c"
                   line="286">parameters of the panel</doc>
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="PluginManager"
            c:type="GtdPluginManager"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="41"/>
    </record>
    <interface name="Provider"
               c:symbol-prefix="provider"
               c:type="GtdProvider"
               glib:type-name="GtdProvider"
               glib:get-type="gtd_provider_get_type"
               glib:type-struct="ProviderInterface">
      <source-position filename="src/core/gtd-provider.h" line="121"/>
      <prerequisite name="Object"/>
      <virtual-method name="create_task" invoker="create_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="315">Creates the given task in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="317">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="due_date"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="319">a #GDateTime</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="320">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="321">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="5">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="322">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_task_finish"
                      invoker="create_task_finish"
                      throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="347">Finishes creating the task.</doc>
        <source-position filename="src/core/gtd-provider.h" line="63"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="355">a #GtdTask</doc>
          <type name="Task" c:type="GtdTask*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="349">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="350">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_task_list" invoker="create_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="467">Creates the given list in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="469">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="470">the name of the new task list</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="471">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="472">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="473">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_task_list_finish"
                      invoker="create_task_list_finish"
                      throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="544">Finishes updating the task list. The provider will emit the
GtdProvider:list-updated signal after updating the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="553">%TRUE if task list was successfully created, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="546">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="547">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="242">Retrieves the description of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="248">the description of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="244">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_enabled" invoker="get_enabled">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="259">Retrieves whether @provider is enabled or not. A disabled
provider cannot be selected to be default nor be selected
to add tasks to it.</doc>
        <source-position filename="src/core/gtd-provider.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="267">%TRUE if provider is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="261">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="298">The icon of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="304">a #GIcon</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="300">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_id" invoker="get_id">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="188">Retrieves the identifier of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="194">the id of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="190">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_inbox" invoker="get_inbox">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="634">Retrieves the inbox of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="120"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="640">a #GtdTaskList</doc>
          <type name="TaskList" c:type="GtdTaskList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="636">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="205">Retrieves the user-visible name of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="211">the name of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="207">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_provider_type" invoker="get_provider_type">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="222">Retrieves the type of the @provider. This should return the
same value, regardless of the account name.

For example: "todoist", "todo-txt" or "google"</doc>
        <source-position filename="src/core/gtd-provider.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="231">the type of the @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="224">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_task_lists" invoker="get_task_lists">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="617">Retrieves the tasklists that this provider contains.</doc>
        <source-position filename="src/core/gtd-provider.h" line="118"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="623">the list of tasks, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TaskList"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="619">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="refresh" invoker="refresh">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="278">Asks the provider to refresh. Online providers may want to
synchronize tasks and tasklists, credentials, etc, when this
is called.

This is an optional feature. Providers that do not implement
the "refresh" vfunc will be ignored.</doc>
        <source-position filename="src/core/gtd-provider.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="280">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_task" invoker="remove_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="418">Removes the given task from @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="420">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="421">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="422">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="423">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="424">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_task_finish"
                      invoker="remove_task_finish"
                      throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="445">Finishes removing the task.</doc>
        <source-position filename="src/core/gtd-provider.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="453">%TRUE if task was successfully removed, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="447">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="448">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_task_list" invoker="remove_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="567">Removes the given list from @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="569">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="570">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="571">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="572">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="573">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_task_list_finish"
                      invoker="remove_task_list_finish"
                      throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="594">Finishes removing the task list. The provider will emit the
GtdProvider:list-removed signal after removing the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="603">%TRUE if task list was successfully removed, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="596">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="597">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_task" invoker="update_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="369">Updates the given task in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="371">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="372">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="373">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="374">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="375">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_task_finish"
                      invoker="update_task_finish"
                      throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="396">Finishes updating the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="404">%TRUE if task list was successfully updated, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="398">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="399">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_task_list" invoker="update_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="517">Updates the given list in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="519">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="520">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="521">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="522">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="523">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_task_list_finish"
                      invoker="update_task_list_finish"
                      throws="1">
        <source-position filename="src/core/gtd-provider.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="compare" c:identifier="gtd_provider_compare">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="651">Compares @a and @b. The sorting criteria is internal and
may change.</doc>
        <source-position filename="src/core/gtd-provider.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="659">-1 if @a comes before @b, 1 for the oposite, and
0 if they're equal</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="653">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="654">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_task" c:identifier="gtd_provider_create_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="315">Creates the given task in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="317">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="due_date"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="319">a #GDateTime</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="320">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="321">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="322">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_task_finish"
              c:identifier="gtd_provider_create_task_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="347">Finishes creating the task.</doc>
        <source-position filename="src/core/gtd-provider.h" line="145"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="355">a #GtdTask</doc>
          <type name="Task" c:type="GtdTask*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="349">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="350">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_task_list"
              c:identifier="gtd_provider_create_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="467">Creates the given list in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="469">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="470">the name of the new task list</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="471">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="472">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="473">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_task_list_finish"
              c:identifier="gtd_provider_create_task_list_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="544">Finishes updating the task list. The provider will emit the
GtdProvider:list-updated signal after updating the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="553">%TRUE if task list was successfully created, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="546">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="547">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gtd_provider_get_description"
              glib:get-property="description">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="242">Retrieves the description of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="248">the description of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="244">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="gtd_provider_get_enabled"
              glib:get-property="enabled">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="259">Retrieves whether @provider is enabled or not. A disabled
provider cannot be selected to be default nor be selected
to add tasks to it.</doc>
        <source-position filename="src/core/gtd-provider.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="267">%TRUE if provider is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="261">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gtd_provider_get_icon"
              glib:get-property="icon">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="298">The icon of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="304">a #GIcon</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="300">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gtd_provider_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="188">Retrieves the identifier of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="194">the id of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="190">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inbox" c:identifier="gtd_provider_get_inbox">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="634">Retrieves the inbox of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="201"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="640">a #GtdTaskList</doc>
          <type name="TaskList" c:type="GtdTaskList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="636">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gtd_provider_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="205">Retrieves the user-visible name of @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="211">the name of @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="207">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provider_type"
              c:identifier="gtd_provider_get_provider_type"
              glib:get-property="provider-type">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="222">Retrieves the type of the @provider. This should return the
same value, regardless of the account name.

For example: "todoist", "todo-txt" or "google"</doc>
        <source-position filename="src/core/gtd-provider.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="231">the type of the @provider</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="224">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_task_lists" c:identifier="gtd_provider_get_task_lists">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="617">Retrieves the tasklists that this provider contains.</doc>
        <source-position filename="src/core/gtd-provider.h" line="199"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="623">the list of tasks, or %NULL</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="TaskList"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="619">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="refresh" c:identifier="gtd_provider_refresh">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="278">Asks the provider to refresh. Online providers may want to
synchronize tasks and tasklists, credentials, etc, when this
is called.

This is an optional feature. Providers that do not implement
the "refresh" vfunc will be ignored.</doc>
        <source-position filename="src/core/gtd-provider.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="280">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_task" c:identifier="gtd_provider_remove_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="418">Removes the given task from @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="420">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="421">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="422">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="423">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="424">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_task_finish"
              c:identifier="gtd_provider_remove_task_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="445">Finishes removing the task.</doc>
        <source-position filename="src/core/gtd-provider.h" line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="453">%TRUE if task was successfully removed, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="447">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="448">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_task_list"
              c:identifier="gtd_provider_remove_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="567">Removes the given list from @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="569">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="570">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="571">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="572">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="573">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_task_list_finish"
              c:identifier="gtd_provider_remove_task_list_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="594">Finishes removing the task list. The provider will emit the
GtdProvider:list-removed signal after removing the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="195"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="603">%TRUE if task list was successfully removed, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="596">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="597">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task" c:identifier="gtd_provider_update_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="369">Updates the given task in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="371">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="372">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="373">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="374">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="375">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task_finish"
              c:identifier="gtd_provider_update_task_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="396">Finishes updating the task list.</doc>
        <source-position filename="src/core/gtd-provider.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-provider.c"
               line="404">%TRUE if task list was successfully updated, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="398">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="399">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task_list"
              c:identifier="gtd_provider_update_task_list">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="517">Updates the given list in @provider.</doc>
        <source-position filename="src/core/gtd-provider.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="519">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="520">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="521">a #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="522">a callback</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="523">user data for @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task_list_finish"
              c:identifier="gtd_provider_update_task_list_finish"
              throws="1">
        <source-position filename="src/core/gtd-provider.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Provider" c:type="GtdProvider*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                transfer-ownership="none"
                getter="get_description"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="enabled"
                transfer-ownership="none"
                getter="get_enabled"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon" transfer-ownership="none" getter="get_icon">
        <type name="Gio.Icon"/>
      </property>
      <property name="id"
                transfer-ownership="none"
                getter="get_id"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                transfer-ownership="none"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="provider-type"
                transfer-ownership="none"
                getter="get_provider_type"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <glib:signal name="list-added" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="130">The ::list-added signal is emmited after a #GtdTaskList
is connected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="133">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="list-changed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="149">The ::list-changed signal is emmited after a #GtdTaskList
has any of it's properties changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="152">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="list-removed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-provider.c"
             line="168">The ::list-removed signal is emmited after a #GtdTaskList
is disconnected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="171">a #GtdTaskList</doc>
            <type name="TaskList"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ProviderInterface"
            c:type="GtdProviderInterface"
            glib:is-gtype-struct-for="Provider">
      <source-position filename="src/core/gtd-provider.h" line="121"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_id">
        <callback name="get_id">
          <source-position filename="src/core/gtd-provider.h" line="39"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="194">the id of @provider</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="190">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name">
          <source-position filename="src/core/gtd-provider.h" line="41"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="211">the name of @provider</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="207">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_provider_type">
        <callback name="get_provider_type">
          <source-position filename="src/core/gtd-provider.h" line="43"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="231">the type of the @provider</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="224">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description">
          <source-position filename="src/core/gtd-provider.h" line="45"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="248">the description of @provider</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="244">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_enabled">
        <callback name="get_enabled">
          <source-position filename="src/core/gtd-provider.h" line="47"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="267">%TRUE if provider is enabled, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="261">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refresh">
        <callback name="refresh">
          <source-position filename="src/core/gtd-provider.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="280">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon">
          <source-position filename="src/core/gtd-provider.h" line="52"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="304">a #GIcon</doc>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="300">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_task">
        <callback name="create_task">
          <source-position filename="src/core/gtd-provider.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="317">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="list" transfer-ownership="none">
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="title" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="due_date"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="319">a #GDateTime</doc>
              <type name="GLib.DateTime" c:type="GDateTime*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="320">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="6">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="321">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="6">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="322">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_task_finish">
        <callback name="create_task_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="63"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="355">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="349">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="350">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_task">
        <callback name="update_task">
          <source-position filename="src/core/gtd-provider.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="371">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="task" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="372">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="373">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="374">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="375">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_task_finish">
        <callback name="update_task_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="73"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="404">%TRUE if task list was successfully updated, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="398">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="399">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_task">
        <callback name="remove_task">
          <source-position filename="src/core/gtd-provider.h" line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="420">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="task" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="421">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="422">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="423">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="424">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_task_finish">
        <callback name="remove_task_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="83"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="453">%TRUE if task was successfully removed, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="447">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="448">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_task_list">
        <callback name="create_task_list">
          <source-position filename="src/core/gtd-provider.h" line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="469">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="name"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="470">the name of the new task list</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="471">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="472">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="473">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_task_list_finish">
        <callback name="create_task_list_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="94"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="553">%TRUE if task list was successfully created, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="546">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="547">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_task_list">
        <callback name="update_task_list">
          <source-position filename="src/core/gtd-provider.h" line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="519">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="list" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="520">a #GtdTaskList</doc>
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="521">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="522">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="523">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_task_list_finish">
        <callback name="update_task_list_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="104"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_task_list">
        <callback name="remove_task_list">
          <source-position filename="src/core/gtd-provider.h" line="108"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="569">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="list" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="570">a #GtdTaskList</doc>
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="571">a #GCancellable</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="572">a callback</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="573">user data for @callback</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_task_list_finish">
        <callback name="remove_task_list_finish" throws="1">
          <source-position filename="src/core/gtd-provider.h" line="114"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="603">%TRUE if task list was successfully removed, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="596">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="597">a #GAsyncResult</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_task_lists">
        <callback name="get_task_lists">
          <source-position filename="src/core/gtd-provider.h" line="118"/>
          <return-value transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="623">the list of tasks, or %NULL</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="TaskList"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="619">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inbox">
        <callback name="get_inbox">
          <source-position filename="src/core/gtd-provider.h" line="120"/>
          <return-value transfer-ownership="none" nullable="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-provider.c"
                 line="640">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </return-value>
          <parameters>
            <parameter name="provider" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-provider.c"
                   line="636">a #GtdProvider</doc>
              <type name="Provider" c:type="GtdProvider*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ProviderPopover"
           c:symbol-prefix="provider_popover"
           c:type="GtdProviderPopover"
           parent="Gtk.Popover"
           glib:type-name="GtdProviderPopover"
           glib:get-type="gtd_provider_popover_get_type"
           glib:type-struct="ProviderPopoverClass">
      <source-position filename="src/gui/gtd-provider-popover.h" line="28"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new" c:identifier="gtd_provider_popover_new">
        <source-position filename="src/gui/gtd-provider-popover.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
    </class>
    <record name="ProviderPopoverClass"
            c:type="GtdProviderPopoverClass"
            glib:is-gtype-struct-for="ProviderPopover">
      <source-position filename="src/gui/gtd-provider-popover.h" line="28"/>
      <field name="parent_class">
        <type name="Gtk.PopoverClass" c:type="GtkPopoverClass"/>
      </field>
    </record>
    <class name="StarWidget"
           c:symbol-prefix="star_widget"
           c:type="GtdStarWidget"
           parent="Widget"
           glib:type-name="GtdStarWidget"
           glib:get-type="gtd_star_widget_get_type"
           glib:type-struct="StarWidgetClass">
      <source-position filename="src/gui/gtd-star-widget.h" line="28"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="gtd_star_widget_new">
        <source-position filename="src/gui/gtd-star-widget.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_active"
              c:identifier="gtd_star_widget_get_active"
              glib:get-property="active">
        <source-position filename="src/gui/gtd-star-widget.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StarWidget" c:type="GtdStarWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="gtd_star_widget_set_active"
              glib:set-property="active">
        <source-position filename="src/gui/gtd-star-widget.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StarWidget" c:type="GtdStarWidget*"/>
          </instance-parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="active"
                writable="1"
                transfer-ownership="none"
                setter="set_active"
                getter="get_active"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/gui/gtd-star-widget.c"
             line="112">Whether the star widget is active or not. When active, the
star appears filled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="StarWidgetClass"
            c:type="GtdStarWidgetClass"
            glib:is-gtype-struct-for="StarWidget">
      <source-position filename="src/gui/gtd-star-widget.h" line="28"/>
      <field name="parent_class">
        <type name="WidgetClass" c:type="GtdWidgetClass"/>
      </field>
    </record>
    <record name="Storage" c:type="GtdStorage" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="43"/>
    </record>
    <record name="StoragePopover"
            c:type="GtdStoragePopover"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="44"/>
    </record>
    <record name="StorageRow" c:type="GtdStorageRow" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="45"/>
    </record>
    <record name="StorageSelector"
            c:type="GtdStorageSelector"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="46"/>
    </record>
    <class name="Task"
           c:symbol-prefix="task"
           c:type="GtdTask"
           parent="Object"
           glib:type-name="GtdTask"
           glib:get-type="gtd_task_get_type"
           glib:type-struct="TaskClass">
      <source-position filename="src/core/gtd-task.h" line="69"/>
      <constructor name="new" c:identifier="gtd_task_new">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="503">Creates a new #GtdTask</doc>
        <source-position filename="src/core/gtd-task.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="508">a #GtdTask</doc>
          <type name="Task" c:type="GtdTask*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_complete" invoker="get_complete">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="516">Retrieves whether the task is complete or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="522">%TRUE if the task is complete, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="518">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_completion_date" invoker="get_completion_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="592">Returns the #GDateTime that represents the task's completion date.
Returns %NULL if no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="44"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="599">the internal #GDateTime or %NULL.
Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_creation_date" invoker="get_creation_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="553">Returns the #GDateTime that represents the task's creation date.
The value is referenced for thread safety. Returns %NULL if
no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="561">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="610">Retrieves the description of the task.</doc>
        <source-position filename="src/core/gtd-task.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="616">the description of @task</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_due_date" invoker="get_due_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="653">Returns the #GDateTime that represents the task's due date.
The value is referenced for thread safety. Returns %NULL if
no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="661">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_important" invoker="get_important">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="698">Retrieves whether @self is @important or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="704">%TRUE if @self is important, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="700">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_position" invoker="get_position">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="784">Returns the position of @task inside the parent #GtdTaskList,
or -1 if not set.</doc>
        <source-position filename="src/core/gtd-task.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="791">the position of the task, or -1</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="786">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_title" invoker="get_title">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="824">Retrieves the title of the task, or %NULL.</doc>
        <source-position filename="src/core/gtd-task.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="830">the title of @task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_complete" invoker="set_complete">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="532">Updates the complete state of @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="complete" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="535">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_completion_date">
        <source-position filename="src/core/gtd-task.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="dt" transfer-ownership="none">
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_creation_date" invoker="set_creation_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="572">Sets the creation date of @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="dt" transfer-ownership="none">
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_description" invoker="set_description">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="626">Updates the description of @task. The string is not stripped off of
spaces to preserve user data.</doc>
        <source-position filename="src/core/gtd-task.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="629">the new description, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_due_date" invoker="set_due_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="672">Updates the internal @GtdTask::due-date property.</doc>
        <source-position filename="src/core/gtd-task.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="due_date" transfer-ownership="none">
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_important" invoker="set_important">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="714">Sets whether @self is @important or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="716">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="important" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="717">whether @self is important or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_position" invoker="set_position">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="801">Sets the @task position inside the parent #GtdTaskList. It
is up to the interface to handle two or more #GtdTask with
the same position value.</doc>
        <source-position filename="src/core/gtd-task.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="803">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="804">the priority of @task, or -1</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_title" invoker="set_title">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="844">Updates the title of @task. The string is stripped off of
leading spaces.</doc>
        <source-position filename="src/core/gtd-task.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="847">the new title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="compare" c:identifier="gtd_task_compare">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="871">Compare @t1 and @t2.</doc>
        <source-position filename="src/core/gtd-task.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="878">%-1 if @t1 comes before @t2, %1 for the opposite, %0 if they're equal</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="t1"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="873">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="t2"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="874">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_complete"
              c:identifier="gtd_task_get_complete"
              glib:get-property="complete">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="516">Retrieves whether the task is complete or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="522">%TRUE if the task is complete, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_completion_date"
              c:identifier="gtd_task_get_completion_date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="592">Returns the #GDateTime that represents the task's completion date.
Returns %NULL if no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="83"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="599">the internal #GDateTime or %NULL.
Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="594">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_creation_date"
              c:identifier="gtd_task_get_creation_date"
              glib:get-property="creation-date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="553">Returns the #GDateTime that represents the task's creation date.
The value is referenced for thread safety. Returns %NULL if
no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="78"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="561">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="555">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gtd_task_get_description"
              glib:get-property="description">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="610">Retrieves the description of the task.</doc>
        <source-position filename="src/core/gtd-task.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="616">the description of @task</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="612">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_due_date"
              c:identifier="gtd_task_get_due_date"
              glib:get-property="due-date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="653">Returns the #GDateTime that represents the task's due date.
The value is referenced for thread safety. Returns %NULL if
no date is set.</doc>
        <source-position filename="src/core/gtd-task.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="661">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="655">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_important"
              c:identifier="gtd_task_get_important"
              glib:get-property="important">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="698">Retrieves whether @self is @important or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="704">%TRUE if @self is important, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="700">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_list"
              c:identifier="gtd_task_get_list"
              glib:get-property="list">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="733">Returns a weak reference to the #GtdTaskList that
owns the given @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="739">a weak reference to the
#GtdTaskList that owns @task. Do not free after
usage.</doc>
          <type name="TaskList" c:type="GtdTaskList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="gtd_task_get_position"
              glib:get-property="position">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="784">Returns the position of @task inside the parent #GtdTaskList,
or -1 if not set.</doc>
        <source-position filename="src/core/gtd-task.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="791">the position of the task, or -1</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provider" c:identifier="gtd_task_get_provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="963">Utility function to retrieve the data provider that backs this
task. Notice that this is exactly the same as writting:

|[&lt;!-- language="C" --&gt;
GtdTaskList *list;
GtdProvider *provider;

list = gtd_task_get_list (task);
provider = gtd_task_list_get_provider (list);
]|</doc>
        <source-position filename="src/core/gtd-task.h" line="118"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="978">the #GtdProvider of this task's list.</doc>
          <type name="Provider" c:type="GtdProvider*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="965">a #GtdTaskList</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gtd_task_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="824">Retrieves the title of the task, or %NULL.</doc>
        <source-position filename="src/core/gtd-task.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task.c"
               line="830">the title of @task, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="826">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_complete"
              c:identifier="gtd_task_set_complete"
              glib:set-property="complete">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="532">Updates the complete state of @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="534">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="complete" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="535">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_creation_date"
              c:identifier="gtd_task_set_creation_date"
              glib:set-property="creation-date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="572">Sets the creation date of @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="574">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="dt" transfer-ownership="none">
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gtd_task_set_description"
              glib:set-property="description">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="626">Updates the description of @task. The string is not stripped off of
spaces to preserve user data.</doc>
        <source-position filename="src/core/gtd-task.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="628">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="629">the new description, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_due_date"
              c:identifier="gtd_task_set_due_date"
              glib:set-property="due-date">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="672">Updates the internal @GtdTask::due-date property.</doc>
        <source-position filename="src/core/gtd-task.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="674">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="dt"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="675">a #GDateTime</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_important"
              c:identifier="gtd_task_set_important"
              glib:set-property="important">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="714">Sets whether @self is @important or not.</doc>
        <source-position filename="src/core/gtd-task.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="716">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="important" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="717">whether @self is important or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_list"
              c:identifier="gtd_task_set_list"
              glib:set-property="list">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="755">Sets the parent #GtdTaskList of @task.</doc>
        <source-position filename="src/core/gtd-task.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="757">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="list"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="758">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="gtd_task_set_position"
              glib:set-property="position">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="801">Sets the @task position inside the parent #GtdTaskList. It
is up to the interface to handle two or more #GtdTask with
the same position value.</doc>
        <source-position filename="src/core/gtd-task.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="804">the priority of @task, or -1</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gtd_task_set_title"
              glib:set-property="title">
        <doc xml:space="preserve"
             filename="src/core/gtd-task.c"
             line="844">Updates the title of @task. The string is stripped off of
leading spaces.</doc>
        <source-position filename="src/core/gtd-task.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="846">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="847">the new title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="complete"
                writable="1"
                transfer-ownership="none"
                setter="set_complete"
                getter="get_complete"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="creation-date"
                writable="1"
                transfer-ownership="none"
                setter="set_creation_date"
                getter="get_creation_date">
        <type name="GLib.DateTime"/>
      </property>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="due-date"
                writable="1"
                transfer-ownership="none"
                setter="set_due_date"
                getter="get_due_date">
        <type name="GLib.DateTime"/>
      </property>
      <property name="important"
                writable="1"
                transfer-ownership="none"
                setter="set_important"
                getter="get_important"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="list"
                writable="1"
                transfer-ownership="none"
                setter="set_list"
                getter="get_list">
        <type name="TaskList"/>
      </property>
      <property name="position"
                writable="1"
                transfer-ownership="none"
                setter="set_position"
                getter="get_position"
                default-value="0">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Object" c:type="GtdObject"/>
      </field>
    </class>
    <record name="TaskClass"
            c:type="GtdTaskClass"
            glib:is-gtype-struct-for="Task">
      <source-position filename="src/core/gtd-task.h" line="69"/>
      <field name="parent">
        <type name="ObjectClass" c:type="GtdObjectClass"/>
      </field>
      <field name="get_complete">
        <callback name="get_complete">
          <source-position filename="src/core/gtd-task.h" line="36"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="522">%TRUE if the task is complete, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="518">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_complete">
        <callback name="set_complete">
          <source-position filename="src/core/gtd-task.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="complete" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="535">the new value</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_creation_date">
        <callback name="get_creation_date">
          <source-position filename="src/core/gtd-task.h" line="40"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="561">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_creation_date">
        <callback name="set_creation_date">
          <source-position filename="src/core/gtd-task.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="dt" transfer-ownership="none">
              <type name="GLib.DateTime" c:type="GDateTime*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_completion_date">
        <callback name="get_completion_date">
          <source-position filename="src/core/gtd-task.h" line="44"/>
          <return-value transfer-ownership="full" nullable="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="599">the internal #GDateTime or %NULL.
Unreference it after use.</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_completion_date">
        <callback name="set_completion_date">
          <source-position filename="src/core/gtd-task.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="dt" transfer-ownership="none">
              <type name="GLib.DateTime" c:type="GDateTime*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description">
          <source-position filename="src/core/gtd-task.h" line="48"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="616">the description of @task</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_description">
        <callback name="set_description">
          <source-position filename="src/core/gtd-task.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="description"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="629">the new description, or %NULL</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_due_date">
        <callback name="get_due_date">
          <source-position filename="src/core/gtd-task.h" line="52"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="661">the internal #GDateTime referenced
for thread safety, or %NULL. Unreference it after use.</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_due_date">
        <callback name="set_due_date">
          <source-position filename="src/core/gtd-task.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="due_date" transfer-ownership="none">
              <type name="GLib.DateTime" c:type="GDateTime*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_important">
        <callback name="get_important">
          <source-position filename="src/core/gtd-task.h" line="56"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="704">%TRUE if @self is important, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="700">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_important">
        <callback name="set_important">
          <source-position filename="src/core/gtd-task.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="716">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="important" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="717">whether @self is important or not</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_position">
        <callback name="get_position">
          <source-position filename="src/core/gtd-task.h" line="60"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="791">the position of the task, or -1</doc>
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="task" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="786">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_position">
        <callback name="set_position">
          <source-position filename="src/core/gtd-task.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="task" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="803">a #GtdTask</doc>
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="804">the priority of @task, or -1</doc>
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_title">
        <callback name="get_title">
          <source-position filename="src/core/gtd-task.h" line="64"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task.c"
                 line="830">the title of @task, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_title">
        <callback name="set_title">
          <source-position filename="src/core/gtd-task.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
            <parameter name="title"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task.c"
                   line="847">the new title, or %NULL</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="TaskList"
           c:symbol-prefix="task_list"
           c:type="GtdTaskList"
           parent="Object"
           glib:type-name="GtdTaskList"
           glib:get-type="gtd_task_list_get_type"
           glib:type-struct="TaskListClass">
      <source-position filename="src/core/gtd-task-list.h" line="55"/>
      <implements name="Gio.ListModel"/>
      <constructor name="new" c:identifier="gtd_task_list_new">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="556">Creates a new list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="562">the new #GtdTaskList</doc>
          <type name="TaskList" c:type="GtdTaskList*"/>
        </return-value>
        <parameters>
          <parameter name="provider"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="558">a #GtdProvider</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_archived" invoker="get_archived">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="961">Retrieves whether @self is archived or not. Archived task lists
are hidden by default, and new tasks cannot be added.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="968">%TRUE if @self is archived, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="963">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_archived" invoker="set_archived">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="978">Sets the "archive" property of @self to @archived.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="980">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="archived" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="981">whether @self is archived or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="task_added">
        <source-position filename="src/core/gtd-task-list.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="task_removed">
        <source-position filename="src/core/gtd-task-list.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="task_updated">
        <source-position filename="src/core/gtd-task-list.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_task" c:identifier="gtd_task_list_add_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="718">Adds @task to @list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="720">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="721">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="contains" c:identifier="gtd_task_list_contains">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="791">Checks if @task is inside @list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="798">%TRUE if @list contains @task, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="793">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="794">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_archived"
              c:identifier="gtd_task_list_get_archived"
              glib:get-property="archived">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="961">Retrieves whether @self is archived or not. Archived task lists
are hidden by default, and new tasks cannot be added.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="968">%TRUE if @self is archived, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="963">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="gtd_task_list_get_color"
              glib:get-property="color">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="572">Retrieves the color of %list. It is guarantee that it always returns a
color, given a valid #GtdTaskList.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="579">the color of %list. Free with %gdk_rgba_free after use.</doc>
          <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="574">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gtd_task_list_get_name"
              glib:get-property="name">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="630">Retrieves the user-visible name of @list, or %NULL.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="636">the internal name of @list. Do not free
after use.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="632">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_provider"
              c:identifier="gtd_task_list_get_provider"
              glib:get-property="provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="677">Retrieves the #GtdProvider who owns this list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="683">a #GtdProvider</doc>
          <type name="Provider" c:type="GtdProvider*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="679">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_task_by_id"
              c:identifier="gtd_task_list_get_task_by_id">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="859">Retrieves a task from @self with the given @id.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="91"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="866">a #GtdTask, or %NULL</doc>
          <type name="Task" c:type="GtdTask*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="862">the id of the task</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_inbox" c:identifier="gtd_task_list_is_inbox">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="1003">Retrieves whether @self is the inbox task list of its provider.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/core/gtd-task-list.c"
               line="1009">%TRUE if @self is the inbox of it's provider, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="1005">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_removable" c:identifier="gtd_task_list_is_removable">
        <source-position filename="src/core/gtd-task-list.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_task_to_position"
              c:identifier="gtd_task_list_move_task_to_position">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="886">Moves @task to @new_position, and repositions the elements
in between as well.

@task must belog to @self.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="888">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="889">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
          <parameter name="new_position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="890">the new position of @task inside @self</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_task" c:identifier="gtd_task_list_remove_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="770">Removes @task from @list if it's inside the list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="772">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="773">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_archived"
              c:identifier="gtd_task_list_set_archived"
              glib:set-property="archived">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="978">Sets the "archive" property of @self to @archived.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="980">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="archived" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="981">whether @self is archived or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="gtd_task_list_set_color"
              glib:set-property="color">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="600">sets the color of @list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="602">a #GtdTaskList
#color: a #GdkRGBA</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type name="Gdk.RGBA" c:type="const GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_removable"
              c:identifier="gtd_task_list_set_is_removable"
              glib:set-property="is-removable">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="834">Sets whether @list can be deleted or not.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="836">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="is_removable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="837">%TRUE if @list can be deleted, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gtd_task_list_set_name"
              glib:set-property="name">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="651">Sets the @list name to @name.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="653">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="654">the name of @list</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_provider"
              c:identifier="gtd_task_list_set_provider"
              glib:set-property="provider">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="697">Sets the provider of this tasklist.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="699">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="provider"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="700">a #GtdProvider, or %NULL</doc>
            <type name="Provider" c:type="GtdProvider*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_task" c:identifier="gtd_task_list_update_task">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="739">Updates @task at @list.</doc>
        <source-position filename="src/core/gtd-task-list.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="741">a #GtdTaskList</doc>
            <type name="TaskList" c:type="GtdTaskList*"/>
          </instance-parameter>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="742">a #GtdTask</doc>
            <type name="Task" c:type="GtdTask*"/>
          </parameter>
        </parameters>
      </method>
      <property name="archived"
                writable="1"
                transfer-ownership="none"
                setter="set_archived"
                getter="get_archived"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="color"
                writable="1"
                transfer-ownership="none"
                setter="set_color"
                getter="get_color">
        <type name="Gdk.RGBA"/>
      </property>
      <property name="is-removable"
                writable="1"
                transfer-ownership="none"
                setter="set_is_removable"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="provider"
                writable="1"
                transfer-ownership="none"
                setter="set_provider"
                getter="get_provider">
        <type name="Provider"/>
      </property>
      <field name="parent_instance">
        <type name="Object" c:type="GtdObject"/>
      </field>
      <glib:signal name="task-added" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="488">The ::task-added signal is emmited after a #GtdTask
is added to the list.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="491">a #GtdTask</doc>
            <type name="Task"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="task-removed" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="507">The ::task-removed signal is emmited after a #GtdTask
is removed from the list.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="510">a #GtdTask</doc>
            <type name="Task"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="task-updated" when="last">
        <doc xml:space="preserve"
             filename="src/core/gtd-task-list.c"
             line="526">The ::task-updated signal is emmited after a #GtdTask
in the list is updated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="529">a #GtdTask</doc>
            <type name="Task"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TaskListClass"
            c:type="GtdTaskListClass"
            glib:is-gtype-struct-for="TaskList">
      <source-position filename="src/core/gtd-task-list.h" line="55"/>
      <field name="parent">
        <type name="ObjectClass" c:type="GtdObjectClass"/>
      </field>
      <field name="get_archived">
        <callback name="get_archived">
          <source-position filename="src/core/gtd-task-list.h" line="39"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/core/gtd-task-list.c"
                 line="968">%TRUE if @self is archived, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task-list.c"
                   line="963">a #GtdTaskList</doc>
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_archived">
        <callback name="set_archived">
          <source-position filename="src/core/gtd-task-list.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task-list.c"
                   line="980">a #GtdTaskList</doc>
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="archived" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/core/gtd-task-list.c"
                   line="981">whether @self is archived or not</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="task_added">
        <callback name="task_added">
          <source-position filename="src/core/gtd-task-list.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="task" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="task_updated">
        <callback name="task_updated">
          <source-position filename="src/core/gtd-task-list.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="task" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="task_removed">
        <callback name="task_removed">
          <source-position filename="src/core/gtd-task-list.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="TaskList" c:type="GtdTaskList*"/>
            </parameter>
            <parameter name="task" transfer-ownership="none">
              <type name="Task" c:type="GtdTask*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="10">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="TaskListItem"
            c:type="GtdTaskListItem"
            disguised="1"
            opaque="1">
      <source-position filename="src/gtd-types.h" line="49"/>
    </record>
    <class name="TaskListView"
           c:symbol-prefix="task_list_view"
           c:type="GtdTaskListView"
           parent="Gtk.Box"
           glib:type-name="GtdTaskListView"
           glib:get-type="gtd_task_list_view_get_type"
           glib:type-struct="TaskListViewClass">
      <source-position filename="src/gui/gtd-task-list-view.h" line="29"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gtd_task_list_view_new">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1103">Creates a new #GtdTaskListView</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.c"
               line="1108">a newly allocated #GtdTaskListView</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_default_date"
              c:identifier="gtd_task_list_view_get_default_date">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1302">Retrieves the current default date which new tasks are set to.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="66"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.c"
               line="1308">a #GDateTime, or %NULL</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1304">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model" c:identifier="gtd_task_list_view_get_model">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1116">Retrieves the #GtdTaskList from @view, or %NULL if none was set.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.c"
               line="1122">the #GListModel of @view, or %NULL is
none was set.</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1118">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_due_date"
              c:identifier="gtd_task_list_view_get_show_due_date"
              glib:get-property="show-due-date">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1210">Retrieves whether the @self is showing the due dates of the tasks
or not.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.c"
               line="1217">%TRUE if due dates are visible, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1212">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_list_name"
              c:identifier="gtd_task_list_view_get_show_list_name"
              glib:get-property="show-list-name">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1159">Whether @view shows the tasks' list names.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.c"
               line="1165">%TRUE if @view show the tasks' list names, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1161">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_date"
              c:identifier="gtd_task_list_view_set_default_date">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1318">Sets the current default date.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1320">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
          <parameter name="default_date"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1321">the default_date, or %NULL</doc>
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_header_func"
              c:identifier="gtd_task_list_view_set_header_func">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1262">Sets @func as the header function of @view. You can safely call
%gtk_list_box_row_set_header from within @func.

Do not unref nor free any of the passed data.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1264">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1265">the header function</doc>
            <type name="TaskListViewHeaderFunc"
                  c:type="GtdTaskListViewHeaderFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1266">data passed to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model" c:identifier="gtd_task_list_view_set_model">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1133">Sets the internal #GListModel of @view. The model must have
its element GType as @GtdTask.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1135">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1136">a #GListModel</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_due_date"
              c:identifier="gtd_task_list_view_set_show_due_date"
              glib:set-property="show-due-date">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1227">Sets whether @self shows the due dates of the tasks or not.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1229">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
          <parameter name="show_due_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1230">%TRUE to show due dates, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_list_name"
              c:identifier="gtd_task_list_view_set_show_list_name"
              glib:set-property="show-list-name">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.c"
             line="1175">Whether @view should should it's tasks' list name.</doc>
        <source-position filename="src/gui/gtd-task-list-view.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1177">a #GtdTaskListView</doc>
            <type name="TaskListView" c:type="GtdTaskListView*"/>
          </instance-parameter>
          <parameter name="show_list_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-task-list-view.c"
                 line="1178">%TRUE to show list names, %FALSE to hide it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="show-due-date"
                writable="1"
                transfer-ownership="none"
                setter="set_show_due_date"
                getter="get_show_due_date"
                default-value="TRUE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-list-name"
                writable="1"
                transfer-ownership="none"
                setter="set_show_list_name"
                getter="get_show_list_name"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="TaskListViewClass"
            c:type="GtdTaskListViewClass"
            glib:is-gtype-struct-for="TaskListView">
      <source-position filename="src/gui/gtd-task-list-view.h" line="29"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
    </record>
    <callback name="TaskListViewHeaderFunc" c:type="GtdTaskListViewHeaderFunc">
      <doc xml:space="preserve"
           filename="src/gui/gtd-task-list-view.h"
           line="31">The header function called on every task.</doc>
      <source-position filename="src/gui/gtd-task-list-view.h" line="41"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="src/gui/gtd-task-list-view.h"
             line="39">a #GtkWidget, or %NULL.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="task" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.h"
               line="33">the #GtdTask that @row represents</doc>
          <type name="Task" c:type="GtdTask*"/>
        </parameter>
        <parameter name="previous_task" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.h"
               line="34">the #GtdTask that @before represents</doc>
          <type name="Task" c:type="GtdTask*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="src/gui/gtd-task-list-view.h"
               line="35">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="TaskRow" c:type="GtdTaskRow" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="50"/>
    </record>
    <record name="Transition" c:type="GtdTransition" disguised="1" opaque="1">
      <source-position filename="src/gtd-types.h" line="51"/>
    </record>
    <class name="Widget"
           c:symbol-prefix="widget"
           c:type="GtdWidget"
           parent="Gtk.Widget"
           glib:type-name="GtdWidget"
           glib:get-type="gtd_widget_get_type"
           glib:type-struct="WidgetClass">
      <source-position filename="src/gui/gtd-widget.h" line="36"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="gtd_widget_new">
        <source-position filename="src/gui/gtd-widget.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add_transition"
              c:identifier="gtd_widget_add_transition"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1240">Adds a @transition to the #GtdWidget's list of animations.

The @name string is a per-widget unique identifier of the @transition: only
one #GtdTransition can be associated to the specified @name.

The @transition will be started once added.

This function will take a reference on the @transition.

This function is usually called implicitly when modifying an animatable
property.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1242">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1243">the name of the transition to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1244">the #GtdTransition to add</doc>
            <type name="Transition" c:type="GtdTransition*"/>
          </parameter>
        </parameters>
      </method>
      <method name="apply_transform" c:identifier="gtd_widget_apply_transform">
        <source-position filename="src/gui/gtd-widget.h" line="76"/>
        <return-value transfer-ownership="full">
          <type name="Gsk.Transform" c:type="GskTransform*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <type name="Gsk.Transform" c:type="GskTransform*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_easing_delay"
              c:identifier="gtd_widget_get_easing_delay"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1501">Retrieves the delay that should be applied when tweening animatable
properties.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-widget.c"
               line="1508">a delay, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1503">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_duration"
              c:identifier="gtd_widget_get_easing_duration"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1387">Retrieves the duration of the tweening for animatable
properties of @self for the current easing state.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-widget.c"
               line="1394">the duration of the tweening, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1389">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_mode"
              c:identifier="gtd_widget_get_easing_mode"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1444">Retrieves the easing mode for the tweening of animatable properties
of @self for the current easing state.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="86"/>
        <return-value>
          <doc xml:space="preserve"
               filename="src/gui/gtd-widget.c"
               line="1451">an easing mode</doc>
          <type c:type="GtdEaseMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1446">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pivot_point"
              c:identifier="gtd_widget_get_pivot_point"
              glib:get-property="pivot-point">
        <source-position filename="src/gui/gtd-widget.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="out_pivot_point" transfer-ownership="none">
            <type name="Graphene.Point3D" c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rotation" c:identifier="gtd_widget_get_rotation">
        <source-position filename="src/gui/gtd-widget.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="rotation_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="rotation_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="rotation_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scale" c:identifier="gtd_widget_get_scale">
        <source-position filename="src/gui/gtd-widget.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="scale_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="scale_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="scale_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transition" c:identifier="gtd_widget_get_transition">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1527">Retrieves the #GtdTransition of a #GtdWidget by using the
transition @name.

Transitions created for animatable properties use the name of the
property itself, for instance the code below:

|[&lt;!-- language="C" --&gt;
  gtd_widget_set_easing_duration (widget, 1000);
  gtd_widget_set_rotation_angle (widget, GTD_Y_AXIS, 360.0);

  transition = gtd_widget_get_transition (widget, "rotation-angle-y");
  g_signal_connect (transition, "stopped",
                    G_CALLBACK (on_transition_stopped),
                    widget);
]|

will call the `on_transition_stopped` callback when the transition
is finished.

If you just want to get notifications of the completion of a transition,
you should use the #GtdWidget::transition-stopped signal, using the
transition name as the signal detail.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-widget.c"
               line="1555">a #GtdTransition, or %NULL is none
  was found to match the passed name; the returned instance is owned
  by Gtd and it should not be freed</doc>
          <type name="Transition" c:type="GtdTransition*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1529">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1530">the name of the transition</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_translation" c:identifier="gtd_widget_get_translation">
        <source-position filename="src/gui/gtd-widget.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="translation_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="translation_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="translation_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all_transitions"
              c:identifier="gtd_widget_remove_all_transitions"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1334">Removes all transitions associated to @self.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1336">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_transition"
              c:identifier="gtd_widget_remove_transition"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1272">Removes the transition stored inside a #GtdWidget using @name
identifier.

If the transition is currently in progress, it will be stopped.

This function releases the reference acquired when the transition
was added to the #GtdWidget.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1274">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1275">the name of the transition to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="restore_easing_state"
              c:identifier="gtd_widget_restore_easing_state"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1632">Restores the easing state as it was prior to a call to
gtd_widget_save_easing_state().</doc>
        <source-position filename="src/gui/gtd-widget.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1634">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_easing_state"
              c:identifier="gtd_widget_save_easing_state">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1597">Saves the current easing state for animatable properties, and creates
a new state with the default values for easing mode and duration.

New transitions created after calling this function will inherit the
duration, easing mode, and delay of the new easing state; this also
applies to transitions modified in flight.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1599">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_easing_delay"
              c:identifier="gtd_widget_set_easing_delay"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1470">Sets the delay that should be applied before tweening animatable
properties.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1472">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1473">the delay before the start of the tweening, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_duration"
              c:identifier="gtd_widget_set_easing_duration"
              version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1356">Sets the duration of the tweening for animatable properties
of @self for the current easing state.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1358">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1359">the duration of the easing, or %NULL</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_mode"
              c:identifier="gtd_widget_set_easing_mode"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="1412">Sets the easing mode for the tweening of animatable properties
of @self.</doc>
        <source-position filename="src/gui/gtd-widget.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1414">a #GtdWidget</doc>
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="1415">an easing mode, excluding %GTD_CUSTOM_MODE</doc>
            <type c:type="GtdEaseMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pivot_point"
              c:identifier="gtd_widget_set_pivot_point"
              glib:set-property="pivot-point">
        <source-position filename="src/gui/gtd-widget.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="pivot_point" transfer-ownership="none">
            <type name="Graphene.Point3D" c:type="const graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rotation" c:identifier="gtd_widget_set_rotation">
        <source-position filename="src/gui/gtd-widget.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="rotation_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="rotation_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="rotation_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale" c:identifier="gtd_widget_set_scale">
        <source-position filename="src/gui/gtd-widget.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="scale_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="scale_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="scale_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_translation" c:identifier="gtd_widget_set_translation">
        <source-position filename="src/gui/gtd-widget.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Widget" c:type="GtdWidget*"/>
          </instance-parameter>
          <parameter name="translation_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="translation_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="translation_z" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <property name="pivot-point"
                writable="1"
                transfer-ownership="none"
                setter="set_pivot_point"
                getter="get_pivot_point">
        <type name="Graphene.Point3D"/>
      </property>
      <property name="rotation-x"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="rotation-y"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="rotation-z"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="scale-x"
                writable="1"
                transfer-ownership="none"
                default-value="1.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="scale-y"
                writable="1"
                transfer-ownership="none"
                default-value="1.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="scale-z"
                writable="1"
                transfer-ownership="none"
                default-value="1.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="translation-x"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="translation-y"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="translation-z"
                writable="1"
                transfer-ownership="none"
                default-value="0.000000">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <glib:signal name="transition-stopped"
                   when="last"
                   no-recurse="1"
                   detailed="1"
                   no-hooks="1"
                   version="1.12">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="949">The ::transition-stopped signal is emitted once a transition
is stopped; a transition is stopped once it reached its total
duration (including eventual repeats), it has been stopped
using gtd_timeline_stop(), or it has been removed from the
transitions applied on @actor, using gtd_actor_remove_transition().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="952">the name of the transition</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="is_finished" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-widget.c"
                 line="953">whether the transition was finished, or stopped</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="transitions-completed" when="last" version="1.10">
        <doc xml:space="preserve"
             filename="src/gui/gtd-widget.c"
             line="931">The ::transitions-completed signal is emitted once all transitions
involving @actor are complete.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="WidgetClass"
            c:type="GtdWidgetClass"
            glib:is-gtype-struct-for="Widget">
      <source-position filename="src/gui/gtd-widget.h" line="36"/>
      <field name="parent">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="GtdWindow"
           parent="Gtk.ApplicationWindow"
           glib:type-name="GtdWindow"
           glib:get-type="gtd_window_get_type"
           glib:type-struct="WindowClass">
      <source-position filename="src/gui/gtd-window.h" line="31"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new" c:identifier="gtd_window_new">
        <source-position filename="src/gui/gtd-window.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <type name="Application" c:type="GtdApplication*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="cancel_notification"
              c:identifier="gtd_window_cancel_notification">
        <doc xml:space="preserve"
             filename="src/gui/gtd-window.c"
             line="642">Cancels @notification.</doc>
        <source-position filename="src/gui/gtd-window.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="644">a #GtdManager</doc>
            <type name="Window" c:type="GtdWindow*"/>
          </instance-parameter>
          <parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="645">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </parameter>
        </parameters>
      </method>
      <method name="embed_widget_in_header"
              c:identifier="gtd_window_embed_widget_in_header">
        <doc xml:space="preserve"
             filename="src/gui/gtd-window.c"
             line="658">Embeds @widget into @self's header bar.</doc>
        <source-position filename="src/gui/gtd-window.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="660">a #GtdWindow</doc>
            <type name="Window" c:type="GtdWindow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="661">a #GtkWidget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="662">either @GTK_POS_LEFT or @GTK_POS_RIGHT</doc>
            <type name="Gtk.PositionType" c:type="GtkPositionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_current_workspace"
              c:identifier="gtd_window_get_current_workspace"
              glib:get-property="current-workspace"
              introspectable="0">
        <source-position filename="src/gui/gtd-window.h" line="47"/>
        <return-value>
          <type name="Workspace" c:type="GtdWorkspace*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Window" c:type="GtdWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manager"
              c:identifier="gtd_window_get_manager"
              introspectable="0">
        <source-position filename="src/gui/gtd-window.h" line="35"/>
        <return-value>
          <type name="Manager" c:type="GtdManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="Window" c:type="GtdWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="notify" c:identifier="gtd_window_notify">
        <doc xml:space="preserve"
             filename="src/gui/gtd-window.c"
             line="626">Shows a notification on the top of the main window.</doc>
        <source-position filename="src/gui/gtd-window.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="628">a #GtdWindow</doc>
            <type name="Window" c:type="GtdWindow*"/>
          </instance-parameter>
          <parameter name="notification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-window.c"
                 line="629">a #GtdNotification</doc>
            <type name="Notification" c:type="GtdNotification*"/>
          </parameter>
        </parameters>
      </method>
      <property name="current-workspace"
                transfer-ownership="none"
                getter="get_current_workspace">
        <type name="Workspace"/>
      </property>
    </class>
    <record name="WindowClass"
            c:type="GtdWindowClass"
            glib:is-gtype-struct-for="Window">
      <source-position filename="src/gui/gtd-window.h" line="31"/>
      <field name="parent_class" introspectable="0">
        <type c:type="AdwApplicationWindowClass"/>
      </field>
    </record>
    <interface name="Workspace"
               c:symbol-prefix="workspace"
               c:type="GtdWorkspace"
               glib:type-name="GtdWorkspace"
               glib:get-type="gtd_workspace_get_type"
               glib:type-struct="WorkspaceInterface">
      <source-position filename="src/gui/gtd-workspace.h" line="46"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="activate" invoker="activate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="125">Activates @self. This happens when the workspace
becomes the active workspace in the main window.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="127">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
          <parameter name="parameters"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="128">workspace-specific parameters</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deactivate" invoker="deactivate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="143">Deactivates @self. This happens when the workspace
is switched away in the main window.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="145">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon" introspectable="0">
        <source-position filename="src/gui/gtd-workspace.h" line="40"/>
        <return-value>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_id" invoker="get_id">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="53">Retrieves the id of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="60">the id of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="55">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_priority" invoker="get_priority">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="107">Retrieves the icon of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="114">a #GIcon</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="109">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_title" invoker="get_title">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="71">Retrieves the title of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="78">the title of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="73">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="gtd_workspace_activate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="125">Activates @self. This happens when the workspace
becomes the active workspace in the main window.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="127">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
          <parameter name="parameters"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="128">workspace-specific parameters</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="deactivate" c:identifier="gtd_workspace_deactivate">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="143">Deactivates @self. This happens when the workspace
is switched away in the main window.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="145">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="gtd_workspace_get_icon"
              glib:get-property="icon"
              introspectable="0">
        <source-position filename="src/gui/gtd-workspace.h" line="54"/>
        <return-value>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="gtd_workspace_get_id">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="53">Retrieves the id of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="60">the id of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="55">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority" c:identifier="gtd_workspace_get_priority">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="107">Retrieves the icon of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="114">a #GIcon</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="109">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gtd_workspace_get_title"
              glib:get-property="title">
        <doc xml:space="preserve"
             filename="src/gui/gtd-workspace.c"
             line="71">Retrieves the title of @self. It is mandatory to implement
this.</doc>
        <source-position filename="src/gui/gtd-workspace.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/gui/gtd-workspace.c"
               line="78">the title of @self</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="73">a #GtdWorkspace</doc>
            <type name="Workspace" c:type="GtdWorkspace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="icon" transfer-ownership="none" getter="get_icon">
        <type name="Gio.Icon"/>
      </property>
      <property name="title"
                transfer-ownership="none"
                getter="get_title"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </interface>
    <record name="WorkspaceInterface"
            c:type="GtdWorkspaceInterface"
            glib:is-gtype-struct-for="Workspace">
      <source-position filename="src/gui/gtd-workspace.h" line="46"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_id">
        <callback name="get_id">
          <source-position filename="src/gui/gtd-workspace.h" line="34"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="60">the id of @self</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="55">a #GtdWorkspace</doc>
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_title">
        <callback name="get_title">
          <source-position filename="src/gui/gtd-workspace.h" line="36"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="78">the title of @self</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="73">a #GtdWorkspace</doc>
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_priority">
        <callback name="get_priority">
          <source-position filename="src/gui/gtd-workspace.h" line="38"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/gui/gtd-workspace.c"
                 line="114">a #GIcon</doc>
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="109">a #GtdWorkspace</doc>
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon" introspectable="0">
        <callback name="get_icon" introspectable="0">
          <source-position filename="src/gui/gtd-workspace.h" line="40"/>
          <return-value>
            <type name="Gio.Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="src/gui/gtd-workspace.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="127">a #GtdWorkspace</doc>
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
            <parameter name="parameters"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="128">workspace-specific parameters</doc>
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deactivate">
        <callback name="deactivate">
          <source-position filename="src/gui/gtd-workspace.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/gui/gtd-workspace.c"
                   line="145">a #GtdWorkspace</doc>
              <type name="Workspace" c:type="GtdWorkspace*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <docsection name="gtd-activatable">
      <doc xml:space="preserve"
           filename="src/core/gtd-activatable.c"
           line="25">The #GtdActivatable interface is the interface plugins must
implement in order to be seen by GNOME To Do.

When plugins are loaded, the gtd_activatable_activate() vfunc
is called. Use this vfunc to load anything that depends on GNOME
To Do.

When plugins are unloaded, the gtd_activatable_deactivate() vfunc
if called. Ideally, the implementation should undo everything that
was done on gtd_activatable_activate().

A plugin implementation may expose one or more #GtdProvider instances,
which are the data sources of GNOME To Do. See the 'eds' plugin for
a reference on how to expose one ('local') and multiple (Online Accounts)
providers.

Plugins may also expose one or more #GtdPanel implementations.

Optionally, a plugin may expose a preferences panel. See gtd_activatable_get_preferences_panel().</doc>
    </docsection>
    <docsection name="gtd-manager">
      <doc xml:space="preserve"
           filename="src/core/gtd-manager.c"
           line="38">The #GtdManager object is a singleton object that exposes all the data
inside the plugin to GNOME To Do, and vice-versa. From here, plugins have
access to all the tasklists, tasks and panels of the other plugins.

Objects can use gtd_manager_emit_error_message() to send errors to GNOME
To Do. This will create a #GtdNotification internally.</doc>
    </docsection>
    <docsection name="gtd-notification">
      <doc xml:space="preserve"
           filename="src/core/gtd-notification.c"
           line="26">The #GtdNotification represents a notification shown at the top of
the window. The action can have a primary action that is called when
the notification is gone.

Optionally, the notification may have a secondary action (see gtd_notification_set_secondary_action())
shown as a button.

The notification may also have a timeout, which is how long the notification
is displayed. By default, the timeout is 7.5 seconds.

Example:
|[
GtdNotification *notification;

notification = gtd_notification_new ("Something happened!", 7500);

gtd_notification_set_primary_action (notification,
                                     called_when_notification_is_closed,
                                     self);

gtd_notification_set_secondary_action (notification,
                                       "Details",
                                       show_details,
                                       self);
[...]

gtd_window_send_notification (window, notification);
]|</doc>
    </docsection>
    <docsection name="gtd-object">
      <doc xml:space="preserve"
           filename="src/core/gtd-object.c"
           line="25">#GtdObject is the base class of many object in GNOME To Do, and it useful for
when a given object is loadable and/or uniquely identifiable. Some examples of
it are #GtdTask, #GtdTaskList and #GtdNotification.</doc>
    </docsection>
    <docsection name="gtd-panel">
      <doc xml:space="preserve"
           filename="src/gui/gtd-panel.c"
           line="23">The #GtdPanel interface must be implemented by plugins that want
a given widget to be shown as a panel in the main window. Examples
of panels are the "Today" and "Scheduled" panels.

A panel must have a unique name (see #GtdPanel:name) and a title.
The title can change dynamically. Avoid long titles.

The panel may also provide header widgets, which will be placed
in the headerbar according to the #GtkWidget:halign property. See
gtd_panel_get_header_widgets() for a detailed explanation.

The #GtdPanel:icon and #GtdPanel:priority properties are used by
the sidebar. The former is used to display the icon, and the latter
is used to determine the position of the panel relative to the
others panels.

At last, a #GtdPanel implementation may provide a #GMenu that will
be appended to the window menu. Alternatively, a #GtkPopover can
also be set. Popovers are used when both a menu and a popover are
provided.</doc>
    </docsection>
    <docsection name="gtd-provider">
      <doc xml:space="preserve"
           filename="src/core/gtd-provider.c"
           line="26">The #GtdProvider is the interface that GNOME To Do uses to
connect to data sources. It must provide ways to create, update
and remove tasks and tasklists.

A provider implementation must also expose which is the default
tasklist among the tasklists it manages.</doc>
    </docsection>
    <docsection name="gtd-task">
      <doc xml:space="preserve"
           filename="src/core/gtd-task.c"
           line="27">A #GtdTask is an object that represents a task. All #GtdTasks
must be inside a #GtdTaskList.</doc>
    </docsection>
    <docsection name="gtd-task-list">
      <doc xml:space="preserve"
           filename="src/core/gtd-task-list.c"
           line="28">A #GtdTaskList represents a task list, and contains a list of tasks, a
color, a name and the provider who generated it.

Only a #GtdProvider can create a #GtdTaskList. Equally, a #GtdTaskList
is only valid when associated with a #GtdProvider.

It implements #GListModel, and can be used as the model for #GtkListBox.</doc>
    </docsection>
    <docsection name="gtd-task-list-view">
      <doc xml:space="preserve"
           filename="src/gui/gtd-task-list-view.c"
           line="42">The #GtdTaskListView widget shows the tasks of a #GtdTaskList with
various options to fine-tune the appearance. Alternatively, one can
pass a #GList of #GtdTask objects.

It supports custom sorting and header functions, so the tasks can be
sorted in various ways. See the "Today" and "Scheduled" panels for reference
implementations.

Example:
|[
GtdTaskListView *view = gtd_task_list_view_new ();

gtd_task_list_view_set_model (view, model);

// Date which tasks will be automatically assigned
gtd_task_list_view_set_default_date (view, now);
]|</doc>
    </docsection>
    <docsection name="gtd-window">
      <doc xml:space="preserve"
           filename="src/gui/gtd-window.c"
           line="45">The #GtdWindow is the main application window of GNOME To Do. Objects should
use this class to send notifications (see gtd_window_notify()), cancel notifications
(see gtd_window_cancel_notification()), change between selection and normal mode
and fine-tune the headerbar.</doc>
    </docsection>
  </namespace>
</repository>
