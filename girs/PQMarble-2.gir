<?xml version="1.0"?>
<!-- PQMarble-2.gir generated by valac 0.56.17, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="Gtk" version="4.0"/>
<include name="Gdk" version="4.0"/>
<package name="pqmarble"/>
<c:include name="pqmarble.h"/>
<namespace name="PQMarble" version="2" c:prefix="PQMarble" c:identifier-prefixes="PQMarble" c:symbol-prefixes="pq_marble">
	<class name="Settings" c:type="PQMarbleSettings" c:symbol-prefix="settings" glib:type-name="PQMarbleSettings" glib:get-type="pq_marble_settings_get_type" glib:type-struct="SettingsClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SettingsPrivate" c:type="PQMarbleSettingsPrivate*"/>
		</field>
		<property name="schema" writable="1" construct="1">
			<type name="Gio.Settings" c:type="GSettings*"/>
		</property>
		<method name="get_schema" c:identifier="pq_marble_settings_get_schema">
			<return-value transfer-ownership="none">
				<type name="Gio.Settings" c:type="GSettings*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="PQMarble.Settings" c:type="PQMarbleSettings*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_schema" c:identifier="pq_marble_settings_set_schema">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="PQMarble.Settings" c:type="PQMarbleSettings*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.Settings" c:type="GSettings*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SettingsClass" c:type="PQMarbleSettingsClass" glib:is-gtype-struct-for="Settings">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SettingsPrivate" c:type="PQMarbleSettingsPrivate" disguised="1"/>
	<function name="get_css_provider_for_data" c:identifier="pq_marble_get_css_provider_for_data">
		<return-value transfer-ownership="full" nullable="1">
			<type name="Gtk.CssProvider" c:type="GtkCssProvider*"/>
		</return-value>
		<parameters>
			<parameter name="data" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="set_theming_for_data" c:identifier="pq_marble_set_theming_for_data">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="widget" transfer-ownership="none">
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</parameter>
			<parameter name="data" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="class_name" transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="priority" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
		</parameters>
	</function>
	<function name="add_css_provider_from_resource" c:identifier="pq_marble_add_css_provider_from_resource">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="resource" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="priority" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="display" transfer-ownership="none">
				<type name="Gdk.Display" c:type="GdkDisplay*"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>
