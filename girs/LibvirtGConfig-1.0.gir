<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <package name="libvirt-gconfig-1.0"/>
  <c:include name="libvirt-gconfig/libvirt-gconfig.h"/>
  <namespace name="LibvirtGConfig"
             version="1.0"
             shared-library="libvirt-gconfig-1.0.so.0"
             c:identifier-prefixes="GVirConfig"
             c:symbol-prefixes="gvir_config">
    <function-macro name="CAPABILITIES"
                    c:identifier="GVIR_CONFIG_CAPABILITIES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_FEATURE"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_FEATURE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_FEATURE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_MODEL"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_MODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_MODEL_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_MODEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_MODEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_TOPOLOGY"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_TOPOLOGY"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_TOPOLOGY_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_TOPOLOGY_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_CPU_TOPOLOGY_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_CPU_TOPOLOGY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_ARCH"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_ARCH"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_ARCH_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_ARCH_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_ARCH_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_ARCH_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_DOMAIN"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_DOMAIN"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_DOMAIN_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_DOMAIN_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_DOMAIN_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_FEATURE"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_FEATURE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_FEATURE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_GUEST_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_GUEST_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST_SECMODEL"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST_SECMODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST_SECMODEL_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST_SECMODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CAPABILITIES_HOST_SECMODEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_CAPABILITIES_HOST_SECMODEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Capabilities"
           c:symbol-prefix="capabilities"
           c:type="GVirConfigCapabilities"
           parent="Object"
           glib:type-name="GVirConfigCapabilities"
           glib:get-type="gvir_config_capabilities_get_type"
           glib:type-struct="CapabilitiesClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="58"/>
      <constructor name="new" c:identifier="gvir_config_capabilities_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="Capabilities" c:type="GVirConfigCapabilities*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_capabilities_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <type name="Capabilities" c:type="GVirConfigCapabilities*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_guests"
              c:identifier="gvir_config_capabilities_get_guests">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities.c"
             line="121">Gets the list of guest capabilities.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities.c"
               line="126">
a newly allocated #GList of #GVirConfigCapabilitiesGuest.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesGuest"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="caps" transfer-ownership="none">
            <type name="Capabilities" c:type="GVirConfigCapabilities*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host" c:identifier="gvir_config_capabilities_get_host">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities.c"
             line="73">Gets the host capabilities.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities.c"
               line="78">a new #GVirConfigCapabilitiesHost.</doc>
          <type name="CapabilitiesHost" c:type="GVirConfigCapabilitiesHost*"/>
        </return-value>
        <parameters>
          <instance-parameter name="caps" transfer-ownership="none">
            <type name="Capabilities" c:type="GVirConfigCapabilities*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesPrivate"
              c:type="GVirConfigCapabilitiesPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesClass"
            c:type="GVirConfigCapabilitiesClass"
            glib:is-gtype-struct-for="Capabilities">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="58"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="CapabilitiesCpu"
           c:symbol-prefix="capabilities_cpu"
           c:type="GVirConfigCapabilitiesCpu"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesCpu"
           glib:get-type="gvir_config_capabilities_cpu_get_type"
           glib:type-struct="CapabilitiesCpuClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="63"/>
      <virtual-method name="get_features" invoker="get_features">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="132">Gets the features of this CPU.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
               line="137">
a newly allocated #GList of #GVirConfigCapabilitiesCpuFeature.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesCpuFeature"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_feature"
              c:identifier="gvir_config_capabilities_cpu_add_feature">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="59">Adds a new feature to CPU.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <type name="CapabilitiesCpuFeature"
                  c:type="GVirConfigCapabilitiesCpuFeature*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_arch"
              c:identifier="gvir_config_capabilities_cpu_get_arch">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_features"
              c:identifier="gvir_config_capabilities_cpu_get_features">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="132">Gets the features of this CPU.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
               line="137">
a newly allocated #GList of #GVirConfigCapabilitiesCpuFeature.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesCpuFeature"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gvir_config_capabilities_cpu_get_model">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="185">Gets the model of the cpu.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
               line="190">a new #GVirConfigCapabilitiesCpuModel.</doc>
          <type name="CapabilitiesCpuModel"
                c:type="GVirConfigCapabilitiesCpuModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_topology"
              c:identifier="gvir_config_capabilities_cpu_get_topology">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="146">Gets the topology of the cpu.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
               line="151">a new #GVirConfigCapabilitiesCpuTopology.</doc>
          <type name="CapabilitiesCpuTopology"
                c:type="GVirConfigCapabilitiesCpuTopology*"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_topology"
              c:identifier="gvir_config_capabilities_cpu_set_topology">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
             line="168">Sets the topology of the cpu.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
          </instance-parameter>
          <parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesCpuPrivate"
              c:type="GVirConfigCapabilitiesCpuPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesCpuClass"
            c:type="GVirConfigCapabilitiesCpuClass"
            glib:is-gtype-struct-for="CapabilitiesCpu">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="63"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="get_features">
        <callback name="get_features">
          <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                           line="60"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.c"
                 line="137">
a newly allocated #GList of #GVirConfigCapabilitiesCpuFeature.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="CapabilitiesCpuFeature"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="cpu" transfer-ownership="none">
              <type name="CapabilitiesCpu"
                    c:type="GVirConfigCapabilitiesCpu*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="19">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="CapabilitiesCpuFeature"
           c:symbol-prefix="capabilities_cpu_feature"
           c:type="GVirConfigCapabilitiesCpuFeature"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesCpuFeature"
           glib:get-type="gvir_config_capabilities_cpu_feature_get_type"
           glib:type-struct="CapabilitiesCpuFeatureClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="57"/>
      <method name="get_name"
              c:identifier="gvir_config_capabilities_cpu_feature_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <type name="CapabilitiesCpuFeature"
                  c:type="GVirConfigCapabilitiesCpuFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_capabilities_cpu_feature_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <type name="CapabilitiesCpuFeature"
                  c:type="GVirConfigCapabilitiesCpuFeature*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesCpuFeaturePrivate"
              c:type="GVirConfigCapabilitiesCpuFeaturePrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesCpuFeatureClass"
            c:type="GVirConfigCapabilitiesCpuFeatureClass"
            glib:is-gtype-struct-for="CapabilitiesCpuFeature">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="57"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesCpuFeaturePrivate"
            c:type="GVirConfigCapabilitiesCpuFeaturePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="40"/>
    </record>
    <class name="CapabilitiesCpuModel"
           c:symbol-prefix="capabilities_cpu_model"
           c:type="GVirConfigCapabilitiesCpuModel"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesCpuModel"
           glib:get-type="gvir_config_capabilities_cpu_model_get_type"
           glib:type-struct="CapabilitiesCpuModelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_capabilities_cpu_model_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <type name="CapabilitiesCpuModel"
                c:type="GVirConfigCapabilitiesCpuModel*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_capabilities_cpu_model_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="CapabilitiesCpuModel"
                c:type="GVirConfigCapabilitiesCpuModel*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name"
              c:identifier="gvir_config_capabilities_cpu_model_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <type name="CapabilitiesCpuModel"
                  c:type="GVirConfigCapabilitiesCpuModel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_capabilities_cpu_model_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <type name="CapabilitiesCpuModel"
                  c:type="GVirConfigCapabilitiesCpuModel*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesCpuModelPrivate"
              c:type="GVirConfigCapabilitiesCpuModelPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesCpuModelClass"
            c:type="GVirConfigCapabilitiesCpuModelClass"
            glib:is-gtype-struct-for="CapabilitiesCpuModel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesCpuModelPrivate"
            c:type="GVirConfigCapabilitiesCpuModelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="39"/>
    </record>
    <record name="CapabilitiesCpuPrivate"
            c:type="GVirConfigCapabilitiesCpuPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="44"/>
    </record>
    <class name="CapabilitiesCpuTopology"
           c:symbol-prefix="capabilities_cpu_topology"
           c:type="GVirConfigCapabilitiesCpuTopology"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesCpuTopology"
           glib:get-type="gvir_config_capabilities_cpu_topology_get_type"
           glib:type-struct="CapabilitiesCpuTopologyClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_capabilities_cpu_topology_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="CapabilitiesCpuTopology"
                c:type="GVirConfigCapabilitiesCpuTopology*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_capabilities_cpu_topology_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <type name="CapabilitiesCpuTopology"
                c:type="GVirConfigCapabilitiesCpuTopology*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_cores"
              c:identifier="gvir_config_capabilities_cpu_topology_get_cores">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sockets"
              c:identifier="gvir_config_capabilities_cpu_topology_get_sockets">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_threads"
              c:identifier="gvir_config_capabilities_cpu_topology_get_threads">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_cores"
              c:identifier="gvir_config_capabilities_cpu_topology_set_cores">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
          <parameter name="cores" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sockets"
              c:identifier="gvir_config_capabilities_cpu_topology_set_sockets">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
          <parameter name="sockets" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_threads"
              c:identifier="gvir_config_capabilities_cpu_topology_set_threads">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="topology" transfer-ownership="none">
            <type name="CapabilitiesCpuTopology"
                  c:type="GVirConfigCapabilitiesCpuTopology*"/>
          </instance-parameter>
          <parameter name="threads" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesCpuTopologyPrivate"
              c:type="GVirConfigCapabilitiesCpuTopologyPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesCpuTopologyClass"
            c:type="GVirConfigCapabilitiesCpuTopologyClass"
            glib:is-gtype-struct-for="CapabilitiesCpuTopology">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="57"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesCpuTopologyPrivate"
            c:type="GVirConfigCapabilitiesCpuTopologyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="40"/>
    </record>
    <class name="CapabilitiesGuest"
           c:symbol-prefix="capabilities_guest"
           c:type="GVirConfigCapabilitiesGuest"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesGuest"
           glib:get-type="gvir_config_capabilities_guest_get_type"
           glib:type-struct="CapabilitiesGuestClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="60"/>
      <method name="get_arch"
              c:identifier="gvir_config_capabilities_guest_get_arch">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.c"
             line="62">Gets the CPU architecture capabilities of the guest.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.c"
               line="67">a new #GVirConfigCapabilitiesGuestArch.</doc>
          <type name="CapabilitiesGuestArch"
                c:type="GVirConfigCapabilitiesGuestArch*"/>
        </return-value>
        <parameters>
          <instance-parameter name="guest" transfer-ownership="none">
            <type name="CapabilitiesGuest"
                  c:type="GVirConfigCapabilitiesGuest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_features"
              c:identifier="gvir_config_capabilities_guest_get_features">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.c"
             line="108">Gets the CPU features for this guest.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.c"
               line="113">
a newly allocated #GList of #GVirConfigCapabilitiesGuestFeature.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesGuestFeature"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="guest" transfer-ownership="none">
            <type name="CapabilitiesGuest"
                  c:type="GVirConfigCapabilitiesGuest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_type"
              c:identifier="gvir_config_capabilities_guest_get_os_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="DomainOsType" c:type="GVirConfigDomainOsType"/>
        </return-value>
        <parameters>
          <instance-parameter name="guest" transfer-ownership="none">
            <type name="CapabilitiesGuest"
                  c:type="GVirConfigCapabilitiesGuest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesGuestPrivate"
              c:type="GVirConfigCapabilitiesGuestPrivate*"/>
      </field>
    </class>
    <class name="CapabilitiesGuestArch"
           c:symbol-prefix="capabilities_guest_arch"
           c:type="GVirConfigCapabilitiesGuestArch"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesGuestArch"
           glib:get-type="gvir_config_capabilities_guest_arch_get_type"
           glib:type-struct="CapabilitiesGuestArchClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="57"/>
      <method name="get_domains"
              c:identifier="gvir_config_capabilities_guest_arch_get_domains">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.c"
             line="86">Gets the possible domains for this architecture.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.c"
               line="91">
a newly allocated #GList of #GVirConfigCapabilitiesGuestDomain.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesGuestDomain"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="arch" transfer-ownership="none">
            <type name="CapabilitiesGuestArch"
                  c:type="GVirConfigCapabilitiesGuestArch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_emulator"
              c:identifier="gvir_config_capabilities_guest_arch_get_emulator">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arch" transfer-ownership="none">
            <type name="CapabilitiesGuestArch"
                  c:type="GVirConfigCapabilitiesGuestArch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_capabilities_guest_arch_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="arch" transfer-ownership="none">
            <type name="CapabilitiesGuestArch"
                  c:type="GVirConfigCapabilitiesGuestArch*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesGuestArchPrivate"
              c:type="GVirConfigCapabilitiesGuestArchPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesGuestArchClass"
            c:type="GVirConfigCapabilitiesGuestArchClass"
            glib:is-gtype-struct-for="CapabilitiesGuestArch">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="57"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesGuestArchPrivate"
            c:type="GVirConfigCapabilitiesGuestArchPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="40"/>
    </record>
    <record name="CapabilitiesGuestClass"
            c:type="GVirConfigCapabilitiesGuestClass"
            glib:is-gtype-struct-for="CapabilitiesGuest">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="60"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="CapabilitiesGuestDomain"
           c:symbol-prefix="capabilities_guest_domain"
           c:type="GVirConfigCapabilitiesGuestDomain"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesGuestDomain"
           glib:get-type="gvir_config_capabilities_guest_domain_get_type"
           glib:type-struct="CapabilitiesGuestDomainClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="59"/>
      <method name="get_emulator"
              c:identifier="gvir_config_capabilities_guest_domain_get_emulator">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="CapabilitiesGuestDomain"
                  c:type="GVirConfigCapabilitiesGuestDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_virt_type"
              c:identifier="gvir_config_capabilities_guest_domain_get_virt_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="DomainVirtType" c:type="GVirConfigDomainVirtType"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="CapabilitiesGuestDomain"
                  c:type="GVirConfigCapabilitiesGuestDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesGuestDomainPrivate"
              c:type="GVirConfigCapabilitiesGuestDomainPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesGuestDomainClass"
            c:type="GVirConfigCapabilitiesGuestDomainClass"
            glib:is-gtype-struct-for="CapabilitiesGuestDomain">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="59"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesGuestDomainPrivate"
            c:type="GVirConfigCapabilitiesGuestDomainPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="42"/>
    </record>
    <class name="CapabilitiesGuestFeature"
           c:symbol-prefix="capabilities_guest_feature"
           c:type="GVirConfigCapabilitiesGuestFeature"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesGuestFeature"
           glib:get-type="gvir_config_capabilities_guest_feature_get_type"
           glib:type-struct="CapabilitiesGuestFeatureClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="57"/>
      <method name="get_name"
              c:identifier="gvir_config_capabilities_guest_feature_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <type name="CapabilitiesGuestFeature"
                  c:type="GVirConfigCapabilitiesGuestFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesGuestFeaturePrivate"
              c:type="GVirConfigCapabilitiesGuestFeaturePrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesGuestFeatureClass"
            c:type="GVirConfigCapabilitiesGuestFeatureClass"
            glib:is-gtype-struct-for="CapabilitiesGuestFeature">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="57"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesGuestFeaturePrivate"
            c:type="GVirConfigCapabilitiesGuestFeaturePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="40"/>
    </record>
    <record name="CapabilitiesGuestPrivate"
            c:type="GVirConfigCapabilitiesGuestPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="43"/>
    </record>
    <class name="CapabilitiesHost"
           c:symbol-prefix="capabilities_host"
           c:type="GVirConfigCapabilitiesHost"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesHost"
           glib:get-type="gvir_config_capabilities_host_get_type"
           glib:type-struct="CapabilitiesHostClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="59"/>
      <method name="get_cpu"
              c:identifier="gvir_config_capabilities_host_get_cpu">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.c"
             line="56">Gets the CPU capabilities of the host.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.c"
               line="61">a new #GVirConfigCapabilitiesCpu.</doc>
          <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu*"/>
        </return-value>
        <parameters>
          <instance-parameter name="host" transfer-ownership="none">
            <type name="CapabilitiesHost"
                  c:type="GVirConfigCapabilitiesHost*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_secmodels"
              c:identifier="gvir_config_capabilities_host_get_secmodels">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.c"
             line="106">Get the security models listed in @host capabilities.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.c"
               line="112">
a newly allocated #GList of #GVirConfigCapabilitiesHostSecModel.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="CapabilitiesHostSecModel"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="host" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.c"
                 line="108">a #GVirConfigCapabilitiesHost</doc>
            <type name="CapabilitiesHost"
                  c:type="GVirConfigCapabilitiesHost*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uuid"
              c:identifier="gvir_config_capabilities_host_get_uuid">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="host" transfer-ownership="none">
            <type name="CapabilitiesHost"
                  c:type="GVirConfigCapabilitiesHost*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesHostPrivate"
              c:type="GVirConfigCapabilitiesHostPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesHostClass"
            c:type="GVirConfigCapabilitiesHostClass"
            glib:is-gtype-struct-for="CapabilitiesHost">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="59"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesHostPrivate"
            c:type="GVirConfigCapabilitiesHostPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="42"/>
    </record>
    <class name="CapabilitiesHostSecModel"
           c:symbol-prefix="capabilities_host_secmodel"
           c:type="GVirConfigCapabilitiesHostSecModel"
           parent="Object"
           glib:type-name="GVirConfigCapabilitiesHostSecModel"
           glib:get-type="gvir_config_capabilities_host_secmodel_get_type"
           glib:type-struct="CapabilitiesHostSecModelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="56"/>
      <method name="get_doi"
              c:identifier="gvir_config_capabilities_host_secmodel_get_doi">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="secmodel" transfer-ownership="none">
            <type name="CapabilitiesHostSecModel"
                  c:type="GVirConfigCapabilitiesHostSecModel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gvir_config_capabilities_host_secmodel_get_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="secmodel" transfer-ownership="none">
            <type name="CapabilitiesHostSecModel"
                  c:type="GVirConfigCapabilitiesHostSecModel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="CapabilitiesHostSecModelPrivate"
              c:type="GVirConfigCapabilitiesHostSecModelPrivate*"/>
      </field>
    </class>
    <record name="CapabilitiesHostSecModelClass"
            c:type="GVirConfigCapabilitiesHostSecModelClass"
            glib:is-gtype-struct-for="CapabilitiesHostSecModel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CapabilitiesHostSecModelPrivate"
            c:type="GVirConfigCapabilitiesHostSecModelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="39"/>
    </record>
    <record name="CapabilitiesPrivate"
            c:type="GVirConfigCapabilitiesPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="41"/>
    </record>
    <function-macro name="DOMAIN"
                    c:identifier="GVIR_CONFIG_DOMAIN"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_PCI"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_PCI"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_PCI_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_PCI_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_PCI_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_PCI_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_USB"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_USB"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_USB_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_USB_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_ADDRESS_USB_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_ADDRESS_USB_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES_OS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES_OS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES_OS_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES_OS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CAPABILITIES_OS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CAPABILITIES_OS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHANNEL"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHANNEL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHANNEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_PTY"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_PTY"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_PTY_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_PTY_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_PTY_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_PTY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_PORT"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_PORT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_PORT_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_PORT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_PORT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_PORT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_VMC"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_VMC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_VMC_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_VMC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_SPICE_VMC_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_SPICE_VMC_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_UNIX"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_UNIX"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_UNIX_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_UNIX_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CHARDEV_SOURCE_UNIX_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CHARDEV_SOURCE_UNIX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CLOCK"
                    c:identifier="GVIR_CONFIG_DOMAIN_CLOCK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CLOCK_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CLOCK_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONSOLE"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONSOLE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONSOLE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER_USB"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER_USB_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CONTROLLER_USB_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_FEATURE"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_FEATURE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_MODEL"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_MODEL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_CPU_MODEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DEVICE"
                    c:identifier="GVIR_CONFIG_DOMAIN_DEVICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DEVICE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DEVICE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK_DRIVER"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK_DRIVER_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK_DRIVER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_DISK_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_DISK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_FILESYS"
                    c:identifier="GVIR_CONFIG_DOMAIN_FILESYS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_FILESYS_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_FILESYS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_DESKTOP"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_DESKTOP"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_DESKTOP_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_DESKTOP_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_DESKTOP_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_DESKTOP_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_RDP"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_RDP"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_RDP_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_RDP_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_RDP_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_RDP_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SDL"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SDL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SDL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SDL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SDL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SDL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SPICE"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SPICE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_SPICE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_VNC"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_VNC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_VNC_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_VNC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_GRAPHICS_VNC_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_VNC_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV_PCI"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV_PCI"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV_PCI_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV_PCI_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_HOSTDEV_PCI_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_HOSTDEV_PCI_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INPUT"
                    c:identifier="GVIR_CONFIG_DOMAIN_INPUT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INPUT_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INPUT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INPUT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INPUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_BRIDGE"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_BRIDGE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_BRIDGE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_BRIDGE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_BRIDGE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_BRIDGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF_PARAMETER"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF_PARAMETER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF_PARAMETER_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF_PARAMETER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_FILTERREF_PARAMETER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_FILTERREF_PARAMETER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_NETWORK"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_NETWORK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_NETWORK_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_NETWORK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_NETWORK_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_NETWORK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_USER"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_USER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_USER_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_USER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_INTERFACE_USER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_USER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_MEMBALLOON"
                    c:identifier="GVIR_CONFIG_DOMAIN_MEMBALLOON"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_MEMBALLOON_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_MEMBALLOON_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_MEMBALLOON_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_MEMBALLOON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_OS"
                    c:identifier="GVIR_CONFIG_DOMAIN_OS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_OS_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_OS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_OS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_OS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_PARALLEL"
                    c:identifier="GVIR_CONFIG_DOMAIN_PARALLEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_PARALLEL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_PARALLEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_PARALLEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_PARALLEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_POWER_MANAGEMENT"
                    c:identifier="GVIR_CONFIG_DOMAIN_POWER_MANAGEMENT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_POWER_MANAGEMENT_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_POWER_MANAGEMENT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_POWER_MANAGEMENT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_POWER_MANAGEMENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_REDIRDEV"
                    c:identifier="GVIR_CONFIG_DOMAIN_REDIRDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_REDIRDEV_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_REDIRDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_REDIRDEV_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_REDIRDEV_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SECLABEL"
                    c:identifier="GVIR_CONFIG_DOMAIN_SECLABEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SECLABEL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SECLABEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SECLABEL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SECLABEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SERIAL"
                    c:identifier="GVIR_CONFIG_DOMAIN_SERIAL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SERIAL_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SERIAL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SERIAL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SERIAL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST_CERTIFICATES"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST_CERTIFICATES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST_CERTIFICATES_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST_CERTIFICATES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST_CERTIFICATES_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST_CERTIFICATES_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_HOST_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_HOST_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_PASSTHROUGH"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_PASSTHROUGH"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_PASSTHROUGH_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_PASSTHROUGH_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SMARTCARD_PASSTHROUGH_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SMARTCARD_PASSTHROUGH_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT_DISK"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DISK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT_DISK_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DISK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT_DISK_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DISK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SNAPSHOT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SOUND"
                    c:identifier="GVIR_CONFIG_DOMAIN_SOUND"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SOUND_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SOUND_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_SOUND_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_SOUND_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_HPET"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_HPET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_HPET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_HPET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_HPET_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_HPET_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_PIT"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_PIT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_PIT_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_PIT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_PIT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_PIT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_RTC"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_RTC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_RTC_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_RTC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_TIMER_RTC_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_TIMER_RTC_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_VIDEO"
                    c:identifier="GVIR_CONFIG_DOMAIN_VIDEO"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_VIDEO_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DOMAIN_VIDEO_GET_CLASS"
                    c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Domain"
           c:symbol-prefix="domain"
           c:type="GVirConfigDomain"
           parent="Object"
           glib:type-name="GVirConfigDomain"
           glib:get-type="gvir_config_domain_get_type"
           glib:type-struct="DomainClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="63"/>
      <constructor name="new" c:identifier="gvir_config_domain_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <type name="Domain" c:type="GVirConfigDomain*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="100"/>
        <return-value transfer-ownership="full">
          <type name="Domain" c:type="GVirConfigDomain*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_device" c:identifier="gvir_config_domain_add_device">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="DomainDevice" c:type="GVirConfigDomainDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clock" c:identifier="gvir_config_domain_get_clock">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="571">Gets the clock configuration of @domain</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="121"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="577">A #GVirConfigDomainClock. The returned
object should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="573">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cpu" c:identifier="gvir_config_domain_get_cpu">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="882">Gets the CPU configuration of @domain</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="151"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="888">A #GVirConfigDomainCpu. The returned object
should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="884">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_current_memory"
              c:identifier="gvir_config_domain_get_current_memory"
              glib:get-property="current-memory">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="430">current amount of RAM in kilobytes (i.e. blocks of 1024 bytes).</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="428">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_xml"
              c:identifier="gvir_config_domain_get_custom_xml">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="149"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="ns_uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gvir_config_domain_get_description"
              glib:get-property="description">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_devices" c:identifier="gvir_config_domain_get_devices">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="757">Gets the list of devices attached to @domain.  The returned list should
be freed with g_list_free(), after its elements have been unreffed with
g_object_unref().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="135"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="765">
a newly allocated #GList of #GVirConfigDomainDevice.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainDevice"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="759">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_features"
              c:identifier="gvir_config_domain_get_features"
              glib:get-property="features">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="531">The returned list should be freed with
g_strfreev() when no longer needed.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="529">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_memory"
              c:identifier="gvir_config_domain_get_memory"
              glib:get-property="memory">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="407">maximum amount of RAM in kilobytes (i.e. blocks of 1024 bytes).</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="405">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_domain_get_name"
              glib:get-property="name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os" c:identifier="gvir_config_domain_get_os">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="610">Gets the operating system configuration of @domain</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="124"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain.c"
               line="616">A #GVirConfigDomainOs. The returned
object should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="612">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gvir_config_domain_get_title"
              glib:get-property="title">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uuid"
              c:identifier="gvir_config_domain_get_uuid"
              glib:get-property="uuid">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vcpus" c:identifier="gvir_config_domain_get_vcpus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_virt_type"
              c:identifier="gvir_config_domain_get_virt_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="DomainVirtType" c:type="GVirConfigDomainVirtType"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_clock" c:identifier="gvir_config_domain_set_clock">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="596">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="klock"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cpu" c:identifier="gvir_config_domain_set_cpu">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="906">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="cpu"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_current_memory"
              c:identifier="gvir_config_domain_set_current_memory"
              glib:set-property="current-memory">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="472">Sets the current amount of RAM allocated to @domain in kilobytes (i.e.
blocks of 1024 bytes). This can be set to less than the maximum domain
memory to allow to balloon the guest memory on the fly. Be aware that
libvirt will set it automatically if it's not explictly set, which means
you may need to set this value in addition to 'memory' if you want to
change the available domain memory after creation.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="474">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="memory" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="475">The current amount of RAM in kilobytes.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_xml"
              c:identifier="gvir_config_domain_set_custom_xml"
              throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="ns" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="ns_uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_xml_ns_children"
              c:identifier="gvir_config_domain_set_custom_xml_ns_children"
              throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="ns" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="ns_uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gvir_config_domain_set_description"
              glib:set-property="description">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="334">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_devices" c:identifier="gvir_config_domain_set_devices">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="688">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="devices" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="DomainDevice"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_features"
              c:identifier="gvir_config_domain_set_features"
              glib:set-property="features">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="features" transfer-ownership="none">
            <array c:type="const GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_lifecycle"
              c:identifier="gvir_config_domain_set_lifecycle">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="DomainLifecycleEvent"
                  c:type="GVirConfigDomainLifecycleEvent"/>
          </parameter>
          <parameter name="action" transfer-ownership="none">
            <type name="DomainLifecycleAction"
                  c:type="GVirConfigDomainLifecycleAction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_memory"
              c:identifier="gvir_config_domain_set_memory"
              glib:set-property="memory">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="449">Sets the maximum amount of RAM allocated to @domain in kilobytes (i.e.
blocks of 1024 bytes).</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="451">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="memory" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="452">The maximum amount of RAM in kilobytes.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_set_name"
              glib:set-property="name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="281">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_os" c:identifier="gvir_config_domain_set_os">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="634">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="os"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="635">the os configuration to set</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_power_management"
              c:identifier="gvir_config_domain_set_power_management">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="922">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="pm"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="923">a #GVirPowerManagement instance</doc>
            <type name="DomainPowerManagement"
                  c:type="GVirConfigDomainPowerManagement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_seclabel"
              c:identifier="gvir_config_domain_set_seclabel">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="650">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="seclabel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="651">the security label configuration to set</doc>
            <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gvir_config_domain_set_title"
              glib:set-property="title">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain.c"
             line="307">Sets the title of the domain. This is an optional short textual description of the domain. Passing a NULL @title
unsets the current domain title.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="309">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="310">title of the domain</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uuid"
              c:identifier="gvir_config_domain_set_uuid"
              glib:set-property="uuid">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain.c"
                 line="295">a #GVirConfigDomain</doc>
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="uuid"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vcpus" c:identifier="gvir_config_domain_set_vcpus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="vcpu_count" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_virt_type"
              c:identifier="gvir_config_domain_set_virt_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain" transfer-ownership="none">
            <type name="Domain" c:type="GVirConfigDomain*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainVirtType" c:type="GVirConfigDomainVirtType"/>
          </parameter>
        </parameters>
      </method>
      <property name="current-memory"
                writable="1"
                transfer-ownership="none"
                setter="set_current_memory"
                getter="get_current_memory"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="description"
                writable="1"
                transfer-ownership="none"
                setter="set_description"
                getter="get_description"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="features"
                writable="1"
                transfer-ownership="none"
                setter="set_features"
                getter="get_features">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="memory"
                writable="1"
                transfer-ownership="none"
                setter="set_memory"
                getter="get_memory"
                default-value="0">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="uuid"
                writable="1"
                transfer-ownership="none"
                setter="set_uuid"
                getter="get_uuid"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="vcpu"
                writable="1"
                transfer-ownership="none"
                default-value="1">
        <type name="guint64" c:type="guint64"/>
      </property>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainPrivate" c:type="GVirConfigDomainPrivate*"/>
      </field>
    </class>
    <class name="DomainAddress"
           c:symbol-prefix="domain_address"
           c:type="GVirConfigDomainAddress"
           parent="Object"
           abstract="1"
           glib:type-name="GVirConfigDomainAddress"
           glib:get-type="gvir_config_domain_address_get_type"
           glib:type-struct="DomainAddressClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="56"/>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainAddressPrivate"
              c:type="GVirConfigDomainAddressPrivate*"/>
      </field>
    </class>
    <record name="DomainAddressClass"
            c:type="GVirConfigDomainAddressClass"
            glib:is-gtype-struct-for="DomainAddress">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainAddressPci"
           c:symbol-prefix="domain_address_pci"
           c:type="GVirConfigDomainAddressPci"
           parent="DomainAddress"
           glib:type-name="GVirConfigDomainAddressPci"
           glib:get-type="gvir_config_domain_address_pci_get_type"
           glib:type-struct="DomainAddressPciClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_address_pci_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainAddressPci" c:type="GVirConfigDomainAddressPci*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_address_pci_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainAddressPci" c:type="GVirConfigDomainAddressPci*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bus"
              c:identifier="gvir_config_domain_address_pci_get_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_domain"
              c:identifier="gvir_config_domain_address_pci_get_domain">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_function"
              c:identifier="gvir_config_domain_address_pci_get_function">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_multifunction"
              c:identifier="gvir_config_domain_address_pci_get_multifunction">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_slot"
              c:identifier="gvir_config_domain_address_pci_get_slot">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_bus"
              c:identifier="gvir_config_domain_address_pci_set_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <type name="guint8" c:type="guchar"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_domain"
              c:identifier="gvir_config_domain_address_pci_set_domain">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
          <parameter name="pci_domain" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_function"
              c:identifier="gvir_config_domain_address_pci_set_function">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
          <parameter name="function" transfer-ownership="none">
            <type name="guint8" c:type="guchar"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_multifunction"
              c:identifier="gvir_config_domain_address_pci_set_multifunction">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
          <parameter name="multifunction" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_slot"
              c:identifier="gvir_config_domain_address_pci_set_slot">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </instance-parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="guint8" c:type="guchar"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainAddress" c:type="GVirConfigDomainAddress"/>
      </field>
      <field name="priv">
        <type name="DomainAddressPciPrivate"
              c:type="GVirConfigDomainAddressPciPrivate*"/>
      </field>
    </class>
    <record name="DomainAddressPciClass"
            c:type="GVirConfigDomainAddressPciClass"
            glib:is-gtype-struct-for="DomainAddressPci">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainAddressClass" c:type="GVirConfigDomainAddressClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainAddressPciPrivate"
            c:type="GVirConfigDomainAddressPciPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="39"/>
    </record>
    <record name="DomainAddressPrivate"
            c:type="GVirConfigDomainAddressPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="39"/>
    </record>
    <class name="DomainAddressUsb"
           c:symbol-prefix="domain_address_usb"
           c:type="GVirConfigDomainAddressUsb"
           parent="DomainAddress"
           glib:type-name="GVirConfigDomainAddressUsb"
           glib:get-type="gvir_config_domain_address_usb_get_type"
           glib:type-struct="DomainAddressUsbClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_address_usb_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainAddressUsb" c:type="GVirConfigDomainAddressUsb*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_address_usb_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainAddressUsb" c:type="GVirConfigDomainAddressUsb*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_bus"
              c:identifier="gvir_config_domain_address_usb_set_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressUsb"
                  c:type="GVirConfigDomainAddressUsb*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_port"
              c:identifier="gvir_config_domain_address_usb_set_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="address" transfer-ownership="none">
            <type name="DomainAddressUsb"
                  c:type="GVirConfigDomainAddressUsb*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainAddress" c:type="GVirConfigDomainAddress"/>
      </field>
      <field name="priv">
        <type name="DomainAddressUsbPrivate"
              c:type="GVirConfigDomainAddressUsbPrivate*"/>
      </field>
    </class>
    <record name="DomainAddressUsbClass"
            c:type="GVirConfigDomainAddressUsbClass"
            glib:is-gtype-struct-for="DomainAddressUsb">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainAddressClass" c:type="GVirConfigDomainAddressClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainAddressUsbPrivate"
            c:type="GVirConfigDomainAddressUsbPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="39"/>
    </record>
    <class name="DomainCapabilities"
           c:symbol-prefix="domain_capabilities"
           c:type="GVirConfigDomainCapabilities"
           parent="Object"
           glib:type-name="GVirConfigDomainCapabilities"
           glib:get-type="gvir_config_domain_capabilities_get_type"
           glib:type-struct="DomainCapabilitiesClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_capabilities_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainCapabilities"
                c:type="GVirConfigDomainCapabilities*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_capabilities_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainCapabilities"
                c:type="GVirConfigDomainCapabilities*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_os"
              c:identifier="gvir_config_domain_capabilities_get_os">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.c"
             line="73">Gets the @os associated with the @domain_caps.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.c"
               line="79">a new #GVirConfigDomainCapabilitiesOs.</doc>
          <type name="DomainCapabilitiesOs"
                c:type="GVirConfigDomainCapabilitiesOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="domain_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.c"
                 line="75">a #GVirConfigDomainCapabilities</doc>
            <type name="DomainCapabilities"
                  c:type="GVirConfigDomainCapabilities*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainCapabilitiesPrivate"
              c:type="GVirConfigDomainCapabilitiesPrivate*"/>
      </field>
    </class>
    <record name="DomainCapabilitiesClass"
            c:type="GVirConfigDomainCapabilitiesClass"
            glib:is-gtype-struct-for="DomainCapabilities">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainCapabilitiesOs"
           c:symbol-prefix="domain_capabilities_os"
           c:type="GVirConfigDomainCapabilitiesOs"
           parent="Object"
           glib:type-name="GVirConfigDomainCapabilitiesOs"
           glib:get-type="gvir_config_domain_capabilities_os_get_type"
           glib:type-struct="DomainCapabilitiesOsClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="56"/>
      <virtual-method name="get_firmwares" invoker="get_firmwares">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.c"
             line="102">Gets the firmwares supported by @os. The returned list should be freed with
g_list_free().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                         line="53"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.c"
               line="108">
a newly allocated #GList of #GVirConfigDomainOsFirmware.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainOsFirmware"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainCapabilitiesOs"
                  c:type="GVirConfigDomainCapabilitiesOs*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_firmwares"
              c:identifier="gvir_config_domain_capabilities_os_get_firmwares">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.c"
             line="102">Gets the firmwares supported by @os. The returned list should be freed with
g_list_free().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                         line="61"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.c"
               line="108">
a newly allocated #GList of #GVirConfigDomainOsFirmware.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainOsFirmware"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainCapabilitiesOs"
                  c:type="GVirConfigDomainCapabilitiesOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainCapabilitiesOsPrivate"
              c:type="GVirConfigDomainCapabilitiesOsPrivate*"/>
      </field>
    </class>
    <record name="DomainCapabilitiesOsClass"
            c:type="GVirConfigDomainCapabilitiesOsClass"
            glib:is-gtype-struct-for="DomainCapabilitiesOs">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="get_firmwares">
        <callback name="get_firmwares">
          <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                           line="53"/>
          <return-value transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.c"
                 line="108">
a newly allocated #GList of #GVirConfigDomainOsFirmware.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="DomainOsFirmware"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="os" transfer-ownership="none">
              <type name="DomainCapabilitiesOs"
                    c:type="GVirConfigDomainCapabilitiesOs*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="19">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainCapabilitiesOsPrivate"
            c:type="GVirConfigDomainCapabilitiesOsPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="37"/>
    </record>
    <record name="DomainCapabilitiesPrivate"
            c:type="GVirConfigDomainCapabilitiesPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="39"/>
    </record>
    <class name="DomainChannel"
           c:symbol-prefix="domain_channel"
           c:type="GVirConfigDomainChannel"
           parent="DomainChardev"
           glib:type-name="GVirConfigDomainChannel"
           glib:get-type="gvir_config_domain_channel_get_type"
           glib:type-struct="DomainChannelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_channel_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_channel_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_target_name"
              c:identifier="gvir_config_domain_channel_get_target_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_type"
              c:identifier="gvir_config_domain_channel_get_target_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="DomainChannelTargetType"
                c:type="GVirConfigDomainChannelTargetType"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_target_name"
              c:identifier="gvir_config_domain_channel_set_target_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target_type"
              c:identifier="gvir_config_domain_channel_set_target_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <type name="DomainChannel" c:type="GVirConfigDomainChannel*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainChannelTargetType"
                  c:type="GVirConfigDomainChannelTargetType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainChardev" c:type="GVirConfigDomainChardev"/>
      </field>
      <field name="priv">
        <type name="DomainChannelPrivate"
              c:type="GVirConfigDomainChannelPrivate*"/>
      </field>
    </class>
    <record name="DomainChannelClass"
            c:type="GVirConfigDomainChannelClass"
            glib:is-gtype-struct-for="DomainChannel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevClass" c:type="GVirConfigDomainChardevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChannelPrivate"
            c:type="GVirConfigDomainChannelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="39"/>
    </record>
    <enumeration name="DomainChannelTargetType"
                 glib:type-name="GVirConfigDomainChannelTargetType"
                 glib:get-type="gvir_config_domain_channel_target_type_get_type"
                 c:type="GVirConfigDomainChannelTargetType">
      <member name="guestfwd"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_GUESTFWD"
              glib:nick="guestfwd"
              glib:name="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_GUESTFWD">
      </member>
      <member name="virtio"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_VIRTIO"
              glib:nick="virtio"
              glib:name="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_VIRTIO">
      </member>
      <member name="spiceport"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_SPICEPORT"
              glib:nick="spiceport"
              glib:name="GVIR_CONFIG_DOMAIN_CHANNEL_TARGET_SPICEPORT">
      </member>
    </enumeration>
    <class name="DomainChardev"
           c:symbol-prefix="domain_chardev"
           c:type="GVirConfigDomainChardev"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainChardev"
           glib:get-type="gvir_config_domain_chardev_get_type"
           glib:type-struct="DomainChardevClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="58"/>
      <method name="get_source"
              c:identifier="gvir_config_domain_chardev_get_source">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.c"
             line="89">Gets the source for the chardev</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.c"
               line="95">the chardev source</doc>
          <type name="DomainChardevSource"
                c:type="GVirConfigDomainChardevSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="chardev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.c"
                 line="91">a #GVirConfigDomainChardev</doc>
            <type name="DomainChardev" c:type="GVirConfigDomainChardev*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gvir_config_domain_chardev_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="chardev" transfer-ownership="none">
            <type name="DomainChardev" c:type="GVirConfigDomainChardev*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="DomainChardevSource"
                  c:type="GVirConfigDomainChardevSource*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainChardevPrivate"
              c:type="GVirConfigDomainChardevPrivate*"/>
      </field>
    </class>
    <record name="DomainChardevClass"
            c:type="GVirConfigDomainChardevClass"
            glib:is-gtype-struct-for="DomainChardev">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="58"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevPrivate"
            c:type="GVirConfigDomainChardevPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="41"/>
    </record>
    <class name="DomainChardevSource"
           c:symbol-prefix="domain_chardev_source"
           c:type="GVirConfigDomainChardevSource"
           parent="Object"
           abstract="1"
           glib:type-name="GVirConfigDomainChardevSource"
           glib:get-type="gvir_config_domain_chardev_source_get_type"
           glib:type-struct="DomainChardevSourceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="56"/>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainChardevSourcePrivate"
              c:type="GVirConfigDomainChardevSourcePrivate*"/>
      </field>
    </class>
    <record name="DomainChardevSourceClass"
            c:type="GVirConfigDomainChardevSourceClass"
            glib:is-gtype-struct-for="DomainChardevSource">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevSourcePrivate"
            c:type="GVirConfigDomainChardevSourcePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="39"/>
    </record>
    <class name="DomainChardevSourcePty"
           c:symbol-prefix="domain_chardev_source_pty"
           c:type="GVirConfigDomainChardevSourcePty"
           parent="DomainChardevSource"
           glib:type-name="GVirConfigDomainChardevSourcePty"
           glib:get-type="gvir_config_domain_chardev_source_pty_get_type"
           glib:type-struct="DomainChardevSourcePtyClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_chardev_source_pty_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourcePty"
                c:type="GVirConfigDomainChardevSourcePty*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_chardev_source_pty_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourcePty"
                c:type="GVirConfigDomainChardevSourcePty*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_path"
              c:identifier="gvir_config_domain_chardev_source_pty_get_path">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <type name="DomainChardevSourcePty"
                  c:type="GVirConfigDomainChardevSourcePty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_path"
              c:identifier="gvir_config_domain_chardev_source_pty_set_path">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pty" transfer-ownership="none">
            <type name="DomainChardevSourcePty"
                  c:type="GVirConfigDomainChardevSourcePty*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainChardevSource"
              c:type="GVirConfigDomainChardevSource"/>
      </field>
      <field name="priv">
        <type name="DomainChardevSourcePtyPrivate"
              c:type="GVirConfigDomainChardevSourcePtyPrivate*"/>
      </field>
    </class>
    <record name="DomainChardevSourcePtyClass"
            c:type="GVirConfigDomainChardevSourcePtyClass"
            glib:is-gtype-struct-for="DomainChardevSourcePty">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevSourceClass"
              c:type="GVirConfigDomainChardevSourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevSourcePtyPrivate"
            c:type="GVirConfigDomainChardevSourcePtyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="39"/>
    </record>
    <class name="DomainChardevSourceSpicePort"
           c:symbol-prefix="domain_chardev_source_spiceport"
           c:type="GVirConfigDomainChardevSourceSpicePort"
           parent="DomainChardevSource"
           glib:type-name="GVirConfigDomainChardevSourceSpicePort"
           glib:get-type="gvir_config_domain_chardev_source_spiceport_get_type"
           glib:type-struct="DomainChardevSourceSpicePortClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="54"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_chardev_source_spiceport_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceSpicePort"
                c:type="GVirConfigDomainChardevSourceSpicePort*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_chardev_source_spiceport_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceSpicePort"
                c:type="GVirConfigDomainChardevSourceSpicePort*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_channel"
              c:identifier="gvir_config_domain_chardev_source_spiceport_get_channel">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="DomainChardevSourceSpicePort"
                  c:type="GVirConfigDomainChardevSourceSpicePort*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_channel"
              c:identifier="gvir_config_domain_chardev_source_spiceport_set_channel">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="DomainChardevSourceSpicePort"
                  c:type="GVirConfigDomainChardevSourceSpicePort*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainChardevSource"
              c:type="GVirConfigDomainChardevSource"/>
      </field>
      <field name="priv">
        <type name="DomainChardevSourceSpicePortPrivate"
              c:type="GVirConfigDomainChardevSourceSpicePortPrivate*"/>
      </field>
    </class>
    <record name="DomainChardevSourceSpicePortClass"
            c:type="GVirConfigDomainChardevSourceSpicePortClass"
            glib:is-gtype-struct-for="DomainChardevSourceSpicePort">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="54"/>
      <field name="parent_class">
        <type name="DomainChardevSourceClass"
              c:type="GVirConfigDomainChardevSourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevSourceSpicePortPrivate"
            c:type="GVirConfigDomainChardevSourceSpicePortPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="37"/>
    </record>
    <class name="DomainChardevSourceSpiceVmc"
           c:symbol-prefix="domain_chardev_source_spicevmc"
           c:type="GVirConfigDomainChardevSourceSpiceVmc"
           parent="DomainChardevSource"
           glib:type-name="GVirConfigDomainChardevSourceSpiceVmc"
           glib:get-type="gvir_config_domain_chardev_source_spicevmc_get_type"
           glib:type-struct="DomainChardevSourceSpiceVmcClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_chardev_source_spicevmc_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceSpiceVmc"
                c:type="GVirConfigDomainChardevSourceSpiceVmc*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_chardev_source_spicevmc_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceSpiceVmc"
                c:type="GVirConfigDomainChardevSourceSpiceVmc*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainChardevSource"
              c:type="GVirConfigDomainChardevSource"/>
      </field>
      <field name="priv">
        <type name="DomainChardevSourceSpiceVmcPrivate"
              c:type="GVirConfigDomainChardevSourceSpiceVmcPrivate*"/>
      </field>
    </class>
    <record name="DomainChardevSourceSpiceVmcClass"
            c:type="GVirConfigDomainChardevSourceSpiceVmcClass"
            glib:is-gtype-struct-for="DomainChardevSourceSpiceVmc">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevSourceClass"
              c:type="GVirConfigDomainChardevSourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevSourceSpiceVmcPrivate"
            c:type="GVirConfigDomainChardevSourceSpiceVmcPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="39"/>
    </record>
    <class name="DomainChardevSourceUnix"
           c:symbol-prefix="domain_chardev_source_unix"
           c:type="GVirConfigDomainChardevSourceUnix"
           parent="DomainChardevSource"
           glib:type-name="GVirConfigDomainChardevSourceUnix"
           glib:get-type="gvir_config_domain_chardev_source_unix_get_type"
           glib:type-struct="DomainChardevSourceUnixClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_chardev_source_unix_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceUnix"
                c:type="GVirConfigDomainChardevSourceUnix*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_chardev_source_unix_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <type name="DomainChardevSourceUnix"
                c:type="GVirConfigDomainChardevSourceUnix*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainChardevSource"
              c:type="GVirConfigDomainChardevSource"/>
      </field>
      <field name="priv">
        <type name="DomainChardevSourceUnixPrivate"
              c:type="GVirConfigDomainChardevSourceUnixPrivate*"/>
      </field>
    </class>
    <record name="DomainChardevSourceUnixClass"
            c:type="GVirConfigDomainChardevSourceUnixClass"
            glib:is-gtype-struct-for="DomainChardevSourceUnix">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainChardevSourceClass"
              c:type="GVirConfigDomainChardevSourceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainChardevSourceUnixPrivate"
            c:type="GVirConfigDomainChardevSourceUnixPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="40"/>
    </record>
    <record name="DomainClass"
            c:type="GVirConfigDomainClass"
            glib:is-gtype-struct-for="Domain">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="63"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainClock"
           c:symbol-prefix="domain_clock"
           c:type="GVirConfigDomainClock"
           parent="Object"
           glib:type-name="GVirConfigDomainClock"
           glib:get-type="gvir_config_domain_clock_get_type"
           glib:type-struct="DomainClockClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="58"/>
      <constructor name="new" c:identifier="gvir_config_domain_clock_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_clock_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_timer"
              c:identifier="gvir_config_domain_clock_add_timer">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
          <parameter name="timer" transfer-ownership="none">
            <type name="DomainTimer" c:type="GVirConfigDomainTimer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_offset"
              c:identifier="gvir_config_domain_clock_get_offset">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="DomainClockOffset" c:type="GVirConfigDomainClockOffset"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timezone"
              c:identifier="gvir_config_domain_clock_get_timezone">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_variable_offset"
              c:identifier="gvir_config_domain_clock_get_variable_offset">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_offset"
              c:identifier="gvir_config_domain_clock_set_offset">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="DomainClockOffset"
                  c:type="GVirConfigDomainClockOffset"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timezone"
              c:identifier="gvir_config_domain_clock_set_timezone">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
          <parameter name="tz" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_variable_offset"
              c:identifier="gvir_config_domain_clock_set_variable_offset">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="klock" transfer-ownership="none">
            <type name="DomainClock" c:type="GVirConfigDomainClock*"/>
          </instance-parameter>
          <parameter name="seconds" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainClockPrivate"
              c:type="GVirConfigDomainClockPrivate*"/>
      </field>
    </class>
    <record name="DomainClockClass"
            c:type="GVirConfigDomainClockClass"
            glib:is-gtype-struct-for="DomainClock">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="58"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainClockOffset"
                 glib:type-name="GVirConfigDomainClockOffset"
                 glib:get-type="gvir_config_domain_clock_offset_get_type"
                 c:type="GVirConfigDomainClockOffset">
      <member name="utc"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_UTC"
              glib:nick="utc"
              glib:name="GVIR_CONFIG_DOMAIN_CLOCK_UTC">
      </member>
      <member name="localtime"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_LOCALTIME"
              glib:nick="localtime"
              glib:name="GVIR_CONFIG_DOMAIN_CLOCK_LOCALTIME">
      </member>
      <member name="timezone"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_TIMEZONE"
              glib:nick="timezone"
              glib:name="GVIR_CONFIG_DOMAIN_CLOCK_TIMEZONE">
      </member>
      <member name="variable"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_CLOCK_VARIABLE"
              glib:nick="variable"
              glib:name="GVIR_CONFIG_DOMAIN_CLOCK_VARIABLE">
      </member>
    </enumeration>
    <record name="DomainClockPrivate"
            c:type="GVirConfigDomainClockPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="41"/>
    </record>
    <class name="DomainConsole"
           c:symbol-prefix="domain_console"
           c:type="GVirConfigDomainConsole"
           parent="DomainChardev"
           glib:type-name="GVirConfigDomainConsole"
           glib:get-type="gvir_config_domain_console_get_type"
           glib:type-struct="DomainConsoleClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_console_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <type name="DomainConsole" c:type="GVirConfigDomainConsole*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_console_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <type name="DomainConsole" c:type="GVirConfigDomainConsole*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_target_type"
              c:identifier="gvir_config_domain_console_set_target_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="console" transfer-ownership="none">
            <type name="DomainConsole" c:type="GVirConfigDomainConsole*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainConsoleTargetType"
                  c:type="GVirConfigDomainConsoleTargetType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainChardev" c:type="GVirConfigDomainChardev"/>
      </field>
      <field name="priv">
        <type name="DomainConsolePrivate"
              c:type="GVirConfigDomainConsolePrivate*"/>
      </field>
    </class>
    <record name="DomainConsoleClass"
            c:type="GVirConfigDomainConsoleClass"
            glib:is-gtype-struct-for="DomainConsole">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevClass" c:type="GVirConfigDomainChardevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainConsolePrivate"
            c:type="GVirConfigDomainConsolePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="39"/>
    </record>
    <enumeration name="DomainConsoleTargetType"
                 glib:type-name="GVirConfigDomainConsoleTargetType"
                 glib:get-type="gvir_config_domain_console_target_type_get_type"
                 c:type="GVirConfigDomainConsoleTargetType">
      <member name="xen"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_XEN">
      </member>
      <member name="serial"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_SERIAL"
              glib:nick="serial"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_SERIAL">
      </member>
      <member name="uml"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_UML"
              glib:nick="uml"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_UML">
      </member>
      <member name="virtio"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_VIRTIO"
              glib:nick="virtio"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_VIRTIO">
      </member>
      <member name="lxc"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_LXC"
              glib:nick="lxc"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_LXC">
      </member>
      <member name="openvz"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_OPENVZ"
              glib:nick="openvz"
              glib:name="GVIR_CONFIG_DOMAIN_CONSOLE_TARGET_OPENVZ">
      </member>
    </enumeration>
    <class name="DomainController"
           c:symbol-prefix="domain_controller"
           c:type="GVirConfigDomainController"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainController"
           glib:get-type="gvir_config_domain_controller_get_type"
           glib:type-struct="DomainControllerClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="56"/>
      <method name="get_index"
              c:identifier="gvir_config_domain_controller_get_index">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <type name="DomainController"
                  c:type="GVirConfigDomainController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ports"
              c:identifier="gvir_config_domain_controller_get_ports">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <type name="DomainController"
                  c:type="GVirConfigDomainController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_address"
              c:identifier="gvir_config_domain_controller_set_address">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <type name="DomainController"
                  c:type="GVirConfigDomainController*"/>
          </instance-parameter>
          <parameter name="address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="DomainAddress" c:type="GVirConfigDomainAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_index"
              c:identifier="gvir_config_domain_controller_set_index">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <type name="DomainController"
                  c:type="GVirConfigDomainController*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ports"
              c:identifier="gvir_config_domain_controller_set_ports">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <type name="DomainController"
                  c:type="GVirConfigDomainController*"/>
          </instance-parameter>
          <parameter name="ports" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainControllerPrivate"
              c:type="GVirConfigDomainControllerPrivate*"/>
      </field>
    </class>
    <record name="DomainControllerClass"
            c:type="GVirConfigDomainControllerClass"
            glib:is-gtype-struct-for="DomainController">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainControllerPrivate"
            c:type="GVirConfigDomainControllerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="39"/>
    </record>
    <class name="DomainControllerUsb"
           c:symbol-prefix="domain_controller_usb"
           c:type="GVirConfigDomainControllerUsb"
           parent="DomainController"
           glib:type-name="GVirConfigDomainControllerUsb"
           glib:get-type="gvir_config_domain_controller_usb_get_type"
           glib:type-struct="DomainControllerUsbClass">
      <doc xml:space="preserve"
           filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
           line="98">The #GVirConfigDomainControllerUsb struct is an opaque data structure
which is used to configure USB controllers on a domain. It should only
be accessed via the following functions.</doc>
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_controller_usb_new">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
             line="128">Creates a new #GVirConfigDomainControllerUsb with a reference count of 1.
gvir_config_domain_controller_set_index() must be called before
this controller is usable.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
               line="135">a new #GVirConfigDomainControllerUsb</doc>
          <type name="DomainControllerUsb"
                c:type="GVirConfigDomainControllerUsb*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_controller_usb_new_from_xml"
                   throws="1">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
             line="147">Creates a new #GVirConfigDomainControllerUsb with a reference count of 1.
The controller object will be created using the XML description stored
in @xml. This is a fragment of libvirt domain XML whose root node is
&amp;lt;controller&amp;gt;.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
               line="157">a new #GVirConfigDomainControllerUsb, or NULL if @xml failed to
be parsed.</doc>
          <type name="DomainControllerUsb"
                c:type="GVirConfigDomainControllerUsb*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="149">xml data to create the controller from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_master"
              c:identifier="gvir_config_domain_controller_usb_set_master">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
             line="194">Sets @controller to be a companion controller of @master. @controller
will be exposed from port @startport on @master in the guest.
After this call, @controller's index will be set to @master's index.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="196">a #GVirConfigDomainControllerUsb</doc>
            <type name="DomainControllerUsb"
                  c:type="GVirConfigDomainControllerUsb*"/>
          </instance-parameter>
          <parameter name="master" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="197">the master #GVirConfigDomainControllerUsb</doc>
            <type name="DomainControllerUsb"
                  c:type="GVirConfigDomainControllerUsb*"/>
          </parameter>
          <parameter name="startport" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="198">the start port number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gvir_config_domain_controller_usb_set_model">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
             line="174">Sets the model of @controller to @model.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="controller" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="176">a #GVirConfigDomainControllerUsb</doc>
            <type name="DomainControllerUsb"
                  c:type="GVirConfigDomainControllerUsb*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
                 line="177">the USB controller model</doc>
            <type name="DomainControllerUsbModel"
                  c:type="GVirConfigDomainControllerUsbModel"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainController" c:type="GVirConfigDomainController"/>
      </field>
      <field name="priv">
        <type name="DomainControllerUsbPrivate"
              c:type="GVirConfigDomainControllerUsbPrivate*"/>
      </field>
    </class>
    <record name="DomainControllerUsbClass"
            c:type="GVirConfigDomainControllerUsbClass"
            glib:is-gtype-struct-for="DomainControllerUsb">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainControllerClass"
              c:type="GVirConfigDomainControllerClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainControllerUsbModel"
                 glib:type-name="GVirConfigDomainControllerUsbModel"
                 glib:get-type="gvir_config_domain_controller_usb_model_get_type"
                 c:type="GVirConfigDomainControllerUsbModel">
      <member name="piix3_uhci"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PIIX3_UHCI"
              glib:nick="piix3-uhci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PIIX3_UHCI">
      </member>
      <member name="piix4_uhci"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PIIX4_UHCI"
              glib:nick="piix4-uhci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PIIX4_UHCI">
      </member>
      <member name="ehci"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_EHCI"
              glib:nick="ehci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_EHCI">
      </member>
      <member name="ich9_ehci1"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_EHCI1"
              glib:nick="ich9-ehci1"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_EHCI1">
      </member>
      <member name="ich9_uhci1"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI1"
              glib:nick="ich9-uhci1"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI1">
      </member>
      <member name="ich9_uhci2"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI2"
              glib:nick="ich9-uhci2"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI2">
      </member>
      <member name="ich9_uhci3"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI3"
              glib:nick="ich9-uhci3"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI3">
      </member>
      <member name="vt82c686b_uhci"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_VT82C686B_UHCI"
              glib:nick="vt82c686b-uhci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_VT82C686B_UHCI">
      </member>
      <member name="pci_ohci"
              value="8"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PCI_OHCI"
              glib:nick="pci-ohci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_PCI_OHCI">
      </member>
      <member name="qemu_xhci"
              value="9"
              c:identifier="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_QEMU_XHCI"
              glib:nick="qemu-xhci"
              glib:name="GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_QEMU_XHCI">
      </member>
    </enumeration>
    <record name="DomainControllerUsbPrivate"
            c:type="GVirConfigDomainControllerUsbPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="39"/>
    </record>
    <class name="DomainCpu"
           c:symbol-prefix="domain_cpu"
           c:type="GVirConfigDomainCpu"
           parent="CapabilitiesCpu"
           glib:type-name="GVirConfigDomainCpu"
           glib:get-type="gvir_config_domain_cpu_get_type"
           glib:type-struct="DomainCpuClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="59"/>
      <constructor name="new" c:identifier="gvir_config_domain_cpu_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_cpu_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_match_policy"
              c:identifier="gvir_config_domain_cpu_get_match_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="DomainCpuMatchPolicy"
                c:type="GVirConfigDomainCpuMatchPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode" c:identifier="gvir_config_domain_cpu_get_mode">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="DomainCpuMode" c:type="GVirConfigDomainCpuMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_match_policy"
              c:identifier="gvir_config_domain_cpu_set_match_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainCpuMatchPolicy"
                  c:type="GVirConfigDomainCpuMatchPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode" c:identifier="gvir_config_domain_cpu_set_mode">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="DomainCpuMode" c:type="GVirConfigDomainCpuMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model" c:identifier="gvir_config_domain_cpu_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cpu" transfer-ownership="none">
            <type name="DomainCpu" c:type="GVirConfigDomainCpu*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="DomainCpuModel" c:type="GVirConfigDomainCpuModel*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu"/>
      </field>
      <field name="priv">
        <type name="DomainCpuPrivate" c:type="GVirConfigDomainCpuPrivate*"/>
      </field>
    </class>
    <record name="DomainCpuClass"
            c:type="GVirConfigDomainCpuClass"
            glib:is-gtype-struct-for="DomainCpu">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="59"/>
      <field name="parent_class">
        <type name="CapabilitiesCpuClass"
              c:type="GVirConfigCapabilitiesCpuClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainCpuFeature"
           c:symbol-prefix="domain_cpu_feature"
           c:type="GVirConfigDomainCpuFeature"
           parent="CapabilitiesCpuFeature"
           glib:type-name="GVirConfigDomainCpuFeature"
           glib:get-type="gvir_config_domain_cpu_feature_get_type"
           glib:type-struct="DomainCpuFeatureClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_cpu_feature_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpuFeature" c:type="GVirConfigDomainCpuFeature*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_cpu_feature_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpuFeature" c:type="GVirConfigDomainCpuFeature*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_policy"
              c:identifier="gvir_config_domain_cpu_feature_get_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="DomainCpuFeaturePolicy"
                c:type="GVirConfigDomainCpuFeaturePolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <type name="DomainCpuFeature"
                  c:type="GVirConfigDomainCpuFeature*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="gvir_config_domain_cpu_feature_set_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="feature" transfer-ownership="none">
            <type name="DomainCpuFeature"
                  c:type="GVirConfigDomainCpuFeature*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainCpuFeaturePolicy"
                  c:type="GVirConfigDomainCpuFeaturePolicy"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="CapabilitiesCpu" c:type="GVirConfigCapabilitiesCpu"/>
      </field>
      <field name="priv">
        <type name="DomainCpuFeaturePrivate"
              c:type="GVirConfigDomainCpuFeaturePrivate*"/>
      </field>
    </class>
    <record name="DomainCpuFeatureClass"
            c:type="GVirConfigDomainCpuFeatureClass"
            glib:is-gtype-struct-for="DomainCpuFeature">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="57"/>
      <field name="parent_class">
        <type name="CapabilitiesCpuClass"
              c:type="GVirConfigCapabilitiesCpuClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainCpuFeaturePolicy"
                 glib:type-name="GVirConfigDomainCpuFeaturePolicy"
                 glib:get-type="gvir_config_domain_cpu_feature_policy_get_type"
                 c:type="GVirConfigDomainCpuFeaturePolicy">
      <member name="force"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_FORCE"
              glib:nick="force"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_FORCE">
      </member>
      <member name="require"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_REQUIRE"
              glib:nick="require"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_REQUIRE">
      </member>
      <member name="optional"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_OPTIONAL"
              glib:nick="optional"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_OPTIONAL">
      </member>
      <member name="disable"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_DISABLE"
              glib:nick="disable"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_DISABLE">
      </member>
      <member name="forbid"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_FORBID"
              glib:nick="forbid"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_FEATURE_POLICY_FORBID">
      </member>
    </enumeration>
    <record name="DomainCpuFeaturePrivate"
            c:type="GVirConfigDomainCpuFeaturePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="40"/>
    </record>
    <enumeration name="DomainCpuMatchPolicy"
                 glib:type-name="GVirConfigDomainCpuMatchPolicy"
                 glib:get-type="gvir_config_domain_cpu_match_policy_get_type"
                 c:type="GVirConfigDomainCpuMatchPolicy">
      <member name="minimum"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_MINIMUM"
              glib:nick="minimum"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_MINIMUM">
      </member>
      <member name="exact"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_EXACT"
              glib:nick="exact"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_EXACT">
      </member>
      <member name="strict"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_STRICT"
              glib:nick="strict"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MATCH_POLICY_STRICT">
      </member>
    </enumeration>
    <enumeration name="DomainCpuMode"
                 glib:type-name="GVirConfigDomainCpuMode"
                 glib:get-type="gvir_config_domain_cpu_mode_get_type"
                 c:type="GVirConfigDomainCpuMode">
      <member name="custom"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODE_CUSTOM"
              glib:nick="custom"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MODE_CUSTOM">
      </member>
      <member name="host_model"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODE_HOST_MODEL"
              glib:nick="host-model"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MODE_HOST_MODEL">
      </member>
      <member name="host_passthrough"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_CPU_MODE_HOST_PASSTHROUGH"
              glib:nick="host-passthrough"
              glib:name="GVIR_CONFIG_DOMAIN_CPU_MODE_HOST_PASSTHROUGH">
      </member>
    </enumeration>
    <class name="DomainCpuModel"
           c:symbol-prefix="domain_cpu_model"
           c:type="GVirConfigDomainCpuModel"
           parent="CapabilitiesCpuModel"
           glib:type-name="GVirConfigDomainCpuModel"
           glib:get-type="gvir_config_domain_cpu_model_get_type"
           glib:type-struct="DomainCpuModelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="58"/>
      <constructor name="new" c:identifier="gvir_config_domain_cpu_model_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpuModel" c:type="GVirConfigDomainCpuModel*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_cpu_model_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <type name="DomainCpuModel" c:type="GVirConfigDomainCpuModel*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="CapabilitiesCpuModel"
              c:type="GVirConfigCapabilitiesCpuModel"/>
      </field>
      <field name="priv">
        <type name="DomainCpuModelPrivate"
              c:type="GVirConfigDomainCpuModelPrivate*"/>
      </field>
    </class>
    <record name="DomainCpuModelClass"
            c:type="GVirConfigDomainCpuModelClass"
            glib:is-gtype-struct-for="DomainCpuModel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="58"/>
      <field name="parent_class">
        <type name="CapabilitiesCpuModelClass"
              c:type="GVirConfigCapabilitiesCpuModelClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainCpuModelPrivate"
            c:type="GVirConfigDomainCpuModelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="41"/>
    </record>
    <record name="DomainCpuPrivate"
            c:type="GVirConfigDomainCpuPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="42"/>
    </record>
    <class name="DomainDevice"
           c:symbol-prefix="domain_device"
           c:type="GVirConfigDomainDevice"
           parent="Object"
           glib:type-name="GVirConfigDomainDevice"
           glib:get-type="gvir_config_domain_device_get_type"
           glib:type-struct="DomainDeviceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="56"/>
      <method name="get_alias"
              c:identifier="gvir_config_domain_device_get_alias">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="DomainDevice" c:type="GVirConfigDomainDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainDevicePrivate"
              c:type="GVirConfigDomainDevicePrivate*"/>
      </field>
    </class>
    <record name="DomainDeviceClass"
            c:type="GVirConfigDomainDeviceClass"
            glib:is-gtype-struct-for="DomainDevice">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainDevicePrivate"
            c:type="GVirConfigDomainDevicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="39"/>
    </record>
    <class name="DomainDisk"
           c:symbol-prefix="domain_disk"
           c:type="GVirConfigDomainDisk"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainDisk"
           glib:get-type="gvir_config_domain_disk_get_type"
           glib:type-struct="DomainDiskClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="58"/>
      <constructor name="new" c:identifier="gvir_config_domain_disk_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_disk_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="102"/>
        <return-value transfer-ownership="full">
          <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_disk_type"
              c:identifier="gvir_config_domain_disk_get_disk_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskType" c:type="GVirConfigDomainDiskType"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver"
              c:identifier="gvir_config_domain_disk_get_driver">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
             line="411">Gets the driver configuration for @disk.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="133"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
               line="417">A #GVirConfigDomainDiskDriver. The returned
object should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainDiskDriver" c:type="GVirConfigDomainDiskDriver*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
                 line="413">a #GVirConfigDomainDisk</doc>
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver_cache"
              c:identifier="gvir_config_domain_disk_get_driver_cache">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskCacheType"
                c:type="GVirConfigDomainDiskCacheType"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver_format"
              c:identifier="gvir_config_domain_disk_get_driver_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver_name"
              c:identifier="gvir_config_domain_disk_get_driver_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver_type"
              c:identifier="gvir_config_domain_disk_get_driver_type"
              deprecated="1"
              deprecated-version="0.1.7">
        <doc-deprecated xml:space="preserve">Use gvir_config_domain_disk_get_driver_format()
instead</doc-deprecated>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guest_device_type"
              c:identifier="gvir_config_domain_disk_get_guest_device_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskGuestDeviceType"
                c:type="GVirConfigDomainDiskGuestDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snapshot_type"
              c:identifier="gvir_config_domain_disk_get_snapshot_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskSnapshotType"
                c:type="GVirConfigDomainDiskSnapshotType"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gvir_config_domain_disk_get_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_startup_policy"
              c:identifier="gvir_config_domain_disk_get_startup_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskStartupPolicy"
                c:type="GVirConfigDomainDiskStartupPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_bus"
              c:identifier="gvir_config_domain_disk_get_target_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskBus" c:type="GVirConfigDomainDiskBus"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_dev"
              c:identifier="gvir_config_domain_disk_get_target_dev">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_driver"
              c:identifier="gvir_config_domain_disk_set_driver">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
             line="392">Uses @driver as the driver configuration for @disk.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
                 line="394">a #GVirConfigDomainDisk</doc>
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="driver"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-disk.c"
                 line="395">a #GVirConfigDomainDiskDriver</doc>
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_cache"
              c:identifier="gvir_config_domain_disk_set_driver_cache">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="cache_type" transfer-ownership="none">
            <type name="DomainDiskCacheType"
                  c:type="GVirConfigDomainDiskCacheType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_format"
              c:identifier="gvir_config_domain_disk_set_driver_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_name"
              c:identifier="gvir_config_domain_disk_set_driver_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="driver_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_type"
              c:identifier="gvir_config_domain_disk_set_driver_type"
              deprecated="1"
              deprecated-version="0.1.7">
        <doc-deprecated xml:space="preserve">Use gvir_config_domain_disk_set_driver_format()
instead</doc-deprecated>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="driver_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_guest_device_type"
              c:identifier="gvir_config_domain_disk_set_guest_device_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainDiskGuestDeviceType"
                  c:type="GVirConfigDomainDiskGuestDeviceType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_readonly"
              c:identifier="gvir_config_domain_disk_set_readonly">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snapshot_type"
              c:identifier="gvir_config_domain_disk_set_snapshot_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainDiskSnapshotType"
                  c:type="GVirConfigDomainDiskSnapshotType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gvir_config_domain_disk_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_startup_policy"
              c:identifier="gvir_config_domain_disk_set_startup_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainDiskStartupPolicy"
                  c:type="GVirConfigDomainDiskStartupPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target_bus"
              c:identifier="gvir_config_domain_disk_set_target_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <type name="DomainDiskBus" c:type="GVirConfigDomainDiskBus"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target_dev"
              c:identifier="gvir_config_domain_disk_set_target_dev">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="dev" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type" c:identifier="gvir_config_domain_disk_set_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainDisk" c:type="GVirConfigDomainDisk*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainDiskType" c:type="GVirConfigDomainDiskType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainDiskPrivate" c:type="GVirConfigDomainDiskPrivate*"/>
      </field>
    </class>
    <enumeration name="DomainDiskBus"
                 glib:type-name="GVirConfigDomainDiskBus"
                 glib:get-type="gvir_config_domain_disk_bus_get_type"
                 c:type="GVirConfigDomainDiskBus">
      <member name="ide"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_IDE"
              glib:nick="ide"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_IDE">
      </member>
      <member name="fdc"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_FDC"
              glib:nick="fdc"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_FDC">
      </member>
      <member name="scsi"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_SCSI"
              glib:nick="scsi"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_SCSI">
      </member>
      <member name="virtio"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_VIRTIO"
              glib:nick="virtio"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_VIRTIO">
      </member>
      <member name="xen"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_XEN">
      </member>
      <member name="usb"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_USB"
              glib:nick="usb"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_USB">
      </member>
      <member name="uml"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_UML"
              glib:nick="uml"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_UML">
      </member>
      <member name="sata"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BUS_SATA"
              glib:nick="sata"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BUS_SATA">
      </member>
    </enumeration>
    <enumeration name="DomainDiskCacheType"
                 glib:type-name="GVirConfigDomainDiskCacheType"
                 glib:get-type="gvir_config_domain_disk_cache_type_get_type"
                 c:type="GVirConfigDomainDiskCacheType">
      <member name="default"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_DEFAULT"
              glib:nick="default"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_DEFAULT">
      </member>
      <member name="none"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_NONE"
              glib:nick="none"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_NONE">
      </member>
      <member name="writethrough"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_WRITETHROUGH"
              glib:nick="writethrough"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_WRITETHROUGH">
      </member>
      <member name="writeback"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_WRITEBACK"
              glib:nick="writeback"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_WRITEBACK">
      </member>
      <member name="directsync"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_DIRECTSYNC"
              glib:nick="directsync"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_DIRECTSYNC">
      </member>
      <member name="unsafe"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_CACHE_UNSAFE"
              glib:nick="unsafe"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_CACHE_UNSAFE">
      </member>
    </enumeration>
    <record name="DomainDiskClass"
            c:type="GVirConfigDomainDiskClass"
            glib:is-gtype-struct-for="DomainDisk">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="58"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainDiskDriver"
           c:symbol-prefix="domain_disk_driver"
           c:type="GVirConfigDomainDiskDriver"
           parent="Object"
           glib:type-name="GVirConfigDomainDiskDriver"
           glib:get-type="gvir_config_domain_disk_driver_get_type"
           glib:type-struct="DomainDiskDriverClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_disk_driver_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <type name="DomainDiskDriver" c:type="GVirConfigDomainDiskDriver*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_disk_driver_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <type name="DomainDiskDriver" c:type="GVirConfigDomainDiskDriver*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_cache"
              c:identifier="gvir_config_domain_disk_driver_get_cache">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskCacheType"
                c:type="GVirConfigDomainDiskCacheType"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_copy_on_read"
              c:identifier="gvir_config_domain_disk_driver_get_copy_on_read">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_discard"
              c:identifier="gvir_config_domain_disk_driver_get_discard">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskDriverDiscard"
                c:type="GVirConfigDomainDiskDriverDiscard"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_error_policy"
              c:identifier="gvir_config_domain_disk_driver_get_error_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskDriverErrorPolicy"
                c:type="GVirConfigDomainDiskDriverErrorPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format"
              c:identifier="gvir_config_domain_disk_driver_get_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_io_policy"
              c:identifier="gvir_config_domain_disk_driver_get_io_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskDriverIoPolicy"
                c:type="GVirConfigDomainDiskDriverIoPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_domain_disk_driver_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_cache"
              c:identifier="gvir_config_domain_disk_driver_set_cache">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="cache_type" transfer-ownership="none">
            <type name="DomainDiskCacheType"
                  c:type="GVirConfigDomainDiskCacheType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_copy_on_read"
              c:identifier="gvir_config_domain_disk_driver_set_copy_on_read">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="copy_on_read" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_discard"
              c:identifier="gvir_config_domain_disk_driver_set_discard">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="discard" transfer-ownership="none">
            <type name="DomainDiskDriverDiscard"
                  c:type="GVirConfigDomainDiskDriverDiscard"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_error_policy"
              c:identifier="gvir_config_domain_disk_driver_set_error_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainDiskDriverErrorPolicy"
                  c:type="GVirConfigDomainDiskDriverErrorPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format"
              c:identifier="gvir_config_domain_disk_driver_set_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_io_policy"
              c:identifier="gvir_config_domain_disk_driver_set_io_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainDiskDriverIoPolicy"
                  c:type="GVirConfigDomainDiskDriverIoPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_disk_driver_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <type name="DomainDiskDriver"
                  c:type="GVirConfigDomainDiskDriver*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainDiskDriverPrivate"
              c:type="GVirConfigDomainDiskDriverPrivate*"/>
      </field>
    </class>
    <record name="DomainDiskDriverClass"
            c:type="GVirConfigDomainDiskDriverClass"
            glib:is-gtype-struct-for="DomainDiskDriver">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainDiskDriverDiscard"
                 glib:type-name="GVirConfigDomainDiskDriverDiscard"
                 glib:get-type="gvir_config_domain_disk_driver_discard_get_type"
                 c:type="GVirConfigDomainDiskDriverDiscard">
      <member name="unmap"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_DISCARD_UNMAP"
              glib:nick="unmap"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_DISCARD_UNMAP">
      </member>
      <member name="ignore"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_DISCARD_IGNORE"
              glib:nick="ignore"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_DISCARD_IGNORE">
      </member>
    </enumeration>
    <enumeration name="DomainDiskDriverErrorPolicy"
                 glib:type-name="GVirConfigDomainDiskDriverErrorPolicy"
                 glib:get-type="gvir_config_domain_disk_driver_error_policy_get_type"
                 c:type="GVirConfigDomainDiskDriverErrorPolicy">
      <member name="stop"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_STOP"
              glib:nick="stop"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_STOP">
      </member>
      <member name="report"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_REPORT"
              glib:nick="report"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_REPORT">
      </member>
      <member name="ignore"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_IGNORE"
              glib:nick="ignore"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_IGNORE">
      </member>
      <member name="enospace"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_ENOSPACE"
              glib:nick="enospace"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_ERROR_POLICY_ENOSPACE">
      </member>
    </enumeration>
    <enumeration name="DomainDiskDriverIoPolicy"
                 glib:type-name="GVirConfigDomainDiskDriverIoPolicy"
                 glib:get-type="gvir_config_domain_disk_driver_io_policy_get_type"
                 c:type="GVirConfigDomainDiskDriverIoPolicy">
      <member name="threads"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_IO_POLICY_THREADS"
              glib:nick="threads"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_IO_POLICY_THREADS">
      </member>
      <member name="native"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DRIVER_IO_POLICY_NATIVE"
              glib:nick="native"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DRIVER_IO_POLICY_NATIVE">
      </member>
    </enumeration>
    <record name="DomainDiskDriverPrivate"
            c:type="GVirConfigDomainDiskDriverPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="39"/>
    </record>
    <enumeration name="DomainDiskFormat"
                 glib:type-name="GVirConfigDomainDiskFormat"
                 glib:get-type="gvir_config_domain_disk_format_get_type"
                 c:type="GVirConfigDomainDiskFormat">
      <member name="raw"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_RAW"
              glib:nick="raw"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_RAW">
      </member>
      <member name="dir"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_DIR"
              glib:nick="dir"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_DIR">
      </member>
      <member name="bochs"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_BOCHS"
              glib:nick="bochs"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_BOCHS">
      </member>
      <member name="cloop"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_CLOOP"
              glib:nick="cloop"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_CLOOP">
      </member>
      <member name="cow"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_COW"
              glib:nick="cow"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_COW">
      </member>
      <member name="dmg"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_DMG"
              glib:nick="dmg"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_DMG">
      </member>
      <member name="iso"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_ISO"
              glib:nick="iso"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_ISO">
      </member>
      <member name="qcow"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QCOW"
              glib:nick="qcow"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QCOW">
      </member>
      <member name="qcow2"
              value="8"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QCOW2"
              glib:nick="qcow2"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QCOW2">
      </member>
      <member name="qed"
              value="9"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QED"
              glib:nick="qed"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_QED">
      </member>
      <member name="vmdk"
              value="10"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VMDK"
              glib:nick="vmdk"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VMDK">
      </member>
      <member name="vpc"
              value="11"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VPC"
              glib:nick="vpc"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VPC">
      </member>
      <member name="fat"
              value="12"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_FAT"
              glib:nick="fat"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_FAT">
      </member>
      <member name="vhd"
              value="13"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VHD"
              glib:nick="vhd"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FORMAT_VHD">
      </member>
    </enumeration>
    <enumeration name="DomainDiskGuestDeviceType"
                 glib:type-name="GVirConfigDomainDiskGuestDeviceType"
                 glib:get-type="gvir_config_domain_disk_guest_device_type_get_type"
                 c:type="GVirConfigDomainDiskGuestDeviceType">
      <member name="disk"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_DISK"
              glib:nick="disk"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_DISK">
      </member>
      <member name="floppy"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_FLOPPY"
              glib:nick="floppy"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_FLOPPY">
      </member>
      <member name="cdrom"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_CDROM"
              glib:nick="cdrom"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_GUEST_DEVICE_CDROM">
      </member>
    </enumeration>
    <record name="DomainDiskPrivate"
            c:type="GVirConfigDomainDiskPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="41"/>
    </record>
    <enumeration name="DomainDiskSnapshotType"
                 glib:type-name="GVirConfigDomainDiskSnapshotType"
                 glib:get-type="gvir_config_domain_disk_snapshot_type_get_type"
                 c:type="GVirConfigDomainDiskSnapshotType">
      <member name="no"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_NO"
              glib:nick="no"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_NO">
      </member>
      <member name="internal"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_INTERNAL"
              glib:nick="internal"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_INTERNAL">
      </member>
      <member name="external"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_EXTERNAL"
              glib:nick="external"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_SNAPSHOT_EXTERNAL">
      </member>
    </enumeration>
    <enumeration name="DomainDiskStartupPolicy"
                 glib:type-name="GVirConfigDomainDiskStartupPolicy"
                 glib:get-type="gvir_config_domain_disk_startup_policy_get_type"
                 c:type="GVirConfigDomainDiskStartupPolicy">
      <member name="mandatory"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_MANDATORY"
              glib:nick="mandatory"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_MANDATORY">
      </member>
      <member name="requisite"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_REQUISITE"
              glib:nick="requisite"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_REQUISITE">
      </member>
      <member name="optional"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_OPTIONAL"
              glib:nick="optional"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_STARTUP_POLICY_OPTIONAL">
      </member>
    </enumeration>
    <enumeration name="DomainDiskType"
                 glib:type-name="GVirConfigDomainDiskType"
                 glib:get-type="gvir_config_domain_disk_type_get_type"
                 c:type="GVirConfigDomainDiskType">
      <member name="file"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_FILE"
              glib:nick="file"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_FILE">
      </member>
      <member name="block"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_BLOCK"
              glib:nick="block"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_BLOCK">
      </member>
      <member name="dir"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_DIR"
              glib:nick="dir"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_DIR">
      </member>
      <member name="network"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_DISK_NETWORK"
              glib:nick="network"
              glib:name="GVIR_CONFIG_DOMAIN_DISK_NETWORK">
      </member>
    </enumeration>
    <class name="DomainFilesys"
           c:symbol-prefix="domain_filesys"
           c:type="GVirConfigDomainFilesys"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainFilesys"
           glib:get-type="gvir_config_domain_filesys_get_type"
           glib:type-struct="DomainFilesysClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_filesys_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="84"/>
        <return-value transfer-ownership="full">
          <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_filesys_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="85"/>
        <return-value transfer-ownership="full">
          <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_access_type"
              c:identifier="gvir_config_domain_filesys_set_access_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainFilesysAccessType"
                  c:type="GVirConfigDomainFilesysAccessType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_format"
              c:identifier="gvir_config_domain_filesys_set_driver_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_type"
              c:identifier="gvir_config_domain_filesys_set_driver_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainFilesysDriverType"
                  c:type="GVirConfigDomainFilesysDriverType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ram_usage"
              c:identifier="gvir_config_domain_filesys_set_ram_usage">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_readonly"
              c:identifier="gvir_config_domain_filesys_set_readonly">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="readonly" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gvir_config_domain_filesys_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target"
              c:identifier="gvir_config_domain_filesys_set_target">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type"
              c:identifier="gvir_config_domain_filesys_set_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filesys" transfer-ownership="none">
            <type name="DomainFilesys" c:type="GVirConfigDomainFilesys*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainFilesysType"
                  c:type="GVirConfigDomainFilesysType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainFilesysPrivate"
              c:type="GVirConfigDomainFilesysPrivate*"/>
      </field>
    </class>
    <enumeration name="DomainFilesysAccessType"
                 glib:type-name="GVirConfigDomainFilesysAccessType"
                 glib:get-type="gvir_config_domain_filesys_access_type_get_type"
                 c:type="GVirConfigDomainFilesysAccessType">
      <member name="passthrough"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_PASSTHROUGH"
              glib:nick="passthrough"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_PASSTHROUGH">
      </member>
      <member name="mapped"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_MAPPED"
              glib:nick="mapped"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_MAPPED">
      </member>
      <member name="squash"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_SQUASH"
              glib:nick="squash"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_ACCESS_SQUASH">
      </member>
    </enumeration>
    <record name="DomainFilesysClass"
            c:type="GVirConfigDomainFilesysClass"
            glib:is-gtype-struct-for="DomainFilesys">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainFilesysDriverType"
                 glib:type-name="GVirConfigDomainFilesysDriverType"
                 glib:get-type="gvir_config_domain_filesys_driver_type_get_type"
                 c:type="GVirConfigDomainFilesysDriverType">
      <member name="default"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_DEFAULT"
              glib:nick="default"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_DEFAULT">
      </member>
      <member name="path"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_PATH"
              glib:nick="path"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_PATH">
      </member>
      <member name="handle"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_HANDLE"
              glib:nick="handle"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_HANDLE">
      </member>
      <member name="loop"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_LOOP"
              glib:nick="loop"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_LOOP">
      </member>
      <member name="nbd"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_NBD"
              glib:nick="nbd"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_NBD">
      </member>
      <member name="ploop"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_PLOOP"
              glib:nick="ploop"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_DRIVER_PLOOP">
      </member>
    </enumeration>
    <record name="DomainFilesysPrivate"
            c:type="GVirConfigDomainFilesysPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="39"/>
    </record>
    <enumeration name="DomainFilesysType"
                 glib:type-name="GVirConfigDomainFilesysType"
                 glib:get-type="gvir_config_domain_filesys_type_get_type"
                 c:type="GVirConfigDomainFilesysType">
      <member name="mount"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_MOUNT"
              glib:nick="mount"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_MOUNT">
      </member>
      <member name="block"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_BLOCK"
              glib:nick="block"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_BLOCK">
      </member>
      <member name="file"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_FILE"
              glib:nick="file"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_FILE">
      </member>
      <member name="template"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_TEMPLATE"
              glib:nick="template"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_TEMPLATE">
      </member>
      <member name="ram"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_RAM"
              glib:nick="ram"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_RAM">
      </member>
      <member name="bind"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_FILESYS_BIND"
              glib:nick="bind"
              glib:name="GVIR_CONFIG_DOMAIN_FILESYS_BIND">
      </member>
    </enumeration>
    <class name="DomainGraphics"
           c:symbol-prefix="domain_graphics"
           c:type="GVirConfigDomainGraphics"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainGraphics"
           glib:get-type="gvir_config_domain_graphics_get_type"
           glib:type-struct="DomainGraphicsClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="56"/>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsPrivate"
              c:type="GVirConfigDomainGraphicsPrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsClass"
            c:type="GVirConfigDomainGraphicsClass"
            glib:is-gtype-struct-for="DomainGraphics">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainGraphicsDesktop"
           c:symbol-prefix="domain_graphics_desktop"
           c:type="GVirConfigDomainGraphicsDesktop"
           parent="DomainGraphics"
           glib:type-name="GVirConfigDomainGraphicsDesktop"
           glib:get-type="gvir_config_domain_graphics_desktop_get_type"
           glib:type-struct="DomainGraphicsDesktopClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_graphics_desktop_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsDesktop"
                c:type="GVirConfigDomainGraphicsDesktop*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_graphics_desktop_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsDesktop"
                c:type="GVirConfigDomainGraphicsDesktop*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_display"
              c:identifier="gvir_config_domain_graphics_desktop_get_display">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsDesktop"
                  c:type="GVirConfigDomainGraphicsDesktop*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fullscreen"
              c:identifier="gvir_config_domain_graphics_desktop_get_fullscreen">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsDesktop"
                  c:type="GVirConfigDomainGraphicsDesktop*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_display"
              c:identifier="gvir_config_domain_graphics_desktop_set_display">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsDesktop"
                  c:type="GVirConfigDomainGraphicsDesktop*"/>
          </instance-parameter>
          <parameter name="disp" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fullscreen"
              c:identifier="gvir_config_domain_graphics_desktop_set_fullscreen">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsDesktop"
                  c:type="GVirConfigDomainGraphicsDesktop*"/>
          </instance-parameter>
          <parameter name="fullscreen" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainGraphics" c:type="GVirConfigDomainGraphics"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsDesktopPrivate"
              c:type="GVirConfigDomainGraphicsDesktopPrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsDesktopClass"
            c:type="GVirConfigDomainGraphicsDesktopClass"
            glib:is-gtype-struct-for="DomainGraphicsDesktop">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainGraphicsClass"
              c:type="GVirConfigDomainGraphicsClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainGraphicsDesktopPrivate"
            c:type="GVirConfigDomainGraphicsDesktopPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="39"/>
    </record>
    <record name="DomainGraphicsPrivate"
            c:type="GVirConfigDomainGraphicsPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="39"/>
    </record>
    <class name="DomainGraphicsRdp"
           c:symbol-prefix="domain_graphics_rdp"
           c:type="GVirConfigDomainGraphicsRdp"
           parent="DomainGraphics"
           glib:type-name="GVirConfigDomainGraphicsRdp"
           glib:get-type="gvir_config_domain_graphics_rdp_get_type"
           glib:type-struct="DomainGraphicsRdpClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_graphics_rdp_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsRdp"
                c:type="GVirConfigDomainGraphicsRdp*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_graphics_rdp_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsRdp"
                c:type="GVirConfigDomainGraphicsRdp*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_multi_user"
              c:identifier="gvir_config_domain_graphics_rdp_get_multi_user">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_port"
              c:identifier="gvir_config_domain_graphics_rdp_get_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_replace_user"
              c:identifier="gvir_config_domain_graphics_rdp_get_replace_user">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_autoport"
              c:identifier="gvir_config_domain_graphics_rdp_set_autoport">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
          <parameter name="autoport" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_multi_user"
              c:identifier="gvir_config_domain_graphics_rdp_set_multi_user">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
          <parameter name="multi_user" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_port"
              c:identifier="gvir_config_domain_graphics_rdp_set_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_replace_user"
              c:identifier="gvir_config_domain_graphics_rdp_set_replace_user">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsRdp"
                  c:type="GVirConfigDomainGraphicsRdp*"/>
          </instance-parameter>
          <parameter name="replace_user" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainGraphics" c:type="GVirConfigDomainGraphics"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsRdpPrivate"
              c:type="GVirConfigDomainGraphicsRdpPrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsRdpClass"
            c:type="GVirConfigDomainGraphicsRdpClass"
            glib:is-gtype-struct-for="DomainGraphicsRdp">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainGraphicsClass"
              c:type="GVirConfigDomainGraphicsClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainGraphicsRdpPrivate"
            c:type="GVirConfigDomainGraphicsRdpPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="39"/>
    </record>
    <class name="DomainGraphicsSdl"
           c:symbol-prefix="domain_graphics_sdl"
           c:type="GVirConfigDomainGraphicsSdl"
           parent="DomainGraphics"
           glib:type-name="GVirConfigDomainGraphicsSdl"
           glib:get-type="gvir_config_domain_graphics_sdl_get_type"
           glib:type-struct="DomainGraphicsSdlClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_graphics_sdl_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsSdl"
                c:type="GVirConfigDomainGraphicsSdl*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_graphics_sdl_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsSdl"
                c:type="GVirConfigDomainGraphicsSdl*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_display"
              c:identifier="gvir_config_domain_graphics_sdl_set_display">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSdl"
                  c:type="GVirConfigDomainGraphicsSdl*"/>
          </instance-parameter>
          <parameter name="disp" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fullscreen"
              c:identifier="gvir_config_domain_graphics_sdl_set_fullscreen">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSdl"
                  c:type="GVirConfigDomainGraphicsSdl*"/>
          </instance-parameter>
          <parameter name="fullscreen" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_xauthority"
              c:identifier="gvir_config_domain_graphics_sdl_set_xauthority">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSdl"
                  c:type="GVirConfigDomainGraphicsSdl*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainGraphics" c:type="GVirConfigDomainGraphics"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsSdlPrivate"
              c:type="GVirConfigDomainGraphicsSdlPrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsSdlClass"
            c:type="GVirConfigDomainGraphicsSdlClass"
            glib:is-gtype-struct-for="DomainGraphicsSdl">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainGraphicsClass"
              c:type="GVirConfigDomainGraphicsClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainGraphicsSdlPrivate"
            c:type="GVirConfigDomainGraphicsSdlPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="39"/>
    </record>
    <class name="DomainGraphicsSpice"
           c:symbol-prefix="domain_graphics_spice"
           c:type="GVirConfigDomainGraphicsSpice"
           parent="DomainGraphics"
           glib:type-name="GVirConfigDomainGraphicsSpice"
           glib:get-type="gvir_config_domain_graphics_spice_get_type"
           glib:type-struct="DomainGraphicsSpiceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_graphics_spice_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsSpice"
                c:type="GVirConfigDomainGraphicsSpice*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_graphics_spice_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsSpice"
                c:type="GVirConfigDomainGraphicsSpice*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_image_compression"
              c:identifier="gvir_config_domain_graphics_spice_get_image_compression">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.c"
               line="128">image
compression configuration of @graphics</doc>
          <type name="DomainGraphicsSpiceImageCompression" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.c"
                 line="126">a #GVirConfigDomainGraphicsSpice</doc>
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_port"
              c:identifier="gvir_config_domain_graphics_spice_get_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_autoport"
              c:identifier="gvir_config_domain_graphics_spice_set_autoport">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="autoport" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gl"
              c:identifier="gvir_config_domain_graphics_spice_set_gl">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="gl" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_compression"
              c:identifier="gvir_config_domain_graphics_spice_set_image_compression">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="compression" transfer-ownership="none">
            <type name="DomainGraphicsSpiceImageCompression"
                  c:type="GVirConfigDomainGraphicsSpiceImageCompression"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password"
              c:identifier="gvir_config_domain_graphics_spice_set_password">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_port"
              c:identifier="gvir_config_domain_graphics_spice_set_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tls_port"
              c:identifier="gvir_config_domain_graphics_spice_set_tls_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsSpice"
                  c:type="GVirConfigDomainGraphicsSpice*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainGraphics" c:type="GVirConfigDomainGraphics"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsSpicePrivate"
              c:type="GVirConfigDomainGraphicsSpicePrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsSpiceClass"
            c:type="GVirConfigDomainGraphicsSpiceClass"
            glib:is-gtype-struct-for="DomainGraphicsSpice">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainGraphicsClass"
              c:type="GVirConfigDomainGraphicsClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainGraphicsSpiceImageCompression"
                 glib:type-name="GVirConfigDomainGraphicsSpiceImageCompression"
                 glib:get-type="gvir_config_domain_graphics_spice_image_compression_get_type"
                 c:type="GVirConfigDomainGraphicsSpiceImageCompression">
      <member name="auto_glz"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_AUTO_GLZ"
              glib:nick="auto_glz"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_AUTO_GLZ">
      </member>
      <member name="auto_lz"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_AUTO_LZ"
              glib:nick="auto_lz"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_AUTO_LZ">
      </member>
      <member name="quic"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_QUIC"
              glib:nick="quic"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_QUIC">
      </member>
      <member name="glz"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_GLZ"
              glib:nick="glz"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_GLZ">
      </member>
      <member name="lz"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_LZ"
              glib:nick="lz"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_LZ">
      </member>
      <member name="off"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_OFF"
              glib:nick="off"
              glib:name="GVIR_CONFIG_DOMAIN_GRAPHICS_SPICE_IMAGE_COMPRESSION_OFF">
      </member>
    </enumeration>
    <record name="DomainGraphicsSpicePrivate"
            c:type="GVirConfigDomainGraphicsSpicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="40"/>
    </record>
    <class name="DomainGraphicsVnc"
           c:symbol-prefix="domain_graphics_vnc"
           c:type="GVirConfigDomainGraphicsVnc"
           parent="DomainGraphics"
           glib:type-name="GVirConfigDomainGraphicsVnc"
           glib:get-type="gvir_config_domain_graphics_vnc_get_type"
           glib:type-struct="DomainGraphicsVncClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_graphics_vnc_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsVnc"
                c:type="GVirConfigDomainGraphicsVnc*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_graphics_vnc_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainGraphicsVnc"
                c:type="GVirConfigDomainGraphicsVnc*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_port"
              c:identifier="gvir_config_domain_graphics_vnc_get_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_socket"
              c:identifier="gvir_config_domain_graphics_vnc_get_socket">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_autoport"
              c:identifier="gvir_config_domain_graphics_vnc_set_autoport">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
          <parameter name="autoport" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password"
              c:identifier="gvir_config_domain_graphics_vnc_set_password">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_port"
              c:identifier="gvir_config_domain_graphics_vnc_set_port">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_socket"
              c:identifier="gvir_config_domain_graphics_vnc_set_socket">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="graphics" transfer-ownership="none">
            <type name="DomainGraphicsVnc"
                  c:type="GVirConfigDomainGraphicsVnc*"/>
          </instance-parameter>
          <parameter name="socket" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainGraphics" c:type="GVirConfigDomainGraphics"/>
      </field>
      <field name="priv">
        <type name="DomainGraphicsVncPrivate"
              c:type="GVirConfigDomainGraphicsVncPrivate*"/>
      </field>
    </class>
    <record name="DomainGraphicsVncClass"
            c:type="GVirConfigDomainGraphicsVncClass"
            glib:is-gtype-struct-for="DomainGraphicsVnc">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainGraphicsClass"
              c:type="GVirConfigDomainGraphicsClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainGraphicsVncPrivate"
            c:type="GVirConfigDomainGraphicsVncPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="39"/>
    </record>
    <class name="DomainHostdev"
           c:symbol-prefix="domain_hostdev"
           c:type="GVirConfigDomainHostdev"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainHostdev"
           glib:get-type="gvir_config_domain_hostdev_get_type"
           glib:type-struct="DomainHostdevClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="57"/>
      <method name="get_boot_order"
              c:identifier="gvir_config_domain_hostdev_get_boot_order">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
               line="111">The boot order if @hostdev is bootable, otherwise a negative integer.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="109">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_readonly"
              c:identifier="gvir_config_domain_hostdev_get_readonly">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
               line="147">%TRUE if @hostdev is readonly, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="145">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shareable"
              c:identifier="gvir_config_domain_hostdev_get_shareable">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
               line="183">%TRUE if @hostdev is shared between domains, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="181">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_boot_order"
              c:identifier="gvir_config_domain_hostdev_set_boot_order">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
             line="79">If a positive integer is passed as @order, @hostdev is marked bootable and
boot order set to @order, otherwise @hostdev is marked to be unbootable.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="81">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="82">the boot order</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_readonly"
              c:identifier="gvir_config_domain_hostdev_set_readonly">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
             line="119">Set the readonly status of @hostdev to @readonly.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="121">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
          <parameter name="readonly" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="122">the new readonly status</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_shareable"
              c:identifier="gvir_config_domain_hostdev_set_shareable">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
             line="155">Set whether or not @hostdev is shared between domains.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="157">the host device</doc>
            <type name="DomainHostdev" c:type="GVirConfigDomainHostdev*"/>
          </instance-parameter>
          <parameter name="shareable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.c"
                 line="158">the new shareable status</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainHostdevPrivate"
              c:type="GVirConfigDomainHostdevPrivate*"/>
      </field>
    </class>
    <record name="DomainHostdevClass"
            c:type="GVirConfigDomainHostdevClass"
            glib:is-gtype-struct-for="DomainHostdev">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainHostdevPci"
           c:symbol-prefix="domain_hostdev_pci"
           c:type="GVirConfigDomainHostdevPci"
           parent="DomainHostdev"
           glib:type-name="GVirConfigDomainHostdevPci"
           glib:get-type="gvir_config_domain_hostdev_pci_get_type"
           glib:type-struct="DomainHostdevPciClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_hostdev_pci_new">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
             line="49">Creates a new #GVirConfigDomainHostdevPci.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
               line="54">a new #GVirConfigDomainHostdevPci. The returned
object should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainHostdevPci" c:type="GVirConfigDomainHostdevPci*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_hostdev_pci_new_from_xml"
                   throws="1">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
             line="69">Creates a new #GVirConfigDomainHostdevPci. The host device object will be
created using the XML description stored in @xml. This is a fragment of
libvirt domain XML whose root node is &amp;lt;hostdev&amp;gt;.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
               line="78">a new #GVirConfigDomainHostdevPci, or NULL if @xml
failed to be parsed. The returned object should be unreffed with
g_object_unref() when no longer needed.</doc>
          <type name="DomainHostdevPci" c:type="GVirConfigDomainHostdevPci*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
                 line="71">xml data to create the host device from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="gvir_config_domain_hostdev_pci_get_address">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
             line="130">Gets the address associated with @hostdev.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
               line="136">a new #GVirConfigDomainAddressPci, or NULL if no
address is associated with @hostdev. The returned object should be unreffed
with g_object_unref() when no longer needed.</doc>
          <type name="DomainAddressPci" c:type="GVirConfigDomainAddressPci*"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.c"
                 line="132">A #GVirConfigDomainHostdevPci object.</doc>
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_managed"
              c:identifier="gvir_config_domain_hostdev_pci_get_managed">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rom_bar"
              c:identifier="gvir_config_domain_hostdev_pci_get_rom_bar">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rom_file"
              c:identifier="gvir_config_domain_hostdev_pci_get_rom_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_address"
              c:identifier="gvir_config_domain_hostdev_pci_set_address">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="DomainAddressPci"
                  c:type="GVirConfigDomainAddressPci*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_managed"
              c:identifier="gvir_config_domain_hostdev_pci_set_managed">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
          <parameter name="managed" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rom_bar"
              c:identifier="gvir_config_domain_hostdev_pci_set_rom_bar">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
          <parameter name="bar" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rom_file"
              c:identifier="gvir_config_domain_hostdev_pci_set_rom_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="hostdev" transfer-ownership="none">
            <type name="DomainHostdevPci"
                  c:type="GVirConfigDomainHostdevPci*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainHostdev" c:type="GVirConfigDomainHostdev"/>
      </field>
      <field name="priv">
        <type name="DomainHostdevPciPrivate"
              c:type="GVirConfigDomainHostdevPciPrivate*"/>
      </field>
    </class>
    <record name="DomainHostdevPciClass"
            c:type="GVirConfigDomainHostdevPciClass"
            glib:is-gtype-struct-for="DomainHostdevPci">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainHostdevClass" c:type="GVirConfigDomainHostdevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainHostdevPciPrivate"
            c:type="GVirConfigDomainHostdevPciPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="40"/>
    </record>
    <record name="DomainHostdevPrivate"
            c:type="GVirConfigDomainHostdevPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="40"/>
    </record>
    <class name="DomainInput"
           c:symbol-prefix="domain_input"
           c:type="GVirConfigDomainInput"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainInput"
           glib:get-type="gvir_config_domain_input_get_type"
           glib:type-struct="DomainInputClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_input_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_input_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bus" c:identifier="gvir_config_domain_input_get_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="DomainInputBus" c:type="GVirConfigDomainInputBus"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_type"
              c:identifier="gvir_config_domain_input_get_device_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="DomainInputDeviceType"
                c:type="GVirConfigDomainInputDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_bus" c:identifier="gvir_config_domain_input_set_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <type name="DomainInputBus" c:type="GVirConfigDomainInputBus"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_type"
              c:identifier="gvir_config_domain_input_set_device_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="input" transfer-ownership="none">
            <type name="DomainInput" c:type="GVirConfigDomainInput*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainInputDeviceType"
                  c:type="GVirConfigDomainInputDeviceType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainInputPrivate"
              c:type="GVirConfigDomainInputPrivate*"/>
      </field>
    </class>
    <enumeration name="DomainInputBus"
                 glib:type-name="GVirConfigDomainInputBus"
                 glib:get-type="gvir_config_domain_input_bus_get_type"
                 c:type="GVirConfigDomainInputBus">
      <member name="ps2"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_BUS_PS2"
              glib:nick="ps2"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_BUS_PS2">
      </member>
      <member name="usb"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_BUS_USB"
              glib:nick="usb"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_BUS_USB">
      </member>
      <member name="xen"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_BUS_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_BUS_XEN">
      </member>
    </enumeration>
    <record name="DomainInputClass"
            c:type="GVirConfigDomainInputClass"
            glib:is-gtype-struct-for="DomainInput">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainInputDeviceType"
                 glib:type-name="GVirConfigDomainInputDeviceType"
                 glib:get-type="gvir_config_domain_input_device_type_get_type"
                 c:type="GVirConfigDomainInputDeviceType">
      <member name="mouse"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_MOUSE"
              glib:nick="mouse"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_MOUSE">
      </member>
      <member name="tablet"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_TABLET"
              glib:nick="tablet"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_TABLET">
      </member>
      <member name="keyboard"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_KEYBOARD"
              glib:nick="keyboard"
              glib:name="GVIR_CONFIG_DOMAIN_INPUT_DEVICE_KEYBOARD">
      </member>
    </enumeration>
    <record name="DomainInputPrivate"
            c:type="GVirConfigDomainInputPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="39"/>
    </record>
    <class name="DomainInterface"
           c:symbol-prefix="domain_interface"
           c:type="GVirConfigDomainInterface"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainInterface"
           glib:get-type="gvir_config_domain_interface_get_type"
           glib:type-struct="DomainInterfaceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="58"/>
      <method name="get_filterref"
              c:identifier="gvir_config_domain_interface_get_filterref">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-interface.c"
             line="147">Gets the filterref associated with the @interface</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-interface.c"
               line="153">A #GVirConfigDomainInterfaceFilterref. The returned
object should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="DomainInterfaceFilterref"
                c:type="GVirConfigDomainInterfaceFilterref*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-interface.c"
                 line="149">a #GVirConfigDomainInterface</doc>
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ifname"
              c:identifier="gvir_config_domain_interface_get_ifname">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_link_state"
              c:identifier="gvir_config_domain_interface_get_link_state">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="DomainInterfaceLinkState"
                c:type="GVirConfigDomainInterfaceLinkState"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mac"
              c:identifier="gvir_config_domain_interface_get_mac">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gvir_config_domain_interface_get_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_filterref"
              c:identifier="gvir_config_domain_interface_set_filterref">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-interface.c"
                 line="133">a #GVirConfigDomainInterface</doc>
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
          <parameter name="filterref"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-interface.c"
                 line="134">the filterref to set</doc>
            <type name="DomainInterfaceFilterref"
                  c:type="GVirConfigDomainInterfaceFilterref*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ifname"
              c:identifier="gvir_config_domain_interface_set_ifname">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
          <parameter name="ifname" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_link_state"
              c:identifier="gvir_config_domain_interface_set_link_state">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="DomainInterfaceLinkState"
                  c:type="GVirConfigDomainInterfaceLinkState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mac"
              c:identifier="gvir_config_domain_interface_set_mac">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
          <parameter name="mac_address" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gvir_config_domain_interface_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterface" c:type="GVirConfigDomainInterface*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainInterfacePrivate"
              c:type="GVirConfigDomainInterfacePrivate*"/>
      </field>
    </class>
    <class name="DomainInterfaceBridge"
           c:symbol-prefix="domain_interface_bridge"
           c:type="GVirConfigDomainInterfaceBridge"
           parent="DomainInterface"
           glib:type-name="GVirConfigDomainInterfaceBridge"
           glib:get-type="gvir_config_domain_interface_bridge_get_type"
           glib:type-struct="DomainInterfaceBridgeClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_interface_bridge_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceBridge"
                c:type="GVirConfigDomainInterfaceBridge*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_interface_bridge_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceBridge"
                c:type="GVirConfigDomainInterfaceBridge*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_source"
              c:identifier="gvir_config_domain_interface_bridge_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterfaceBridge"
                  c:type="GVirConfigDomainInterfaceBridge*"/>
          </instance-parameter>
          <parameter name="brname" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainInterface" c:type="GVirConfigDomainInterface"/>
      </field>
      <field name="priv">
        <type name="DomainInterfaceBridgePrivate"
              c:type="GVirConfigDomainInterfaceBridgePrivate*"/>
      </field>
    </class>
    <record name="DomainInterfaceBridgeClass"
            c:type="GVirConfigDomainInterfaceBridgeClass"
            glib:is-gtype-struct-for="DomainInterfaceBridge">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainInterfaceClass"
              c:type="GVirConfigDomainInterfaceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainInterfaceBridgePrivate"
            c:type="GVirConfigDomainInterfaceBridgePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="40"/>
    </record>
    <record name="DomainInterfaceClass"
            c:type="GVirConfigDomainInterfaceClass"
            glib:is-gtype-struct-for="DomainInterface">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="58"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainInterfaceFilterref"
           c:symbol-prefix="domain_interface_filterref"
           c:type="GVirConfigDomainInterfaceFilterref"
           parent="Object"
           glib:type-name="GVirConfigDomainInterfaceFilterref"
           glib:get-type="gvir_config_domain_interface_filterref_get_type"
           glib:type-struct="DomainInterfaceFilterrefClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="58"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_interface_filterref_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceFilterref"
                c:type="GVirConfigDomainInterfaceFilterref*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_interface_filterref_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceFilterref"
                c:type="GVirConfigDomainInterfaceFilterref*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_parameter"
              c:identifier="gvir_config_domain_interface_filterref_add_parameter">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filterref" transfer-ownership="none">
            <type name="DomainInterfaceFilterref"
                  c:type="GVirConfigDomainInterfaceFilterref*"/>
          </instance-parameter>
          <parameter name="parameter" transfer-ownership="none">
            <type name="DomainInterfaceFilterrefParameter"
                  c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_domain_interface_filterref_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="filterref" transfer-ownership="none">
            <type name="DomainInterfaceFilterref"
                  c:type="GVirConfigDomainInterfaceFilterref*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parameters"
              c:identifier="gvir_config_domain_interface_filterref_get_parameters">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.c"
             line="125">Gets the list of parameters attached to @filterref. The returned list should be
freed with g_list_free(), after its elements have been unreffed with
g_object_unref().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.c"
               line="133">
a newly allocated #GList of #GVirConfigDomainInterfaceFilterrefParameter.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainInterfaceFilterrefParameter"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="filterref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.c"
                 line="127">a #GVirConfigDomainInterfaceFilterref</doc>
            <type name="DomainInterfaceFilterref"
                  c:type="GVirConfigDomainInterfaceFilterref*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_interface_filterref_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filterref" transfer-ownership="none">
            <type name="DomainInterfaceFilterref"
                  c:type="GVirConfigDomainInterfaceFilterref*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainInterfaceFilterrefPrivate"
              c:type="GVirConfigDomainInterfaceFilterrefPrivate*"/>
      </field>
    </class>
    <record name="DomainInterfaceFilterrefClass"
            c:type="GVirConfigDomainInterfaceFilterrefClass"
            glib:is-gtype-struct-for="DomainInterfaceFilterref">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="58"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainInterfaceFilterrefParameter"
           c:symbol-prefix="domain_interface_filterref_parameter"
           c:type="GVirConfigDomainInterfaceFilterrefParameter"
           parent="Object"
           glib:type-name="GVirConfigDomainInterfaceFilterrefParameter"
           glib:get-type="gvir_config_domain_interface_filterref_parameter_get_type"
           glib:type-struct="DomainInterfaceFilterrefParameterClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="58"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_interface_filterref_parameter_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceFilterrefParameter"
                c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_interface_filterref_parameter_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceFilterrefParameter"
                c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name"
              c:identifier="gvir_config_domain_interface_filterref_parameter_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parameter" transfer-ownership="none">
            <type name="DomainInterfaceFilterrefParameter"
                  c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="gvir_config_domain_interface_filterref_parameter_get_value">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parameter" transfer-ownership="none">
            <type name="DomainInterfaceFilterrefParameter"
                  c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_interface_filterref_parameter_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parameter" transfer-ownership="none">
            <type name="DomainInterfaceFilterrefParameter"
                  c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="gvir_config_domain_interface_filterref_parameter_set_value">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parameter" transfer-ownership="none">
            <type name="DomainInterfaceFilterrefParameter"
                  c:type="GVirConfigDomainInterfaceFilterrefParameter*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainInterfaceFilterrefParameterPrivate"
              c:type="GVirConfigDomainInterfaceFilterrefParameterPrivate*"/>
      </field>
    </class>
    <record name="DomainInterfaceFilterrefParameterClass"
            c:type="GVirConfigDomainInterfaceFilterrefParameterClass"
            glib:is-gtype-struct-for="DomainInterfaceFilterrefParameter">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="58"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainInterfaceFilterrefParameterPrivate"
            c:type="GVirConfigDomainInterfaceFilterrefParameterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="41"/>
    </record>
    <record name="DomainInterfaceFilterrefPrivate"
            c:type="GVirConfigDomainInterfaceFilterrefPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="41"/>
    </record>
    <enumeration name="DomainInterfaceLinkState"
                 glib:type-name="GVirConfigDomainInterfaceLinkState"
                 glib:get-type="gvir_config_domain_interface_link_state_get_type"
                 c:type="GVirConfigDomainInterfaceLinkState">
      <member name="default"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_DEFAULT"
              glib:nick="default"
              glib:name="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_DEFAULT">
      </member>
      <member name="up"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_UP"
              glib:nick="up"
              glib:name="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_UP">
      </member>
      <member name="down"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_DOWN"
              glib:nick="down"
              glib:name="GVIR_CONFIG_DOMAIN_INTERFACE_LINK_STATE_DOWN">
      </member>
    </enumeration>
    <class name="DomainInterfaceNetwork"
           c:symbol-prefix="domain_interface_network"
           c:type="GVirConfigDomainInterfaceNetwork"
           parent="DomainInterface"
           glib:type-name="GVirConfigDomainInterfaceNetwork"
           glib:get-type="gvir_config_domain_interface_network_get_type"
           glib:type-struct="DomainInterfaceNetworkClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_interface_network_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceNetwork"
                c:type="GVirConfigDomainInterfaceNetwork*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_interface_network_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceNetwork"
                c:type="GVirConfigDomainInterfaceNetwork*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_source"
              c:identifier="gvir_config_domain_interface_network_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="DomainInterfaceNetwork"
                  c:type="GVirConfigDomainInterfaceNetwork*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainInterface" c:type="GVirConfigDomainInterface"/>
      </field>
      <field name="priv">
        <type name="DomainInterfaceNetworkPrivate"
              c:type="GVirConfigDomainInterfaceNetworkPrivate*"/>
      </field>
    </class>
    <record name="DomainInterfaceNetworkClass"
            c:type="GVirConfigDomainInterfaceNetworkClass"
            glib:is-gtype-struct-for="DomainInterfaceNetwork">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainInterfaceClass"
              c:type="GVirConfigDomainInterfaceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainInterfaceNetworkPrivate"
            c:type="GVirConfigDomainInterfaceNetworkPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="40"/>
    </record>
    <record name="DomainInterfacePrivate"
            c:type="GVirConfigDomainInterfacePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="41"/>
    </record>
    <class name="DomainInterfaceUser"
           c:symbol-prefix="domain_interface_user"
           c:type="GVirConfigDomainInterfaceUser"
           parent="DomainInterface"
           glib:type-name="GVirConfigDomainInterfaceUser"
           glib:get-type="gvir_config_domain_interface_user_get_type"
           glib:type-struct="DomainInterfaceUserClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_interface_user_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceUser"
                c:type="GVirConfigDomainInterfaceUser*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_interface_user_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainInterfaceUser"
                c:type="GVirConfigDomainInterfaceUser*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainInterface" c:type="GVirConfigDomainInterface"/>
      </field>
      <field name="priv">
        <type name="DomainInterfaceUserPrivate"
              c:type="GVirConfigDomainInterfaceUserPrivate*"/>
      </field>
    </class>
    <record name="DomainInterfaceUserClass"
            c:type="GVirConfigDomainInterfaceUserClass"
            glib:is-gtype-struct-for="DomainInterfaceUser">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="57"/>
      <field name="parent_class">
        <type name="DomainInterfaceClass"
              c:type="GVirConfigDomainInterfaceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainInterfaceUserPrivate"
            c:type="GVirConfigDomainInterfaceUserPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="40"/>
    </record>
    <enumeration name="DomainLifecycleAction"
                 glib:type-name="GVirConfigDomainLifecycleAction"
                 glib:get-type="gvir_config_domain_lifecycle_action_get_type"
                 c:type="GVirConfigDomainLifecycleAction">
      <member name="destroy"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_DESTROY"
              glib:nick="destroy"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_DESTROY">
      </member>
      <member name="restart"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_RESTART"
              glib:nick="restart"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_RESTART">
      </member>
      <member name="preserve"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_PRESERVE"
              glib:nick="preserve"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_PRESERVE">
      </member>
      <member name="rename_restart"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_RENAME_RESTART"
              glib:nick="rename-restart"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_RENAME_RESTART">
      </member>
      <member name="coredump_destroy"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_COREDUMP_DESTROY"
              glib:nick="coredump-destroy"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_COREDUMP_DESTROY">
      </member>
      <member name="coredump_restart"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_COREDUMP_RESTART"
              glib:nick="coredump-restart"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_COREDUMP_RESTART">
      </member>
    </enumeration>
    <enumeration name="DomainLifecycleEvent"
                 glib:type-name="GVirConfigDomainLifecycleEvent"
                 glib:get-type="gvir_config_domain_lifecycle_event_get_type"
                 c:type="GVirConfigDomainLifecycleEvent">
      <member name="on_poweroff"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_POWEROFF"
              glib:nick="on_poweroff"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_POWEROFF">
      </member>
      <member name="on_reboot"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_REBOOT"
              glib:nick="on_reboot"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_REBOOT">
      </member>
      <member name="on_crash"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_CRASH"
              glib:nick="on_crash"
              glib:name="GVIR_CONFIG_DOMAIN_LIFECYCLE_ON_CRASH">
      </member>
    </enumeration>
    <class name="DomainMemballoon"
           c:symbol-prefix="domain_memballoon"
           c:type="GVirConfigDomainMemballoon"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainMemballoon"
           glib:get-type="gvir_config_domain_memballoon_get_type"
           glib:type-struct="DomainMemballoonClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_memballoon_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="DomainMemballoon" c:type="GVirConfigDomainMemballoon*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_memballoon_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <type name="DomainMemballoon" c:type="GVirConfigDomainMemballoon*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_model"
              c:identifier="gvir_config_domain_memballoon_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="memballoon" transfer-ownership="none">
            <type name="DomainMemballoon"
                  c:type="GVirConfigDomainMemballoon*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="DomainMemballoonModel"
                  c:type="GVirConfigDomainMemballoonModel"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainMemballoonPrivate"
              c:type="GVirConfigDomainMemballoonPrivate*"/>
      </field>
    </class>
    <record name="DomainMemballoonClass"
            c:type="GVirConfigDomainMemballoonClass"
            glib:is-gtype-struct-for="DomainMemballoon">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainMemballoonModel"
                 glib:type-name="GVirConfigDomainMemballoonModel"
                 glib:get-type="gvir_config_domain_memballoon_model_get_type"
                 c:type="GVirConfigDomainMemballoonModel">
      <member name="none"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_MEMBALLOON_MODEL_NONE"
              glib:nick="none"
              glib:name="GVIR_CONFIG_DOMAIN_MEMBALLOON_MODEL_NONE">
      </member>
      <member name="virtio"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_MEMBALLOON_MODEL_VIRTIO"
              glib:nick="virtio"
              glib:name="GVIR_CONFIG_DOMAIN_MEMBALLOON_MODEL_VIRTIO">
      </member>
    </enumeration>
    <record name="DomainMemballoonPrivate"
            c:type="GVirConfigDomainMemballoonPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="39"/>
    </record>
    <class name="DomainOs"
           c:symbol-prefix="domain_os"
           c:type="GVirConfigDomainOs"
           parent="Object"
           glib:type-name="GVirConfigDomainOs"
           glib:get-type="gvir_config_domain_os_get_type"
           glib:type-struct="DomainOsClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_os_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="86"/>
        <return-value transfer-ownership="full">
          <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_os_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="87"/>
        <return-value transfer-ownership="full">
          <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="bios_enable_serial"
              c:identifier="gvir_config_domain_os_bios_enable_serial">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_boot_menu"
              c:identifier="gvir_config_domain_os_enable_boot_menu">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="enable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_arch" c:identifier="gvir_config_domain_os_get_arch">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_boot_devices"
              c:identifier="gvir_config_domain_os_get_boot_devices">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
             line="262">Gets the list of devices attached to @os. The returned list should be
freed with g_list_free().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="94"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
               line="269">
a newly allocated #GList of #GVirConfigDomainOsBootDevice.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainOsBootDevice"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="264">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_firmware"
              c:identifier="gvir_config_domain_os_get_firmware">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="DomainOsFirmware" c:type="GVirConfigDomainOsFirmware"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_machine"
              c:identifier="gvir_config_domain_os_get_machine">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_type"
              c:identifier="gvir_config_domain_os_get_os_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="DomainOsType" c:type="GVirConfigDomainOsType"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_arch" c:identifier="gvir_config_domain_os_set_arch">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="arch" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_boot_devices"
              c:identifier="gvir_config_domain_os_set_boot_devices">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="200">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="boot_devices" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="DomainOsBootDevice"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_cmdline"
              c:identifier="gvir_config_domain_os_set_cmdline">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="119">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="cmdline"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="120">The direct boot commandline</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_firmware"
              c:identifier="gvir_config_domain_os_set_firmware">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="firmware" transfer-ownership="none">
            <type name="DomainOsFirmware" c:type="GVirConfigDomainOsFirmware"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_init" c:identifier="gvir_config_domain_os_set_init">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="131">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="init"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kernel"
              c:identifier="gvir_config_domain_os_set_kernel">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="95">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="kernel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="96">The kernel path</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_loader"
              c:identifier="gvir_config_domain_os_set_loader">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="143">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="loader"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_machine"
              c:identifier="gvir_config_domain_os_set_machine">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="machine" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_os_type"
              c:identifier="gvir_config_domain_os_set_os_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainOsType" c:type="GVirConfigDomainOsType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ramdisk"
              c:identifier="gvir_config_domain_os_set_ramdisk">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="107">a #GVirConfigDomainOs</doc>
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="ramdisk"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-os.c"
                 line="108">The ramdisk path</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_smbios_mode"
              c:identifier="gvir_config_domain_os_set_smbios_mode">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <type name="DomainOs" c:type="GVirConfigDomainOs*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="DomainOsSmBiosMode"
                  c:type="GVirConfigDomainOsSmBiosMode"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainOsPrivate" c:type="GVirConfigDomainOsPrivate*"/>
      </field>
    </class>
    <enumeration name="DomainOsBootDevice"
                 glib:type-name="GVirConfigDomainOsBootDevice"
                 glib:get-type="gvir_config_domain_os_boot_device_get_type"
                 c:type="GVirConfigDomainOsBootDevice">
      <member name="fd"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_FD"
              glib:nick="fd"
              glib:name="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_FD">
      </member>
      <member name="hd"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_HD"
              glib:nick="hd"
              glib:name="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_HD">
      </member>
      <member name="cdrom"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_CDROM"
              glib:nick="cdrom"
              glib:name="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_CDROM">
      </member>
      <member name="network"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_NETWORK"
              glib:nick="network"
              glib:name="GVIR_CONFIG_DOMAIN_OS_BOOT_DEVICE_NETWORK">
      </member>
    </enumeration>
    <record name="DomainOsClass"
            c:type="GVirConfigDomainOsClass"
            glib:is-gtype-struct-for="DomainOs">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainOsFirmware"
                 glib:type-name="GVirConfigDomainOsFirmware"
                 glib:get-type="gvir_config_domain_os_firmware_get_type"
                 c:type="GVirConfigDomainOsFirmware">
      <member name="bios"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_FIRMWARE_BIOS"
              glib:nick="bios"
              glib:name="GVIR_CONFIG_DOMAIN_OS_FIRMWARE_BIOS">
      </member>
      <member name="efi"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_FIRMWARE_EFI"
              glib:nick="efi"
              glib:name="GVIR_CONFIG_DOMAIN_OS_FIRMWARE_EFI">
      </member>
    </enumeration>
    <record name="DomainOsPrivate"
            c:type="GVirConfigDomainOsPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="39"/>
    </record>
    <enumeration name="DomainOsSmBiosMode"
                 glib:type-name="GVirConfigDomainOsSmBiosMode"
                 glib:get-type="gvir_config_domain_os_sm_bios_mode_get_type"
                 c:type="GVirConfigDomainOsSmBiosMode">
      <member name="emulate"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_EMULATE"
              glib:nick="emulate"
              glib:name="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_EMULATE">
      </member>
      <member name="host"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_HOST"
              glib:nick="host"
              glib:name="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_HOST">
      </member>
      <member name="sysinfo"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_SYSINFO"
              glib:nick="sysinfo"
              glib:name="GVIR_CONFIG_DOMAIN_OS_SMBIOS_MODE_SYSINFO">
      </member>
    </enumeration>
    <enumeration name="DomainOsType"
                 glib:type-name="GVirConfigDomainOsType"
                 glib:get-type="gvir_config_domain_os_type_get_type"
                 c:type="GVirConfigDomainOsType">
      <member name="hvm"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_TYPE_HVM"
              glib:nick="hvm"
              glib:name="GVIR_CONFIG_DOMAIN_OS_TYPE_HVM">
      </member>
      <member name="linux"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_TYPE_LINUX"
              glib:nick="linux"
              glib:name="GVIR_CONFIG_DOMAIN_OS_TYPE_LINUX">
      </member>
      <member name="exe"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_TYPE_EXE"
              glib:nick="exe"
              glib:name="GVIR_CONFIG_DOMAIN_OS_TYPE_EXE">
      </member>
      <member name="xen"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_TYPE_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_OS_TYPE_XEN">
      </member>
      <member name="uml"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_OS_TYPE_UML"
              glib:nick="uml"
              glib:name="GVIR_CONFIG_DOMAIN_OS_TYPE_UML">
      </member>
    </enumeration>
    <class name="DomainParallel"
           c:symbol-prefix="domain_parallel"
           c:type="GVirConfigDomainParallel"
           parent="DomainChardev"
           glib:type-name="GVirConfigDomainParallel"
           glib:get-type="gvir_config_domain_parallel_get_type"
           glib:type-struct="DomainParallelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_parallel_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainParallel" c:type="GVirConfigDomainParallel*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_parallel_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainParallel" c:type="GVirConfigDomainParallel*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainChardev" c:type="GVirConfigDomainChardev"/>
      </field>
      <field name="priv">
        <type name="DomainParallelPrivate"
              c:type="GVirConfigDomainParallelPrivate*"/>
      </field>
    </class>
    <record name="DomainParallelClass"
            c:type="GVirConfigDomainParallelClass"
            glib:is-gtype-struct-for="DomainParallel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevClass" c:type="GVirConfigDomainChardevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainParallelPrivate"
            c:type="GVirConfigDomainParallelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="39"/>
    </record>
    <class name="DomainPowerManagement"
           c:symbol-prefix="domain_power_management"
           c:type="GVirConfigDomainPowerManagement"
           parent="Object"
           glib:type-name="GVirConfigDomainPowerManagement"
           glib:get-type="gvir_config_domain_power_management_get_type"
           glib:type-struct="DomainPowerManagementClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="57"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_power_management_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainPowerManagement"
                c:type="GVirConfigDomainPowerManagement*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_power_management_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainPowerManagement"
                c:type="GVirConfigDomainPowerManagement*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_disk_suspend_enabled"
              c:identifier="gvir_config_domain_power_management_set_disk_suspend_enabled">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pm" transfer-ownership="none">
            <type name="DomainPowerManagement"
                  c:type="GVirConfigDomainPowerManagement*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mem_suspend_enabled"
              c:identifier="gvir_config_domain_power_management_set_mem_suspend_enabled">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pm" transfer-ownership="none">
            <type name="DomainPowerManagement"
                  c:type="GVirConfigDomainPowerManagement*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainPowerManagementPrivate"
              c:type="GVirConfigDomainPowerManagementPrivate*"/>
      </field>
    </class>
    <record name="DomainPowerManagementClass"
            c:type="GVirConfigDomainPowerManagementClass"
            glib:is-gtype-struct-for="DomainPowerManagement">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="57"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainPowerManagementPrivate"
            c:type="GVirConfigDomainPowerManagementPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="40"/>
    </record>
    <record name="DomainPrivate"
            c:type="GVirConfigDomainPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="46"/>
    </record>
    <class name="DomainRedirdev"
           c:symbol-prefix="domain_redirdev"
           c:type="GVirConfigDomainRedirdev"
           parent="DomainChardev"
           glib:type-name="GVirConfigDomainRedirdev"
           glib:get-type="gvir_config_domain_redirdev_get_type"
           glib:type-struct="DomainRedirdevClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_redirdev_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <type name="DomainRedirdev" c:type="GVirConfigDomainRedirdev*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_redirdev_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="DomainRedirdev" c:type="GVirConfigDomainRedirdev*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_address"
              c:identifier="gvir_config_domain_redirdev_set_address">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="redirdev" transfer-ownership="none">
            <type name="DomainRedirdev" c:type="GVirConfigDomainRedirdev*"/>
          </instance-parameter>
          <parameter name="address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="DomainAddress" c:type="GVirConfigDomainAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bus"
              c:identifier="gvir_config_domain_redirdev_set_bus">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="redirdev" transfer-ownership="none">
            <type name="DomainRedirdev" c:type="GVirConfigDomainRedirdev*"/>
          </instance-parameter>
          <parameter name="bus" transfer-ownership="none">
            <type name="DomainRedirdevBus"
                  c:type="GVirConfigDomainRedirdevBus"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainChardev" c:type="GVirConfigDomainChardev"/>
      </field>
      <field name="priv">
        <type name="DomainRedirdevPrivate"
              c:type="GVirConfigDomainRedirdevPrivate*"/>
      </field>
    </class>
    <enumeration name="DomainRedirdevBus"
                 glib:type-name="GVirConfigDomainRedirdevBus"
                 glib:get-type="gvir_config_domain_redirdev_bus_get_type"
                 c:type="GVirConfigDomainRedirdevBus">
      <member name="usb"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_REDIRDEV_BUS_USB"
              glib:nick="usb"
              glib:name="GVIR_CONFIG_DOMAIN_REDIRDEV_BUS_USB">
      </member>
    </enumeration>
    <record name="DomainRedirdevClass"
            c:type="GVirConfigDomainRedirdevClass"
            glib:is-gtype-struct-for="DomainRedirdev">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevClass" c:type="GVirConfigDomainChardevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainRedirdevPrivate"
            c:type="GVirConfigDomainRedirdevPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="39"/>
    </record>
    <class name="DomainSeclabel"
           c:symbol-prefix="domain_seclabel"
           c:type="GVirConfigDomainSeclabel"
           parent="Object"
           glib:type-name="GVirConfigDomainSeclabel"
           glib:get-type="gvir_config_domain_seclabel_get_type"
           glib:type-struct="DomainSeclabelClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_seclabel_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_seclabel_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="66"/>
        <return-value transfer-ownership="full">
          <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_baselabel"
              c:identifier="gvir_config_domain_seclabel_set_baselabel">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seclabel" transfer-ownership="none">
            <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gvir_config_domain_seclabel_set_label">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seclabel" transfer-ownership="none">
            <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gvir_config_domain_seclabel_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seclabel" transfer-ownership="none">
            <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type"
              c:identifier="gvir_config_domain_seclabel_set_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seclabel" transfer-ownership="none">
            <type name="DomainSeclabel" c:type="GVirConfigDomainSeclabel*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainSeclabelType"
                  c:type="GVirConfigDomainSeclabelType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainSeclabelPrivate"
              c:type="GVirConfigDomainSeclabelPrivate*"/>
      </field>
    </class>
    <record name="DomainSeclabelClass"
            c:type="GVirConfigDomainSeclabelClass"
            glib:is-gtype-struct-for="DomainSeclabel">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSeclabelPrivate"
            c:type="GVirConfigDomainSeclabelPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="39"/>
    </record>
    <enumeration name="DomainSeclabelType"
                 glib:type-name="GVirConfigDomainSeclabelType"
                 glib:get-type="gvir_config_domain_seclabel_type_get_type"
                 c:type="GVirConfigDomainSeclabelType">
      <member name="dynamic"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_SECLABEL_DYNAMIC"
              glib:nick="dynamic"
              glib:name="GVIR_CONFIG_DOMAIN_SECLABEL_DYNAMIC">
      </member>
      <member name="static"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_SECLABEL_STATIC"
              glib:nick="static"
              glib:name="GVIR_CONFIG_DOMAIN_SECLABEL_STATIC">
      </member>
    </enumeration>
    <class name="DomainSerial"
           c:symbol-prefix="domain_serial"
           c:type="GVirConfigDomainSerial"
           parent="DomainChardev"
           glib:type-name="GVirConfigDomainSerial"
           glib:get-type="gvir_config_domain_serial_get_type"
           glib:type-struct="DomainSerialClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_serial_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainSerial" c:type="GVirConfigDomainSerial*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_serial_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainSerial" c:type="GVirConfigDomainSerial*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainChardev" c:type="GVirConfigDomainChardev"/>
      </field>
      <field name="priv">
        <type name="DomainSerialPrivate"
              c:type="GVirConfigDomainSerialPrivate*"/>
      </field>
    </class>
    <record name="DomainSerialClass"
            c:type="GVirConfigDomainSerialClass"
            glib:is-gtype-struct-for="DomainSerial">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainChardevClass" c:type="GVirConfigDomainChardevClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSerialPrivate"
            c:type="GVirConfigDomainSerialPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="39"/>
    </record>
    <class name="DomainSmartcard"
           c:symbol-prefix="domain_smartcard"
           c:type="GVirConfigDomainSmartcard"
           parent="DomainDevice"
           abstract="1"
           glib:type-name="GVirConfigDomainSmartcard"
           glib:get-type="gvir_config_domain_smartcard_get_type"
           glib:type-struct="DomainSmartcardClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="56"/>
      <function name="set_address"
                c:identifier="gvir_config_domain_smartcard_set_address">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="redirdev" transfer-ownership="none">
            <type name="DomainRedirdev" c:type="GVirConfigDomainRedirdev*"/>
          </parameter>
          <parameter name="address"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="DomainAddress" c:type="GVirConfigDomainAddress*"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainSmartcardPrivate"
              c:type="GVirConfigDomainSmartcardPrivate*"/>
      </field>
    </class>
    <record name="DomainSmartcardClass"
            c:type="GVirConfigDomainSmartcardClass"
            glib:is-gtype-struct-for="DomainSmartcard">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainSmartcardHost"
           c:symbol-prefix="domain_smartcard_host"
           c:type="GVirConfigDomainSmartcardHost"
           parent="DomainSmartcard"
           glib:type-name="GVirConfigDomainSmartcardHost"
           glib:get-type="gvir_config_domain_smartcard_host_get_type"
           glib:type-struct="DomainSmartcardHostClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_smartcard_host_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardHost"
                c:type="GVirConfigDomainSmartcardHost*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_smartcard_host_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardHost"
                c:type="GVirConfigDomainSmartcardHost*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainSmartcard" c:type="GVirConfigDomainSmartcard"/>
      </field>
      <field name="priv">
        <type name="DomainSmartcardHostPrivate"
              c:type="GVirConfigDomainSmartcardHostPrivate*"/>
      </field>
    </class>
    <class name="DomainSmartcardHostCertificates"
           c:symbol-prefix="domain_smartcard_host_certificates"
           c:type="GVirConfigDomainSmartcardHostCertificates"
           parent="DomainSmartcard"
           glib:type-name="GVirConfigDomainSmartcardHostCertificates"
           glib:get-type="gvir_config_domain_smartcard_host_certificates_get_type"
           glib:type-struct="DomainSmartcardHostCertificatesClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_smartcard_host_certificates_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardHostCertificates"
                c:type="GVirConfigDomainSmartcardHostCertificates*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_smartcard_host_certificates_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardHostCertificates"
                c:type="GVirConfigDomainSmartcardHostCertificates*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_certificates"
              c:identifier="gvir_config_domain_smartcard_host_certificates_set_certificates">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="smartcard" transfer-ownership="none">
            <type name="DomainSmartcardHostCertificates"
                  c:type="GVirConfigDomainSmartcardHostCertificates*"/>
          </instance-parameter>
          <parameter name="cert1"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cert2"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="cert3"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_database"
              c:identifier="gvir_config_domain_smartcard_host_certificates_set_database">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="smartcard" transfer-ownership="none">
            <type name="DomainSmartcardHostCertificates"
                  c:type="GVirConfigDomainSmartcardHostCertificates*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainSmartcard" c:type="GVirConfigDomainSmartcard"/>
      </field>
      <field name="priv">
        <type name="DomainSmartcardHostCertificatesPrivate"
              c:type="GVirConfigDomainSmartcardHostCertificatesPrivate*"/>
      </field>
    </class>
    <record name="DomainSmartcardHostCertificatesClass"
            c:type="GVirConfigDomainSmartcardHostCertificatesClass"
            glib:is-gtype-struct-for="DomainSmartcardHostCertificates">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainSmartcardClass"
              c:type="GVirConfigDomainSmartcardClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSmartcardHostCertificatesPrivate"
            c:type="GVirConfigDomainSmartcardHostCertificatesPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="39"/>
    </record>
    <record name="DomainSmartcardHostClass"
            c:type="GVirConfigDomainSmartcardHostClass"
            glib:is-gtype-struct-for="DomainSmartcardHost">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainSmartcardClass"
              c:type="GVirConfigDomainSmartcardClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSmartcardHostPrivate"
            c:type="GVirConfigDomainSmartcardHostPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="39"/>
    </record>
    <class name="DomainSmartcardPassthrough"
           c:symbol-prefix="domain_smartcard_passthrough"
           c:type="GVirConfigDomainSmartcardPassthrough"
           parent="DomainSmartcard"
           glib:type-name="GVirConfigDomainSmartcardPassthrough"
           glib:get-type="gvir_config_domain_smartcard_passthrough_get_type"
           glib:type-struct="DomainSmartcardPassthroughClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_smartcard_passthrough_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardPassthrough"
                c:type="GVirConfigDomainSmartcardPassthrough*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_smartcard_passthrough_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainSmartcardPassthrough"
                c:type="GVirConfigDomainSmartcardPassthrough*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_source"
              c:identifier="gvir_config_domain_smartcard_passthrough_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="smartcard" transfer-ownership="none">
            <type name="DomainSmartcardPassthrough"
                  c:type="GVirConfigDomainSmartcardPassthrough*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="DomainChardevSource"
                  c:type="GVirConfigDomainChardevSource*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainSmartcard" c:type="GVirConfigDomainSmartcard"/>
      </field>
      <field name="priv">
        <type name="DomainSmartcardPassthroughPrivate"
              c:type="GVirConfigDomainSmartcardPassthroughPrivate*"/>
      </field>
    </class>
    <record name="DomainSmartcardPassthroughClass"
            c:type="GVirConfigDomainSmartcardPassthroughClass"
            glib:is-gtype-struct-for="DomainSmartcardPassthrough">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainSmartcardClass"
              c:type="GVirConfigDomainSmartcardClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSmartcardPassthroughPrivate"
            c:type="GVirConfigDomainSmartcardPassthroughPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="39"/>
    </record>
    <record name="DomainSmartcardPrivate"
            c:type="GVirConfigDomainSmartcardPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="39"/>
    </record>
    <class name="DomainSnapshot"
           c:symbol-prefix="domain_snapshot"
           c:type="GVirConfigDomainSnapshot"
           parent="Object"
           glib:type-name="GVirConfigDomainSnapshot"
           glib:get-type="gvir_config_domain_snapshot_get_type"
           glib:type-struct="DomainSnapshotClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="60"/>
      <constructor name="new" c:identifier="gvir_config_domain_snapshot_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="85"/>
        <return-value transfer-ownership="full">
          <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_snapshot_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="86"/>
        <return-value transfer-ownership="full">
          <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_disk"
              c:identifier="gvir_config_domain_snapshot_add_disk">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_creation_time"
              c:identifier="gvir_config_domain_snapshot_get_creation_time">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="glong" c:type="time_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gvir_config_domain_snapshot_get_description">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_disks"
              c:identifier="gvir_config_domain_snapshot_get_disks">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
             line="294">Gets the list of disks attached to @snapshot.  The returned list should
be freed with g_list_free(), after its elements have been unreffed with
g_object_unref().</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
               line="302">
a newly allocated #GList of #GVirConfigDomainSnapshotDisk.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="DomainSnapshotDisk"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
                 line="296">a #GVirConfigDomainSnapshot</doc>
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_domain"
              c:identifier="gvir_config_domain_snapshot_get_domain">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
             line="196">Gets the configuration of the domain @snapshot is a snapshot of.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
               line="202">A #GVirConfigDomain. The returned object
should be unreffed with g_object_unref() when no longer needed.</doc>
          <type name="Domain" c:type="GVirConfigDomain*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
                 line="198">a #GVirConfigDomainSnapshot</doc>
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_memory_file"
              c:identifier="gvir_config_domain_snapshot_get_memory_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_memory_state"
              c:identifier="gvir_config_domain_snapshot_get_memory_state">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="DomainSnapshotMemoryState"
                c:type="GVirConfigDomainSnapshotMemoryState"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_domain_snapshot_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="gvir_config_domain_snapshot_get_parent">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state"
              c:identifier="gvir_config_domain_snapshot_get_state">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="DomainSnapshotDomainState"
                c:type="GVirConfigDomainSnapshotDomainState"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gvir_config_domain_snapshot_set_description">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_disks"
              c:identifier="gvir_config_domain_snapshot_set_disks">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.c"
                 line="221">a #GVirConfigDomainSnapshot</doc>
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="disks" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="DomainSnapshotDisk"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="set_memory_file"
              c:identifier="gvir_config_domain_snapshot_set_memory_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_memory_state"
              c:identifier="gvir_config_domain_snapshot_set_memory_state">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="DomainSnapshotMemoryState"
                  c:type="GVirConfigDomainSnapshotMemoryState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_snapshot_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="snapshot" transfer-ownership="none">
            <type name="DomainSnapshot" c:type="GVirConfigDomainSnapshot*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainSnapshotPrivate"
              c:type="GVirConfigDomainSnapshotPrivate*"/>
      </field>
    </class>
    <record name="DomainSnapshotClass"
            c:type="GVirConfigDomainSnapshotClass"
            glib:is-gtype-struct-for="DomainSnapshot">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="60"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainSnapshotDisk"
           c:symbol-prefix="domain_snapshot_disk"
           c:type="GVirConfigDomainSnapshotDisk"
           parent="Object"
           glib:type-name="GVirConfigDomainSnapshotDisk"
           glib:get-type="gvir_config_domain_snapshot_disk_get_type"
           glib:type-struct="DomainSnapshotDiskClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_domain_snapshot_disk_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainSnapshotDisk"
                c:type="GVirConfigDomainSnapshotDisk*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_snapshot_disk_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="DomainSnapshotDisk"
                c:type="GVirConfigDomainSnapshotDisk*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_driver_format"
              c:identifier="gvir_config_domain_snapshot_disk_get_driver_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_domain_snapshot_disk_get_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snapshot_type"
              c:identifier="gvir_config_domain_snapshot_disk_get_snapshot_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="DomainDiskSnapshotType"
                c:type="GVirConfigDomainDiskSnapshotType"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_file"
              c:identifier="gvir_config_domain_snapshot_disk_get_source_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_driver_format"
              c:identifier="gvir_config_domain_snapshot_disk_set_driver_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="DomainDiskFormat" c:type="GVirConfigDomainDiskFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_domain_snapshot_disk_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snapshot_type"
              c:identifier="gvir_config_domain_snapshot_disk_set_snapshot_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="DomainDiskSnapshotType"
                  c:type="GVirConfigDomainDiskSnapshotType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_file"
              c:identifier="gvir_config_domain_snapshot_disk_set_source_file">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="disk" transfer-ownership="none">
            <type name="DomainSnapshotDisk"
                  c:type="GVirConfigDomainSnapshotDisk*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainSnapshotDiskPrivate"
              c:type="GVirConfigDomainSnapshotDiskPrivate*"/>
      </field>
    </class>
    <record name="DomainSnapshotDiskClass"
            c:type="GVirConfigDomainSnapshotDiskClass"
            glib:is-gtype-struct-for="DomainSnapshotDisk">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainSnapshotDiskPrivate"
            c:type="GVirConfigDomainSnapshotDiskPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="39"/>
    </record>
    <enumeration name="DomainSnapshotDomainState"
                 glib:type-name="GVirConfigDomainSnapshotDomainState"
                 glib:get-type="gvir_config_domain_snapshot_domain_state_get_type"
                 c:type="GVirConfigDomainSnapshotDomainState">
      <member name="nostate"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_NOSTATE"
              glib:nick="nostate"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_NOSTATE">
      </member>
      <member name="running"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_RUNNING"
              glib:nick="running"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_RUNNING">
      </member>
      <member name="blocked"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_BLOCKED"
              glib:nick="blocked"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_BLOCKED">
      </member>
      <member name="paused"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_PAUSED"
              glib:nick="paused"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_PAUSED">
      </member>
      <member name="shutdown"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_SHUTDOWN"
              glib:nick="shutdown"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_SHUTDOWN">
      </member>
      <member name="shutoff"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_SHUTOFF"
              glib:nick="shutoff"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_SHUTOFF">
      </member>
      <member name="crashed"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_CRASHED"
              glib:nick="crashed"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_CRASHED">
      </member>
      <member name="pmsuspended"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_PMSUSPENDED"
              glib:nick="pmsuspended"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_PMSUSPENDED">
      </member>
      <member name="disk_snapshot"
              value="100"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_DISK_SNAPSHOT"
              glib:nick="disk-snapshot"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_DOMAIN_STATE_DISK_SNAPSHOT">
      </member>
    </enumeration>
    <enumeration name="DomainSnapshotMemoryState"
                 glib:type-name="GVirConfigDomainSnapshotMemoryState"
                 glib:get-type="gvir_config_domain_snapshot_memory_state_get_type"
                 c:type="GVirConfigDomainSnapshotMemoryState">
      <member name="none"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_NONE"
              glib:nick="none"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_NONE">
      </member>
      <member name="internal"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_INTERNAL"
              glib:nick="internal"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_INTERNAL">
      </member>
      <member name="external"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_EXTERNAL"
              glib:nick="external"
              glib:name="GVIR_CONFIG_DOMAIN_SNAPSHOT_MEMORY_STATE_EXTERNAL">
      </member>
    </enumeration>
    <record name="DomainSnapshotPrivate"
            c:type="GVirConfigDomainSnapshotPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="43"/>
    </record>
    <class name="DomainSound"
           c:symbol-prefix="domain_sound"
           c:type="GVirConfigDomainSound"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainSound"
           glib:get-type="gvir_config_domain_sound_get_type"
           glib:type-struct="DomainSoundClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_sound_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <type name="DomainSound" c:type="GVirConfigDomainSound*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_sound_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <type name="DomainSound" c:type="GVirConfigDomainSound*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_model"
              c:identifier="gvir_config_domain_sound_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sound" transfer-ownership="none">
            <type name="DomainSound" c:type="GVirConfigDomainSound*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="DomainSoundModel" c:type="GVirConfigDomainSoundModel"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainSoundPrivate"
              c:type="GVirConfigDomainSoundPrivate*"/>
      </field>
    </class>
    <record name="DomainSoundClass"
            c:type="GVirConfigDomainSoundClass"
            glib:is-gtype-struct-for="DomainSound">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainSoundModel"
                 glib:type-name="GVirConfigDomainSoundModel"
                 glib:get-type="gvir_config_domain_sound_model_get_type"
                 c:type="GVirConfigDomainSoundModel">
      <member name="sb16"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_SB16"
              glib:nick="sb16"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_SB16">
      </member>
      <member name="es1370"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ES1370"
              glib:nick="es1370"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ES1370">
      </member>
      <member name="pcspk"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_PCSPK"
              glib:nick="pcspk"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_PCSPK">
      </member>
      <member name="ac97"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_AC97"
              glib:nick="ac97"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_AC97">
      </member>
      <member name="ich6"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ICH6"
              glib:nick="ich6"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ICH6">
      </member>
      <member name="ich9"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ICH9"
              glib:nick="ich9"
              glib:name="GVIR_CONFIG_DOMAIN_SOUND_MODEL_ICH9">
      </member>
    </enumeration>
    <record name="DomainSoundPrivate"
            c:type="GVirConfigDomainSoundPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="39"/>
    </record>
    <class name="DomainTimer"
           c:symbol-prefix="domain_timer"
           c:type="GVirConfigDomainTimer"
           parent="Object"
           abstract="1"
           glib:type-name="GVirConfigDomainTimer"
           glib:get-type="gvir_config_domain_timer_get_type"
           glib:type-struct="DomainTimerClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="56"/>
      <method name="get_present"
              c:identifier="gvir_config_domain_timer_get_present">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timer" transfer-ownership="none">
            <type name="DomainTimer" c:type="GVirConfigDomainTimer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tick_policy"
              c:identifier="gvir_config_domain_timer_get_tick_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="DomainTimerTickPolicy"
                c:type="GVirConfigDomainTimerTickPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="timer" transfer-ownership="none">
            <type name="DomainTimer" c:type="GVirConfigDomainTimer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_present"
              c:identifier="gvir_config_domain_timer_set_present">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timer" transfer-ownership="none">
            <type name="DomainTimer" c:type="GVirConfigDomainTimer*"/>
          </instance-parameter>
          <parameter name="present" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tick_policy"
              c:identifier="gvir_config_domain_timer_set_tick_policy">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timer" transfer-ownership="none">
            <type name="DomainTimer" c:type="GVirConfigDomainTimer*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="DomainTimerTickPolicy"
                  c:type="GVirConfigDomainTimerTickPolicy"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="DomainTimerPrivate"
              c:type="GVirConfigDomainTimerPrivate*"/>
      </field>
    </class>
    <record name="DomainTimerClass"
            c:type="GVirConfigDomainTimerClass"
            glib:is-gtype-struct-for="DomainTimer">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="DomainTimerHpet"
           c:symbol-prefix="domain_timer_hpet"
           c:type="GVirConfigDomainTimerHpet"
           parent="DomainTimer"
           glib:type-name="GVirConfigDomainTimerHpet"
           glib:get-type="gvir_config_domain_timer_hpet_get_type"
           glib:type-struct="DomainTimerHpetClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_timer_hpet_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerHpet" c:type="GVirConfigDomainTimerHpet*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_timer_hpet_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerHpet" c:type="GVirConfigDomainTimerHpet*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainTimer" c:type="GVirConfigDomainTimer"/>
      </field>
      <field name="priv">
        <type name="DomainTimerHpetPrivate"
              c:type="GVirConfigDomainTimerHpetPrivate*"/>
      </field>
    </class>
    <record name="DomainTimerHpetClass"
            c:type="GVirConfigDomainTimerHpetClass"
            glib:is-gtype-struct-for="DomainTimerHpet">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainTimerClass" c:type="GVirConfigDomainTimerClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainTimerHpetPrivate"
            c:type="GVirConfigDomainTimerHpetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="39"/>
    </record>
    <class name="DomainTimerPit"
           c:symbol-prefix="domain_timer_pit"
           c:type="GVirConfigDomainTimerPit"
           parent="DomainTimer"
           glib:type-name="GVirConfigDomainTimerPit"
           glib:get-type="gvir_config_domain_timer_pit_get_type"
           glib:type-struct="DomainTimerPitClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_timer_pit_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerPit" c:type="GVirConfigDomainTimerPit*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_timer_pit_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerPit" c:type="GVirConfigDomainTimerPit*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainTimer" c:type="GVirConfigDomainTimer"/>
      </field>
      <field name="priv">
        <type name="DomainTimerPitPrivate"
              c:type="GVirConfigDomainTimerPitPrivate*"/>
      </field>
    </class>
    <record name="DomainTimerPitClass"
            c:type="GVirConfigDomainTimerPitClass"
            glib:is-gtype-struct-for="DomainTimerPit">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainTimerClass" c:type="GVirConfigDomainTimerClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainTimerPitPrivate"
            c:type="GVirConfigDomainTimerPitPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="39"/>
    </record>
    <record name="DomainTimerPrivate"
            c:type="GVirConfigDomainTimerPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="39"/>
    </record>
    <class name="DomainTimerRtc"
           c:symbol-prefix="domain_timer_rtc"
           c:type="GVirConfigDomainTimerRtc"
           parent="DomainTimer"
           glib:type-name="GVirConfigDomainTimerRtc"
           glib:get-type="gvir_config_domain_timer_rtc_get_type"
           glib:type-struct="DomainTimerRtcClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_timer_rtc_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                         line="60"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerRtc" c:type="GVirConfigDomainTimerRtc*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_timer_rtc_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="DomainTimerRtc" c:type="GVirConfigDomainTimerRtc*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="DomainTimer" c:type="GVirConfigDomainTimer"/>
      </field>
      <field name="priv">
        <type name="DomainTimerRtcPrivate"
              c:type="GVirConfigDomainTimerRtcPrivate*"/>
      </field>
    </class>
    <record name="DomainTimerRtcClass"
            c:type="GVirConfigDomainTimerRtcClass"
            glib:is-gtype-struct-for="DomainTimerRtc">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainTimerClass" c:type="GVirConfigDomainTimerClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="DomainTimerRtcPrivate"
            c:type="GVirConfigDomainTimerRtcPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="39"/>
    </record>
    <enumeration name="DomainTimerTickPolicy"
                 glib:type-name="GVirConfigDomainTimerTickPolicy"
                 glib:get-type="gvir_config_domain_timer_tick_policy_get_type"
                 c:type="GVirConfigDomainTimerTickPolicy">
      <member name="delay"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_DELAY"
              glib:nick="delay"
              glib:name="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_DELAY">
      </member>
      <member name="catchup"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_CATCHUP"
              glib:nick="catchup"
              glib:name="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_CATCHUP">
      </member>
      <member name="merge"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_MERGE"
              glib:nick="merge"
              glib:name="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_MERGE">
      </member>
      <member name="discard"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_DISCARD"
              glib:nick="discard"
              glib:name="GVIR_CONFIG_DOMAIN_TIMER_TICK_POLICY_DISCARD">
      </member>
    </enumeration>
    <class name="DomainVideo"
           c:symbol-prefix="domain_video"
           c:type="GVirConfigDomainVideo"
           parent="DomainDevice"
           glib:type-name="GVirConfigDomainVideo"
           glib:get-type="gvir_config_domain_video_get_type"
           glib:type-struct="DomainVideoClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_domain_video_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_domain_video_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_model"
              c:identifier="gvir_config_domain_video_get_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="DomainVideoModel" c:type="GVirConfigDomainVideoModel"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_accel3d"
              c:identifier="gvir_config_domain_video_set_accel3d">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="accel3d" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_heads"
              c:identifier="gvir_config_domain_video_set_heads">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="head_count" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model"
              c:identifier="gvir_config_domain_video_set_model">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="DomainVideoModel" c:type="GVirConfigDomainVideoModel"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ram" c:identifier="gvir_config_domain_video_set_ram">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="kbytes" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vgamem"
              c:identifier="gvir_config_domain_video_set_vgamem">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="kbytes" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vram" c:identifier="gvir_config_domain_video_set_vram">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="video" transfer-ownership="none">
            <type name="DomainVideo" c:type="GVirConfigDomainVideo*"/>
          </instance-parameter>
          <parameter name="kbytes" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="DomainDevice" c:type="GVirConfigDomainDevice"/>
      </field>
      <field name="priv">
        <type name="DomainVideoPrivate"
              c:type="GVirConfigDomainVideoPrivate*"/>
      </field>
    </class>
    <record name="DomainVideoClass"
            c:type="GVirConfigDomainVideoClass"
            glib:is-gtype-struct-for="DomainVideo">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="56"/>
      <field name="parent_class">
        <type name="DomainDeviceClass" c:type="GVirConfigDomainDeviceClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DomainVideoModel"
                 glib:type-name="GVirConfigDomainVideoModel"
                 glib:get-type="gvir_config_domain_video_model_get_type"
                 c:type="GVirConfigDomainVideoModel">
      <member name="vga"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VGA"
              glib:nick="vga"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VGA">
      </member>
      <member name="cirrus"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_CIRRUS"
              glib:nick="cirrus"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_CIRRUS">
      </member>
      <member name="vmvga"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VMVGA"
              glib:nick="vmvga"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VMVGA">
      </member>
      <member name="xen"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_XEN">
      </member>
      <member name="vbox"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VBOX"
              glib:nick="vbox"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VBOX">
      </member>
      <member name="qxl"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_QXL"
              glib:nick="qxl"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_QXL">
      </member>
      <member name="virtio"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VIRTIO"
              glib:nick="virtio"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_VIRTIO">
      </member>
      <member name="bochs"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_BOCHS"
              glib:nick="bochs"
              glib:name="GVIR_CONFIG_DOMAIN_VIDEO_MODEL_BOCHS">
      </member>
    </enumeration>
    <record name="DomainVideoPrivate"
            c:type="GVirConfigDomainVideoPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="39"/>
    </record>
    <enumeration name="DomainVirtType"
                 glib:type-name="GVirConfigDomainVirtType"
                 glib:get-type="gvir_config_domain_virt_type_get_type"
                 c:type="GVirConfigDomainVirtType">
      <member name="qemu"
              value="0"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_QEMU"
              glib:nick="qemu"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_QEMU">
      </member>
      <member name="kqemu"
              value="1"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_KQEMU"
              glib:nick="kqemu"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_KQEMU">
      </member>
      <member name="kvm"
              value="2"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_KVM"
              glib:nick="kvm"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_KVM">
      </member>
      <member name="xen"
              value="3"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_XEN"
              glib:nick="xen"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_XEN">
      </member>
      <member name="lxc"
              value="4"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_LXC"
              glib:nick="lxc"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_LXC">
      </member>
      <member name="uml"
              value="5"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_UML"
              glib:nick="uml"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_UML">
      </member>
      <member name="openvz"
              value="6"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_OPENVZ"
              glib:nick="openvz"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_OPENVZ">
      </member>
      <member name="vserver"
              value="7"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_VSERVER"
              glib:nick="vserver"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_VSERVER">
      </member>
      <member name="ldom"
              value="8"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_LDOM"
              glib:nick="ldom"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_LDOM">
      </member>
      <member name="test"
              value="9"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_TEST"
              glib:nick="test"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_TEST">
      </member>
      <member name="vmware"
              value="10"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_VMWARE"
              glib:nick="vmware"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_VMWARE">
      </member>
      <member name="hyperv"
              value="11"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_HYPERV"
              glib:nick="hyperv"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_HYPERV">
      </member>
      <member name="vbox"
              value="12"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_VBOX"
              glib:nick="vbox"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_VBOX">
      </member>
      <member name="one"
              value="13"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_ONE"
              glib:nick="one"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_ONE">
      </member>
      <member name="phyp"
              value="14"
              c:identifier="GVIR_CONFIG_DOMAIN_VIRT_PHYP"
              glib:nick="phyp"
              glib:name="GVIR_CONFIG_DOMAIN_VIRT_PHYP">
      </member>
    </enumeration>
    <function-macro name="INTERFACE"
                    c:identifier="GVIR_CONFIG_INTERFACE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERFACE_CLASS"
                    c:identifier="GVIR_CONFIG_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERFACE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_INTERFACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_FEATURE"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-feature.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_MODEL"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_MODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_MODEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-model.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_TOPOLOGY"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_TOPOLOGY"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_CPU_TOPOLOGY_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_CPU_TOPOLOGY_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-cpu-topology.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_ARCH"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_ARCH"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_ARCH_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_ARCH_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-arch.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_DOMAIN"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_DOMAIN"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_DOMAIN_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-domain.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_FEATURE"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_GUEST_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_GUEST_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-guest-feature.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_HOST"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_HOST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_HOST_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_HOST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_HOST_SECMODEL"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_HOST_SECMODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CAPABILITIES_HOST_SECMODEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_CAPABILITIES_HOST_SECMODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-capabilities-host-secmodel.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS_PCI"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS_PCI"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS_PCI_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS_PCI_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-pci.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS_USB"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS_USB"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_ADDRESS_USB_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_ADDRESS_USB_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-address-usb.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CAPABILITIES"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CAPABILITIES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CAPABILITIES_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CAPABILITIES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CAPABILITIES_OS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CAPABILITIES_OS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CAPABILITIES_OS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CAPABILITIES_OS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-capabilities-os.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHANNEL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHANNEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHANNEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHANNEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-channel.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_PTY"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_PTY"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_PTY_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_PTY_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-pty.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_SPICE_PORT"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_SPICE_PORT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_SPICE_PORT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_SPICE_PORT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spiceport.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_SPICE_VMC"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_SPICE_VMC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_SPICE_VMC_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_SPICE_VMC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-spicevmc.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_UNIX"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_UNIX"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CHARDEV_SOURCE_UNIX_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CHARDEV_SOURCE_UNIX_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-chardev-source-unix.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CLOCK"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CLOCK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CLOCK_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CLOCK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-clock.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONSOLE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONSOLE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONSOLE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONSOLE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-console.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONTROLLER"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONTROLLER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONTROLLER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONTROLLER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONTROLLER_USB"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONTROLLER_USB"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CONTROLLER_USB_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CONTROLLER_USB_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU_FEATURE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU_FEATURE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU_FEATURE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU_FEATURE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-feature.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU_MODEL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU_MODEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_CPU_MODEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_CPU_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-cpu-model.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DEVICE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DEVICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DEVICE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-device.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DISK"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DISK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DISK_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DISK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DISK_DRIVER"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DISK_DRIVER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_DISK_DRIVER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_DISK_DRIVER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-disk-driver.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_FILESYS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_FILESYS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_FILESYS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_FILESYS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-filesys.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_DESKTOP"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_DESKTOP"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_DESKTOP_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_DESKTOP_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-desktop.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_RDP"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_RDP"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_RDP_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_RDP_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-rdp.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_SDL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_SDL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_SDL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_SDL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-sdl.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_SPICE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_SPICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_SPICE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_SPICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-spice.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_VNC"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_VNC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_GRAPHICS_VNC_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_GRAPHICS_VNC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-graphics-vnc.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_HOSTDEV"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_HOSTDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_HOSTDEV_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_HOSTDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_HOSTDEV_PCI"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_HOSTDEV_PCI"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_HOSTDEV_PCI_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_HOSTDEV_PCI_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-hostdev-pci.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INPUT"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INPUT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INPUT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INPUT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-input.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_BRIDGE"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_BRIDGE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_BRIDGE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_BRIDGE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-bridge.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_FILTERREF"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_FILTERREF"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_FILTERREF_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_FILTERREF_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_FILTERREF_PARAMETER"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_FILTERREF_PARAMETER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_FILTERREF_PARAMETER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_FILTERREF_PARAMETER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-filterref-parameter.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_NETWORK"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_NETWORK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_NETWORK_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_NETWORK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-network.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_USER"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_USER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_INTERFACE_USER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_INTERFACE_USER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-interface-user.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_MEMBALLOON"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_MEMBALLOON"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_MEMBALLOON_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_MEMBALLOON_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-memballoon.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_OS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_OS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_OS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_OS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-os.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_PARALLEL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_PARALLEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_PARALLEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_PARALLEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-parallel.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_POWER_MANAGEMENT"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_POWER_MANAGEMENT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_POWER_MANAGEMENT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_POWER_MANAGEMENT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-power-management.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_REDIRDEV"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_REDIRDEV"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_REDIRDEV_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_REDIRDEV_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-redirdev.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SECLABEL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SECLABEL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SECLABEL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SECLABEL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-seclabel.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SERIAL"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SERIAL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SERIAL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SERIAL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-serial.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_HOST"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_HOST"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_HOST_CERTIFICATES"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_HOST_CERTIFICATES"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_HOST_CERTIFICATES_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_HOST_CERTIFICATES_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host-certificates.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_HOST_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_HOST_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-host.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_PASSTHROUGH"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_PASSTHROUGH"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SMARTCARD_PASSTHROUGH_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SMARTCARD_PASSTHROUGH_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-smartcard-passthrough.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SNAPSHOT"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SNAPSHOT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SNAPSHOT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SNAPSHOT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SNAPSHOT_DISK"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SNAPSHOT_DISK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SNAPSHOT_DISK_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SNAPSHOT_DISK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-snapshot-disk.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SOUND"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SOUND"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_SOUND_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_SOUND_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-sound.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_HPET"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_HPET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_HPET_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_HPET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-hpet.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_PIT"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_PIT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_PIT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_PIT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-pit.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_RTC"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_RTC"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_TIMER_RTC_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_TIMER_RTC_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-timer-rtc.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_VIDEO"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_VIDEO"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DOMAIN_VIDEO_CLASS"
                    c:identifier="GVIR_CONFIG_IS_DOMAIN_VIDEO_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-domain-video.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERFACE"
                    c:identifier="GVIR_CONFIG_IS_INTERFACE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERFACE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_INTERFACE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NETWORK"
                    c:identifier="GVIR_CONFIG_IS_NETWORK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NETWORK_CLASS"
                    c:identifier="GVIR_CONFIG_IS_NETWORK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NETWORK_FILTER"
                    c:identifier="GVIR_CONFIG_IS_NETWORK_FILTER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NETWORK_FILTER_CLASS"
                    c:identifier="GVIR_CONFIG_IS_NETWORK_FILTER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NODE_DEVICE"
                    c:identifier="GVIR_CONFIG_IS_NODE_DEVICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NODE_DEVICE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_NODE_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT"
                    c:identifier="GVIR_CONFIG_IS_OBJECT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_CLASS"
                    c:identifier="GVIR_CONFIG_IS_OBJECT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SECRET"
                    c:identifier="GVIR_CONFIG_IS_SECRET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SECRET_CLASS"
                    c:identifier="GVIR_CONFIG_IS_SECRET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_PERMISSIONS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_PERMISSIONS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_PERMISSIONS_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_PERMISSIONS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL_SOURCE"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL_SOURCE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL_SOURCE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL_SOURCE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL_TARGET"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL_TARGET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_POOL_TARGET_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_POOL_TARGET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL_BACKING_STORE"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL_BACKING_STORE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL_BACKING_STORE_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL_BACKING_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL_TARGET"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL_TARGET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STORAGE_VOL_TARGET_CLASS"
                    c:identifier="GVIR_CONFIG_IS_STORAGE_VOL_TARGET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="GVirConfigInterface"
           parent="Object"
           glib:type-name="GVirConfigInterface"
           glib:get-type="gvir_config_interface_get_type"
           glib:type-struct="InterfaceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_interface_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="Interface" c:type="GVirConfigInterface*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_interface_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="Interface" c:type="GVirConfigInterface*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="InterfacePrivate" c:type="GVirConfigInterfacePrivate*"/>
      </field>
    </class>
    <record name="InterfaceClass"
            c:type="GVirConfigInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="InterfacePrivate"
            c:type="GVirConfigInterfacePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-interface.h"
                       line="39"/>
    </record>
    <function-macro name="NETWORK"
                    c:identifier="GVIR_CONFIG_NETWORK"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_CLASS"
                    c:identifier="GVIR_CONFIG_NETWORK_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_FILTER"
                    c:identifier="GVIR_CONFIG_NETWORK_FILTER"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_FILTER_CLASS"
                    c:identifier="GVIR_CONFIG_NETWORK_FILTER_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_FILTER_GET_CLASS"
                    c:identifier="GVIR_CONFIG_NETWORK_FILTER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NETWORK_GET_CLASS"
                    c:identifier="GVIR_CONFIG_NETWORK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NODE_DEVICE"
                    c:identifier="GVIR_CONFIG_NODE_DEVICE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NODE_DEVICE_CLASS"
                    c:identifier="GVIR_CONFIG_NODE_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NODE_DEVICE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_NODE_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Network"
           c:symbol-prefix="network"
           c:type="GVirConfigNetwork"
           parent="Object"
           glib:type-name="GVirConfigNetwork"
           glib:get-type="gvir_config_network_get_type"
           glib:type-struct="NetworkClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_network_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="Network" c:type="GVirConfigNetwork*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_network_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="Network" c:type="GVirConfigNetwork*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="NetworkPrivate" c:type="GVirConfigNetworkPrivate*"/>
      </field>
    </class>
    <record name="NetworkClass"
            c:type="GVirConfigNetworkClass"
            glib:is-gtype-struct-for="Network">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="NetworkFilter"
           c:symbol-prefix="network_filter"
           c:type="GVirConfigNetworkFilter"
           parent="Object"
           glib:type-name="GVirConfigNetworkFilter"
           glib:get-type="gvir_config_network_filter_get_type"
           glib:type-struct="NetworkFilterClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_network_filter_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="NetworkFilter" c:type="GVirConfigNetworkFilter*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_network_filter_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="NetworkFilter" c:type="GVirConfigNetworkFilter*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="NetworkFilterPrivate"
              c:type="GVirConfigNetworkFilterPrivate*"/>
      </field>
    </class>
    <record name="NetworkFilterClass"
            c:type="GVirConfigNetworkFilterClass"
            glib:is-gtype-struct-for="NetworkFilter">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="NetworkFilterPrivate"
            c:type="GVirConfigNetworkFilterPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network-filter.h"
                       line="39"/>
    </record>
    <record name="NetworkPrivate"
            c:type="GVirConfigNetworkPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-network.h"
                       line="39"/>
    </record>
    <class name="NodeDevice"
           c:symbol-prefix="node_device"
           c:type="GVirConfigNodeDevice"
           parent="Object"
           glib:type-name="GVirConfigNodeDevice"
           glib:get-type="gvir_config_node_device_get_type"
           glib:type-struct="NodeDeviceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_node_device_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="NodeDevice" c:type="GVirConfigNodeDevice*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_node_device_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="NodeDevice" c:type="GVirConfigNodeDevice*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="NodeDevicePrivate" c:type="GVirConfigNodeDevicePrivate*"/>
      </field>
    </class>
    <record name="NodeDeviceClass"
            c:type="GVirConfigNodeDeviceClass"
            glib:is-gtype-struct-for="NodeDevice">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="NodeDevicePrivate"
            c:type="GVirConfigNodeDevicePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-node-device.h"
                       line="39"/>
    </record>
    <function-macro name="OBJECT"
                    c:identifier="GVIR_CONFIG_OBJECT"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_CLASS"
                    c:identifier="GVIR_CONFIG_OBJECT_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_GET_CLASS"
                    c:identifier="GVIR_CONFIG_OBJECT_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Object"
           c:symbol-prefix="object"
           c:type="GVirConfigObject"
           parent="GObject.Object"
           glib:type-name="GVirConfigObject"
           glib:get-type="gvir_config_object_get_type"
           glib:type-struct="ObjectClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_object_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GVirConfigObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="root_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_object_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GVirConfigObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="root_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="error_quark"
                c:identifier="gvir_config_object_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <method name="get_schema"
              c:identifier="gvir_config_object_get_schema"
              glib:get-property="schema">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="Object" c:type="GVirConfigObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_xml" c:identifier="gvir_config_object_to_xml">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="Object" c:type="GVirConfigObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="validate"
              c:identifier="gvir_config_object_validate"
              throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="Object" c:type="GVirConfigObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="doc"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="node"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="schema"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_schema"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ObjectPrivate" c:type="GVirConfigObjectPrivate*"/>
      </field>
    </class>
    <record name="ObjectClass"
            c:type="GVirConfigObjectClass"
            glib:is-gtype-struct-for="Object">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="56"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ObjectPrivate"
            c:type="GVirConfigObjectPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-object.h"
                       line="39"/>
    </record>
    <function-macro name="SECRET"
                    c:identifier="GVIR_CONFIG_SECRET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SECRET_CLASS"
                    c:identifier="GVIR_CONFIG_SECRET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SECRET_GET_CLASS"
                    c:identifier="GVIR_CONFIG_SECRET_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_PERMISSIONS"
                    c:identifier="GVIR_CONFIG_STORAGE_PERMISSIONS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_PERMISSIONS_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_PERMISSIONS_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_PERMISSIONS_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_PERMISSIONS_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_SOURCE"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_SOURCE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_SOURCE_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_SOURCE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_SOURCE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_SOURCE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_TARGET"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_TARGET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_TARGET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_TARGET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_POOL_TARGET_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_POOL_TARGET_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_BACKING_STORE"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_BACKING_STORE"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_BACKING_STORE_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_BACKING_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_BACKING_STORE_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_BACKING_STORE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_TARGET"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_TARGET"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_TARGET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_TARGET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STORAGE_VOL_TARGET_GET_CLASS"
                    c:identifier="GVIR_CONFIG_STORAGE_VOL_TARGET_GET_CLASS"
                    introspectable="0">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Secret"
           c:symbol-prefix="secret"
           c:type="GVirConfigSecret"
           parent="Object"
           glib:type-name="GVirConfigSecret"
           glib:get-type="gvir_config_secret_get_type"
           glib:type-struct="SecretClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="56"/>
      <constructor name="new" c:identifier="gvir_config_secret_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="Secret" c:type="GVirConfigSecret*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_secret_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="Secret" c:type="GVirConfigSecret*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="SecretPrivate" c:type="GVirConfigSecretPrivate*"/>
      </field>
    </class>
    <record name="SecretClass"
            c:type="GVirConfigSecretClass"
            glib:is-gtype-struct-for="Secret">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="SecretPrivate"
            c:type="GVirConfigSecretPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-secret.h"
                       line="39"/>
    </record>
    <class name="StoragePermissions"
           c:symbol-prefix="storage_permissions"
           c:type="GVirConfigStoragePermissions"
           parent="Object"
           glib:type-name="GVirConfigStoragePermissions"
           glib:get-type="gvir_config_storage_permissions_get_type"
           glib:type-struct="StoragePermissionsClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_storage_permissions_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="StoragePermissions"
                c:type="GVirConfigStoragePermissions*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_permissions_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="StoragePermissions"
                c:type="GVirConfigStoragePermissions*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_group"
              c:identifier="gvir_config_storage_permissions_get_group">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
             line="70">Gets the numeric group ID associated with @perms.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
               line="76">numeric group ID</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
                 line="72">a #GVirConfigStoragePermissions</doc>
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gvir_config_storage_permissions_get_label">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
             line="95">Gets the MAC label string associated with @perms.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
               line="101">MAC label string.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
                 line="97">a #GVirConfigStoragePermissions</doc>
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode"
              c:identifier="gvir_config_storage_permissions_get_mode">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
             line="123">Gets the octal permission set associated with @perms.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
               line="129">permission set</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
                 line="125">a #GVirConfigStoragePermissions</doc>
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_owner"
              c:identifier="gvir_config_storage_permissions_get_owner">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
             line="148">Gets the numeric user ID associated with @perms.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
               line="154">numeric user ID.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.c"
                 line="150">a #GVirConfigStoragePermissions</doc>
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_group"
              c:identifier="gvir_config_storage_permissions_set_group">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gvir_config_storage_permissions_set_label">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
          <parameter name="label"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode"
              c:identifier="gvir_config_storage_permissions_set_mode">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_owner"
              c:identifier="gvir_config_storage_permissions_set_owner">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="perms" transfer-ownership="none">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StoragePermissionsPrivate"
              c:type="GVirConfigStoragePermissionsPrivate*"/>
      </field>
    </class>
    <record name="StoragePermissionsClass"
            c:type="GVirConfigStoragePermissionsClass"
            glib:is-gtype-struct-for="StoragePermissions">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StoragePermissionsPrivate"
            c:type="GVirConfigStoragePermissionsPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-permissions.h"
                       line="39"/>
    </record>
    <class name="StoragePool"
           c:symbol-prefix="storage_pool"
           c:type="GVirConfigStoragePool"
           parent="Object"
           glib:type-name="GVirConfigStoragePool"
           glib:get-type="gvir_config_storage_pool_get_type"
           glib:type-struct="StoragePoolClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="59"/>
      <constructor name="new" c:identifier="gvir_config_storage_pool_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_pool_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_allocation"
              c:identifier="gvir_config_storage_pool_get_allocation">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="188">Gets the total storage allocation for the pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="194">total storage allocation in bytes.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="190">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_available"
              c:identifier="gvir_config_storage_pool_get_available">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="213">Gets the free space available for allocating new volumes in the pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="219">free space available in bytes.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="215">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_capacity"
              c:identifier="gvir_config_storage_pool_get_capacity">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="163">Gets the total storage capacity for the pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="169">total storage capacity in bytes.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="165">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="gvir_config_storage_pool_get_name">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="105">Gets the name of the pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="111">name of @pool.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="107">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pool_type"
              c:identifier="gvir_config_storage_pool_get_pool_type">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="74">Gets the type of the pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="80">#Gname of @pool.</doc>
          <type name="StoragePoolType" c:type="GVirConfigStoragePoolType"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="76">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gvir_config_storage_pool_get_source">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="238">Gets the source for @pool</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="244">a new #GVirConfigStoragePoolSource instance.</doc>
          <type name="StoragePoolSource"
                c:type="GVirConfigStoragePoolSource*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="240">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target"
              c:identifier="gvir_config_storage_pool_get_target">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="276">Gets the target for @pool</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="282">a new #GVirConfigStoragePoolTarget instance.</doc>
          <type name="StoragePoolTarget"
                c:type="GVirConfigStoragePoolTarget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="278">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uuid" c:identifier="gvir_config_storage_pool_get_uuid">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
             line="134">Gets the unique identifier for @pool.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
               line="140">unique identifier for @pool.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool.c"
                 line="136">a #GVirConfigStoragePool</doc>
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allocation"
              c:identifier="gvir_config_storage_pool_set_allocation">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="allocation" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_available"
              c:identifier="gvir_config_storage_pool_set_available">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="available" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_capacity"
              c:identifier="gvir_config_storage_pool_set_capacity">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="capacity" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="gvir_config_storage_pool_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pool_type"
              c:identifier="gvir_config_storage_pool_set_pool_type">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="StoragePoolType" c:type="GVirConfigStoragePoolType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="gvir_config_storage_pool_set_source">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target"
              c:identifier="gvir_config_storage_pool_set_target">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="target"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="StoragePoolTarget"
                  c:type="GVirConfigStoragePoolTarget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uuid" c:identifier="gvir_config_storage_pool_set_uuid">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <type name="StoragePool" c:type="GVirConfigStoragePool*"/>
          </instance-parameter>
          <parameter name="uuid"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StoragePoolPrivate"
              c:type="GVirConfigStoragePoolPrivate*"/>
      </field>
    </class>
    <record name="StoragePoolClass"
            c:type="GVirConfigStoragePoolClass"
            glib:is-gtype-struct-for="StoragePool">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="59"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StoragePoolPrivate"
            c:type="GVirConfigStoragePoolPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool.h"
                       line="42"/>
    </record>
    <class name="StoragePoolSource"
           c:symbol-prefix="storage_pool_source"
           c:type="GVirConfigStoragePoolSource"
           parent="Object"
           glib:type-name="GVirConfigStoragePoolSource"
           glib:get-type="gvir_config_storage_pool_source_get_type"
           glib:type-struct="StoragePoolSourceClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_storage_pool_source_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="StoragePoolSource"
                c:type="GVirConfigStoragePoolSource*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_pool_source_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="StoragePoolSource"
                c:type="GVirConfigStoragePoolSource*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_adapter"
              c:identifier="gvir_config_storage_pool_source_get_adapter">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="71">For pools backed by a SCSI adapter, returns the SCSI adapter name</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="77">the SCSI adapter name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="73">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_path"
              c:identifier="gvir_config_storage_pool_source_get_device_path">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="100">For pools backed by a physical device, returns the path to the block
device node</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="107">fully qualified path to the block device node.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="102">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_directory"
              c:identifier="gvir_config_storage_pool_source_get_directory">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="130">For pools backed by a directory, returns the path to the backing directory</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="136">path to the directory backing directory.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="132">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format"
              c:identifier="gvir_config_storage_pool_source_get_format">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="159">Provides information about the format of the pool. This format is
backend-specific but is typically used to indicate filesystem type, or
network filesystem type, or partition table type, or LVM metadata type.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="167">the storage pool format.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="161">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host"
              c:identifier="gvir_config_storage_pool_source_get_host">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="190">For pools backed by storage from remote server, returns the hostname
of the remote server.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="197">hostname or IP address of the remote server.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="192">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="gvir_config_storage_pool_source_get_name">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="220">For pools backed by storage from a named element (for example, LV
groups), returns the name of the element</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="227">name of the element used by @source</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="222">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product"
              c:identifier="gvir_config_storage_pool_source_get_product">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="249">Gets the product name of the storage device.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="255">product name of the storage device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="251">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor"
              c:identifier="gvir_config_storage_pool_source_get_vendor">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
             line="278">Gets the vendor name of the storage device.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
               line="284">vendor name of the storage device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.c"
                 line="280">a #GVirConfigStoragePoolSource</doc>
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_adapter"
              c:identifier="gvir_config_storage_pool_source_set_adapter">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="adapter" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_path"
              c:identifier="gvir_config_storage_pool_source_set_device_path">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="device_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_directory"
              c:identifier="gvir_config_storage_pool_source_set_directory">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="directory" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format"
              c:identifier="gvir_config_storage_pool_source_set_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_host"
              c:identifier="gvir_config_storage_pool_source_set_host">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="host" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="gvir_config_storage_pool_source_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_product"
              c:identifier="gvir_config_storage_pool_source_set_product">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="product" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor"
              c:identifier="gvir_config_storage_pool_source_set_vendor">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <type name="StoragePoolSource"
                  c:type="GVirConfigStoragePoolSource*"/>
          </instance-parameter>
          <parameter name="vendor" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StoragePoolSourcePrivate"
              c:type="GVirConfigStoragePoolSourcePrivate*"/>
      </field>
    </class>
    <record name="StoragePoolSourceClass"
            c:type="GVirConfigStoragePoolSourceClass"
            glib:is-gtype-struct-for="StoragePoolSource">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StoragePoolSourcePrivate"
            c:type="GVirConfigStoragePoolSourcePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-source.h"
                       line="39"/>
    </record>
    <class name="StoragePoolTarget"
           c:symbol-prefix="storage_pool_target"
           c:type="GVirConfigStoragePoolTarget"
           parent="Object"
           glib:type-name="GVirConfigStoragePoolTarget"
           glib:get-type="gvir_config_storage_pool_target_get_type"
           glib:type-struct="StoragePoolTargetClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_storage_pool_target_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="StoragePoolTarget"
                c:type="GVirConfigStoragePoolTarget*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_pool_target_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="StoragePoolTarget"
                c:type="GVirConfigStoragePoolTarget*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_path"
              c:identifier="gvir_config_storage_pool_target_get_path">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
             line="71">Provides the location at which the storage pool associated with @target
will be mapped into the local filesystem namespace.</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
               line="78">local filesystem path the storage pool is mapped at.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
                 line="73">a #GVirConfigStoragePoolTarget</doc>
            <type name="StoragePoolTarget"
                  c:type="GVirConfigStoragePoolTarget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_permissions"
              c:identifier="gvir_config_storage_pool_target_get_permissions">
        <doc xml:space="preserve"
             filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
             line="101">Gets the permissions associated with @target</doc>
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
               line="107">a new #GVirConfigStoragePoolPermissions instance.</doc>
          <type name="StoragePermissions"
                c:type="GVirConfigStoragePermissions*"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.c"
                 line="103">a #GVirConfigStoragePoolTarget</doc>
            <type name="StoragePoolTarget"
                  c:type="GVirConfigStoragePoolTarget*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_path"
              c:identifier="gvir_config_storage_pool_target_set_path">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StoragePoolTarget"
                  c:type="GVirConfigStoragePoolTarget*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_permissions"
              c:identifier="gvir_config_storage_pool_target_set_permissions">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StoragePoolTarget"
                  c:type="GVirConfigStoragePoolTarget*"/>
          </instance-parameter>
          <parameter name="perms" transfer-ownership="none">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StoragePoolTargetPrivate"
              c:type="GVirConfigStoragePoolTargetPrivate*"/>
      </field>
    </class>
    <record name="StoragePoolTargetClass"
            c:type="GVirConfigStoragePoolTargetClass"
            glib:is-gtype-struct-for="StoragePoolTarget">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StoragePoolTargetPrivate"
            c:type="GVirConfigStoragePoolTargetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-pool-target.h"
                       line="39"/>
    </record>
    <enumeration name="StoragePoolType"
                 glib:type-name="GVirConfigStoragePoolType"
                 glib:get-type="gvir_config_storage_pool_type_get_type"
                 c:type="GVirConfigStoragePoolType">
      <member name="dir"
              value="0"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_DIR"
              glib:nick="dir"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_DIR">
      </member>
      <member name="fs"
              value="1"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_FS"
              glib:nick="fs"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_FS">
      </member>
      <member name="netfs"
              value="2"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_NETFS"
              glib:nick="netfs"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_NETFS">
      </member>
      <member name="logical"
              value="3"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_LOGICAL"
              glib:nick="logical"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_LOGICAL">
      </member>
      <member name="disk"
              value="4"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_DISK"
              glib:nick="disk"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_DISK">
      </member>
      <member name="iscsi"
              value="5"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_ISCSI"
              glib:nick="iscsi"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_ISCSI">
      </member>
      <member name="scsi"
              value="6"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_SCSI"
              glib:nick="scsi"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_SCSI">
      </member>
      <member name="mpath"
              value="7"
              c:identifier="GVIR_CONFIG_STORAGE_POOL_TYPE_MPATH"
              glib:nick="mpath"
              glib:name="GVIR_CONFIG_STORAGE_POOL_TYPE_MPATH">
      </member>
    </enumeration>
    <class name="StorageVol"
           c:symbol-prefix="storage_vol"
           c:type="GVirConfigStorageVol"
           parent="Object"
           glib:type-name="GVirConfigStorageVol"
           glib:get-type="gvir_config_storage_vol_get_type"
           glib:type-struct="StorageVolClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="59"/>
      <constructor name="new" c:identifier="gvir_config_storage_vol_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_vol_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="65"/>
        <return-value transfer-ownership="full">
          <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_allocation"
              c:identifier="gvir_config_storage_vol_set_allocation">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vol" transfer-ownership="none">
            <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
          </instance-parameter>
          <parameter name="allocation" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_backing_store"
              c:identifier="gvir_config_storage_vol_set_backing_store">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vol" transfer-ownership="none">
            <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
          </instance-parameter>
          <parameter name="backing_store"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="StorageVolBackingStore"
                  c:type="GVirConfigStorageVolBackingStore*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_capacity"
              c:identifier="gvir_config_storage_vol_set_capacity">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vol" transfer-ownership="none">
            <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
          </instance-parameter>
          <parameter name="capacity" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="gvir_config_storage_vol_set_name">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vol" transfer-ownership="none">
            <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target"
              c:identifier="gvir_config_storage_vol_set_target">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="vol" transfer-ownership="none">
            <type name="StorageVol" c:type="GVirConfigStorageVol*"/>
          </instance-parameter>
          <parameter name="target"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="StorageVolTarget"
                  c:type="GVirConfigStorageVolTarget*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StorageVolPrivate" c:type="GVirConfigStorageVolPrivate*"/>
      </field>
    </class>
    <class name="StorageVolBackingStore"
           c:symbol-prefix="storage_vol_backing_store"
           c:type="GVirConfigStorageVolBackingStore"
           parent="Object"
           glib:type-name="GVirConfigStorageVolBackingStore"
           glib:get-type="gvir_config_storage_vol_backing_store_get_type"
           glib:type-struct="StorageVolBackingStoreClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_storage_vol_backing_store_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="StorageVolBackingStore"
                c:type="GVirConfigStorageVolBackingStore*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_vol_backing_store_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="StorageVolBackingStore"
                c:type="GVirConfigStorageVolBackingStore*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_format"
              c:identifier="gvir_config_storage_vol_backing_store_set_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backing_store" transfer-ownership="none">
            <type name="StorageVolBackingStore"
                  c:type="GVirConfigStorageVolBackingStore*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_path"
              c:identifier="gvir_config_storage_vol_backing_store_set_path">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backing_store" transfer-ownership="none">
            <type name="StorageVolBackingStore"
                  c:type="GVirConfigStorageVolBackingStore*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StorageVolBackingStorePrivate"
              c:type="GVirConfigStorageVolBackingStorePrivate*"/>
      </field>
    </class>
    <record name="StorageVolBackingStoreClass"
            c:type="GVirConfigStorageVolBackingStoreClass"
            glib:is-gtype-struct-for="StorageVolBackingStore">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StorageVolBackingStorePrivate"
            c:type="GVirConfigStorageVolBackingStorePrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-backing-store.h"
                       line="39"/>
    </record>
    <record name="StorageVolClass"
            c:type="GVirConfigStorageVolClass"
            glib:is-gtype-struct-for="StorageVol">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="59"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StorageVolPrivate"
            c:type="GVirConfigStorageVolPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol.h"
                       line="42"/>
    </record>
    <class name="StorageVolTarget"
           c:symbol-prefix="storage_vol_target"
           c:type="GVirConfigStorageVolTarget"
           parent="Object"
           glib:type-name="GVirConfigStorageVolTarget"
           glib:get-type="gvir_config_storage_vol_target_get_type"
           glib:type-struct="StorageVolTargetClass">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="56"/>
      <constructor name="new"
                   c:identifier="gvir_config_storage_vol_target_new">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <type name="StorageVolTarget" c:type="GVirConfigStorageVolTarget*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_xml"
                   c:identifier="gvir_config_storage_vol_target_new_from_xml"
                   throws="1">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="62"/>
        <return-value transfer-ownership="full">
          <type name="StorageVolTarget" c:type="GVirConfigStorageVolTarget*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_compat"
              c:identifier="gvir_config_storage_vol_target_set_compat">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StorageVolTarget"
                  c:type="GVirConfigStorageVolTarget*"/>
          </instance-parameter>
          <parameter name="compat"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_features"
              c:identifier="gvir_config_storage_vol_target_set_features">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StorageVolTarget"
                  c:type="GVirConfigStorageVolTarget*"/>
          </instance-parameter>
          <parameter name="features" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_format"
              c:identifier="gvir_config_storage_vol_target_set_format">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StorageVolTarget"
                  c:type="GVirConfigStorageVolTarget*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_permissions"
              c:identifier="gvir_config_storage_vol_target_set_permissions">
        <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="target" transfer-ownership="none">
            <type name="StorageVolTarget"
                  c:type="GVirConfigStorageVolTarget*"/>
          </instance-parameter>
          <parameter name="perms"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="StoragePermissions"
                  c:type="GVirConfigStoragePermissions*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="GVirConfigObject"/>
      </field>
      <field name="priv">
        <type name="StorageVolTargetPrivate"
              c:type="GVirConfigStorageVolTargetPrivate*"/>
      </field>
    </class>
    <record name="StorageVolTargetClass"
            c:type="GVirConfigStorageVolTargetClass"
            glib:is-gtype-struct-for="StorageVolTarget">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="56"/>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GVirConfigObjectClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" fixed-size="20">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <bitfield name="StorageVolTargetFeatures"
              glib:type-name="GVirConfigStorageVolTargetFeatures"
              glib:get-type="gvir_config_storage_vol_target_features_get_type"
              c:type="GVirConfigStorageVolTargetFeatures">
      <member name="refcount"
              value="1"
              c:identifier="GVIR_CONFIG_STORAGE_VOL_TARGET_FEATURE_LAZY_REFCOUNT"
              glib:nick="refcount"
              glib:name="GVIR_CONFIG_STORAGE_VOL_TARGET_FEATURE_LAZY_REFCOUNT">
      </member>
    </bitfield>
    <record name="StorageVolTargetPrivate"
            c:type="GVirConfigStorageVolTargetPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-storage-vol-target.h"
                       line="39"/>
    </record>
    <function name="init" c:identifier="gvir_config_init">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-main.h"
                       line="32"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-main.c"
               line="35">pointer to application's argc</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-main.c"
               line="36">pointer to application's argv</doc>
          <array length="0" zero-terminated="0" c:type="char***">
            <type name="utf8" c:type="char**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="init_check"
              c:identifier="gvir_config_init_check"
              throws="1">
      <source-position filename="libvirt-gconfig/libvirt-gconfig-main.h"
                       line="34"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-main.c"
               line="60">pointer to application's argc</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libvirt-gconfig/libvirt-gconfig-main.c"
               line="61">pointer to application's argv</doc>
          <array length="0" zero-terminated="0" c:type="char***">
            <type name="utf8" c:type="char**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <docsection name="libvirt-gconfig-domain-controller-usb">
      <doc xml:space="preserve"
           filename="libvirt-gconfig/libvirt-gconfig-domain-controller-usb.c"
           line="28">A #GVirConfigDomainControllerUsb represents an USB controller device.
A #GVirConfigDomain with #GVirConfigDomainControllerUsb devices will
be able to use USB devices.

Several USB controllers can be added to the same domain, for example
to have an USB1 and an USB2 controller.

When using SPICE (see #GVirConfigGraphicsSpice), USB devices plugged
on the client can be forwarded to the guest through the use of
#GVirConfigDomainRedirDev.

&lt;example&gt;
&lt;title&gt;Adding USB controllers to a standard x86 domain&lt;/title&gt;
&lt;para&gt;
This example shows the recommended USB setup to get a virtual machine
looking like your usual x86 desktop or laptop.
&lt;/para&gt;
&lt;programlisting&gt;
static GVirConfigDomainControllerUsb *
create_usb_controller(GVirConfigDomainControllerUsbModel model, guint index,
                      GVirConfigDomainControllerUsb *master, guint start_port)
{
    GVirConfigDomainControllerUsb *controller;

    controller = gvir_config_domain_controller_usb_new();
    gvir_config_domain_controller_usb_set_model(controller, model);
    gvir_config_domain_controller_set_index(GVIR_CONFIG_DOMAIN_CONTROLLER(controller), index);
    if (master)
        gvir_config_domain_controller_usb_set_master(controller, master, start_port);

    return controller;
}

void setup_default_usb_controllers(GVirConfigDomain *domain)
{
     GVirConfigDomainControllerUsb *ehci;
     GVirConfigDomainControllerUsb *uhci1;
     GVirConfigDomainControllerUsb *uhci2;
     GVirConfigDomainControllerUsb *uhci3;

     ehci = create_usb_controller(GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_EHCI1,
                                  0, NULL, 0);
     gvir_config_domain_add_device(domain, GVIR_CONFIG_DOMAIN_DEVICE(ehci));
     uhci1 = create_usb_controller(GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI1,
                                   0, ehci, 0);
     gvir_config_domain_add_device(domain, GVIR_CONFIG_DOMAIN_DEVICE(uhci1));
     g_object_unref(G_OBJECT(uhci1));
     uhci2 = create_usb_controller(GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI2,
                                   0, ehci, 2);
     gvir_config_domain_add_device(domain, GVIR_CONFIG_DOMAIN_DEVICE(uhci2));
     g_object_unref(G_OBJECT(uhci2));
     uhci3 = create_usb_controller(GVIR_CONFIG_DOMAIN_CONTROLLER_USB_MODEL_ICH9_UHCI3,
                                   0, ehci, 4);
     gvir_config_domain_add_device(domain, GVIR_CONFIG_DOMAIN_DEVICE(uhci3));
     g_object_unref(G_OBJECT(uhci3));
     g_object_unref(G_OBJECT(ehci));
}
&lt;/programlisting&gt;
&lt;/example&gt;

This class models libvirt XML nodes located at
&lt;ulink url="http://libvirt.org/formatdomain.html#elementsControllers"&gt;
/domain/devices/controller[@type="usb"]&lt;/ulink&gt;</doc>
    </docsection>
  </namespace>
</repository>
