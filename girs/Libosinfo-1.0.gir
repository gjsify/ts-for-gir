<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <package name="libosinfo-1.0"/>
  <c:include name="osinfo/osinfo.h"/>
  <namespace name="Libosinfo"
             version="1.0"
             shared-library="libosinfo-1.0.so.0"
             c:identifier-prefixes="Osinfo"
             c:symbol-prefixes="osinfo">
    <constant name="ARCHITECTURE_ALL"
              value="all"
              c:type="OSINFO_ARCHITECTURE_ALL">
      <source-position filename="../osinfo/osinfo_resources.h" line="29"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="AVATAR_FORMAT_PROP_ALPHA"
              value="alpha"
              c:type="OSINFO_AVATAR_FORMAT_PROP_ALPHA">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="AVATAR_FORMAT_PROP_HEIGHT"
              value="height"
              c:type="OSINFO_AVATAR_FORMAT_PROP_HEIGHT">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="AVATAR_FORMAT_PROP_MIME_TYPE"
              value="mime-type"
              c:type="OSINFO_AVATAR_FORMAT_PROP_MIME_TYPE">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="AVATAR_FORMAT_PROP_WIDTH"
              value="width"
              c:type="OSINFO_AVATAR_FORMAT_PROP_WIDTH">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="AvatarFormat"
           c:symbol-prefix="avatar_format"
           c:type="OsinfoAvatarFormat"
           parent="Entity"
           glib:type-name="OsinfoAvatarFormat"
           glib:get-type="osinfo_avatar_format_get_type"
           glib:type-struct="AvatarFormatClass">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="28"/>
      <constructor name="new"
                   c:identifier="osinfo_avatar_format_new"
                   version="0.2.8">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_avatar_format.c"
             line="148">Construct a new user avatar file for an #OsinfoInstallScript.</doc>
        <source-position filename="../osinfo/osinfo_avatar_format.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_avatar_format.c"
               line="153">the necessary information to create an avatar for
                          an user</doc>
          <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
        </return-value>
      </constructor>
      <method name="get_alpha"
              c:identifier="osinfo_avatar_format_get_alpha"
              glib:get-property="alpha"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_avatar_format.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_avatar_format.c"
               line="213">Whether alpha channel is supported in the avatar.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="avatar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_avatar_format.c"
                 line="211">the avatar info</doc>
            <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="osinfo_avatar_format_get_height"
              glib:get-property="height"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_avatar_format.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_avatar_format.c"
               line="198">the required height (in pixels) of the avatar, or -1.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="avatar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_avatar_format.c"
                 line="196">the avatar info</doc>
            <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_types"
              c:identifier="osinfo_avatar_format_get_mime_types"
              glib:get-property="mime-types"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_avatar_format.h"
                         line="41"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_avatar_format.c"
               line="168">the required mime-types of the avatar.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="avatar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_avatar_format.c"
                 line="166">the avatar info</doc>
            <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="osinfo_avatar_format_get_width"
              glib:get-property="width"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_avatar_format.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_avatar_format.c"
               line="183">the required width (in pixels) of the avatar, or -1.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="avatar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_avatar_format.c"
                 line="181">the avatar info</doc>
            <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="alpha" transfer-ownership="none" getter="get_alpha">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_avatar_format.c"
             line="128">Whether alpha channel is supported in the avatar.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="height" transfer-ownership="none" getter="get_height">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_avatar_format.c"
             line="114">The required height (in pixels) of the avatar.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="mime-types"
                transfer-ownership="container"
                getter="get_mime_types">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_avatar_format.c"
             line="89">The allowed mime-types for the avatar.</doc>
        <type name="GLib.List" c:type="gpointer">
          <type name="utf8"/>
        </type>
      </property>
      <property name="width" transfer-ownership="none" getter="get_width">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_avatar_format.c"
             line="100">The required width (in pixels) of the avatar.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="AvatarFormatPrivate" c:type="OsinfoAvatarFormatPrivate*"/>
      </field>
    </class>
    <record name="AvatarFormatClass"
            c:type="OsinfoAvatarFormatClass"
            glib:is-gtype-struct-for="AvatarFormat">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="28"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <record name="AvatarFormatPrivate"
            c:type="OsinfoAvatarFormatPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_avatar_format.h" line="28"/>
    </record>
    <function-macro name="DECLARE_TYPE"
                    c:identifier="OSINFO_DECLARE_TYPE"
                    introspectable="0">
      <source-position filename="../osinfo/osinfo_macros.h" line="25"/>
      <parameters>
        <parameter name="ModuleObjName">
        </parameter>
        <parameter name="module_obj_name">
        </parameter>
        <parameter name="MODULE">
        </parameter>
        <parameter name="OBJ_NAME">
        </parameter>
        <parameter name="ParentName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DECLARE_TYPE_WITH_PRIVATE"
                    c:identifier="OSINFO_DECLARE_TYPE_WITH_PRIVATE"
                    introspectable="0">
      <source-position filename="../osinfo/osinfo_macros.h" line="28"/>
      <parameters>
        <parameter name="ModuleObjName">
        </parameter>
        <parameter name="module_obj_name">
        </parameter>
        <parameter name="MODULE">
        </parameter>
        <parameter name="OBJ_NAME">
        </parameter>
        <parameter name="ParentName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DECLARE_TYPE_WITH_PRIVATE_AND_CLASS"
                    c:identifier="OSINFO_DECLARE_TYPE_WITH_PRIVATE_AND_CLASS"
                    introspectable="0">
      <source-position filename="../osinfo/osinfo_macros.h" line="50"/>
      <parameters>
        <parameter name="ModuleObjName">
        </parameter>
        <parameter name="module_obj_name">
        </parameter>
        <parameter name="MODULE">
        </parameter>
        <parameter name="OBJ_NAME">
        </parameter>
        <parameter name="ParentName">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DEVICELINK_PROP_DRIVER"
              value="driver"
              c:type="OSINFO_DEVICELINK_PROP_DRIVER">
      <source-position filename="../osinfo/osinfo_devicelink.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICELINK_PROP_SUPPORTED"
              value="supported"
              c:type="OSINFO_DEVICELINK_PROP_SUPPORTED">
      <source-position filename="../osinfo/osinfo_devicelink.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_DEFAULT_PRIORITY"
              value="50"
              c:type="OSINFO_DEVICE_DRIVER_DEFAULT_PRIORITY">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_ARCHITECTURE"
              value="arch"
              c:type="OSINFO_DEVICE_DRIVER_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_DEVICE"
              value="device"
              c:type="OSINFO_DEVICE_DRIVER_PROP_DEVICE">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_FILE"
              value="file"
              c:type="OSINFO_DEVICE_DRIVER_PROP_FILE">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_LOCATION"
              value="location"
              c:type="OSINFO_DEVICE_DRIVER_PROP_LOCATION">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_PRE_INSTALLABLE"
              value="pre-installable"
              c:type="OSINFO_DEVICE_DRIVER_PROP_PRE_INSTALLABLE">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_PRIORITY"
              value="priority"
              c:type="OSINFO_DEVICE_DRIVER_PROP_PRIORITY">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_DRIVER_PROP_SIGNED"
              value="signed"
              c:type="OSINFO_DEVICE_DRIVER_PROP_SIGNED">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_BUS_TYPE"
              value="bus-type"
              c:type="OSINFO_DEVICE_PROP_BUS_TYPE">
      <source-position filename="../osinfo/osinfo_device.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_CLASS"
              value="class"
              c:type="OSINFO_DEVICE_PROP_CLASS">
      <source-position filename="../osinfo/osinfo_device.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_NAME"
              value="name"
              c:type="OSINFO_DEVICE_PROP_NAME">
      <source-position filename="../osinfo/osinfo_device.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_PRODUCT"
              value="product"
              c:type="OSINFO_DEVICE_PROP_PRODUCT">
      <source-position filename="../osinfo/osinfo_device.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_PRODUCT_ID"
              value="product-id"
              c:type="OSINFO_DEVICE_PROP_PRODUCT_ID">
      <source-position filename="../osinfo/osinfo_device.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_SUBSYSTEM"
              value="subsystem"
              c:type="OSINFO_DEVICE_PROP_SUBSYSTEM">
      <source-position filename="../osinfo/osinfo_device.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_VENDOR"
              value="vendor"
              c:type="OSINFO_DEVICE_PROP_VENDOR">
      <source-position filename="../osinfo/osinfo_device.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROP_VENDOR_ID"
              value="vendor-id"
              c:type="OSINFO_DEVICE_PROP_VENDOR_ID">
      <source-position filename="../osinfo/osinfo_device.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Datamap"
           c:symbol-prefix="datamap"
           c:type="OsinfoDatamap"
           parent="Entity"
           glib:type-name="OsinfoDatamap"
           glib:get-type="osinfo_datamap_get_type"
           glib:type-struct="DatamapClass">
      <source-position filename="../osinfo/osinfo_datamap.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_datamap_new"
                   version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_datamap.c"
             line="79">Construct a new datamapa that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_datamap.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_datamap.c"
               line="85">an empty datamap</doc>
          <type name="Datamap" c:type="OsinfoDatamap*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="81">the unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="insert"
              c:identifier="osinfo_datamap_insert"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_datamap.c"
             line="97">Adds the input value and the output value associated to it to
the @map.</doc>
        <source-position filename="../osinfo/osinfo_datamap.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="99">the OS datamap</doc>
            <type name="Datamap" c:type="OsinfoDatamap*"/>
          </instance-parameter>
          <parameter name="inval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="100">the input value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="outval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="101">the output value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup"
              c:identifier="osinfo_datamap_lookup"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_datamap.c"
             line="123">Returns the output value with which @inval is associated to.</doc>
        <source-position filename="../osinfo/osinfo_datamap.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="125">the OS datamap</doc>
            <type name="Datamap" c:type="OsinfoDatamap*"/>
          </instance-parameter>
          <parameter name="inval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="126">the input value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reverse_lookup"
              c:identifier="osinfo_datamap_reverse_lookup"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_datamap.c"
             line="138">Returns the input value with which @outval is associated to.</doc>
        <source-position filename="../osinfo/osinfo_datamap.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="140">the OS datamap</doc>
            <type name="Datamap" c:type="OsinfoDatamap*"/>
          </instance-parameter>
          <parameter name="outval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_datamap.c"
                 line="141">the output value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="DatamapPrivate" c:type="OsinfoDatamapPrivate*"/>
      </field>
    </class>
    <record name="DatamapClass"
            c:type="OsinfoDatamapClass"
            glib:is-gtype-struct-for="Datamap">
      <source-position filename="../osinfo/osinfo_datamap.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="DatamapList"
           c:symbol-prefix="datamaplist"
           c:type="OsinfoDatamapList"
           parent="List"
           glib:type-name="OsinfoDatamapList"
           glib:get-type="osinfo_datamaplist_get_type"
           glib:type-struct="DatamapListClass">
      <source-position filename="../osinfo/osinfo_datamaplist.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_datamaplist_new"
                   version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_datamaplist.c"
             line="61">Construct a new install_datamap list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_datamaplist.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_datamaplist.c"
               line="66">an empty install_datamap list</doc>
          <type name="DatamapList" c:type="OsinfoDatamapList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="DatamapListPrivate" c:type="OsinfoDatamapListPrivate*"/>
      </field>
    </class>
    <record name="DatamapListClass"
            c:type="OsinfoDatamapListClass"
            glib:is-gtype-struct-for="DatamapList">
      <source-position filename="../osinfo/osinfo_datamaplist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="DatamapListPrivate"
            c:type="OsinfoDatamapListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_datamaplist.h" line="29"/>
    </record>
    <record name="DatamapPrivate" c:type="OsinfoDatamapPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_datamap.h" line="29"/>
    </record>
    <class name="Db"
           c:symbol-prefix="db"
           c:type="OsinfoDb"
           parent="GObject.Object"
           glib:type-name="OsinfoDb"
           glib:get-type="osinfo_db_get_type"
           glib:type-struct="DbClass">
      <source-position filename="../osinfo/osinfo_db.h" line="35"/>
      <constructor name="new" c:identifier="osinfo_db_new">
        <source-position filename="../osinfo/osinfo_db.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="176">the new database</doc>
          <type name="Db" c:type="OsinfoDb*"/>
        </return-value>
      </constructor>
      <method name="add_datamap"
              c:identifier="osinfo_db_add_datamap"
              version="0.2.3">
        <source-position filename="../osinfo/osinfo_db.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="490">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="datamap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="491">an install datamap</doc>
            <type name="Datamap" c:type="OsinfoDatamap*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_deployment" c:identifier="osinfo_db_add_deployment">
        <source-position filename="../osinfo/osinfo_db.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="475">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="476">a deployment</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_device" c:identifier="osinfo_db_add_device">
        <source-position filename="../osinfo/osinfo_db.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="460">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="461">a device</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_install_script"
              c:identifier="osinfo_db_add_install_script"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_db.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="506">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="507">an install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_os" c:identifier="osinfo_db_add_os">
        <source-position filename="../osinfo/osinfo_db.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="430">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="431">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_platform" c:identifier="osinfo_db_add_platform">
        <source-position filename="../osinfo/osinfo_db.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="445">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="446">an platform</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_deployment" c:identifier="osinfo_db_find_deployment">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="279">Find the deployment for @os on @platform, if any.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="287">the deployment, or NULL</doc>
          <type name="Deployment" c:type="OsinfoDeployment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="281">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="282">the operating system to find</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="283">the virtualization platform</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_datamap"
              c:identifier="osinfo_db_get_datamap"
              version="0.2.3">
        <source-position filename="../osinfo/osinfo_db.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="248">the install datamap, or NULL if none is found</doc>
          <type name="Datamap" c:type="OsinfoDatamap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="245">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="246">the unique operating system identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_datamap_list"
              c:identifier="osinfo_db_get_datamap_list"
              version="0.2.3">
        <source-position filename="../osinfo/osinfo_db.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="394">the list of install datamaps</doc>
          <type name="DatamapList" c:type="OsinfoDatamapList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="392">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_deployment" c:identifier="osinfo_db_get_deployment">
        <source-position filename="../osinfo/osinfo_db.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="233">the operating system, or NULL if none is found</doc>
          <type name="Deployment" c:type="OsinfoDeployment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="230">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="231">the unique operating system identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_deployment_list"
              c:identifier="osinfo_db_get_deployment_list">
        <source-position filename="../osinfo/osinfo_db.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="377">the list of deployments</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="375">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device" c:identifier="osinfo_db_get_device">
        <source-position filename="../osinfo/osinfo_db.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="203">the device, or NULL if none is found</doc>
          <type name="Device" c:type="OsinfoDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="200">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="201">the unique device identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_list" c:identifier="osinfo_db_get_device_list">
        <source-position filename="../osinfo/osinfo_db.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="360">the list of devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="358">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_script"
              c:identifier="osinfo_db_get_install_script"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_db.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="266">the install script, or NULL if none is found</doc>
          <type name="InstallScript" c:type="OsinfoInstallScript*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="263">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="264">the unique operating system identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_install_script_list"
              c:identifier="osinfo_db_get_install_script_list"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_db.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="413">the list of install scripts</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="411">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os" c:identifier="osinfo_db_get_os">
        <source-position filename="../osinfo/osinfo_db.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="218">the operating system, or NULL if none is found</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="215">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="216">the unique operating system identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_os_list" c:identifier="osinfo_db_get_os_list">
        <source-position filename="../osinfo/osinfo_db.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="328">the list of operating systems</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="326">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_platform" c:identifier="osinfo_db_get_platform">
        <source-position filename="../osinfo/osinfo_db.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="188">the platform, or NULL if none is found</doc>
          <type name="Platform" c:type="OsinfoPlatform*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="185">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="186">the unique platform identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_platform_list"
              c:identifier="osinfo_db_get_platform_list">
        <source-position filename="../osinfo/osinfo_db.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="344">the list of platforms</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="342">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="guess_os_from_media"
              c:identifier="osinfo_db_guess_os_from_media"
              deprecated="1"
              deprecated-version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="678">Guess operating system given an #OsinfoMedia object.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_db_identify_media() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_db.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="687">the operating system, or NULL if guessing failed</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="680">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="681">the installation media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="matched_media"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="682">the matched operating
system media</doc>
            <type name="Media" c:type="OsinfoMedia**"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_os_from_tree"
              c:identifier="osinfo_db_guess_os_from_tree"
              deprecated="1"
              deprecated-version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="982">Guess operating system given an #OsinfoTree object.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_db_identify_tree() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_db.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="991">the operating system, or NULL if guessing failed</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="984">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="985">the installation tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="matched_tree"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="986">the matched operating
system tree</doc>
            <type name="Tree" c:type="OsinfoTree**"/>
          </parameter>
        </parameters>
      </method>
      <method name="identify_media"
              c:identifier="osinfo_db_identify_media"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="789">Try to match a newly created @media with a media description from @db.
If found, @media will be filled with the corresponding information
stored in @db. In particular, after a call to osinfo_db_identify_media(), if
the media could be identified, its OsinfoEntify::id and OsinfoMedia::os
properties will be set.

The match for @media in @db is not guaranteed to be unique and
this method will only return the first match found. The order
in which matches are identified is not guaranteed, so when there
are multiple matches, the returned match may vary over time.
Applications are recommended to use the #osinfo_db_identify_all_media
method instead to receive all matched media.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="808">TRUE if @media was found in @db, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="791">an #OsinfoDb database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="792">the installation media
data</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="identify_medialist"
              c:identifier="osinfo_db_identify_medialist"
              version="1.10.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="832">Try to match a newly created @media with a media description from @db.
The return list will contain any #OsinfoMedia instances from @db that
matched @media. Usuaully there will only be one match returned, but
applications should be prepared to deal with multiple matches. The
returned #OsinfoMedia instances will have their OsinfoEntify::id and
OsinfoMedia::os properties will be set, while @media is left unmodified.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="844">a list containing any matches for @media found in @db</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="834">an #OsinfoDb database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="835">the installation media data</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="identify_tree"
              c:identifier="osinfo_db_identify_tree"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1078">Try to match a newly created @tree with a tree description from @db.
If found, @tree will be filled with the corresponding information
stored in @db. In particular, after a call to osinfo_db_identify_tree(), if
the tree could be identified, its OsinfoEntify::id and OsinfoMedia::os
properties will be set.

The match for @tree in @db is not guaranteed to be unique and
this method will only return the first match found. The order
in which matches are identified is not guaranteed, so when there
are multiple matches, the returned match may vary over time.
Applications are recommended to use the #osinfo_db_identify_all_tree
method instead to receive all matched tree.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1097">TRUE if @tree was found in @db, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1080">an #OsinfoDb database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1081">the installation tree
data</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
        </parameters>
      </method>
      <method name="identify_treelist"
              c:identifier="osinfo_db_identify_treelist"
              version="1.10.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1122">Try to match a newly created @tree with a tree description from @db.
The return list will contain any #OsinfoTree instances from @db that
matched @tree. Usuaully there will only be one match returned, but
applications should be prepared to deal with multiple matches. The
returned #OsinfoTree instances will have their OsinfoEntify::id and
OsinfoTree::os properties will be set, while @tree is left unmodified.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1134">a list containing any matches for @tree found in @db</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1124">an #OsinfoDb database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1125">the installation tree data</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_os_relationship"
              c:identifier="osinfo_db_unique_values_for_os_relationship">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1293">Get all operating systems that are the referee
in an operating system relationship.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1301">a list of operating systems</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1295">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1296">the product relationship</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_platform_relationship"
              c:identifier="osinfo_db_unique_values_for_platform_relationship">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1325">Get all platforms that are the referee
in an platform relationship.</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="102"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1333">a list of virtualization platforms</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1327">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1328">the product relationship</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_property_in_deployment"
              c:identifier="osinfo_db_unique_values_for_property_in_deployment">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1253">Get all unique values for a named property amongst all
deployments in the database</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="96"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1261">a list of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1255">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1256">a property name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_property_in_device"
              c:identifier="osinfo_db_unique_values_for_property_in_device">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1235">Get all unique values for a named property amongst all
devices in the database</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="93"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1243">a list of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1237">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1238">a property name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_property_in_os"
              c:identifier="osinfo_db_unique_values_for_property_in_os">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1197">Get all unique values for a named property amongst all
operating systems in the database</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="87"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1205">a list of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1199">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1200">a property name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unique_values_for_property_in_platform"
              c:identifier="osinfo_db_unique_values_for_property_in_platform">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_db.c"
             line="1216">Get all unique values for a named property amongst all
platforms in the database</doc>
        <source-position filename="../osinfo/osinfo_db.h" line="90"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_db.c"
               line="1224">a list of strings</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="db" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1218">the database</doc>
            <type name="Db" c:type="OsinfoDb*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_db.c"
                 line="1219">a property name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DbPrivate" c:type="OsinfoDbPrivate*"/>
      </field>
    </class>
    <record name="DbClass"
            c:type="OsinfoDbClass"
            glib:is-gtype-struct-for="Db">
      <source-position filename="../osinfo/osinfo_db.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DbPrivate" c:type="OsinfoDbPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_db.h" line="35"/>
    </record>
    <class name="Deployment"
           c:symbol-prefix="deployment"
           c:type="OsinfoDeployment"
           parent="Entity"
           glib:type-name="OsinfoDeployment"
           glib:get-type="osinfo_deployment_get_type"
           glib:type-struct="DeploymentClass">
      <source-position filename="../osinfo/osinfo_deployment.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_deployment_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="170">Create a new deployment entity</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="178">A deployment entity</doc>
          <type name="Deployment" c:type="OsinfoDeployment*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="172">the unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="173">the operating system to deploy</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="174">the platform to deploy on</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_device" c:identifier="osinfo_deployment_add_device">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="352">Associate a device with a deployment. The returned #OsinfoDeviceLink
can be used to record extra metadata against the link</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="360">the device association</doc>
          <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="354">a deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
          <parameter name="dev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="355">the device to associate</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_links"
              c:identifier="osinfo_deployment_get_device_links">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="318">Retrieve all the associated devices matching the filter.
The filter matches against the link, not the device.</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="326">a list of #OsinfoDevice entities</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="320">a deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="321">an optional filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices" c:identifier="osinfo_deployment_get_devices">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="284">Retrieve all the associated devices matching the filter.
The filter matches against the device, not the link.</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="292">a list of #OsinfoDevice entities</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="286">a deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="287">an optional filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_os"
              c:identifier="osinfo_deployment_get_os"
              glib:get-property="os">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="192">Get the operating system for the deployment</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="198">an OS, or NULL</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="194">the deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_platform"
              c:identifier="osinfo_deployment_get_platform"
              glib:get-property="platform">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="208">Get the platform for the deployment</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="214">a platform, or NULL</doc>
          <type name="Platform" c:type="OsinfoPlatform*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="210">the deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_preferred_device"
              c:identifier="osinfo_deployment_get_preferred_device">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="224">Get the preferred device matching a given filter</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="231">a device, or NULL</doc>
          <type name="Device" c:type="OsinfoDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="226">the deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="227">a device metadata filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_device_link"
              c:identifier="osinfo_deployment_get_preferred_device_link">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="249">Get the preferred device link matching a given filter and platform.
The filter matches against attributes on the link, not the device.</doc>
        <source-position filename="../osinfo/osinfo_deployment.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deployment.c"
               line="257">a device, or NULL</doc>
          <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="deployment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="251">the deployment entity</doc>
            <type name="Deployment" c:type="OsinfoDeployment*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deployment.c"
                 line="252">a device metadata filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <property name="os"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_os">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="134">The operating system to be deployed</doc>
        <type name="Os"/>
      </property>
      <property name="platform"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_platform">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deployment.c"
             line="146">The platform to deploy on</doc>
        <type name="Platform"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="DeploymentPrivate" c:type="OsinfoDeploymentPrivate*"/>
      </field>
    </class>
    <record name="DeploymentClass"
            c:type="OsinfoDeploymentClass"
            glib:is-gtype-struct-for="Deployment">
      <source-position filename="../osinfo/osinfo_deployment.h" line="30"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="DeploymentList"
           c:symbol-prefix="deploymentlist"
           c:type="OsinfoDeploymentList"
           parent="List"
           glib:type-name="OsinfoDeploymentList"
           glib:get-type="osinfo_deploymentlist_get_type"
           glib:type-struct="DeploymentListClass">
      <source-position filename="../osinfo/osinfo_deploymentlist.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_deploymentlist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deploymentlist.c"
             line="63">Construct a new deployment list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_deploymentlist.h"
                         line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deploymentlist.c"
               line="68">an empty deployment list</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_deploymentlist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deploymentlist.c"
             line="78">Construct a new deployment list that is filled with deployments
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_deploymentlist.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deploymentlist.c"
               line="85">a copy of the deployment list</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="80">the deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_deploymentlist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deploymentlist.c"
             line="97">Construct a new deployment list that is filled with deployments
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_deploymentlist.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deploymentlist.c"
               line="105">a filtered copy of the deployment list</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="99">the deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="100">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_deploymentlist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deploymentlist.c"
             line="117">Construct a new deployment list that is filled with only the
deployments that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_deploymentlist.h"
                         line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deploymentlist.c"
               line="125">an intersection of the two deployment lists</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="119">the first deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="120">the second deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_deploymentlist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_deploymentlist.c"
             line="137">Construct a new deployment list that is filled with all the
deployments that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_deploymentlist.h"
                         line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_deploymentlist.c"
               line="145">a union of the two deployment lists</doc>
          <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="139">the first deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_deploymentlist.c"
                 line="140">the second deployment list to copy</doc>
            <type name="DeploymentList" c:type="OsinfoDeploymentList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="DeploymentListPrivate"
              c:type="OsinfoDeploymentListPrivate*"/>
      </field>
    </class>
    <record name="DeploymentListClass"
            c:type="OsinfoDeploymentListClass"
            glib:is-gtype-struct-for="DeploymentList">
      <source-position filename="../osinfo/osinfo_deploymentlist.h" line="30"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="DeploymentListPrivate"
            c:type="OsinfoDeploymentListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_deploymentlist.h" line="30"/>
    </record>
    <record name="DeploymentPrivate"
            c:type="OsinfoDeploymentPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_deployment.h" line="30"/>
    </record>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="OsinfoDevice"
           parent="Entity"
           glib:type-name="OsinfoDevice"
           glib:get-type="osinfo_device_get_type"
           glib:type-struct="DeviceClass">
      <source-position filename="../osinfo/osinfo_device.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_device_new">
        <source-position filename="../osinfo/osinfo_device.h" line="44"/>
        <return-value transfer-ownership="full">
          <type name="Device" c:type="OsinfoDevice*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bus_type" c:identifier="osinfo_device_get_bus_type">
        <source-position filename="../osinfo/osinfo_device.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_class" c:identifier="osinfo_device_get_class">
        <source-position filename="../osinfo/osinfo_device.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="osinfo_device_get_name">
        <source-position filename="../osinfo/osinfo_device.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product" c:identifier="osinfo_device_get_product">
        <source-position filename="../osinfo/osinfo_device.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product_id"
              c:identifier="osinfo_device_get_product_id">
        <source-position filename="../osinfo/osinfo_device.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subsystem"
              c:identifier="osinfo_device_get_subsystem"
              version="0.2.1">
        <source-position filename="../osinfo/osinfo_device.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device.c"
               line="112">the value of the device's subsystem.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device.c"
                 line="110">the device</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor" c:identifier="osinfo_device_get_vendor">
        <source-position filename="../osinfo/osinfo_device.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_id" c:identifier="osinfo_device_get_vendor_id">
        <source-position filename="../osinfo/osinfo_device.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dev" transfer-ownership="none">
            <type name="Device" c:type="OsinfoDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="DevicePrivate" c:type="OsinfoDevicePrivate*"/>
      </field>
    </class>
    <record name="DeviceClass"
            c:type="OsinfoDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="../osinfo/osinfo_device.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="DeviceDriver"
           c:symbol-prefix="device_driver"
           c:type="OsinfoDeviceDriver"
           parent="Entity"
           glib:type-name="OsinfoDeviceDriver"
           glib:get-type="osinfo_device_driver_get_type"
           glib:type-struct="DeviceDriverClass">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="31"/>
      <method name="get_architecture"
              c:identifier="osinfo_device_driver_get_architecture"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driver.c"
             line="83">Retrieves the target hardware architecture of @driver.</doc>
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="89">the hardware architecture.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="85">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="osinfo_device_driver_get_devices"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="151">The list of devices supported by this driver.</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="149">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_files"
              c:identifier="osinfo_device_driver_get_files"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driver.c"
             line="115">Retrieves the names of driver files under the location returned by
#osinfo_device_driver_get_location.</doc>
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="49"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="122">The list of driver files.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="117">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="osinfo_device_driver_get_location"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driver.c"
             line="99">Retrieves the location of the @driver as a URL.</doc>
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="105">the location of the driver.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="101">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pre_installable"
              c:identifier="osinfo_device_driver_get_pre_installable"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="136">TRUE if @driver is pre-installable, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="134">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="osinfo_device_driver_get_priority"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driver.c"
             line="190">Returns the priority of the device driver. The higher the value, the more
important it is.</doc>
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="197">the priority of the device driver.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="192">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signed"
              c:identifier="osinfo_device_driver_get_signed"
              version="0.2.6">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driver.c"
             line="172">Some OS vendors recommend or require device drivers to be signed by them
before these device drivers could be installed on their OS.</doc>
        <source-position filename="../osinfo/osinfo_device_driver.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driver.c"
               line="179">TRUE if @driver is signed, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_device_driver.c"
                 line="174">an #OsinfoDeviceDriver instance</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="DeviceDriverPrivate" c:type="OsinfoDeviceDriverPrivate*"/>
      </field>
    </class>
    <record name="DeviceDriverClass"
            c:type="OsinfoDeviceDriverClass"
            glib:is-gtype-struct-for="DeviceDriver">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="31"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="DeviceDriverList"
           c:symbol-prefix="device_driverlist"
           c:type="OsinfoDeviceDriverList"
           parent="List"
           glib:type-name="OsinfoDeviceDriverList"
           glib:get-type="osinfo_device_driverlist_get_type"
           glib:type-struct="DeviceDriverListClass">
      <source-position filename="../osinfo/osinfo_device_driverlist.h"
                       line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_device_driverlist_new"
                   version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_device_driverlist.c"
             line="62">Construct a new device driver list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_device_driverlist.h"
                         line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_device_driverlist.c"
               line="67">an empty device driver list</doc>
          <type name="DeviceDriverList" c:type="OsinfoDeviceDriverList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="DeviceDriverListPrivate"
              c:type="OsinfoDeviceDriverListPrivate*"/>
      </field>
    </class>
    <record name="DeviceDriverListClass"
            c:type="OsinfoDeviceDriverListClass"
            glib:is-gtype-struct-for="DeviceDriverList">
      <source-position filename="../osinfo/osinfo_device_driverlist.h"
                       line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="DeviceDriverListPrivate"
            c:type="OsinfoDeviceDriverListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_device_driverlist.h"
                       line="29"/>
    </record>
    <record name="DeviceDriverPrivate"
            c:type="OsinfoDeviceDriverPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_device_driver.h" line="31"/>
    </record>
    <enumeration name="DeviceDriverSigningReq"
                 version="0.2.6"
                 glib:type-name="OsinfoDeviceDriverSigningReq"
                 glib:get-type="osinfo_device_driver_signing_req_get_type"
                 c:type="OsinfoDeviceDriverSigningReq">
      <member name="none"
              value="0"
              c:identifier="OSINFO_DEVICE_DRIVER_SIGNING_REQ_NONE"
              glib:nick="none"
              glib:name="OSINFO_DEVICE_DRIVER_SIGNING_REQ_NONE">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="69">Script do not require device drivers
to be signed.</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="OSINFO_DEVICE_DRIVER_SIGNING_REQ_STRICT"
              glib:nick="strict"
              glib:name="OSINFO_DEVICE_DRIVER_SIGNING_REQ_STRICT">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="71">Script must only be given signed
device drivers. Some scripts will allow overriding this requirement through
#osinfo_install_config_set_driver_signing function. You can query if a
script supports this by checking if
#OSINFO_INSTALL_CONFIG_PROP_DRIVER_SIGNING configuration parameter is used
by the script in question (or other scripts in the same profile).</doc>
      </member>
      <member name="warn"
              value="2"
              c:identifier="OSINFO_DEVICE_DRIVER_SIGNING_REQ_WARN"
              glib:nick="warn"
              glib:name="OSINFO_DEVICE_DRIVER_SIGNING_REQ_WARN">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="77">A warning will be issued by OS
installer if device drivers are not signed and most probably require user
input (and thus breaking unattended installation). See
#OSINFO_DEVICE_DRIVER_SIGNING_REQ_STRICT on how this warning can be disabled
for some scripts.</doc>
      </member>
    </enumeration>
    <class name="DeviceLink"
           c:symbol-prefix="devicelink"
           c:type="OsinfoDeviceLink"
           parent="Entity"
           glib:type-name="OsinfoDeviceLink"
           glib:get-type="osinfo_devicelink_get_type"
           glib:type-struct="DeviceLinkClass">
      <source-position filename="../osinfo/osinfo_devicelink.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_devicelink_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelink.c"
             line="140">Construct a new link for an #OsinfoDevice. The unique ID
of the link is set to match the ID of the target device.</doc>
        <source-position filename="../osinfo/osinfo_devicelink.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelink.c"
               line="147">the new device link</doc>
          <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelink.c"
                 line="142">the target device</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_driver" c:identifier="osinfo_devicelink_get_driver">
        <source-position filename="../osinfo/osinfo_devicelink.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target"
              c:identifier="osinfo_devicelink_get_target"
              glib:get-property="target">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelink.c"
             line="157">Retrieve the #OsinfoDevice that the link points to.</doc>
        <source-position filename="../osinfo/osinfo_devicelink.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelink.c"
               line="163">the target of the device link</doc>
          <type name="Device" c:type="OsinfoDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelink.c"
                 line="159">the device link</doc>
            <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="target"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_target">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelink.c"
             line="117">The target of the device link.</doc>
        <type name="Device"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="DeviceLinkPrivate" c:type="OsinfoDeviceLinkPrivate*"/>
      </field>
    </class>
    <record name="DeviceLinkClass"
            c:type="OsinfoDeviceLinkClass"
            glib:is-gtype-struct-for="DeviceLink">
      <source-position filename="../osinfo/osinfo_devicelink.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="DeviceLinkFilter"
           c:symbol-prefix="devicelinkfilter"
           c:type="OsinfoDeviceLinkFilter"
           parent="Filter"
           glib:type-name="OsinfoDeviceLinkFilter"
           glib:get-type="osinfo_devicelinkfilter_get_type"
           glib:type-struct="DeviceLinkFilterClass">
      <source-position filename="../osinfo/osinfo_devicelinkfilter.h"
                       line="26"/>
      <constructor name="new" c:identifier="osinfo_devicelinkfilter_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinkfilter.c"
             line="138">Construct a new filter that matches all operating
systems</doc>
        <source-position filename="../osinfo/osinfo_devicelinkfilter.h"
                         line="32"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinkfilter.c"
               line="145">a new filter</doc>
          <type name="DeviceLinkFilter" c:type="OsinfoDeviceLinkFilter*"/>
        </return-value>
        <parameters>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinkfilter.c"
                 line="140">the target device filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_target_filter"
              c:identifier="osinfo_devicelinkfilter_get_target_filter"
              glib:get-property="target-filter">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinkfilter.c"
             line="162">Retrieve the filter used to match against the target of
the device link</doc>
        <source-position filename="../osinfo/osinfo_devicelinkfilter.h"
                         line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinkfilter.c"
               line="169">the target filter object</doc>
          <type name="Filter" c:type="OsinfoFilter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinkfilter.c"
                 line="164">the filter object</doc>
            <type name="DeviceLinkFilter" c:type="OsinfoDeviceLinkFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="target-filter"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_target_filter">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinkfilter.c"
             line="120">The operating system to be deployed</doc>
        <type name="Filter"/>
      </property>
      <field name="parent_instance">
        <type name="Filter" c:type="OsinfoFilter"/>
      </field>
      <field name="priv">
        <type name="DeviceLinkFilterPrivate"
              c:type="OsinfoDeviceLinkFilterPrivate*"/>
      </field>
    </class>
    <record name="DeviceLinkFilterClass"
            c:type="OsinfoDeviceLinkFilterClass"
            glib:is-gtype-struct-for="DeviceLinkFilter">
      <source-position filename="../osinfo/osinfo_devicelinkfilter.h"
                       line="26"/>
      <field name="parent_class">
        <type name="FilterClass" c:type="OsinfoFilterClass"/>
      </field>
    </record>
    <record name="DeviceLinkFilterPrivate"
            c:type="OsinfoDeviceLinkFilterPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_devicelinkfilter.h"
                       line="26"/>
    </record>
    <class name="DeviceLinkList"
           c:symbol-prefix="devicelinklist"
           c:type="OsinfoDeviceLinkList"
           parent="List"
           glib:type-name="OsinfoDeviceLinkList"
           glib:get-type="osinfo_devicelinklist_get_type"
           glib:type-struct="DeviceLinkListClass">
      <source-position filename="../osinfo/osinfo_devicelinklist.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_devicelinklist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="63">Construct a new devicelink list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="68">an empty devicelink list</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
      </constructor>
      <method name="get_devices"
              c:identifier="osinfo_devicelinklist_get_devices">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="158">Get all devices matching a given filter</doc>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="165">A list of devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="160">an device link list</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="161">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_copy"
              c:identifier="osinfo_devicelinklist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="78">Construct a new devicelink list that is filled with devicelinks
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="85">a copy of the devicelink list</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="80">the devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_devicelinklist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="97">Construct a new devicelink list that is filled with devicelinks
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="105">a filtered copy of the devicelink list</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="99">the devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="100">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_devicelinklist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="117">Construct a new devicelink list that is filled with only the
devicelinks that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="125">an intersection of the two devicelink lists</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="119">the first devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="120">the second devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_devicelinklist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelinklist.c"
             line="137">Construct a new devicelink list that is filled with all the
devicelinks that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelinklist.h"
                         line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelinklist.c"
               line="145">a union of the two devicelink lists</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="139">the first devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelinklist.c"
                 line="140">the second devicelink list to copy</doc>
            <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="DeviceLinkListPrivate"
              c:type="OsinfoDeviceLinkListPrivate*"/>
      </field>
    </class>
    <record name="DeviceLinkListClass"
            c:type="OsinfoDeviceLinkListClass"
            glib:is-gtype-struct-for="DeviceLinkList">
      <source-position filename="../osinfo/osinfo_devicelinklist.h" line="30"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="DeviceLinkListPrivate"
            c:type="OsinfoDeviceLinkListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_devicelinklist.h" line="30"/>
    </record>
    <record name="DeviceLinkPrivate"
            c:type="OsinfoDeviceLinkPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_devicelink.h" line="29"/>
    </record>
    <class name="DeviceList"
           c:symbol-prefix="devicelist"
           c:type="OsinfoDeviceList"
           parent="List"
           glib:type-name="OsinfoDeviceList"
           glib:get-type="osinfo_devicelist_get_type"
           glib:type-struct="DeviceListClass">
      <source-position filename="../osinfo/osinfo_devicelist.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_devicelist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelist.c"
             line="63">Construct a new device list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_devicelist.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelist.c"
               line="68">an empty device list</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_devicelist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelist.c"
             line="78">Construct a new device list that is filled with devices
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelist.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelist.c"
               line="85">a copy of the device list</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="80">the device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_devicelist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelist.c"
             line="97">Construct a new device list that is filled with devices
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelist.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelist.c"
               line="105">a filtered copy of the device list</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="99">the device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="100">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_devicelist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelist.c"
             line="117">Construct a new device list that is filled with only the
devices that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelist.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelist.c"
               line="125">an intersection of the two device lists</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="119">the first device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="120">the second device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_devicelist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_devicelist.c"
             line="137">Construct a new device list that is filled with all the
devices that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_devicelist.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_devicelist.c"
               line="145">a union of the two device lists</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="139">the first device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_devicelist.c"
                 line="140">the second device list to copy</doc>
            <type name="DeviceList" c:type="OsinfoDeviceList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="DeviceListPrivate" c:type="OsinfoDeviceListPrivate*"/>
      </field>
    </class>
    <record name="DeviceListClass"
            c:type="OsinfoDeviceListClass"
            glib:is-gtype-struct-for="DeviceList">
      <source-position filename="../osinfo/osinfo_devicelist.h" line="30"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="DeviceListPrivate"
            c:type="OsinfoDeviceListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_devicelist.h" line="30"/>
    </record>
    <record name="DevicePrivate" c:type="OsinfoDevicePrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_device.h" line="29"/>
    </record>
    <constant name="ENTITY_PROP_ID" value="id" c:type="OSINFO_ENTITY_PROP_ID">
      <source-position filename="../osinfo/osinfo_entity.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Entity"
           c:symbol-prefix="entity"
           c:type="OsinfoEntity"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="OsinfoEntity"
           glib:get-type="osinfo_entity_get_type"
           glib:type-struct="EntityClass">
      <source-position filename="../osinfo/osinfo_entity.h" line="28"/>
      <method name="add_param" c:identifier="osinfo_entity_add_param">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="247">Adds a new parameter against the entity. A key can have multiple
values associated. Thus repeated calls with the same key will
build up a list of possible values.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="249">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="250">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="251">the data to associated with that key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_param" c:identifier="osinfo_entity_clear_param">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="282">Remove all values associated with a key</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="284">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="285">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="osinfo_entity_get_id"
              glib:get-property="id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="296">Retrieves the unique key for the entity. The format of identifiers
is undefined, but the recommended practice is to use a URI.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="303">the unique key for the entity</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="298">an #OsinfoEntity</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_param_keys"
              c:identifier="osinfo_entity_get_param_keys">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="313">Retrieve all the known parameter keys associated with
the entity</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="38"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="320">The list of string parameters</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="315">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_param_value"
              c:identifier="osinfo_entity_get_param_value">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="335">Retrieve the parameter value associated with a named key. If
multiple values are stored against the key, only the first
value is returned. If no value is associated, NULL is returned</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="344">the value associated with the key, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="337">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="338">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_boolean"
              c:identifier="osinfo_entity_get_param_value_boolean"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="368">Retrieve the parameter value associated with a named key as a
boolean. If multiple values are stored against the key, only the
first value is returned. If no value is associated, FALSE is returned</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="377">the value associated with the key as a boolean, or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="370">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="371">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_boolean_with_default"
              c:identifier="osinfo_entity_get_param_value_boolean_with_default"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="388">Retrieve the parameter value associated with a named key as a
boolean. If multiple values are stored against the key, only the
first value is returned. If no value is associated, @default_value
is returned.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="400">the value associated with the key as a boolean, or
@default_value</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="390">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="391">the name of the key</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="default_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="392">the value to be returned in case there's no value
                associated with the @key</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_enum"
              c:identifier="osinfo_entity_get_param_value_enum"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="468">Retrieve the parameter value associated with a named key as an
enum value. If multiple values are stored against the key, only
the first value is returned. If no value is associated, the
@default_value is returned.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="481">the enum value associated with the key, or @default_value.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="470">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="471">the name of the key</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="472">the enum type</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="default_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="473">the default value to be used, in case there's
                no value associated with the key</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_int64"
              c:identifier="osinfo_entity_get_param_value_int64"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="418">Retrieve the parameter value associated with a named key as an
int64. If multiple values are stored against the key, only the
first value is returned. If no value is associated, -1 is returned.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="427">the value associated with the key as an int64, or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="420">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="421">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_int64_with_default"
              c:identifier="osinfo_entity_get_param_value_int64_with_default"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="437">Retrieve the parameter value associated with a named key as an
int64. If multiple values are stored against the key, only the
first value is returned. If no value is associated, @default_value
is returned.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="449">the value associated with the key as an int64, or
@default_value</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="439">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="440">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="default_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="441">the value to be returned in case there's no value
                associated with the @key</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param_value_list"
              c:identifier="osinfo_entity_get_param_value_list">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="510">Retrieve all the parameter values associated with a named
key. If no values are associated, NULL is returned</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="52"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_entity.c"
               line="518">the values associated with the key</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="512">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="513">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_param" c:identifier="osinfo_entity_set_param">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="158">Sets a new parameter against the entity. If the key already
has a value associated with it, the existing value will be
cleared.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="160">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="161">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="162">the data to associated with that key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_param_boolean"
              c:identifier="osinfo_entity_set_param_boolean"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="181">Sets a new parameter against the entity. If the key already
has a value associated with it, the existing value will be
cleared.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="183">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="184">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="185">the boolean value to be associated with that key</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_param_enum"
              c:identifier="osinfo_entity_set_param_enum"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="219">Sets a new parameter against the entity. If the key already
has a value associated with it, the existing value will be
cleared.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="221">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="222">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="223">the enum value to be associated with that key</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="224">the enum type</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_param_int64"
              c:identifier="osinfo_entity_set_param_int64"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="198">Sets a new parameter against the entity. If the key already
has a value associated with it, the existing value will be
cleared.</doc>
        <source-position filename="../osinfo/osinfo_entity.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="200">an #OsinfoEntity containing the parameters</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="201">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_entity.c"
                 line="202">the int64 value to be associated with that key</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="id"
                writable="1"
                construct="1"
                transfer-ownership="none"
                getter="get_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_entity.c"
             line="121">The unique identifier for the entity The format of identifiers
is undefined, but the recommended practice is to use a URI.
This parameter must be set at time of construction as no
default value is provided.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="EntityPrivate" c:type="OsinfoEntityPrivate*"/>
      </field>
    </class>
    <record name="EntityClass"
            c:type="OsinfoEntityClass"
            glib:is-gtype-struct-for="Entity">
      <source-position filename="../osinfo/osinfo_entity.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="EntityPrivate" c:type="OsinfoEntityPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_entity.h" line="28"/>
    </record>
    <enumeration name="Error"
                 version="1.8.0"
                 glib:type-name="OsinfoError"
                 glib:get-type="osinfo_error_get_type"
                 c:type="OsinfoError"
                 glib:error-domain="libosinfo">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_loader.h"
           line="35">#GError codes used for errors in #OSINFO_ERROR domain.</doc>
      <member name="generic"
              value="0"
              c:identifier="OSINFO_ERROR_GENERIC"
              glib:nick="generic"
              glib:name="OSINFO_ERROR_GENERIC">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.h"
             line="37">Generic Osinfo error;</doc>
      </member>
      <function name="quark" c:identifier="osinfo_error_quark" version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="158">Gets a #GQuark representing the string "libosinfo"</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_loader.c"
               line="163">the #GQuark representing the string.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <constant name="FIRMWARE_PROP_ARCHITECTURE"
              value="architecture"
              c:type="OSINFO_FIRMWARE_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_firmware.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="FIRMWARE_PROP_SUPPORTED"
              value="supported"
              c:type="OSINFO_FIRMWARE_PROP_SUPPORTED">
      <source-position filename="../osinfo/osinfo_firmware.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="FIRMWARE_PROP_TYPE"
              value="type"
              c:type="OSINFO_FIRMWARE_PROP_TYPE">
      <source-position filename="../osinfo/osinfo_firmware.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Filter"
           c:symbol-prefix="filter"
           c:type="OsinfoFilter"
           parent="GObject.Object"
           glib:type-name="OsinfoFilter"
           glib:get-type="osinfo_filter_get_type"
           glib:type-struct="FilterClass">
      <source-position filename="../osinfo/osinfo_filter.h" line="38"/>
      <constructor name="new" c:identifier="osinfo_filter_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="68">Construct a new filter that matches all entities</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_filter.c"
               line="73">a filter object</doc>
          <type name="Filter" c:type="OsinfoFilter*"/>
        </return-value>
      </constructor>
      <virtual-method name="matches" invoker="matches">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="268">Determine of an entity matches a filter</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_filter.c"
               line="275">TRUE if entity passes the filter, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="270">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
          <parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="271">an entity to query</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_constraint"
              c:identifier="osinfo_filter_add_constraint">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="101">Adds a constraint that requires the entity to have
a property key @propName with a value of @propVal.
If multiple constraints are added for the same
@propName, with different values, the entity have
all property values.</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="103">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="104">the name of the parameter key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="propVal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="105">the required property value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_constraint"
              c:identifier="osinfo_filter_clear_constraint">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="138">Remove all filter constraints for the matching property
name.</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="140">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="141">name of the key to remove constraints for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_constraints"
              c:identifier="osinfo_filter_clear_constraints">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="154">Remove all filter property constraints</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="156">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_constraint_keys"
              c:identifier="osinfo_filter_get_constraint_keys">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="167">Get a list of all constraint property keys</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="50"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_filter.c"
               line="173">List of constraint keys</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="169">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_constraint_values"
              c:identifier="osinfo_filter_get_constraint_values">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="182">Get a list values for filter constraints with the named key</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="51"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_filter.c"
               line="189">List of constraint values</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="184">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
          <parameter name="propName" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="185">the name of the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="matches" c:identifier="osinfo_filter_matches">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_filter.c"
             line="268">Determine of an entity matches a filter</doc>
        <source-position filename="../osinfo/osinfo_filter.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_filter.c"
               line="275">TRUE if entity passes the filter, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="270">a filter object</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </instance-parameter>
          <parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="271">an entity to query</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FilterPrivate" c:type="OsinfoFilterPrivate*"/>
      </field>
    </class>
    <record name="FilterClass"
            c:type="OsinfoFilterClass"
            glib:is-gtype-struct-for="Filter">
      <source-position filename="../osinfo/osinfo_filter.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="matches">
        <callback name="matches">
          <source-position filename="../osinfo/osinfo_filter.h" line="37"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_filter.c"
                 line="275">TRUE if entity passes the filter, FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../osinfo/osinfo_filter.c"
                   line="270">a filter object</doc>
              <type name="Filter" c:type="OsinfoFilter*"/>
            </parameter>
            <parameter name="entity" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../osinfo/osinfo_filter.c"
                   line="271">an entity to query</doc>
              <type name="Entity" c:type="OsinfoEntity*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="FilterPrivate" c:type="OsinfoFilterPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_filter.h" line="27"/>
    </record>
    <class name="Firmware"
           c:symbol-prefix="firmware"
           c:type="OsinfoFirmware"
           parent="Entity"
           glib:type-name="OsinfoFirmware"
           glib:get-type="osinfo_firmware_get_type"
           glib:type-struct="FirmwareClass">
      <source-position filename="../osinfo/osinfo_firmware.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_firmware_new">
        <source-position filename="../osinfo/osinfo_firmware.h" line="40"/>
        <return-value transfer-ownership="full">
          <type name="Firmware" c:type="OsinfoFirmware*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="architecture" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_architecture"
              c:identifier="osinfo_firmware_get_architecture"
              glib:get-property="architecture"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_firmware.c"
             line="170">Retrieves the target hardware architecture of the OS @firmware provides.</doc>
        <source-position filename="../osinfo/osinfo_firmware.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_firmware.c"
               line="176">the hardware architecture, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="firmware" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_firmware.c"
                 line="172">an #OsinfoFirmware instance</doc>
            <type name="Firmware" c:type="OsinfoFirmware*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_firmware_type"
              c:identifier="osinfo_firmware_get_firmware_type"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_firmware.c"
             line="186">The type of the @firmware</doc>
        <source-position filename="../osinfo/osinfo_firmware.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_firmware.c"
               line="192">the type, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="firmware" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_firmware.c"
                 line="188">an #OsinfoFirmware instance</doc>
            <type name="Firmware" c:type="OsinfoFirmware*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_supported"
              c:identifier="osinfo_firmware_is_supported"
              version="1.8.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_firmware.c"
             line="202">Whether the @firmware is supported or not</doc>
        <source-position filename="../osinfo/osinfo_firmware.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_firmware.c"
               line="208">TRUE if supported, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="firmware" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_firmware.c"
                 line="204">an #OsinfoFirmware instance</doc>
            <type name="Firmware" c:type="OsinfoFirmware*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="architecture"
                writable="1"
                transfer-ownership="none"
                getter="get_architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_firmware.c"
             line="122">The target hardware architecture of this firmware.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="FirmwarePrivate" c:type="OsinfoFirmwarePrivate*"/>
      </field>
    </class>
    <record name="FirmwareClass"
            c:type="OsinfoFirmwareClass"
            glib:is-gtype-struct-for="Firmware">
      <source-position filename="../osinfo/osinfo_firmware.h" line="30"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="FirmwareList"
           c:symbol-prefix="firmwarelist"
           c:type="OsinfoFirmwareList"
           parent="List"
           glib:type-name="OsinfoFirmwareList"
           glib:get-type="osinfo_firmwarelist_get_type"
           glib:type-struct="FirmwareListClass">
      <source-position filename="../osinfo/osinfo_firmwarelist.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_firmwarelist_new"
                   version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_firmwarelist.c"
             line="62">Construct a new firmware list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_firmwarelist.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_firmwarelist.c"
               line="67">an empty firmware list</doc>
          <type name="FirmwareList" c:type="OsinfoFirmwareList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="FirmwareListPrivate" c:type="OsinfoFirmwareListPrivate*"/>
      </field>
    </class>
    <record name="FirmwareListClass"
            c:type="OsinfoFirmwareListClass"
            glib:is-gtype-struct-for="FirmwareList">
      <source-position filename="../osinfo/osinfo_firmwarelist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="FirmwareListPrivate"
            c:type="OsinfoFirmwareListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_firmwarelist.h" line="29"/>
    </record>
    <record name="FirmwarePrivate"
            c:type="OsinfoFirmwarePrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_firmware.h" line="30"/>
    </record>
    <constant name="GIBIBYTES" value="1073741824" c:type="OSINFO_GIBIBYTES">
      <source-position filename="../osinfo/osinfo_resources.h" line="33"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="IMAGE_PROP_ARCHITECTURE"
              value="architecture"
              c:type="OSINFO_IMAGE_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_image.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="IMAGE_PROP_CLOUD_INIT"
              value="cloud-init"
              c:type="OSINFO_IMAGE_PROP_CLOUD_INIT">
      <source-position filename="../osinfo/osinfo_image.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="IMAGE_PROP_FORMAT"
              value="format"
              c:type="OSINFO_IMAGE_PROP_FORMAT">
      <source-position filename="../osinfo/osinfo_image.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="IMAGE_PROP_URL" value="url" c:type="OSINFO_IMAGE_PROP_URL">
      <source-position filename="../osinfo/osinfo_image.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="IMAGE_PROP_VARIANT"
              value="variant"
              c:type="OSINFO_IMAGE_PROP_VARIANT">
      <source-position filename="../osinfo/osinfo_image.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PARAM_PROP_DATAMAP"
              value="value-map"
              c:type="OSINFO_INSTALL_CONFIG_PARAM_PROP_DATAMAP">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PARAM_PROP_NAME"
              value="name"
              c:type="OSINFO_INSTALL_CONFIG_PARAM_PROP_NAME">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PARAM_PROP_POLICY"
              value="policy"
              c:type="OSINFO_INSTALL_CONFIG_PARAM_PROP_POLICY">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_ADMIN_PASSWORD"
              value="admin-password"
              c:type="OSINFO_INSTALL_CONFIG_PROP_ADMIN_PASSWORD">
      <source-position filename="../osinfo/osinfo_install_config.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_AVATAR_DISK"
              value="avatar-disk"
              c:type="OSINFO_INSTALL_CONFIG_PROP_AVATAR_DISK">
      <source-position filename="../osinfo/osinfo_install_config.h" line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_AVATAR_LOCATION"
              value="avatar-location"
              c:type="OSINFO_INSTALL_CONFIG_PROP_AVATAR_LOCATION">
      <source-position filename="../osinfo/osinfo_install_config.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_DRIVER_SIGNING"
              value="driver-signing"
              c:type="OSINFO_INSTALL_CONFIG_PROP_DRIVER_SIGNING">
      <source-position filename="../osinfo/osinfo_install_config.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_HARDWARE_ARCH"
              value="hardware-arch"
              c:type="OSINFO_INSTALL_CONFIG_PROP_HARDWARE_ARCH">
      <source-position filename="../osinfo/osinfo_install_config.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_HOSTNAME"
              value="hostname"
              c:type="OSINFO_INSTALL_CONFIG_PROP_HOSTNAME">
      <source-position filename="../osinfo/osinfo_install_config.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_INSTALLATION_URL"
              value="installation-url"
              c:type="OSINFO_INSTALL_CONFIG_PROP_INSTALLATION_URL">
      <source-position filename="../osinfo/osinfo_install_config.h" line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_L10N_KEYBOARD"
              value="l10n-keyboard"
              c:type="OSINFO_INSTALL_CONFIG_PROP_L10N_KEYBOARD">
      <source-position filename="../osinfo/osinfo_install_config.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_L10N_LANGUAGE"
              value="l10n-language"
              c:type="OSINFO_INSTALL_CONFIG_PROP_L10N_LANGUAGE">
      <source-position filename="../osinfo/osinfo_install_config.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_L10N_TIMEZONE"
              value="l10n-timezone"
              c:type="OSINFO_INSTALL_CONFIG_PROP_L10N_TIMEZONE">
      <source-position filename="../osinfo/osinfo_install_config.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_POST_INSTALL_DRIVERS_DISK"
              value="post-install-drivers-disk"
              c:type="OSINFO_INSTALL_CONFIG_PROP_POST_INSTALL_DRIVERS_DISK">
      <source-position filename="../osinfo/osinfo_install_config.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_POST_INSTALL_DRIVERS_LOCATION"
              value="post-install-drivers-location"
              c:type="OSINFO_INSTALL_CONFIG_PROP_POST_INSTALL_DRIVERS_LOCATION">
      <source-position filename="../osinfo/osinfo_install_config.h" line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_PRE_INSTALL_DRIVERS_DISK"
              value="pre-install-drivers-disk"
              c:type="OSINFO_INSTALL_CONFIG_PROP_PRE_INSTALL_DRIVERS_DISK">
      <source-position filename="../osinfo/osinfo_install_config.h" line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_PRE_INSTALL_DRIVERS_LOCATION"
              value="pre-install-drivers-location"
              c:type="OSINFO_INSTALL_CONFIG_PROP_PRE_INSTALL_DRIVERS_LOCATION">
      <source-position filename="../osinfo/osinfo_install_config.h" line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_REG_LOGIN"
              value="reg-login"
              c:type="OSINFO_INSTALL_CONFIG_PROP_REG_LOGIN">
      <source-position filename="../osinfo/osinfo_install_config.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_REG_PASSWORD"
              value="reg-password"
              c:type="OSINFO_INSTALL_CONFIG_PROP_REG_PASSWORD">
      <source-position filename="../osinfo/osinfo_install_config.h" line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_REG_PRODUCTKEY"
              value="reg-product-key"
              c:type="OSINFO_INSTALL_CONFIG_PROP_REG_PRODUCTKEY">
      <source-position filename="../osinfo/osinfo_install_config.h" line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_SCRIPT_DISK"
              value="script-disk"
              c:type="OSINFO_INSTALL_CONFIG_PROP_SCRIPT_DISK">
      <source-position filename="../osinfo/osinfo_install_config.h" line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_TARGET_DISK"
              value="target-disk"
              c:type="OSINFO_INSTALL_CONFIG_PROP_TARGET_DISK">
      <source-position filename="../osinfo/osinfo_install_config.h" line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_USER_ADMIN"
              value="user-admin"
              c:type="OSINFO_INSTALL_CONFIG_PROP_USER_ADMIN">
      <source-position filename="../osinfo/osinfo_install_config.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_USER_AUTOLOGIN"
              value="user-autologin"
              c:type="OSINFO_INSTALL_CONFIG_PROP_USER_AUTOLOGIN">
      <source-position filename="../osinfo/osinfo_install_config.h" line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_USER_LOGIN"
              value="user-login"
              c:type="OSINFO_INSTALL_CONFIG_PROP_USER_LOGIN">
      <source-position filename="../osinfo/osinfo_install_config.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_USER_PASSWORD"
              value="user-password"
              c:type="OSINFO_INSTALL_CONFIG_PROP_USER_PASSWORD">
      <source-position filename="../osinfo/osinfo_install_config.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_CONFIG_PROP_USER_REALNAME"
              value="user-realname"
              c:type="OSINFO_INSTALL_CONFIG_PROP_USER_REALNAME">
      <source-position filename="../osinfo/osinfo_install_config.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROFILE_DESKTOP"
              value="desktop"
              c:type="OSINFO_INSTALL_SCRIPT_PROFILE_DESKTOP">
      <source-position filename="../osinfo/osinfo_install_script.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROFILE_JEOS"
              value="jeos"
              c:type="OSINFO_INSTALL_SCRIPT_PROFILE_JEOS">
      <source-position filename="../osinfo/osinfo_install_script.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_CAN_POST_INSTALL_DRIVERS"
              value="can-post-install-drivers"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_CAN_POST_INSTALL_DRIVERS">
      <source-position filename="../osinfo/osinfo_install_script.h" line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_CAN_PRE_INSTALL_DRIVERS"
              value="can-pre-install-drivers"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_CAN_PRE_INSTALL_DRIVERS">
      <source-position filename="../osinfo/osinfo_install_script.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_EXPECTED_FILENAME"
              value="expected-filename"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_EXPECTED_FILENAME">
      <source-position filename="../osinfo/osinfo_install_script.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_INJECTION_METHOD"
              value="injection-method"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_INJECTION_METHOD">
      <source-position filename="../osinfo/osinfo_install_script.h" line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_INSTALLATION_SOURCE"
              value="installation-source"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_INSTALLATION_SOURCE">
      <source-position filename="../osinfo/osinfo_install_script.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_NEEDS_INTERNET"
              value="needs-internet"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_NEEDS_INTERNET">
      <source-position filename="../osinfo/osinfo_install_script.h" line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_PATH_FORMAT"
              value="path-format"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_PATH_FORMAT">
      <source-position filename="../osinfo/osinfo_install_script.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_POST_INSTALL_DRIVERS_SIGNING_REQ"
              value="post-install-drivers-signing-req"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_POST_INSTALL_DRIVERS_SIGNING_REQ">
      <source-position filename="../osinfo/osinfo_install_script.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_PREFERRED_INJECTION_METHOD"
              value="preferred-injection-method"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_PREFERRED_INJECTION_METHOD">
      <source-position filename="../osinfo/osinfo_install_script.h" line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_PRE_INSTALL_DRIVERS_SIGNING_REQ"
              value="pre-install-drivers-signing-req"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_PRE_INSTALL_DRIVERS_SIGNING_REQ">
      <source-position filename="../osinfo/osinfo_install_script.h" line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_PRODUCT_KEY_FORMAT"
              value="product-key-format"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_PRODUCT_KEY_FORMAT">
      <source-position filename="../osinfo/osinfo_install_script.h" line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_PROFILE"
              value="profile"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_PROFILE">
      <source-position filename="../osinfo/osinfo_install_script.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_TEMPLATE_DATA"
              value="template-data"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_TEMPLATE_DATA">
      <source-position filename="../osinfo/osinfo_install_script.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INSTALL_SCRIPT_PROP_TEMPLATE_URI"
              value="template-uri"
              c:type="OSINFO_INSTALL_SCRIPT_PROP_TEMPLATE_URI">
      <source-position filename="../osinfo/osinfo_install_script.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Image"
           c:symbol-prefix="image"
           c:type="OsinfoImage"
           parent="Entity"
           glib:type-name="OsinfoImage"
           glib:get-type="osinfo_image_get_type"
           glib:type-struct="ImageClass">
      <source-position filename="../osinfo/osinfo_image.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_image_new">
        <source-position filename="../osinfo/osinfo_image.h" line="41"/>
        <return-value transfer-ownership="full">
          <type name="Image" c:type="OsinfoImage*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="architecture" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_architecture"
              c:identifier="osinfo_image_get_architecture"
              glib:get-property="architecture"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="228">Retrieves the target hardware architecture of the OS @image provides.</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="234">the hardware architecture, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="230">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cloud_init"
              c:identifier="osinfo_image_get_cloud_init"
              glib:get-property="cloud-init"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="276">Whether @image supports cloud init customizations</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="282">#TRUE if @image supports cloud init customizations, #FALSE
otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="278">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_format"
              c:identifier="osinfo_image_get_format"
              glib:get-property="format"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="244">The format of the @image</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="250">the format, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="246">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os" c:identifier="osinfo_image_get_os" version="1.5.0">
        <source-position filename="../osinfo/osinfo_image.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="297">the operating system, or NULL</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="295">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_variants"
              c:identifier="osinfo_image_get_os_variants"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="326">Gets the varriants of the associated operating system</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="332">the operating system variants, or NULL</doc>
          <type name="OsVariantList" c:type="OsinfoOsVariantList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="328">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="osinfo_image_get_url"
              glib:get-property="url"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="260">The URL to the @image</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_image.c"
               line="266">the URL, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="262">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_os" c:identifier="osinfo_image_set_os" version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="308">Sets the #OsinfoOs associated to the #OsinfoImage instance.</doc>
        <source-position filename="../osinfo/osinfo_image.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="310">an #OsinfoImage instance</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_image.c"
                 line="311">an #OsinfoOs instance</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
        </parameters>
      </method>
      <property name="architecture"
                writable="1"
                transfer-ownership="none"
                getter="get_architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="154">The target hardware architecture of this image.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="cloud-init"
                writable="1"
                transfer-ownership="none"
                getter="get_cloud_init">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="190">Whether the image supports cloud-init customizations or not.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="format"
                writable="1"
                transfer-ownership="none"
                getter="get_format">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="166">The image format.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="url"
                writable="1"
                transfer-ownership="none"
                getter="get_url">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_image.c"
             line="178">The URL to this image.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="ImagePrivate" c:type="OsinfoImagePrivate*"/>
      </field>
    </class>
    <record name="ImageClass"
            c:type="OsinfoImageClass"
            glib:is-gtype-struct-for="Image">
      <source-position filename="../osinfo/osinfo_image.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="ImageList"
           c:symbol-prefix="imagelist"
           c:type="OsinfoImageList"
           parent="List"
           glib:type-name="OsinfoImageList"
           glib:get-type="osinfo_imagelist_get_type"
           glib:type-struct="ImageListClass">
      <source-position filename="../osinfo/osinfo_imagelist.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_imagelist_new"
                   version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_imagelist.c"
             line="62">Construct a new image list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_imagelist.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_imagelist.c"
               line="67">an empty image list</doc>
          <type name="ImageList" c:type="OsinfoImageList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="ImageListPrivate" c:type="OsinfoImageListPrivate*"/>
      </field>
    </class>
    <record name="ImageListClass"
            c:type="OsinfoImageListClass"
            glib:is-gtype-struct-for="ImageList">
      <source-position filename="../osinfo/osinfo_imagelist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="ImageListPrivate"
            c:type="OsinfoImageListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_imagelist.h" line="29"/>
    </record>
    <record name="ImagePrivate" c:type="OsinfoImagePrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_image.h" line="29"/>
    </record>
    <class name="InstallConfig"
           c:symbol-prefix="install_config"
           c:type="OsinfoInstallConfig"
           parent="Entity"
           glib:type-name="OsinfoInstallConfig"
           glib:get-type="osinfo_install_config_get_type"
           glib:type-struct="InstallConfigClass">
      <source-position filename="../osinfo/osinfo_install_config.h" line="28"/>
      <constructor name="new"
                   c:identifier="osinfo_install_config_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="88">Construct a new install configuration with default values for
language, keyboard, timezone and admin password. The default values
are to use an 'en_US' language and keyboard, and an 'America/New_York'
timezone. The admin password is set to a random 8 character password.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="97">an install configuration with default
values</doc>
          <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="90">the unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_admin_password"
              c:identifier="osinfo_install_config_get_admin_password"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="279">The value of #OSINFO_INSTALL_CONFIG_PROP_ADMIN_PASSWORD parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="277">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_avatar_disk"
              c:identifier="osinfo_install_config_get_avatar_disk"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="737">The value of #OSINFO_INSTALL_CONFIG_PROP_AVATAR_DISK parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="735">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_avatar_location"
              c:identifier="osinfo_install_config_get_avatar_location"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="702">The value of #OSINFO_INSTALL_CONFIG_PROP_AVATAR_LOCATION parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="700">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_driver_signing"
              c:identifier="osinfo_install_config_get_driver_signing"
              version="0.2.6">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="938">%TRUE if driver signing is currently enabled, %FALSE otherwise, see
#osinfo_install_config_set_driver_signing() for more details about driver
signing.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="936">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hardware_arch"
              c:identifier="osinfo_install_config_get_hardware_arch"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="133">The value of #OSINFO_INSTALL_CONFIG_PROP_HARDWARE_ARCH parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="131">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hostname"
              c:identifier="osinfo_install_config_get_hostname"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="588">The value of #OSINFO_INSTALL_CONFIG_PROP_HOSTNAME parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="586">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installation_url"
              c:identifier="osinfo_install_config_get_installation_url"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="970">Returns the URL the script will use to perform the installation.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="175"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="972">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_l10n_keyboard"
              c:identifier="osinfo_install_config_get_l10n_keyboard"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="168">The value of #OSINFO_INSTALL_CONFIG_PROP_L10N_KEYBOARD parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="166">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_l10n_language"
              c:identifier="osinfo_install_config_get_l10n_language"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="209">The value of #OSINFO_INSTALL_CONFIG_PROP_L10N_LANGUAGE parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="207">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_l10n_timezone"
              c:identifier="osinfo_install_config_get_l10n_timezone"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="245">The value of #OSINFO_INSTALL_CONFIG_PROP_L10N_TIMEZONE parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="243">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_post_install_drivers_disk"
              c:identifier="osinfo_install_config_get_post_install_drivers_disk"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="862">The disk on which post-installation drivers are located, or NULL if
its not set using #osinfo_install_config_set_post_install_drivers_disk().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="860">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_post_install_drivers_location"
              c:identifier="osinfo_install_config_get_post_install_drivers_location"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="903">The disk on which post-installation drivers are located, or NULL if
its not set using #osinfo_install_config_set_post_install_drivers_location().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="901">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pre_install_drivers_disk"
              c:identifier="osinfo_install_config_get_pre_install_drivers_disk"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="782">The disk on which pre-installation drivers are located, or NULL if
its not set using #osinfo_install_config_set_pre_install_drivers_disk().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="780">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pre_install_drivers_location"
              c:identifier="osinfo_install_config_get_pre_install_drivers_location"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="821">The location on which pre-installation drivers are located, or NULL if
its not set using #osinfo_install_config_set_pre_install_drivers_location().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="819">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reg_login"
              c:identifier="osinfo_install_config_get_reg_login"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="483">The value of #OSINFO_INSTALL_CONFIG_PROP_REG_LOGIN parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="481">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reg_password"
              c:identifier="osinfo_install_config_get_reg_password"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="516">The value of #OSINFO_INSTALL_CONFIG_PROP_REG_PASSWORD parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="514">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reg_product_key"
              c:identifier="osinfo_install_config_get_reg_product_key"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="549">The value of #OSINFO_INSTALL_CONFIG_PROP_REG_PRODUCTKEY parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="547">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_script_disk"
              c:identifier="osinfo_install_config_get_script_disk"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="662">The value of #OSINFO_INSTALL_CONFIG_PROP_SCRIPT_DISK parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="660">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_disk"
              c:identifier="osinfo_install_config_get_target_disk"
              version="0.2.2">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="627">The value of #OSINFO_INSTALL_CONFIG_PROP_TARGET_DISK parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="625">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_administrator"
              c:identifier="osinfo_install_config_get_user_administrator"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="450">The value of #OSINFO_INSTALL_CONFIG_PROP_USER_ADMIN parameter,
         or NULL.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="448">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_autologin"
              c:identifier="osinfo_install_config_get_user_autologin"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="416">The value of #OSINFO_INSTALL_CONFIG_PROP_USER_AUTOLOGIN parameter,
         or NULL.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="414">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_login"
              c:identifier="osinfo_install_config_get_user_login"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="313">The value of #OSINFO_INSTALL_CONFIG_PROP_USER_LOGIN parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="311">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_password"
              c:identifier="osinfo_install_config_get_user_password"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="347">The value of #OSINFO_INSTALL_CONFIG_PROP_USER_PASSWORD parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="345">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_realname"
              c:identifier="osinfo_install_config_get_user_realname"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config.c"
               line="381">The value of #OSINFO_INSTALL_CONFIG_PROP_USER_REALNAME parameter,
         or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="379">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_admin_password"
              c:identifier="osinfo_install_config_set_admin_password"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="257">Sets the #OSINFO_INSTALL_CONFIG_PROP_ADMIN_PASSWORD parameter</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="259">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="260">the administrator password to be set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_avatar_disk"
              c:identifier="osinfo_install_config_set_avatar_disk"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="713">Sets the #OSINFO_INSTALL_CONFIG_PROP_AVATAR_DISK parameter.

Please read documentation on #osinfo_install_config_set_target_disk() for
explanation on the format of @disk string.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="715">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="716">the avatar disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_avatar_location"
              c:identifier="osinfo_install_config_set_avatar_location"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="673">Sets the #OSINFO_INSTALL_CONFIG_PROP_AVATAR_LOCATION parameter.

Note that the format of this string is dependent on the installer script
@config is going to be used with. You can use
#osinfo_install_script_get_path_format() to find out which format
does the script expects this string to be in.

Also note that in case of #OSINFO_PATH_FORMAT_DOS, the drive/disk letter
and the leading ':' must not be included in the path.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="675">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="676">new location</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_driver_signing"
              c:identifier="osinfo_install_config_set_driver_signing"
              version="0.2.6">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="915">If a script requires drivers to be signed, this function can be used to
disable that security feature. WARNING: Disabling driver signing may very
well mean disabling it permanently.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="917">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="signing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="918">boolean value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hardware_arch"
              c:identifier="osinfo_install_config_set_hardware_arch"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="109">Sets the #OSINFO_INSTALL_CONFIG_PROP_HARDWARE_ARCH parameter.

The list of valid architectures are part of osinfo.rng schema</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="111">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="arch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="112">the hardware architecture</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hostname"
              c:identifier="osinfo_install_config_set_hostname"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="560">Sets the #OSINFO_INSTALL_CONFIG_PROP_HOSTNAME parameter.

Note that some operating systems have restrictions on maximum number of, and
allowed characters in hostname (or its equivalent) so it is highly
recommended that you keep the actual hostname less than or equal to 15
characters long and make sure that it does not contain any characters other
than ASCII alphanumeric and '-'. Otherwise unattended installation might
fail.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="562">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="hostname" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="563">the desired hostname</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_installation_url"
              c:identifier="osinfo_install_config_set_installation_url"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="952">When performing a tree based installation the script will need the installation
URL to be set, whenever the installation is performed from a non canonical place.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="954">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="955">the URL used to perform the installation</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_l10n_keyboard"
              c:identifier="osinfo_install_config_set_l10n_keyboard"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="144">Sets the #OSINFO_INSTALL_CONFIG_PROP_L10N_KEYBOARD parameter.

The expected format of this string is the same as
#osinfo_install_config_set_l10n_language function's 'language' parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="146">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="keyboard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="147">the keyboard</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_l10n_language"
              c:identifier="osinfo_install_config_set_l10n_language"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="179">Sets the #OSINFO_INSTALL_CONFIG_PROP_L10N_LANGUAGE parameter.

The expected format of this string is the gettext locale names standard:

https://www.gnu.org/savannah-checkouts/gnu/gettext/manual/html_node/Locale-Names.html

Encoding and variant are (at least for now) not supported. For example,
'pt_BR' is accepted is accepted as the language codes for Brazilian Portuguese
but 'pt_BR.utf8' is not.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="181">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="language" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="182">the language</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_l10n_timezone"
              c:identifier="osinfo_install_config_set_l10n_timezone"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="221">Set the #OSINFO_INSTALL_CONFIG_PROP_L10N_TIMEZONE parameter.

The expected format of this string is the tzdata names standard.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="223">the install config.</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="tz" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="224">the timezone</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_post_install_drivers_disk"
              c:identifier="osinfo_install_config_set_post_install_drivers_disk"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="833">Specify the disk on which drivers to be installed at the end of installation,
are available.

Please read documentation on #osinfo_install_config_set_target_disk() for
explanation on the format of @disk string.

NOTE: Not every install script supports post-installation of drivers. Use
#osinfo_install_script_get_can_post_install_drivers() to find out if an
install script supports it.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="835">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="836">the target disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_post_install_drivers_location"
              c:identifier="osinfo_install_config_set_post_install_drivers_location"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="874">Specify the disk on which drivers to be installed at the end of installation,
are available.

Please read documentation on #osinfo_install_config_set_avatar_location() for
explanation on the format of @location string.

NOTE: Not every install script supports post-installation of drivers. Use
#osinfo_install_script_get_can_post_install_drivers() to find out if an
install script supports it.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="876">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="877">the location of avatar</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pre_install_drivers_disk"
              c:identifier="osinfo_install_config_set_pre_install_drivers_disk"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="748">Specify the disk on which drivers to be installed at the very beginning of
installation, are available. This is usually needed for devices for which the
OS in question does not have out of the box support for and devices are
required/preferred to be available during actual installation.

Please read documentation on #osinfo_install_config_set_target_disk() for
explanation on the format of @disk string.

NOTE: Not every install script supports pre-installation of drivers. Use
#osinfo_install_script_get_can_pre_install_drivers() to find out if an
installer script supports it.

NOTE: Microsoft Windows XP requires pre-installation driver files to be
present in the script disk under the toplevel directory.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="750">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="751">the disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pre_install_drivers_location"
              c:identifier="osinfo_install_config_set_pre_install_drivers_location"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="794">Specify the location on which drivers to be installed at the very beginning of
installation, are available. Please read documentation on
#osinfo_install_config_set_pre_install_drivers_disk() for more information
about pre-installation of drivers.

Please read documentation on #osinfo_install_config_set_avatar_location() for
explanation on the format of @location string.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="796">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="797">the location</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reg_login"
              c:identifier="osinfo_install_config_set_reg_login"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="462">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_REG_LOGIN parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="464">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="465">the registration login</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reg_password"
              c:identifier="osinfo_install_config_set_reg_password"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="495">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_REG_PASSWORD parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="497">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="498">the registration password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reg_product_key"
              c:identifier="osinfo_install_config_set_reg_product_key">
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_script_disk"
              c:identifier="osinfo_install_config_set_script_disk"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="638">Sets the #OSINFO_INSTALL_CONFIG_PROP_SCRIPT_DISK parameter.

Please read documentation on #osinfo_install_config_set_target_disk() for
explanation on the format of @disk string.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="640">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="641">the disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target_disk"
              c:identifier="osinfo_install_config_set_target_disk"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="599">Sets the #OSINFO_INSTALL_CONFIG_PROP_TARGET_DISK parameter.

Note that the format of this string is dependent on the installer script
@config is going to be used with. You can use
#osinfo_install_script_get_path_format() to find out which format
does the script expects this string to be in. In case of
#OSINFO_PATH_FORMAT_UNIX unix device node names are expected, e.g "/dev/fd0".
In case of #OSINFO_PATH_FORMAT_DOS drive letters are expected, e.g "A".</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="601">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="disk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="602">the target disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_administrator"
              c:identifier="osinfo_install_config_set_user_administrator"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="428">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_USER_ADMIN parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="430">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="admin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="431">whether the user should be set as administrator or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_autologin"
              c:identifier="osinfo_install_config_set_user_autologin"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="394">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_USER_AUTOLOGIN parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="396">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="autologin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="397">whether autologin should be set for the user or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_login"
              c:identifier="osinfo_install_config_set_user_login"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="291">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_USER_LOGIN parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="293">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="username" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="294">the chosen username for the user log into the system</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_password"
              c:identifier="osinfo_install_config_set_user_password"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="325">Sets the #OSINFO_INSTALL_CONFIG_PROP_USER_PASSWORD parameter</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="327">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="328">the user password to be set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_realname"
              c:identifier="osinfo_install_config_set_user_realname"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config.c"
             line="359">Sets the value of #OSINFO_INSTALL_CONFIG_PROP_USER_REALNAME parameter.</doc>
        <source-position filename="../osinfo/osinfo_install_config.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="361">the install config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config.c"
                 line="362">the user real name to be displayed</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="InstallConfigPrivate"
              c:type="OsinfoInstallConfigPrivate*"/>
      </field>
    </class>
    <record name="InstallConfigClass"
            c:type="OsinfoInstallConfigClass"
            glib:is-gtype-struct-for="InstallConfig">
      <source-position filename="../osinfo/osinfo_install_config.h" line="28"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="InstallConfigParam"
           c:symbol-prefix="install_config_param"
           c:type="OsinfoInstallConfigParam"
           parent="Entity"
           glib:type-name="OsinfoInstallConfigParam"
           glib:get-type="osinfo_install_config_param_get_type"
           glib:type-struct="InstallConfigParamClass">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="28"/>
      <constructor name="new"
                   c:identifier="osinfo_install_config_param_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.c"
             line="186">Construct a new configuration parameter for an #OsinfoInstallScript.</doc>
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="192">the new configuration parameter</doc>
          <type name="InstallConfigParam" c:type="OsinfoInstallConfigParam*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="188">the configuration parameter name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name"
              c:identifier="osinfo_install_config_param_get_name"
              glib:get-property="name"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="208">the name of the configuration parameter</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="206">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_policy"
              c:identifier="osinfo_install_config_param_get_policy"
              glib:get-property="policy"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="222">the policy of the configuration parameter</doc>
          <type name="InstallConfigParamPolicy"
                c:type="OsinfoInstallConfigParamPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="220">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_map"
              c:identifier="osinfo_install_config_param_get_value_map"
              glib:get-property="value-map"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="266">The data map used to transform values set for this
                          parameter to OS-specific values, or NULL.</doc>
          <type name="Datamap" c:type="OsinfoDatamap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="264">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_optional"
              c:identifier="osinfo_install_config_param_is_optional"
              version="0.2.1">
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="252">TRUE if the config_param is optional. FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="250">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_required"
              c:identifier="osinfo_install_config_param_is_required"
              version="0.2.1">
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_param.c"
               line="238">TRUE if the config_param is required. FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="236">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value_map"
              c:identifier="osinfo_install_config_param_set_value_map"
              glib:set-property="value-map"
              version="0.2.8">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.c"
             line="276">After a call to osinfo_install_config_param_set_value_map(), @datamap will
be used to transform values set for this parameter to OS-specific
values. A NULL @datamap will disable transformations.</doc>
        <source-position filename="../osinfo/osinfo_install_config_param.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="278">the configuration parameter</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </instance-parameter>
          <parameter name="datamap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_config_param.c"
                 line="279">a #OsinfoDatamap to transform values this parameter is set to,
or NULL to disable transformations for this parameter</doc>
            <type name="Datamap" c:type="OsinfoDatamap*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.c"
             line="139">The name of the configuration parameter.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="policy" transfer-ownership="none" getter="get_policy">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.c"
             line="152">The policy of the configuration parameter.</doc>
        <type name="InstallConfigParamPolicy"/>
      </property>
      <property name="value-map"
                writable="1"
                transfer-ownership="none"
                setter="set_value_map"
                getter="get_value_map">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.c"
             line="164">The mapping between generic values and OS-specific values for this
configuration parameter</doc>
        <type name="Datamap"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="InstallConfigParamPrivate"
              c:type="OsinfoInstallConfigParamPrivate*"/>
      </field>
    </class>
    <record name="InstallConfigParamClass"
            c:type="OsinfoInstallConfigParamClass"
            glib:is-gtype-struct-for="InstallConfigParam">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="28"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="InstallConfigParamList"
           c:symbol-prefix="install_config_paramlist"
           c:type="OsinfoInstallConfigParamList"
           parent="List"
           glib:type-name="OsinfoInstallConfigParamList"
           glib:get-type="osinfo_install_config_paramlist_get_type"
           glib:type-struct="InstallConfigParamListClass">
      <source-position filename="../osinfo/osinfo_install_config_paramlist.h"
                       line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_install_config_paramlist_new"
                   version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_paramlist.c"
             line="62">Construct a new install_config_param list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_install_config_paramlist.h"
                         line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_config_paramlist.c"
               line="67">an empty install_config_param list</doc>
          <type name="InstallConfigParamList"
                c:type="OsinfoInstallConfigParamList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="InstallConfigParamListPrivate"
              c:type="OsinfoInstallConfigParamListPrivate*"/>
      </field>
    </class>
    <record name="InstallConfigParamListClass"
            c:type="OsinfoInstallConfigParamListClass"
            glib:is-gtype-struct-for="InstallConfigParamList">
      <source-position filename="../osinfo/osinfo_install_config_paramlist.h"
                       line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="InstallConfigParamListPrivate"
            c:type="OsinfoInstallConfigParamListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_install_config_paramlist.h"
                       line="29"/>
    </record>
    <enumeration name="InstallConfigParamPolicy"
                 version="0.2.2"
                 glib:type-name="OsinfoInstallConfigParamPolicy"
                 glib:get-type="osinfo_install_config_param_policy_get_type"
                 c:type="OsinfoInstallConfigParamPolicy">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_config_param.h"
           line="38">Policy for configuration parameter presence</doc>
      <member name="none"
              value="0"
              c:identifier="OSINFO_INSTALL_CONFIG_PARAM_POLICY_NONE"
              glib:nick="none"
              glib:name="OSINFO_INSTALL_CONFIG_PARAM_POLICY_NONE">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.h"
             line="40">no policy defined</doc>
      </member>
      <member name="required"
              value="1"
              c:identifier="OSINFO_INSTALL_CONFIG_PARAM_POLICY_REQUIRED"
              glib:nick="required"
              glib:name="OSINFO_INSTALL_CONFIG_PARAM_POLICY_REQUIRED">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.h"
             line="41">config parameter is required</doc>
      </member>
      <member name="optional"
              value="2"
              c:identifier="OSINFO_INSTALL_CONFIG_PARAM_POLICY_OPTIONAL"
              glib:nick="optional"
              glib:name="OSINFO_INSTALL_CONFIG_PARAM_POLICY_OPTIONAL">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_config_param.h"
             line="42">config parameter may be omitted</doc>
      </member>
    </enumeration>
    <record name="InstallConfigParamPrivate"
            c:type="OsinfoInstallConfigParamPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_install_config_param.h"
                       line="28"/>
    </record>
    <record name="InstallConfigPrivate"
            c:type="OsinfoInstallConfigPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_install_config.h" line="28"/>
    </record>
    <class name="InstallScript"
           c:symbol-prefix="install_script"
           c:type="OsinfoInstallScript"
           parent="Entity"
           glib:type-name="OsinfoInstallScript"
           glib:get-type="osinfo_install_script_get_type"
           glib:type-struct="InstallScriptClass">
      <source-position filename="../osinfo/osinfo_install_script.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_install_script_new">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="128"/>
        <return-value transfer-ownership="full">
          <type name="InstallScript" c:type="OsinfoInstallScript*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_data"
                   c:identifier="osinfo_install_script_new_data"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="403">Construct a new install script from stylesheet data</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="411">an new install script</doc>
          <type name="InstallScript" c:type="OsinfoInstallScript*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="405">a unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="406">the profile of script</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="templateData" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="407">style sheet data</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_uri"
                   c:identifier="osinfo_install_script_new_uri"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="427">Construct a new install script from a stylesheet URI</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="129"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="435">an new install script</doc>
          <type name="InstallScript" c:type="OsinfoInstallScript*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="429">a unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="430">the profile of script</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="templateUri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="431">style sheet URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="generate"
              c:identifier="osinfo_install_script_generate"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1345">Creates an install script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="163"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1355">the script as string.

If you are generating the script for a specific media, it is recommended
that you use #osinfo_install_script_generate_for_media() instead.

If you are generating the script for a specific tree, it is recommended
that you use #osinfo_install_script_generate_for_tree() in instead.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1347">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1348">the os</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1349">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1350">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_async"
              c:identifier="osinfo_install_script_generate_async"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1111">Asynchronous variant of #osinfo_install_script_generate(). From the callback,
call #osinfo_install_script_generate_finish() to conclude this call and get
the generated script.

If you are generating the script for a specific media, it is recommended that
you use #osinfo_install_script_generate_for_media_async() instead.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1113">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1114">the os</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1115">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1116">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1117">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1118">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_command_line"
              c:identifier="osinfo_install_script_generate_command_line"
              version="0.2.7">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1957">Some install scripts need to pass a command line to the kernel, Such install
scripts belong to OSs that provide paths to the kernel and initrd files that
can be used to directly boot
(http://wiki.qemu.org/download/qemu-doc.html#direct_005flinux_005fboot)
the OS in order to pass the needed commandline to it.

If you are generating the command line for a specific media, it is
recommended that you use
#osinfo_install_script_generate_command_line_for_media() instead.

If you are generating the command line for a specific tree, it is
recommended that you use
#osinfo_install_script_generate_command_line_for_tree() instead.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="220"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1977">The generated command line string, NULL otherwise.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1959">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1960">the os entity</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1961">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_command_line_for_media"
              c:identifier="osinfo_install_script_generate_command_line_for_media"
              version="0.2.12">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2007">Some install scripts need to pass a command line to the kernel, Such install
scripts belong to OSs that provide paths to the kernel and initrd files that
can be used to directly boot
(http://wiki.qemu.org/download/qemu-doc.html#direct_005flinux_005fboot)
the OS in order to pass the needed commandline to it.

The media @media must have been identified successfully using
#osinfo_db_identify_media() before calling this function.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="223"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2022">The generated command line string, NULL otherwise.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2009">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2010">the media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2011">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_command_line_for_tree"
              c:identifier="osinfo_install_script_generate_command_line_for_tree"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2059">Some install scripts need to pass a command line to the kernel, Such install
scripts belong to OSs that provide paths to the kernel and initrd files that
can be used to directly boot
(http://wiki.qemu.org/download/qemu-doc.html#direct_005flinux_005fboot)
the OS in order to pass the needed commandline to it.

The tree @tree must have been identified successfully using
#osinfo_db_identify_tree() before calling this function.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="226"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2074">The generated command line string, NULL otherwise.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2061">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2062">the tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2063">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_finish"
              c:identifier="osinfo_install_script_generate_finish"
              version="0.2.0"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="159"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1163">the generated script, or NULL on error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1159">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1160">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_media"
              c:identifier="osinfo_install_script_generate_for_media"
              version="0.2.12"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1446">Creates an install script. The media @media must have been identified
successfully using #osinfo_db_identify_media() before calling this function.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="197"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1457">the script as string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1448">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1449">the media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1450">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1451">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_media_async"
              c:identifier="osinfo_install_script_generate_for_media_async"
              version="0.2.12">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1394">Asynchronous variant of #osinfo_install_script_generate_for_media(). From the
callback, call #osinfo_install_script_generate_for_media_finish() to
conclude this call and get the generated script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1396">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1397">the media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1398">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1399">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1400">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1401">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_media_finish"
              c:identifier="osinfo_install_script_generate_for_media_finish"
              version="0.2.12"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="194"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1182">the generated script, or NULL on error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1178">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1179">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_tree"
              c:identifier="osinfo_install_script_generate_for_tree"
              version="1.6.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1542">Creates an install script. The tree @tree must have been identified
successfully using #osinfo_db_identify_tree() before calling this function.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="267"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1553">the script as string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1544">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1545">the tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1546">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1547">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_tree_async"
              c:identifier="osinfo_install_script_generate_for_tree_async"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1490">Asynchronous variant of #osinfo_install_script_generate_for_tree(). From the
callback, call #osinfo_install_script_generate_for_tree_finish() to
conclude this call and get the generated script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="258"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1492">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1493">the tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1494">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1495">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1496">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1497">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_for_tree_finish"
              c:identifier="osinfo_install_script_generate_for_tree_finish"
              version="1.6.0"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="264"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1201">the generated script, or NULL or error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1197">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1198">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output"
              c:identifier="osinfo_install_script_generate_output"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1778">Creates an install script that is written to the returned file.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="181"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1790">a file containing the script

If you are generating the script for a specific media, it is recommended
that you use #osinfo_install_script_generate_output_for_media() instead.

If you are generating the script for a specific tree, it is recommended
that you use #osinfo_install_script_generate_output_for_tree() instead.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1780">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1781">the os entity</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1782">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1783">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1785">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_async"
              c:identifier="osinfo_install_script_generate_output_async"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1685">Asynchronous variant of #osinfo_install_script_generate_output(). From the
callback, call #osinfo_install_script_generate_output_finish() to conclude
this call and get the generated script.

If you are generating the script for a specific media, it is recommended that
you use #osinfo_install_script_generate_output_for_media_async() instead.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1687">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1688">the os</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1689">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1690">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1692">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1693">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1694">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_finish"
              c:identifier="osinfo_install_script_generate_output_finish"
              version="0.2.3"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="177"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1220">a file containing the script, or NULL on error</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1216">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1217">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_media"
              c:identifier="osinfo_install_script_generate_output_for_media"
              version="0.2.12"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1854">Creates an install script that is written to the returned file.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="213"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1866">a file containing the script.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1856">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1857">the media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1858">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1859">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1861">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_media_async"
              c:identifier="osinfo_install_script_generate_output_for_media_async"
              version="0.2.12">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1817">Asynchronous variant of #osinfo_install_script_generate_output_for_media().
From the callback, call
#osinfo_install_script_generate_output_for_media_finish() to conclude this
call and get the generated file.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1819">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1820">the media</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1821">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1822">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1824">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1825">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1826">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_media_finish"
              c:identifier="osinfo_install_script_generate_output_for_media_finish"
              version="0.2.12"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="210"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1239">a file containing the script, or NULL on error.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1235">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1236">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_tree"
              c:identifier="osinfo_install_script_generate_output_for_tree"
              version="1.6.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1924">Creates an install script that is written to the returned file.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1936">a file containing the script.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1926">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1927">the tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1928">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1929">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1931">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_tree_async"
              c:identifier="osinfo_install_script_generate_output_for_tree_async"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="1887">Asynchronous variant of #osinfo_install_script_generate_output_for_tree().
From the callback, call
#osinfo_install_script_generate_output_for_tree_finish() to conclude this
call and get the generated file.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="273"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1889">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1890">the tree</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1891">the install script config</doc>
            <type name="InstallConfig" c:type="OsinfoInstallConfig*"/>
          </parameter>
          <parameter name="output_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1892">the directory where the file containing the output script
             will be written</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1894">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1895">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1896">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_output_for_tree_finish"
              c:identifier="osinfo_install_script_generate_output_for_tree_finish"
              version="1.6.0"
              throws="1">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="280"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="1258">a file containing the script, or NULL on error.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1254">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="1255">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_avatar_format"
              c:identifier="osinfo_install_script_get_avatar_format"
              glib:get-property="avatar-format"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="618">Some install scripts have restrictions on the format of the user avatar. Use
this method to retrieve those restrictions in the form of an
#OsinfoAvatarFormat instance.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="626">The avatar format, or NULL if there is no restrictions on the
                          format of avatar</doc>
          <type name="AvatarFormat" c:type="OsinfoAvatarFormat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="620">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_post_install_drivers"
              c:identifier="osinfo_install_script_get_can_post_install_drivers"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2152">Whether install script can install drivers at the very end of installation
This can be used for installing devices which the OS in question does not
have out of the box support.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2160">TRUE if install script supports post-installable drivers, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2154">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_pre_install_drivers"
              c:identifier="osinfo_install_script_get_can_pre_install_drivers"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2132">Whether install script can install drivers at the very beginning of
installation. This is needed for devices for which the OS in question does
not have out of the box support for and devices are required/preferred to be
available during actual installation.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="240"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2141">TRUE if install script supports pre-installable drivers, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2134">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_config_param"
              c:identifier="osinfo_install_script_get_config_param"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="350">Get a config param from the config param's list</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="234"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="357">the sought config param, if exists.
                          NULL otherwise.

This code assumes that the 'id' and 'name' entity properties are
the same.</doc>
          <type name="InstallConfigParam" c:type="OsinfoInstallConfigParam*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="352">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="353">name of the parameter</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config_param_list"
              c:identifier="osinfo_install_script_get_config_param_list"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="317">Get the list of valid config parameters for @script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="236"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="323">the
list of valid #OsinfoInstallConfigParam parameters. Free with
g_list_free() when done. The elements are owned by libosinfo.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="InstallScript"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="319">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_config_params"
              c:identifier="osinfo_install_script_get_config_params"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="334">Get the list of valid config parameters for @script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="340">the list of valid #OsinfoInstallConfigParam
parameters.</doc>
          <type name="InstallConfigParamList"
                c:type="OsinfoInstallConfigParamList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="336">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expected_filename"
              c:identifier="osinfo_install_script_get_expected_filename"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="568">Some operating systems (as Windows) expect that script filename has
particular name to work.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="575">the expected script filename</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="570">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_injection_methods"
              c:identifier="osinfo_install_script_get_injection_methods"
              version="0.2.10">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2211">Retrieve the supported method to inject the script in to the installation process.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="246"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2217">bitwise-or of
supported methods for install script injection.</doc>
          <type name="InstallScriptInjectionMethod" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2213">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installation_source"
              c:identifier="osinfo_install_script_get_installation_source"
              glib:get-property="installation-source"
              version="1.3.0">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="256"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2344">the installation source to be used with the script. If none is set, it defaults to
OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_MEDIA.</doc>
          <type name="InstallScriptInstallationSource"
                c:type="OsinfoInstallScriptInstallationSource"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2342">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_needs_internet"
              c:identifier="osinfo_install_script_get_needs_internet"
              version="0.2.11">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2230">Some install scripts cannot ensure that they work without an internet connection.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="248"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2236">TRUE if script needs an internet connection, FALSE otherwise
internet connection.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2232">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_output_filename"
              c:identifier="osinfo_install_script_get_output_filename"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="585">Some operating systems are able to use any script filename, allowing the
application to set the filename as desired. libosinfo provides this
functionality by set the expected filename's prefix using
osinfo_install_script_set_output_prefix() function.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="594">the output script filename</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="587">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_output_prefix"
              c:identifier="osinfo_install_script_get_output_prefix"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="559">the prefix of the file generated</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="557">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path_format"
              c:identifier="osinfo_install_script_get_path_format"
              glib:get-property="path-format"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2111">Returns the path format to be used for the files and disks which will
be used during the installation.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="238"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2118">the path format to be used. OSINFO_PATH_FORMAT_UNIX is the
         default option.</doc>
          <type name="PathFormat" c:type="OsinfoPathFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2113">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_post_install_drivers_signing_req"
              c:identifier="osinfo_install_script_get_post_install_drivers_signing_req"
              version="0.2.6">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2191">If install script can install drivers at the end of installation, this
function retrieves the requirement about signed status of drivers.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="244"/>
        <return-value transfer-ownership="none">
          <type name="DeviceDriverSigningReq" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2193">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pre_install_drivers_signing_req"
              c:identifier="osinfo_install_script_get_pre_install_drivers_signing_req"
              version="0.2.6">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2171">If install script can install drivers at the very beginning of installation,
this function retrieves the requirement about signed status of drivers.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="243"/>
        <return-value transfer-ownership="none">
          <type name="DeviceDriverSigningReq" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2173">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_preferred_injection_method"
              c:identifier="osinfo_install_script_get_preferred_injection_method"
              glib:get-property="preferred-injection-method"
              version="1.3.0">
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="252"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="2285">the preferred injection method for the script. If none is set and
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_DISK is supported,
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_DISK is returned, otherwise
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_INITRD is returned.</doc>
          <type name="InstallScriptInjectionMethod"
                c:type="OsinfoInstallScriptInjectionMethod"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2283">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product_key_format"
              c:identifier="osinfo_install_script_get_product_key_format"
              glib:get-property="product-key-format"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="497">If this function returns a non-NULL string, it means that the @script
requires you to specify product registration key through #OsinfoInstallConfig
instance passed to script generation methods.

The returned string specifies the expected format of the product key like this:

@ - any character
% - alphabet
# - numeric character
$ - alphanumeric character

All other characters represent themselves.

For example in case of installer for Microsoft Windows XP, you'll get
"$$$$$-$$$$$-$$$$$-$$$$$-$$$$$". That means a product key consists of 24
alphanumeric characters and 4 '-' characters at (0-based) indices 5, 11, 17
and 23.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_script.c"
               line="519">Product key format mask, or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="499">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="osinfo_install_script_get_profile"
              glib:get-property="profile"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="479">Returns a string representing the install script profile that's going to be
used.

The values supported are "jeos" for minimal installations and "desktop" for
workstation/desktop installations.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="481">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_template_data"
              c:identifier="osinfo_install_script_get_template_data"
              glib:get-property="template-data"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="465">Returns the stylesheet data used to construct the install script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="467">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_template_uri"
              c:identifier="osinfo_install_script_get_template_uri"
              glib:get-property="template-uri"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="451">Returns the stylesheet URI used to construct the install script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="453">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_config_param"
              c:identifier="osinfo_install_script_has_config_param"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="285">Returns whether the @script has the @config_param searched or not.

This code assumes that the 'id' and 'name' entity properties are the same.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="230"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="287">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="config_param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="288">an #OsinfoInstallConfigParam</doc>
            <type name="InstallConfigParam"
                  c:type="OsinfoInstallConfigParam*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_config_param_name"
              c:identifier="osinfo_install_script_has_config_param_name"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="302">Returns whether the @script has a configuration parameter matching @name or not.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="304">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="305">the configuration parameter name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_installation_source"
              c:identifier="osinfo_install_script_set_installation_source"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2320">Set the installation source to be used with the @script.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="254"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2322">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2323">one of the installation sources:
OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_MEDIA,
OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_NETWORK</doc>
            <type name="InstallScriptInstallationSource"
                  c:type="OsinfoInstallScriptInstallationSource"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_output_prefix"
              c:identifier="osinfo_install_script_set_output_prefix"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="529">Mind that not all installers support any name for the installer scripts.</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="531">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="532">a prefix to be added to the file generated</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_preferred_injection_method"
              c:identifier="osinfo_install_script_set_preferred_injection_method"
              glib:set-property="preferred-injection-method"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.c"
             line="2249">Set the preferred injection method to be used with the @script</doc>
        <source-position filename="../osinfo/osinfo_install_script.h"
                         line="250"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2251">the install script</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </instance-parameter>
          <parameter name="method" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_script.c"
                 line="2252">one of the injection methods:
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_CDROM,
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_DISK,
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_FLOPPY,
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_INITRD,
OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_WEB</doc>
            <type name="InstallScriptInjectionMethod"
                  c:type="OsinfoInstallScriptInjectionMethod"/>
          </parameter>
        </parameters>
      </method>
      <property name="avatar-format"
                transfer-ownership="none"
                getter="get_avatar_format">
        <type name="AvatarFormat"/>
      </property>
      <property name="installation-source"
                transfer-ownership="none"
                getter="get_installation_source">
        <type name="InstallScriptInstallationSource"/>
      </property>
      <property name="path-format"
                transfer-ownership="none"
                getter="get_path_format">
        <type name="PathFormat"/>
      </property>
      <property name="preferred-injection-method"
                writable="1"
                transfer-ownership="none"
                setter="set_preferred_injection_method"
                getter="get_preferred_injection_method">
        <type name="InstallScriptInjectionMethod"/>
      </property>
      <property name="product-key-format"
                transfer-ownership="none"
                getter="get_product_key_format">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="profile"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_profile">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="template-data"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_template_data">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="template-uri"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_template_uri">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="InstallScriptPrivate"
              c:type="OsinfoInstallScriptPrivate*"/>
      </field>
    </class>
    <record name="InstallScriptClass"
            c:type="OsinfoInstallScriptClass"
            glib:is-gtype-struct-for="InstallScript">
      <source-position filename="../osinfo/osinfo_install_script.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <bitfield name="InstallScriptInjectionMethod"
              version="0.2.10"
              glib:type-name="OsinfoInstallScriptInjectionMethod"
              glib:get-type="osinfo_install_script_injection_method_get_type"
              c:type="OsinfoInstallScriptInjectionMethod">
      <member name="cdrom"
              value="1"
              c:identifier="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_CDROM"
              glib:nick="cdrom"
              glib:name="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_CDROM">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="93">Support injection of the
installation script trough a CD-ROM.</doc>
      </member>
      <member name="disk"
              value="2"
              c:identifier="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_DISK"
              glib:nick="disk"
              glib:name="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_DISK">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="95">Support injection of the
installation script trough a disk.</doc>
      </member>
      <member name="floppy"
              value="4"
              c:identifier="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_FLOPPY"
              glib:nick="floppy"
              glib:name="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_FLOPPY">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="97">Support injection of the
installation script trough a floppy disk.</doc>
      </member>
      <member name="initrd"
              value="8"
              c:identifier="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_INITRD"
              glib:nick="initrd"
              glib:name="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_INITRD">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="99">Support injection of the
installation script trough the initrd.</doc>
      </member>
      <member name="web"
              value="16"
              c:identifier="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_WEB"
              glib:nick="web"
              glib:name="OSINFO_INSTALL_SCRIPT_INJECTION_METHOD_WEB">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="101">Support injection of the
installation script from the web.</doc>
      </member>
    </bitfield>
    <enumeration name="InstallScriptInstallationSource"
                 version="1.3.0"
                 glib:type-name="OsinfoInstallScriptInstallationSource"
                 glib:get-type="osinfo_install_script_installation_source_get_type"
                 c:type="OsinfoInstallScriptInstallationSource">
      <member name="media"
              value="0"
              c:identifier="OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_MEDIA"
              glib:nick="media"
              glib:name="OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_MEDIA">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="116">A media will be used as
the installation source.</doc>
      </member>
      <member name="network"
              value="1"
              c:identifier="OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_NETWORK"
              glib:nick="network"
              glib:name="OSINFO_INSTALL_SCRIPT_INSTALLATION_SOURCE_NETWORK">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="118">A network method will
be used as installation source.</doc>
      </member>
    </enumeration>
    <class name="InstallScriptList"
           c:symbol-prefix="install_scriptlist"
           c:type="OsinfoInstallScriptList"
           parent="List"
           glib:type-name="OsinfoInstallScriptList"
           glib:get-type="osinfo_install_scriptlist_get_type"
           glib:type-struct="InstallScriptListClass">
      <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                       line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_install_scriptlist_new"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_scriptlist.c"
             line="62">Construct a new install_script list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                         line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_scriptlist.c"
               line="67">an empty install_script list</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_install_scriptlist_new_copy"
              version="0.2.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_scriptlist.c"
             line="78">Construct a new install_script list that is filled with install_scripts
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                         line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_scriptlist.c"
               line="85">a copy of the install_script list</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="80">the install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_install_scriptlist_new_filtered"
              version="0.2.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_scriptlist.c"
             line="98">Construct a new install_script list that is filled with install_scripts
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_scriptlist.c"
               line="106">a filtered copy of the install_script list</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="100">the install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="101">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_install_scriptlist_new_intersection"
              version="0.2.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_scriptlist.c"
             line="121">Construct a new install_script list that is filled with only the
install_scripts that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                         line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_scriptlist.c"
               line="129">an intersection of the two install_script lists</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="123">the first install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="124">the second install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_install_scriptlist_new_union"
              version="0.2.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_scriptlist.c"
             line="144">Construct a new install_script list that is filled with all the
install_scripts that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                         line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_install_scriptlist.c"
               line="152">a union of the two install_script lists</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="146">the first install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_install_scriptlist.c"
                 line="147">the second install_script list to copy</doc>
            <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="InstallScriptListPrivate"
              c:type="OsinfoInstallScriptListPrivate*"/>
      </field>
    </class>
    <record name="InstallScriptListClass"
            c:type="OsinfoInstallScriptListClass"
            glib:is-gtype-struct-for="InstallScriptList">
      <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                       line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="InstallScriptListPrivate"
            c:type="OsinfoInstallScriptListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_install_scriptlist.h"
                       line="29"/>
    </record>
    <record name="InstallScriptPrivate"
            c:type="OsinfoInstallScriptPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_install_script.h" line="29"/>
    </record>
    <constant name="KIBIBYTES" value="1024" c:type="OSINFO_KIBIBYTES">
      <source-position filename="../osinfo/osinfo_resources.h" line="31"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="List"
           c:symbol-prefix="list"
           c:type="OsinfoList"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="OsinfoList"
           glib:get-type="osinfo_list_get_type"
           glib:type-struct="ListClass">
      <source-position filename="../osinfo/osinfo_list.h" line="27"/>
      <method name="add" c:identifier="osinfo_list_add">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="249">Adds a new entity to the list.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="251">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="entity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="252">the entity to add to the list</doc>
            <type name="Entity" c:type="OsinfoEntity*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_all" c:identifier="osinfo_list_add_all">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="394">Adds all entities from @source to @list. Using one
of the constructors in a subclass is preferable
to this method.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="396">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="397">the list to add</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_filtered" c:identifier="osinfo_list_add_filtered">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="274">Adds all entities from @source which are matched by @filter. Using one
of the constructors in a subclass is preferable
to this method.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="276">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="277">the source for elements</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="278">filter to process the source with</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_intersection"
              c:identifier="osinfo_list_add_intersection">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="300">Computes the intersection between @sourceOne and @sourceTwo and
adds the resulting list of entities to the @list. Using one
of the constructors in a subclass is preferable
to this method.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="302">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="303">the first list to add</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="304">the second list to add</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_union" c:identifier="osinfo_list_add_union">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="349">Computes the union between @sourceOne and @sourceTwo and
adds the resulting list of entities to the @list. Using one
of the constructors in a subclass is preferable
to this method.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="351">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="352">the first list to add</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="353">the second list to add</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_by_id" c:identifier="osinfo_list_find_by_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="231">Search the list looking for the entity with a matching
unique identifier.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="239">the matching entity, or NULL</doc>
          <type name="Entity" c:type="OsinfoEntity*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="233">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="234">the unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_type"
              c:identifier="osinfo_list_get_element_type"
              glib:get-property="element-type">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="146">Retrieves the type of the subclass of #OsinfoEntity
that may be stored in the list</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="153">the type of entity stored</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="148">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_elements" c:identifier="osinfo_list_get_elements">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="216">Retrieve a linked list of all elements in the list.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="38"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="222">the list elements</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Entity"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="218">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="osinfo_list_get_length">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="180">Retrieves the number of elements currently stored
in the list</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="187">the list length</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="182">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nth" c:identifier="osinfo_list_get_nth">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="196">Retrieves the element in the list at position @idx. If
@idx is less than zero, or greater than the number of
elements in the list, the results are undefined.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="205">the list element or %NULL</doc>
          <type name="Entity" c:type="OsinfoEntity*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="198">the entity list</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="idx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="199">the list position to fetch</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_copy"
              c:identifier="osinfo_list_new_copy"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="442">Construct a new list that is filled with elements from @source</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="448">a copy of the list</doc>
          <type name="List" c:type="OsinfoList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="444">the list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_list_new_filtered"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="467">Construct a new list that is filled with elements from @source that
match @filter</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="475">a filtered copy of the list</doc>
          <type name="List" c:type="OsinfoList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="469">the list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="470">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_list_new_intersection"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="494">Construct a new list that is filled with only the elements
that are present in both @sourceOne and @sourceTwo.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="502">an intersection of the two lists</doc>
          <type name="List" c:type="OsinfoList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="496">the first list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="497">the second list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_list_new_union"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="523">Construct a new list that is filled with all the that are present in
either @sourceOne and @sourceTwo. @sourceOne and @sourceTwo must be of
the same type.</doc>
        <source-position filename="../osinfo/osinfo_list.h" line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_list.c"
               line="532">a union of the two lists</doc>
          <type name="List" c:type="OsinfoList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="525">the first list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_list.c"
                 line="526">the second list to copy</doc>
            <type name="List" c:type="OsinfoList*"/>
          </parameter>
        </parameters>
      </method>
      <property name="element-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_element_type">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_list.c"
             line="115">The specialization of the list. The list will be
restricted to storing #OsinfoEntity objects of
the specified type.</doc>
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ListPrivate" c:type="OsinfoListPrivate*"/>
      </field>
    </class>
    <record name="ListClass"
            c:type="OsinfoListClass"
            glib:is-gtype-struct-for="List">
      <source-position filename="../osinfo/osinfo_list.h" line="27"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ListPrivate" c:type="OsinfoListPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_list.h" line="27"/>
    </record>
    <class name="Loader"
           c:symbol-prefix="loader"
           c:type="OsinfoLoader"
           parent="GObject.Object"
           glib:type-name="OsinfoLoader"
           glib:get-type="osinfo_loader_get_type"
           glib:type-struct="LoaderClass">
      <source-position filename="../osinfo/osinfo_loader.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_loader_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="146">Create a new database loader</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_loader.c"
               line="151">a loader object</doc>
          <type name="Loader" c:type="OsinfoLoader*"/>
        </return-value>
      </constructor>
      <method name="get_db" c:identifier="osinfo_loader_get_db">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2553">Retrieves the database being populated</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_loader.c"
               line="2559">the database</doc>
          <type name="Db" c:type="OsinfoDb*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2555">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_default_path"
              c:identifier="osinfo_loader_process_default_path"
              throws="1">
        <source-position filename="../osinfo/osinfo_loader.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_local_path"
              c:identifier="osinfo_loader_process_local_path"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2780">Loads data from the local path.</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2782">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_path"
              c:identifier="osinfo_loader_process_path"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2568">Loads data from the specified path. If the path
points to a file, that will be loaded as XML
Otherwise it can point to a directory which will
be recursively traversed, loading all files as XML.</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2570">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2571">the fully qualified path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_system_path"
              c:identifier="osinfo_loader_process_system_path"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2755">Loads data from the system path.</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2757">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="process_uri"
              c:identifier="osinfo_loader_process_uri"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2593">Loads data from the specified URI. If the URI
points to a file, that will be loaded as XML
Otherwise it can point to a directory which will
be recursively traversed, loading all files as XML.</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2595">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2596">the data source URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="process_user_path"
              c:identifier="osinfo_loader_process_user_path"
              version="0.2.8"
              throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="2800">Loads data from user path.</doc>
        <source-position filename="../osinfo/osinfo_loader.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_loader.c"
                 line="2802">the loader object</doc>
            <type name="Loader" c:type="OsinfoLoader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="LoaderPrivate" c:type="OsinfoLoaderPrivate*"/>
      </field>
    </class>
    <record name="LoaderClass"
            c:type="OsinfoLoaderClass"
            glib:is-gtype-struct-for="Loader">
      <source-position filename="../osinfo/osinfo_loader.h" line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="LoaderPrivate" c:type="OsinfoLoaderPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_loader.h" line="29"/>
    </record>
    <constant name="MAJOR_VERSION" value="1" c:type="OSINFO_MAJOR_VERSION">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_version.h"
           line="24">libosinfo major version number.</doc>
      <source-position filename="../osinfo/osinfo_version.h" line="29"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MEBIBYTES" value="1048576" c:type="OSINFO_MEBIBYTES">
      <source-position filename="../osinfo/osinfo_resources.h" line="32"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MEDIA_PROP_APPLICATION_ID"
              value="application-id"
              c:type="OSINFO_MEDIA_PROP_APPLICATION_ID">
      <source-position filename="../osinfo/osinfo_media.h" line="81"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_ARCHITECTURE"
              value="architecture"
              c:type="OSINFO_MEDIA_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_media.h" line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_BOOTABLE"
              value="bootable"
              c:type="OSINFO_MEDIA_PROP_BOOTABLE">
      <source-position filename="../osinfo/osinfo_media.h" line="94"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_EJECT_AFTER_INSTALL"
              value="eject-after-install"
              c:type="OSINFO_MEDIA_PROP_EJECT_AFTER_INSTALL">
      <source-position filename="../osinfo/osinfo_media.h" line="92"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_INITRD"
              value="initrd"
              c:type="OSINFO_MEDIA_PROP_INITRD">
      <source-position filename="../osinfo/osinfo_media.h" line="83"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_INSTALLER"
              value="installer"
              c:type="OSINFO_MEDIA_PROP_INSTALLER">
      <source-position filename="../osinfo/osinfo_media.h" line="85"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_INSTALLER_REBOOTS"
              value="installer-reboots"
              c:type="OSINFO_MEDIA_PROP_INSTALLER_REBOOTS">
      <source-position filename="../osinfo/osinfo_media.h" line="86"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_INSTALLER_SCRIPT"
              value="installer-script"
              c:type="OSINFO_MEDIA_PROP_INSTALLER_SCRIPT">
      <source-position filename="../osinfo/osinfo_media.h" line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_KERNEL"
              value="kernel"
              c:type="OSINFO_MEDIA_PROP_KERNEL">
      <source-position filename="../osinfo/osinfo_media.h" line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_LANG"
              value="l10n-language"
              c:type="OSINFO_MEDIA_PROP_LANG">
      <source-position filename="../osinfo/osinfo_media.h" line="87"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_LANG_MAP"
              value="l10n-language-map"
              c:type="OSINFO_MEDIA_PROP_LANG_MAP">
      <source-position filename="../osinfo/osinfo_media.h" line="89"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_LANG_REGEX"
              value="l10n-language-regex"
              c:type="OSINFO_MEDIA_PROP_LANG_REGEX">
      <source-position filename="../osinfo/osinfo_media.h" line="88"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_LIVE"
              value="live"
              c:type="OSINFO_MEDIA_PROP_LIVE">
      <source-position filename="../osinfo/osinfo_media.h" line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_PUBLISHER_ID"
              value="publisher-id"
              c:type="OSINFO_MEDIA_PROP_PUBLISHER_ID">
      <source-position filename="../osinfo/osinfo_media.h" line="80"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_SYSTEM_ID"
              value="system-id"
              c:type="OSINFO_MEDIA_PROP_SYSTEM_ID">
      <source-position filename="../osinfo/osinfo_media.h" line="79"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_URL" value="url" c:type="OSINFO_MEDIA_PROP_URL">
      <source-position filename="../osinfo/osinfo_media.h" line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_VARIANT"
              value="variant"
              c:type="OSINFO_MEDIA_PROP_VARIANT">
      <source-position filename="../osinfo/osinfo_media.h" line="90"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_VOLUME_ID"
              value="volume-id"
              c:type="OSINFO_MEDIA_PROP_VOLUME_ID">
      <source-position filename="../osinfo/osinfo_media.h" line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEDIA_PROP_VOLUME_SIZE"
              value="volume-size"
              c:type="OSINFO_MEDIA_PROP_VOLUME_SIZE">
      <source-position filename="../osinfo/osinfo_media.h" line="91"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MEGAHERTZ" value="1000000" c:type="OSINFO_MEGAHERTZ">
      <source-position filename="../osinfo/osinfo_resources.h" line="30"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="0" c:type="OSINFO_MICRO_VERSION">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_version.h"
           line="38">libosinfo micro version number.</doc>
      <source-position filename="../osinfo/osinfo_version.h" line="43"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="11" c:type="OSINFO_MINOR_VERSION">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_version.h"
           line="31">libosinfo minor version number.</doc>
      <source-position filename="../osinfo/osinfo_version.h" line="36"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Media"
           c:symbol-prefix="media"
           c:type="OsinfoMedia"
           parent="Entity"
           glib:type-name="OsinfoMedia"
           glib:get-type="osinfo_media_get_type"
           glib:type-struct="MediaClass">
      <source-position filename="../osinfo/osinfo_media.h" line="70"/>
      <constructor name="new" c:identifier="osinfo_media_new">
        <source-position filename="../osinfo/osinfo_media.h" line="96"/>
        <return-value transfer-ownership="full">
          <type name="Media" c:type="OsinfoMedia*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="architecture" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="create_from_location"
                c:identifier="osinfo_media_create_from_location"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="727">Creates a new #OsinfoMedia for installation media at @location. The @location
could be a http:// or a https:// URI or a local path.

NOTE: Currently this only works for ISO images/devices.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="738">a new #OsinfoMedia , or NULL on error</doc>
          <type name="Media" c:type="OsinfoMedia*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="729">the location of an installation media</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="730">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_async"
                c:identifier="osinfo_media_create_from_location_async">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1313">Asynchronous variant of #osinfo_media_create_from_location.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1315">the location of an installation media</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1316">the I/O priority of the request</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1317">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1318">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1319">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_finish"
                c:identifier="osinfo_media_create_from_location_finish"
                version="1.6.0"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1337">Finishes an asynchronous media object creation process started with
#osinfo_media_create_from_location_async.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1345">a new #OsinfoMedia , or NULL on error</doc>
          <type name="Media" c:type="OsinfoMedia*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1339">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_with_flags"
                c:identifier="osinfo_media_create_from_location_with_flags"
                version="1.6.0"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="750">Creates a new #OsinfoMedia for installation media at @location. The @location
could be a http:// or a https:// URI or a local path.

NOTE: Currently this only works for ISO images/devices.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="762">a new #OsinfoMedia , or NULL on error</doc>
          <type name="Media" c:type="OsinfoMedia*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="752">the location of an installation media</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="753">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="755">An #OsinfoMediaDetectFlag, or 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_with_flags_async"
                c:identifier="osinfo_media_create_from_location_with_flags_async"
                version="1.6.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1355">Asynchronous variant of #osinfo_media_create_from_location_with_flags.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1357">the location of an installation media</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1358">the I/O priority of the request</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1359">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1360">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1361">An #OsinfoMediaDetectFlag, or 0.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1362">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_with_flags_finish"
                c:identifier="osinfo_media_create_from_location_with_flags_finish"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1413">Finishes an asynchronous media object creation process started with
#osinfo_media_create_from_location_async.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1421">a new #OsinfoMedia , or NULL on error</doc>
          <type name="Media" c:type="OsinfoMedia*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1415">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_install_script"
              c:identifier="osinfo_media_add_install_script"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1813">Adds an @script to the specified @media</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1815">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1816">an #OsinfoInstallScript instance</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_application_id"
              c:identifier="osinfo_media_get_application_id"
              glib:get-property="application-id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1518">If @media is an ISO9660 image/device, this function retrieves the expected
application ID.

Note: In practice, this will usually not be the exact copy of the application
ID string on the ISO image/device but rather a regular expression that
matches it.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1529">the application id, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1520">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_architecture"
              c:identifier="osinfo_media_get_architecture"
              glib:get-property="architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1433">Retrieves the target hardware architecture of the OS @media provides.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1439">the hardware architecture, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1435">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eject_after_install"
              c:identifier="osinfo_media_get_eject_after_install"
              glib:get-property="eject-after-install"
              version="0.2.13">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1759">Whether @media should ejected after the installation procces.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1765">#TRUE if media should be ejected, #FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1761">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_initrd_path"
              c:identifier="osinfo_media_get_initrd_path"
              glib:get-property="initrd-path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1553">Retrieves the path to the initrd image in the install tree.

Note: This only applies to installer medias of 'linux' OS family.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1561">the path to initrd image, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1555">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_script_list"
              c:identifier="osinfo_media_get_install_script_list"
              version="1.4.0">
        <source-position filename="../osinfo/osinfo_media.h" line="140"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1833">a list of the install scripts for the specified media</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1831">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installer"
              c:identifier="osinfo_media_get_installer"
              glib:get-property="installer"
              version="0.0.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1569">Whether @media provides an installer for an OS.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1575">#TRUE if media is installer, #FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1571">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installer_reboots"
              c:identifier="osinfo_media_get_installer_reboots"
              glib:get-property="installer-reboots"
              version="0.2.1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1601">If media is an installer, this method retrieves the number of reboots the
installer takes before installation is complete.

This function is not supposed to be called on media that has no installer.
You can use #osinfo_media_get_installer(or OsinfoMedia::installer) to check
that.

Warning: Some media allow you to install from live sessions, in which case
number of reboots *alone* is not a reliable method for tracking installation.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1615">the number of installer reboots or -1 if media is not an installer</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1603">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_path"
              c:identifier="osinfo_media_get_kernel_path"
              glib:get-property="kernel-path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1537">Retrieves the path to the kernel image in the install tree.

Note: This only applies to installer medias of 'linux' OS family.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1545">the path to kernel image, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1539">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_languages"
              c:identifier="osinfo_media_get_languages"
              glib:get-property="languages"
              version="0.2.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1698">If media is an installer, this property indicates the languages that
can be used during automatic installations.

On media that are not installers, this property will indicate the
languages that the user interface can be displayed in.
Use #osinfo_media_get_installer(or OsinfoMedia::installer) to know
if the media is an installer or not.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="132"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1710">a #GList
containing the list of the UI languages this media supports. The list
must be freed with g_list_free() when no longer needed. If the
supported languages are unknown, NULL will be returned.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1700">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_live"
              c:identifier="osinfo_media_get_live"
              glib:get-property="live"
              version="0.0.3">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1585">Whether @media can boot directly an OS without any installations.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1591">#TRUE if media is live, #FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1587">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os"
              c:identifier="osinfo_media_get_os"
              glib:get-property="os"
              version="0.2.3">
        <source-position filename="../osinfo/osinfo_media.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1632">the operating system, or NULL</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1630">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_variants"
              c:identifier="osinfo_media_get_os_variants"
              version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1652">Gets the variants of the associated operating system.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="131"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1658">the operating system variant, or NULL</doc>
          <type name="OsVariantList" c:type="OsinfoOsVariantList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1654">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_publisher_id"
              c:identifier="osinfo_media_get_publisher_id"
              glib:get-property="publisher-id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1499">If @media is an ISO9660 image/device, this function retrieves the expected
publisher ID.

Note: In practice, this will usually not be the exact copy of the publisher
ID string on the ISO image/device but rather a regular expression that
matches it.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1510">the publisher id, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1501">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_system_id"
              c:identifier="osinfo_media_get_system_id"
              glib:get-property="system-id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1480">If @media is an ISO9660 image/device, this function retrieves the expected
system ID.

Note: In practice, this will usually not be the exact copy of the system ID
string on the ISO image/device but rather a regular expression that matches
it.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1491">the system id, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1482">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="osinfo_media_get_url"
              glib:get-property="url">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1447">The URL to the @media</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1453">the URL, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1449">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_volume_id"
              c:identifier="osinfo_media_get_volume_id"
              glib:get-property="volume-id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1461">If @media is an ISO9660 image/device, this function retrieves the expected
volume ID.

Note: In practice, this will usually not be the exact copy of the volume ID
string on the ISO image/device but rather a regular expression that matches
it.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1472">the volume id, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1463">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_volume_size"
              c:identifier="osinfo_media_get_volume_size"
              glib:get-property="volume-size">
        <source-position filename="../osinfo/osinfo_media.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1748">the ISO9660 volume size, in bytes or -1 if size is
unknown or media is not an ISO9660 device/image.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1746">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_bootable"
              c:identifier="osinfo_media_is_bootable"
              version="1.6.0">
        <source-position filename="../osinfo/osinfo_media.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1851">#TRUE if the @media is bootable. #FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1849">and #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="matches"
              c:identifier="osinfo_media_matches"
              version="1.10.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1868">Determines whether the metadata for the unidentified @media is a match
for the @reference media.

The metadata in the unidentified @media must be literal strings,
while the metadata in the @reference media must be regular expressions.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1879">#TRUE if @media is a match for @reference. #FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1870">an unidentified #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
          <parameter name="reference" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1871">a reference #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_installer_script"
              c:identifier="osinfo_media_supports_installer_script"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="1775">Whether @media supports installation using install scripts.</doc>
        <source-position filename="../osinfo/osinfo_media.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_media.c"
               line="1781">#TRUE if install-scripts are supported by the media,
#FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_media.c"
                 line="1777">an #OsinfoMedia instance</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="application-id"
                writable="1"
                transfer-ownership="none"
                getter="get_application_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="515">Expected application ID (regular expression) for ISO9660 image/device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="architecture"
                writable="1"
                transfer-ownership="none"
                getter="get_architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="467">The target hardware architecture of this media.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="eject-after-install"
                writable="1"
                transfer-ownership="none"
                getter="get_eject_after_install">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="656">Whether the media should be ejected after the installation process.

Some distros need their media to not be ejected after the final reboot
during its installation process as some packages are installed after the
reboot (which may cause the media to be ejected, depending on the
application).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="initrd-path"
                writable="1"
                transfer-ownership="none"
                getter="get_initrd_path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="551">The path to the initrd image in the install tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="installer"
                writable="1"
                transfer-ownership="none"
                getter="get_installer">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="563">Whether media provides an installer for an OS.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="installer-reboots"
                writable="1"
                transfer-ownership="none"
                getter="get_installer_reboots">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="587">If media is an installer, this property indicates the number of reboots
the installer takes before installation is complete.

This property is not applicable to media that has no installer. You can
use #osinfo_media_get_installer(or OsinfoMedia::installer) to check
that.

Warning: Some media allow you to install from live sessions, in which
case number of reboots *alone* is not a reliable method for tracking
installation.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="installer-script" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="673">Whether the media supports installation via an install-script.

Some distros provide a few different medias and not all the medias support
installation via an install script.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="kernel-path"
                writable="1"
                transfer-ownership="none"
                getter="get_kernel_path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="539">The path to the kernel image in the install tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="languages"
                transfer-ownership="container"
                getter="get_languages">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="625">If media is an installer, this property indicates the languages that
can be used during automatic installations.

On media that are not installers, this property will indicate the
languages that the user interface can be displayed in.
Use #osinfo_media_get_installer(or OsinfoMedia::installer) to know
if the media is an installer or not.</doc>
        <type name="GLib.List" c:type="gpointer">
          <type name="utf8"/>
        </type>
      </property>
      <property name="live"
                writable="1"
                transfer-ownership="none"
                getter="get_live">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="575">Whether media can boot directly an OS without any installations.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="os"
                writable="1"
                transfer-ownership="none"
                getter="get_os">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="610">Os information for the current media. For media stored in an
#OsinfoDb, it will be filled when the database is loaded, otherwise
the property will be filled after a successful call to
osinfo_db_identify_media().</doc>
        <type name="Os"/>
      </property>
      <property name="publisher-id"
                writable="1"
                transfer-ownership="none"
                getter="get_publisher_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="503">Expected publisher ID (regular expression) for ISO9660 image/device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="system-id"
                writable="1"
                transfer-ownership="none"
                getter="get_system_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="527">Expected system ID (regular expression) for ISO9660 image/device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="url"
                writable="1"
                transfer-ownership="none"
                getter="get_url">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="479">The URL to this media.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="volume-id"
                writable="1"
                transfer-ownership="none"
                getter="get_volume_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="491">Expected volume ID (regular expression) for ISO9660 image/device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="volume-size"
                writable="1"
                transfer-ownership="none"
                getter="get_volume_size">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.c"
             line="642">Expected volume size, in bytes for ISO9660 image/device.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="MediaPrivate" c:type="OsinfoMediaPrivate*"/>
      </field>
    </class>
    <record name="MediaClass"
            c:type="OsinfoMediaClass"
            glib:is-gtype-struct-for="Media">
      <source-position filename="../osinfo/osinfo_media.h" line="70"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <bitfield name="MediaDetectFlags"
              version="1.6.0"
              glib:type-name="OsinfoMediaDetectFlags"
              glib:get-type="osinfo_media_detect_flags_get_type"
              c:type="OsinfoMediaDetectFlags">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_media.h"
           line="57">OSINFO_MEDIA_DETECT_REQUIRE_BOOTABLE: Requires a media to be bootable.
Flags used for detecting a media.</doc>
      <member name="bootable"
              value="1"
              c:identifier="OSINFO_MEDIA_DETECT_REQUIRE_BOOTABLE"
              glib:nick="bootable"
              glib:name="OSINFO_MEDIA_DETECT_REQUIRE_BOOTABLE">
      </member>
    </bitfield>
    <enumeration name="MediaError"
                 glib:type-name="OsinfoMediaError"
                 glib:get-type="osinfo_media_error_get_type"
                 c:type="OsinfoMediaError"
                 glib:error-domain="osinfo-media-error">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_media.h"
           line="35">#GError codes used for errors in the #OSINFO_MEDIA_ERROR domain, during
reading of data from install media location.</doc>
      <member name="no_descriptors"
              value="0"
              c:identifier="OSINFO_MEDIA_ERROR_NO_DESCRIPTORS"
              glib:nick="no-descriptors"
              glib:name="OSINFO_MEDIA_ERROR_NO_DESCRIPTORS">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="37">No descriptors.</doc>
      </member>
      <member name="no_pvd"
              value="1"
              c:identifier="OSINFO_MEDIA_ERROR_NO_PVD"
              glib:nick="no-pvd"
              glib:name="OSINFO_MEDIA_ERROR_NO_PVD">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="40">No Primary volume descriptor.</doc>
      </member>
      <member name="no_svd"
              value="2"
              c:identifier="OSINFO_MEDIA_ERROR_NO_SVD"
              glib:nick="no-svd"
              glib:name="OSINFO_MEDIA_ERROR_NO_SVD">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="41">No supplementary volume descriptor.</doc>
      </member>
      <member name="insufficient_metadata"
              value="3"
              c:identifier="OSINFO_MEDIA_ERROR_INSUFFICIENT_METADATA"
              glib:nick="insufficient-metadata"
              glib:name="OSINFO_MEDIA_ERROR_INSUFFICIENT_METADATA">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="38">Not enough metadata.</doc>
      </member>
      <member name="not_bootable"
              value="4"
              c:identifier="OSINFO_MEDIA_ERROR_NOT_BOOTABLE"
              glib:nick="not-bootable"
              glib:name="OSINFO_MEDIA_ERROR_NOT_BOOTABLE">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="39">Install media not bootable.</doc>
      </member>
      <member name="no_directory_record_extent"
              value="5"
              c:identifier="OSINFO_MEDIA_ERROR_NO_DIRECTORY_RECORD_EXTENT"
              glib:nick="no-directory-record-extent"
              glib:name="OSINFO_MEDIA_ERROR_NO_DIRECTORY_RECORD_EXTENT">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_media.h"
             line="42">No directory record extent
found.</doc>
      </member>
      <function name="quark" c:identifier="osinfo_media_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="MediaList"
           c:symbol-prefix="medialist"
           c:type="OsinfoMediaList"
           parent="List"
           glib:type-name="OsinfoMediaList"
           glib:get-type="osinfo_medialist_get_type"
           glib:type-struct="MediaListClass">
      <source-position filename="../osinfo/osinfo_medialist.h" line="27"/>
      <constructor name="new" c:identifier="osinfo_medialist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_medialist.c"
             line="62">Construct a new media list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_medialist.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_medialist.c"
               line="67">an empty media list</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_medialist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_medialist.c"
             line="76">Construct a new media list that is filled with medias
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_medialist.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_medialist.c"
               line="83">a copy of the media list</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="78">the media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_medialist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_medialist.c"
             line="94">Construct a new media list that is filled with medias
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_medialist.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_medialist.c"
               line="102">a filtered copy of the media list</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="96">the media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="97">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_medialist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_medialist.c"
             line="115">Construct a new media list that is filled with only the
medias that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_medialist.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_medialist.c"
               line="123">an intersection of the two media lists</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="117">the first media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="118">the second media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_medialist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_medialist.c"
             line="136">Construct a new media list that is filled with all the
medias that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_medialist.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_medialist.c"
               line="144">a union of the two media lists</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="138">the first media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_medialist.c"
                 line="139">the second media list to copy</doc>
            <type name="MediaList" c:type="OsinfoMediaList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="MediaListPrivate" c:type="OsinfoMediaListPrivate*"/>
      </field>
    </class>
    <record name="MediaListClass"
            c:type="OsinfoMediaListClass"
            glib:is-gtype-struct-for="MediaList">
      <source-position filename="../osinfo/osinfo_medialist.h" line="27"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="MediaListPrivate"
            c:type="OsinfoMediaListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_medialist.h" line="27"/>
    </record>
    <record name="MediaPrivate" c:type="OsinfoMediaPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_media.h" line="70"/>
    </record>
    <constant name="OS_PROP_CLOUD_IMAGE_USERNAME"
              value="cloud-image-username"
              c:type="OSINFO_OS_PROP_CLOUD_IMAGE_USERNAME">
      <source-position filename="../osinfo/osinfo_os.h" line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OS_PROP_DISTRO"
              value="distro"
              c:type="OSINFO_OS_PROP_DISTRO">
      <source-position filename="../osinfo/osinfo_os.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OS_PROP_FAMILY"
              value="family"
              c:type="OSINFO_OS_PROP_FAMILY">
      <source-position filename="../osinfo/osinfo_os.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OS_PROP_KERNEL_URL_ARGUMENT"
              value="kernel-url-argument"
              c:type="OSINFO_OS_PROP_KERNEL_URL_ARGUMENT">
      <source-position filename="../osinfo/osinfo_os.h" line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OS_PROP_RELEASE_STATUS"
              value="release-status"
              c:type="OSINFO_OS_PROP_RELEASE_STATUS">
      <source-position filename="../osinfo/osinfo_os.h" line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="OS_VARIANT_PROP_NAME"
              value="name"
              c:type="OSINFO_OS_VARIANT_PROP_NAME">
      <source-position filename="../osinfo/osinfo_os_variant.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Os"
           c:symbol-prefix="os"
           c:type="OsinfoOs"
           parent="Product"
           glib:type-name="OsinfoOs"
           glib:get-type="osinfo_os_get_type"
           glib:type-struct="OsClass">
      <source-position filename="../osinfo/osinfo_os.h" line="41"/>
      <constructor name="new" c:identifier="osinfo_os_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="222">Create a new operating system entity</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="228">a new operating system entity</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="224">a unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_device" c:identifier="osinfo_os_add_device">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="570">Associated a device with an operating system.  The
returned #OsinfoDeviceLink can be used to record
extra metadata against the link</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="579">the device association</doc>
          <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="572">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="dev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="573">the device to associate with</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_device_driver"
              c:identifier="osinfo_os_add_device_driver"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1266">Adds @driver to the list of device drivers of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1268">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="driver" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1269">the device driver to add</doc>
            <type name="DeviceDriver" c:type="OsinfoDeviceDriver*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_firmware"
              c:identifier="osinfo_os_add_firmware"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1633">Adds @firmware to the list of firmwares of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1635">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="firmware" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1636">the firmware to add</doc>
            <type name="Firmware" c:type="OsinfoFirmware*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_image"
              c:identifier="osinfo_os_add_image"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="743">Adds an installed image @image to operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="745">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="746">the image to add</doc>
            <type name="Image" c:type="OsinfoImage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_install_script"
              c:identifier="osinfo_os_add_install_script"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1188">Adds @script to the list of scripts of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1190">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1191">the install script to add</doc>
            <type name="InstallScript" c:type="OsinfoInstallScript*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_maximum_resources"
              c:identifier="osinfo_os_add_maximum_resources"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1093">Adds @resources to list of maximum resources of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1095">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1096">the resources to add</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_media" c:identifier="osinfo_os_add_media">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="668">Adds installation media @media to operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="670">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="671">the media to add</doc>
            <type name="Media" c:type="OsinfoMedia*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_minimum_resources"
              c:identifier="osinfo_os_add_minimum_resources">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1061">Adds @resources to list of minimum resources of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1063">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1064">the resources to add</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_network_install_resources"
              c:identifier="osinfo_os_add_network_install_resources"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1112">Adds @resources to list of resources needed for network installing an
operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1114">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1115">the resources to add</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_recommended_resources"
              c:identifier="osinfo_os_add_recommended_resources">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1076">Adds @resources to list of recommended resources of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1078">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1079">the resources to add</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_tree" c:identifier="osinfo_os_add_tree">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="704">Adds installation tree @tree to operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="706">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="707">the tree to add</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_variant"
              c:identifier="osinfo_os_add_variant"
              version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="784">Adds a variant @variant to operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="786">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="variant" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="787">the variant to add</doc>
            <type name="OsVariant" c:type="OsinfoOsVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_install_script"
              c:identifier="osinfo_os_find_install_script"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_os.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1138">A new #OsinfoInstallScript for the @os @profile</doc>
          <type name="InstallScript" c:type="OsinfoInstallScript*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1134">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1135">the install script profile that must be either
OSINFO_INSTALL_SCRIPT_PROFILE_DESKTOP or OSINFO_INSTALL_SCRIPT_PROFILE_JEOS</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_device_links"
              c:identifier="osinfo_os_get_all_device_links"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="552">Get all devicelinks matching a given filter but unlike
osinfo_os_get_device_links this function also retrieves devices from all
derived and cloned operating systems.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="561">A list of OsinfoDeviceLink</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="554">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="555">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_devices"
              c:identifier="osinfo_os_get_all_devices"
              version="0.0.5">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="337">Get all devices matching a given filter but unlike osinfo_os_get_devices
this function also retrieves devices from all derived and cloned operating
systems.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="346">A list of devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="339">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="340">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cloud_image_username"
              c:identifier="osinfo_os_get_cloud_image_username"
              glib:get-property="cloud-image-username">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1349">Gets the username expected to be passed to the cloud image when performing
installation.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1356">the username, if present. Otherwise, NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1351">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_complete_firmware_list"
              c:identifier="osinfo_os_get_complete_firmware_list"
              version="1.10.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1603">Get the complete firmwares matching a given filter, including the non-supported ones.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="115"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1610">A list of firmwares</doc>
          <type name="FirmwareList" c:type="OsinfoFirmwareList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1605">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1606">an optional firmware property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_drivers"
              c:identifier="osinfo_os_get_device_drivers"
              version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1204">Gets list of all available device drivers for OS @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1210">A list of device drivers</doc>
          <type name="DeviceDriverList" c:type="OsinfoDeviceDriverList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1206">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_drivers_prioritized"
              c:identifier="osinfo_os_get_device_drivers_prioritized"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1230">Gets list of the highest priority device drivers for OS @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1236">A list of device drivers</doc>
          <type name="DeviceDriverList" c:type="OsinfoDeviceDriverList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1232">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_links"
              c:identifier="osinfo_os_get_device_links">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="471">Get all devices matching a given filter. The filter
matches against the links, not the devices.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="479">A list of device links</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="473">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="474">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices" c:identifier="osinfo_os_get_devices">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="293">Get all devices matching a given filter</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="300">A list of devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="295">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="296">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_by_property"
              c:identifier="osinfo_os_get_devices_by_property"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="405">A utility function that gets devices found from the list of devices
@os supports, for which the value of @property is @value.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="416">The found devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="407">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="408">the property of interest</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="409">the required value of property @property</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="inherited" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="410">Should devices from inherited and cloned OSs be included in the
search.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_distro"
              c:identifier="osinfo_os_get_distro"
              glib:get-property="distro">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="610">Retrieves the generic family the OS @os belongs to, for example fedora,
ubuntu, windows, solaris, freebsd etc.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="617">the distro of this os</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="612">an #OsinfoOs</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_family"
              c:identifier="osinfo_os_get_family"
              glib:get-property="family">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="594">Retrieves the generic family the OS @os belongs to, based upon its kernel,
for example linux, winnt, solaris, freebsd etc.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="601">the family of this os</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="596">an #OsinfoOs</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_firmware_list"
              c:identifier="osinfo_os_get_firmware_list"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1487">Get all the supported firmwares matching a given filter</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="114"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1494">A list of firmwares</doc>
          <type name="FirmwareList" c:type="OsinfoFirmwareList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1489">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1490">an optional firmware property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_list"
              c:identifier="osinfo_os_get_image_list"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="720">Get all installed images associated with operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="726">A list of images</doc>
          <type name="ImageList" c:type="OsinfoImageList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="722">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_script_list"
              c:identifier="osinfo_os_get_install_script_list"
              version="0.2.0">
        <source-position filename="../osinfo/osinfo_os.h" line="105"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1173">a list of the install scripts for the specified os</doc>
          <type name="InstallScriptList" c:type="OsinfoInstallScriptList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1171">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_url_argument"
              c:identifier="osinfo_os_get_kernel_url_argument"
              glib:get-property="kernel-url-argument">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1303">Gets the argument expected to be passed to the kernel command line when
performing a tree based installation.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1310">the kernel url argument, if present. Otherwise,
NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1305">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maximum_resources"
              c:identifier="osinfo_os_get_maximum_resources"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="963">Get the list of maximum resources for the operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="98"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="969">A list of resources</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="965">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_list" c:identifier="osinfo_os_get_media_list">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="647">Get all installation medias associated with operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="653">A list of medias</doc>
          <type name="MediaList" c:type="OsinfoMediaList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="649">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minimum_resources"
              c:identifier="osinfo_os_get_minimum_resources">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="924">Get the list of minimum required resources for the operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="96"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="930">A list of resources</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="926">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_network_install_resources"
              c:identifier="osinfo_os_get_network_install_resources"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1044">Get the list of resources needed for network installing an operating system
@os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1051">A list of resources</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1046">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_recommended_resources"
              c:identifier="osinfo_os_get_recommended_resources">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="1004">Get the list of recommended resources for the operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="1010">A list of resources</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="1006">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_release_status"
              c:identifier="osinfo_os_get_release_status"
              version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="626">Use this to determine the release status of the @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="632">release status of @os.</doc>
          <type name="ReleaseStatus" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="628">an #OsinfoOs</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tree_list" c:identifier="osinfo_os_get_tree_list">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="684">Get all installation trees associated with operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="690">A list of trees</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="686">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_variant_list"
              c:identifier="osinfo_os_get_variant_list"
              version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="761">Gets all known variants of operating system @os.</doc>
        <source-position filename="../osinfo/osinfo_os.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os.c"
               line="767">A list of variants</doc>
          <type name="OsVariantList" c:type="OsinfoOsVariantList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os.c"
                 line="763">an operating system</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="cloud-image-username"
                transfer-ownership="none"
                getter="get_cloud_image_username">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="188">The username to be passed to the cloud-init program.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="distro" transfer-ownership="none" getter="get_distro">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="162">The generic distro this OS belongs to, for example fedora, windows,
solaris, freebsd etc.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="family" transfer-ownership="none" getter="get_family">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="149">The generic family this OS belongs to, based upon its kernel,
for example linux, winnt, solaris, freebsd etc.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kernel-url-argument"
                transfer-ownership="none"
                getter="get_kernel_url_argument">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.c"
             line="175">The argument to be passed to kernel command line when performing a
tree based installation of this OS.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Product" c:type="OsinfoProduct"/>
      </field>
      <field name="priv">
        <type name="OsPrivate" c:type="OsinfoOsPrivate*"/>
      </field>
    </class>
    <record name="OsClass"
            c:type="OsinfoOsClass"
            glib:is-gtype-struct-for="Os">
      <source-position filename="../osinfo/osinfo_os.h" line="41"/>
      <field name="parent_class">
        <type name="ProductClass" c:type="OsinfoProductClass"/>
      </field>
    </record>
    <class name="OsList"
           c:symbol-prefix="oslist"
           c:type="OsinfoOsList"
           parent="ProductList"
           glib:type-name="OsinfoOsList"
           glib:get-type="osinfo_oslist_get_type"
           glib:type-struct="OsListClass">
      <source-position filename="../osinfo/osinfo_oslist.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_oslist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_oslist.c"
             line="63">Construct a new os list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_oslist.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_oslist.c"
               line="68">an empty os list</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_oslist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_oslist.c"
             line="78">Construct a new os list that is filled with oss
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_oslist.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_oslist.c"
               line="85">a copy of the os list</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="80">the os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_oslist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_oslist.c"
             line="96">Construct a new os list that is filled with oss
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_oslist.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_oslist.c"
               line="104">a filtered copy of the os list</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="98">the os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="99">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_oslist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_oslist.c"
             line="116">Construct a new os list that is filled with only the
oss that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_oslist.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_oslist.c"
               line="124">an intersection of the two os lists</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="118">the first os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="119">the second os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_oslist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_oslist.c"
             line="136">Construct a new os list that is filled with all the
oss that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_oslist.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_oslist.c"
               line="144">a union of the two os lists</doc>
          <type name="OsList" c:type="OsinfoOsList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="138">the first os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_oslist.c"
                 line="139">the second os list to copy</doc>
            <type name="OsList" c:type="OsinfoOsList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ProductList" c:type="OsinfoProductList"/>
      </field>
      <field name="priv">
        <type name="OsListPrivate" c:type="OsinfoOsListPrivate*"/>
      </field>
    </class>
    <record name="OsListClass"
            c:type="OsinfoOsListClass"
            glib:is-gtype-struct-for="OsList">
      <source-position filename="../osinfo/osinfo_oslist.h" line="30"/>
      <field name="parent_class">
        <type name="ProductListClass" c:type="OsinfoProductListClass"/>
      </field>
    </record>
    <record name="OsListPrivate" c:type="OsinfoOsListPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_oslist.h" line="30"/>
    </record>
    <record name="OsPrivate" c:type="OsinfoOsPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_os.h" line="41"/>
    </record>
    <class name="OsVariant"
           c:symbol-prefix="os_variant"
           c:type="OsinfoOsVariant"
           parent="Entity"
           glib:type-name="OsinfoOsVariant"
           glib:get-type="osinfo_os_variant_get_type"
           glib:type-struct="OsVariantClass">
      <source-position filename="../osinfo/osinfo_os_variant.h" line="30"/>
      <constructor name="new"
                   c:identifier="osinfo_os_variant_new"
                   version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os_variant.c"
             line="120">Creates a new os variant</doc>
        <source-position filename="../osinfo/osinfo_os_variant.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os_variant.c"
               line="126">An os variant entity</doc>
          <type name="OsVariant" c:type="OsinfoOsVariant*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os_variant.c"
                 line="122">the id of the os variant to be created</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name"
              c:identifier="osinfo_os_variant_get_name"
              glib:get-property="name"
              version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os_variant.c"
             line="141">The name of the @variant</doc>
        <source-position filename="../osinfo/osinfo_os_variant.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os_variant.c"
               line="147">the name, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="variant" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_os_variant.c"
                 line="143">an #OsinfoOsVariant instance</doc>
            <type name="OsVariant" c:type="OsinfoOsVariant*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                transfer-ownership="none"
                getter="get_name">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os_variant.c"
             line="99">The name to this variant.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="OsVariantPrivate" c:type="OsinfoOsVariantPrivate*"/>
      </field>
    </class>
    <record name="OsVariantClass"
            c:type="OsinfoOsVariantClass"
            glib:is-gtype-struct-for="OsVariant">
      <source-position filename="../osinfo/osinfo_os_variant.h" line="30"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="OsVariantList"
           c:symbol-prefix="os_variantlist"
           c:type="OsinfoOsVariantList"
           parent="List"
           glib:type-name="OsinfoOsVariantList"
           glib:get-type="osinfo_os_variantlist_get_type"
           glib:type-struct="OsVariantListClass">
      <source-position filename="../osinfo/osinfo_os_variantlist.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_os_variantlist_new"
                   version="0.2.9">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os_variantlist.c"
             line="51">Construct a new install_variant list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_os_variantlist.h"
                         line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_os_variantlist.c"
               line="56">an empty install_variant list</doc>
          <type name="OsVariantList" c:type="OsinfoOsVariantList*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="OsVariantListPrivate"
              c:type="OsinfoOsVariantListPrivate*"/>
      </field>
    </class>
    <record name="OsVariantListClass"
            c:type="OsinfoOsVariantListClass"
            glib:is-gtype-struct-for="OsVariantList">
      <source-position filename="../osinfo/osinfo_os_variantlist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="OsVariantListPrivate"
            c:type="OsinfoOsVariantListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_os_variantlist.h" line="29"/>
    </record>
    <record name="OsVariantPrivate"
            c:type="OsinfoOsVariantPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_os_variant.h" line="30"/>
    </record>
    <constant name="PRODUCT_PROP_CODENAME"
              value="codename"
              c:type="OSINFO_PRODUCT_PROP_CODENAME">
      <source-position filename="../osinfo/osinfo_product.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_EOL_DATE"
              value="eol-date"
              c:type="OSINFO_PRODUCT_PROP_EOL_DATE">
      <source-position filename="../osinfo/osinfo_product.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_LOGO"
              value="logo"
              c:type="OSINFO_PRODUCT_PROP_LOGO">
      <source-position filename="../osinfo/osinfo_product.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_NAME"
              value="name"
              c:type="OSINFO_PRODUCT_PROP_NAME">
      <source-position filename="../osinfo/osinfo_product.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_RELEASE_DATE"
              value="release-date"
              c:type="OSINFO_PRODUCT_PROP_RELEASE_DATE">
      <source-position filename="../osinfo/osinfo_product.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_SHORT_ID"
              value="short-id"
              c:type="OSINFO_PRODUCT_PROP_SHORT_ID">
      <source-position filename="../osinfo/osinfo_product.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_VENDOR"
              value="vendor"
              c:type="OSINFO_PRODUCT_PROP_VENDOR">
      <source-position filename="../osinfo/osinfo_product.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRODUCT_PROP_VERSION"
              value="version"
              c:type="OSINFO_PRODUCT_PROP_VERSION">
      <source-position filename="../osinfo/osinfo_product.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="PathFormat"
                 glib:type-name="OsinfoPathFormat"
                 glib:get-type="osinfo_path_format_get_type"
                 c:type="OsinfoPathFormat">
      <member name="unix"
              value="0"
              c:identifier="OSINFO_PATH_FORMAT_UNIX"
              glib:nick="unix"
              glib:name="OSINFO_PATH_FORMAT_UNIX">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="59">Unix/Linux path format, e.g /home/foo/bar.txt</doc>
      </member>
      <member name="dos"
              value="1"
              c:identifier="OSINFO_PATH_FORMAT_DOS"
              glib:nick="dos"
              glib:name="OSINFO_PATH_FORMAT_DOS">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_install_script.h"
             line="60">DOS/Windows path format, e.g \My Documents\bar.txt</doc>
      </member>
    </enumeration>
    <class name="Platform"
           c:symbol-prefix="platform"
           c:type="OsinfoPlatform"
           parent="Product"
           glib:type-name="OsinfoPlatform"
           glib:get-type="osinfo_platform_get_type"
           glib:type-struct="PlatformClass">
      <source-position filename="../osinfo/osinfo_platform.h" line="32"/>
      <constructor name="new" c:identifier="osinfo_platform_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platform.c"
             line="75">Create a new platform entity</doc>
        <source-position filename="../osinfo/osinfo_platform.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platform.c"
               line="81">A platform entity</doc>
          <type name="Platform" c:type="OsinfoPlatform*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="77">a unique identifier</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_device" c:identifier="osinfo_platform_add_device">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platform.c"
             line="211">Associate a device with a platform. The returned #OsinfoDeviceLink
can be used to record extra metadata against the link</doc>
        <source-position filename="../osinfo/osinfo_platform.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platform.c"
               line="219">the device association</doc>
          <type name="DeviceLink" c:type="OsinfoDeviceLink*"/>
        </return-value>
        <parameters>
          <instance-parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="213">a platform entity</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </instance-parameter>
          <parameter name="dev" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="214">the device to associate</doc>
            <type name="Device" c:type="OsinfoDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_all_devices"
              c:identifier="osinfo_platform_get_all_devices"
              version="0.2.7">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platform.c"
             line="113">Get all platforms matching a given filter but unlike
osinfo_platform_get_devices this function also retrieves devices from
all derived and upgraded platforms.</doc>
        <source-position filename="../osinfo/osinfo_platform.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platform.c"
               line="122">A list of devices</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="115">a platform</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="116">an optional device property filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_links"
              c:identifier="osinfo_platform_get_device_links">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platform.c"
             line="177">Retrieve all the associated devices matching the filter.
The filter matches against the link, not the device.</doc>
        <source-position filename="../osinfo/osinfo_platform.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platform.c"
               line="185">a list of #OsinfoDevice entities</doc>
          <type name="DeviceLinkList" c:type="OsinfoDeviceLinkList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="179">a platform entity</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="180">an optional filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices" c:identifier="osinfo_platform_get_devices">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platform.c"
             line="143">Retrieve all the associated devices matching the filter.
The filter matches against the device, not the link.</doc>
        <source-position filename="../osinfo/osinfo_platform.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platform.c"
               line="151">a list of #OsinfoDevice entities</doc>
          <type name="DeviceList" c:type="OsinfoDeviceList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="145">a platform entity</doc>
            <type name="Platform" c:type="OsinfoPlatform*"/>
          </instance-parameter>
          <parameter name="filter"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platform.c"
                 line="146">an optional filter</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Product" c:type="OsinfoProduct"/>
      </field>
      <field name="priv">
        <type name="PlatformPrivate" c:type="OsinfoPlatformPrivate*"/>
      </field>
    </class>
    <record name="PlatformClass"
            c:type="OsinfoPlatformClass"
            glib:is-gtype-struct-for="Platform">
      <source-position filename="../osinfo/osinfo_platform.h" line="32"/>
      <field name="parent_class">
        <type name="ProductClass" c:type="OsinfoProductClass"/>
      </field>
    </record>
    <class name="PlatformList"
           c:symbol-prefix="platformlist"
           c:type="OsinfoPlatformList"
           parent="ProductList"
           glib:type-name="OsinfoPlatformList"
           glib:get-type="osinfo_platformlist_get_type"
           glib:type-struct="PlatformListClass">
      <source-position filename="../osinfo/osinfo_platformlist.h" line="28"/>
      <constructor name="new" c:identifier="osinfo_platformlist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platformlist.c"
             line="63">Construct a new platform list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_platformlist.h" line="34"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platformlist.c"
               line="68">an empty platform list</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_platformlist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platformlist.c"
             line="77">Construct a new platform list that is filled with platforms
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_platformlist.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platformlist.c"
               line="84">a copy of the platform list</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="79">the platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_platformlist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platformlist.c"
             line="95">Construct a new platform list that is filled with platforms
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_platformlist.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platformlist.c"
               line="103">a filtered copy of the platform list</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="97">the platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="98">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_platformlist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platformlist.c"
             line="115">Construct a new platform list that is filled with only the
platforms that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_platformlist.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platformlist.c"
               line="123">an intersection of the two platform lists</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="117">the first platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="118">the second platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_platformlist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_platformlist.c"
             line="135">Construct a new platform list that is filled with all the
platforms that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_platformlist.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_platformlist.c"
               line="143">a union of the two platform lists</doc>
          <type name="PlatformList" c:type="OsinfoPlatformList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="137">the first platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_platformlist.c"
                 line="138">the second platform list to copy</doc>
            <type name="PlatformList" c:type="OsinfoPlatformList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ProductList" c:type="OsinfoProductList"/>
      </field>
      <field name="priv">
        <type name="PlatformListPrivate" c:type="OsinfoPlatformListPrivate*"/>
      </field>
    </class>
    <record name="PlatformListClass"
            c:type="OsinfoPlatformListClass"
            glib:is-gtype-struct-for="PlatformList">
      <source-position filename="../osinfo/osinfo_platformlist.h" line="28"/>
      <field name="parent_class">
        <type name="ProductListClass" c:type="OsinfoProductListClass"/>
      </field>
    </record>
    <record name="PlatformListPrivate"
            c:type="OsinfoPlatformListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_platformlist.h" line="28"/>
    </record>
    <record name="PlatformPrivate"
            c:type="OsinfoPlatformPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_platform.h" line="32"/>
    </record>
    <class name="Product"
           c:symbol-prefix="product"
           c:type="OsinfoProduct"
           parent="Entity"
           abstract="1"
           glib:type-name="OsinfoProduct"
           glib:get-type="osinfo_product_get_type"
           glib:type-struct="ProductClass">
      <source-position filename="../osinfo/osinfo_product.h" line="29"/>
      <method name="add_related" c:identifier="osinfo_product_add_related">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="271">Add an association between two products</doc>
        <source-position filename="../osinfo/osinfo_product.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="273">a product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="274">the relationship</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
          <parameter name="otherproduct" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="275">the product to relate to</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_codename"
              c:identifier="osinfo_product_get_codename"
              glib:get-property="codename">
        <source-position filename="../osinfo/osinfo_product.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="316">The product's codename, or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="314">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol_date"
              c:identifier="osinfo_product_get_eol_date"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_product.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="386">A #GDate representing the product's EOL date,
                          or NULL.</doc>
          <type name="GLib.Date" c:type="GDate*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="384">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_eol_date_string"
              c:identifier="osinfo_product_get_eol_date_string"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_product.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="340">A string representing the product's EOL date, or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="338">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_logo"
              c:identifier="osinfo_product_get_logo"
              glib:get-property="logo">
        <source-position filename="../osinfo/osinfo_product.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="osinfo_product_get_name"
              glib:get-property="name">
        <source-position filename="../osinfo/osinfo_product.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_related" c:identifier="osinfo_product_get_related">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="237">Get a list of products satisfying the requested
relationship</doc>
        <source-position filename="../osinfo/osinfo_product.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="245">a list of related products</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="239">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="240">the relationship to query</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_release_date"
              c:identifier="osinfo_product_get_release_date"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_product.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="367">A #GDate representing the product's release date,
                          or NULL.</doc>
          <type name="GLib.Date" c:type="GDate*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="365">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_release_date_string"
              c:identifier="osinfo_product_get_release_date_string"
              version="0.2.8">
        <source-position filename="../osinfo/osinfo_product.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="327">A string representing the product's release date, or NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="325">an product</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_short_id"
              c:identifier="osinfo_product_get_short_id"
              glib:get-property="short-id">
        <source-position filename="../osinfo/osinfo_product.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_short_id_list"
              c:identifier="osinfo_product_get_short_id_list"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="475">Retrieve all the short-ids associated with the product.</doc>
        <source-position filename="../osinfo/osinfo_product.h" line="66"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_product.c"
               line="481">the list of short-ids.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_product.c"
                 line="477">an #OsinfoProduct</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor"
              c:identifier="osinfo_product_get_vendor"
              glib:get-property="vendor">
        <source-position filename="../osinfo/osinfo_product.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="osinfo_product_get_version"
              glib:get-property="version">
        <source-position filename="../osinfo/osinfo_product.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="product" transfer-ownership="none">
            <type name="Product" c:type="OsinfoProduct*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="codename"
                transfer-ownership="none"
                getter="get_codename">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="202">The codename of this product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="logo" transfer-ownership="none" getter="get_logo">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="214">The URI of the logo of the product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name" transfer-ownership="none" getter="get_name">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="154">The name of this product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="short-id"
                transfer-ownership="none"
                getter="get_short_id">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="166">The short ID of this product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="vendor" transfer-ownership="none" getter="get_vendor">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="178">The Vendor of this product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version" transfer-ownership="none" getter="get_version">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="190">The version of the product.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="ProductPrivate" c:type="OsinfoProductPrivate*"/>
      </field>
    </class>
    <record name="ProductClass"
            c:type="OsinfoProductClass"
            glib:is-gtype-struct-for="Product">
      <source-position filename="../osinfo/osinfo_product.h" line="29"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="ProductFilter"
           c:symbol-prefix="productfilter"
           c:type="OsinfoProductFilter"
           parent="Filter"
           glib:type-name="OsinfoProductFilter"
           glib:get-type="osinfo_productfilter_get_type"
           glib:type-struct="ProductFilterClass">
      <source-position filename="../osinfo/osinfo_productfilter.h" line="26"/>
      <constructor name="new" c:identifier="osinfo_productfilter_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productfilter.c"
             line="77">Construct a new filter that matches all operating
systems</doc>
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="32"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productfilter.c"
               line="83">a new filter</doc>
          <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
        </return-value>
      </constructor>
      <method name="add_product_constraint"
              c:identifier="osinfo_productfilter_add_product_constraint">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productfilter.c"
             line="109">Adds a constraint that matches products which
have a relationship @relshp with @product. Multiple constraints
can be set for the same @relshp or @product, in which case
all must match</doc>
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="34"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="productfilter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="111">a filter object</doc>
            <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="112">the relationship to filter on</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
          <parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="113">the target product to filter on</doc>
            <type name="Product" c:type="OsinfoProduct*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_support_date_constraint"
              c:identifier="osinfo_productfilter_add_support_date_constraint">
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="productfilter" transfer-ownership="none">
            <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
          </instance-parameter>
          <parameter name="when" transfer-ownership="none">
            <type name="GLib.Date" c:type="GDate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_product_constraint"
              c:identifier="osinfo_productfilter_clear_product_constraint">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productfilter.c"
             line="143">Remove all constraints for the relationship @relshp</doc>
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="productfilter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="145">a filter object</doc>
            <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="146">the relationship to clear</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_product_constraints"
              c:identifier="osinfo_productfilter_clear_product_constraints">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productfilter.c"
             line="158">Remove all relationship constraints</doc>
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="productfilter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="160">a filter object</doc>
            <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product_constraint_values"
              c:identifier="osinfo_productfilter_get_product_constraint_values">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productfilter.c"
             line="172">Retrieve a list of all operating systems that are
the target of constraint for the  relationship
@relshp.</doc>
        <source-position filename="../osinfo/osinfo_productfilter.h"
                         line="38"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productfilter.c"
               line="181">a list of operating systems</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Product"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="productfilter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="174">a filter object</doc>
            <type name="ProductFilter" c:type="OsinfoProductFilter*"/>
          </instance-parameter>
          <parameter name="relshp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productfilter.c"
                 line="175">a relationship to query</doc>
            <type name="ProductRelationship"
                  c:type="OsinfoProductRelationship"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Filter" c:type="OsinfoFilter"/>
      </field>
      <field name="priv">
        <type name="ProductFilterPrivate"
              c:type="OsinfoProductFilterPrivate*"/>
      </field>
    </class>
    <record name="ProductFilterClass"
            c:type="OsinfoProductFilterClass"
            glib:is-gtype-struct-for="ProductFilter">
      <source-position filename="../osinfo/osinfo_productfilter.h" line="26"/>
      <field name="parent_class">
        <type name="FilterClass" c:type="OsinfoFilterClass"/>
      </field>
    </record>
    <record name="ProductFilterPrivate"
            c:type="OsinfoProductFilterPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_productfilter.h" line="26"/>
    </record>
    <class name="ProductList"
           c:symbol-prefix="productlist"
           c:type="OsinfoProductList"
           parent="List"
           glib:type-name="OsinfoProductList"
           glib:get-type="osinfo_productlist_get_type"
           glib:type-struct="ProductListClass">
      <source-position filename="../osinfo/osinfo_productlist.h" line="30"/>
      <constructor name="new" c:identifier="osinfo_productlist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productlist.c"
             line="63">Construct a new os list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_productlist.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productlist.c"
               line="68">an empty os list</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_productlist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productlist.c"
             line="78">Construct a new os list that is filled with oss
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_productlist.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productlist.c"
               line="85">a copy of the os list</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="80">the os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_productlist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productlist.c"
             line="96">Construct a new os list that is filled with oss
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_productlist.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productlist.c"
               line="104">a filtered copy of the os list</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="98">the os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="99">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_productlist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productlist.c"
             line="116">Construct a new os list that is filled with only the
oss that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_productlist.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productlist.c"
               line="124">an intersection of the two os lists</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="118">the first os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="119">the second os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_productlist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_productlist.c"
             line="136">Construct a new os list that is filled with all the
oss that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_productlist.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_productlist.c"
               line="144">a union of the two os lists</doc>
          <type name="ProductList" c:type="OsinfoProductList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="138">the first os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_productlist.c"
                 line="139">the second os list to copy</doc>
            <type name="ProductList" c:type="OsinfoProductList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="ProductListPrivate" c:type="OsinfoProductListPrivate*"/>
      </field>
    </class>
    <record name="ProductListClass"
            c:type="OsinfoProductListClass"
            glib:is-gtype-struct-for="ProductList">
      <source-position filename="../osinfo/osinfo_productlist.h" line="30"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="ProductListPrivate"
            c:type="OsinfoProductListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_productlist.h" line="30"/>
    </record>
    <record name="ProductPrivate" c:type="OsinfoProductPrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_product.h" line="29"/>
    </record>
    <enumeration name="ProductRelationship"
                 glib:type-name="OsinfoProductRelationship"
                 glib:get-type="osinfo_product_relationship_get_type"
                 c:type="OsinfoProductRelationship">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_product.c"
           line="40">Enum values used to form relationships between products</doc>
      <member name="derives_from"
              value="0"
              c:identifier="OSINFO_PRODUCT_RELATIONSHIP_DERIVES_FROM"
              glib:nick="derives-from"
              glib:name="OSINFO_PRODUCT_RELATIONSHIP_DERIVES_FROM">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="42">a descendent (RHEL-5 derives from Fedora-6)</doc>
      </member>
      <member name="upgrades"
              value="1"
              c:identifier="OSINFO_PRODUCT_RELATIONSHIP_UPGRADES"
              glib:nick="upgrades"
              glib:name="OSINFO_PRODUCT_RELATIONSHIP_UPGRADES">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="44">a new version release (RHEL-6 upgrades RHEL-4)</doc>
      </member>
      <member name="clones"
              value="2"
              c:identifier="OSINFO_PRODUCT_RELATIONSHIP_CLONES"
              glib:nick="clones"
              glib:name="OSINFO_PRODUCT_RELATIONSHIP_CLONES">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_product.c"
             line="43">a perfect clone (CentOS-5 clones RHEL-5)</doc>
      </member>
    </enumeration>
    <constant name="RESOURCES_PROP_ARCHITECTURE"
              value="architecture"
              c:type="OSINFO_RESOURCES_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_resources.h" line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESOURCES_PROP_CPU"
              value="cpu"
              c:type="OSINFO_RESOURCES_PROP_CPU">
      <source-position filename="../osinfo/osinfo_resources.h" line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESOURCES_PROP_N_CPUS"
              value="n-cpus"
              c:type="OSINFO_RESOURCES_PROP_N_CPUS">
      <source-position filename="../osinfo/osinfo_resources.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESOURCES_PROP_RAM"
              value="ram"
              c:type="OSINFO_RESOURCES_PROP_RAM">
      <source-position filename="../osinfo/osinfo_resources.h" line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESOURCES_PROP_STORAGE"
              value="storage"
              c:type="OSINFO_RESOURCES_PROP_STORAGE">
      <source-position filename="../osinfo/osinfo_resources.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="ReleaseStatus"
                 glib:type-name="OsinfoReleaseStatus"
                 glib:get-type="osinfo_release_status_get_type"
                 c:type="OsinfoReleaseStatus">
      <member name="released"
              value="0"
              c:identifier="OSINFO_RELEASE_STATUS_RELEASED"
              glib:nick="released"
              glib:name="OSINFO_RELEASE_STATUS_RELEASED">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.h"
             line="55">A released OS. (Since: 0.2.9)</doc>
      </member>
      <member name="snapshot"
              value="1"
              c:identifier="OSINFO_RELEASE_STATUS_SNAPSHOT"
              glib:nick="snapshot"
              glib:name="OSINFO_RELEASE_STATUS_SNAPSHOT">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.h"
             line="56">A continuous integration snapshot and not
an actual released product yet. For example, gnome-continuous images for
development snapshots of GNOME and nightly build ISOs of Fedora etc.
(Since: 0.2.9)</doc>
      </member>
      <member name="prerelease"
              value="2"
              c:identifier="OSINFO_RELEASE_STATUS_PRERELEASE"
              glib:nick="prerelease"
              glib:name="OSINFO_RELEASE_STATUS_PRERELEASE">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.h"
             line="60">A pre-release. For example, alpha and
beta pre-releases of Fedora etc. (Since: 0.2.9)</doc>
      </member>
      <member name="rolling"
              value="3"
              c:identifier="OSINFO_RELEASE_STATUS_ROLLING"
              glib:nick="rolling"
              glib:name="OSINFO_RELEASE_STATUS_ROLLING">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_os.h"
             line="62">A rolling version of an OS and thus with no
actual releases. For example, Gentoo, Arch Linux, etc. (Since: 1.4.0)</doc>
      </member>
    </enumeration>
    <class name="Resources"
           c:symbol-prefix="resources"
           c:type="OsinfoResources"
           parent="Entity"
           glib:type-name="OsinfoResources"
           glib:get-type="osinfo_resources_get_type"
           glib:type-struct="ResourcesClass">
      <source-position filename="../osinfo/osinfo_resources.h" line="36"/>
      <constructor name="new" c:identifier="osinfo_resources_new">
        <source-position filename="../osinfo/osinfo_resources.h" line="48"/>
        <return-value transfer-ownership="full">
          <type name="Resources" c:type="OsinfoResources*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="architecture" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_architecture"
              c:identifier="osinfo_resources_get_architecture"
              glib:get-property="architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="244">Retrieves the target hardware architecture to which @resources applies. Some
operating systems specify the same requirements and recommendations for all
architectures. In such cases, the string returned by this call will be
#OSINFO_ARCHITECTURE_ALL.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resources.c"
               line="253">the hardware architecture.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="246">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cpu"
              c:identifier="osinfo_resources_get_cpu"
              glib:get-property="cpu">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="275">Retrieves the CPU frequency in hertz (Hz). Divide the value by #OSINFO_MEGAHERTZ if
you need this value in megahertz (MHz).</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resources.c"
               line="282">the CPU frequency, or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="277">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_cpus"
              c:identifier="osinfo_resources_get_n_cpus"
              glib:get-property="n-cpus">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="261">Retrieves the number of CPUs.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resources.c"
               line="267">the number of CPUs, or -1.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="263">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ram"
              c:identifier="osinfo_resources_get_ram"
              glib:get-property="ram">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="290">Retrieves the amount of Random Access Memory (RAM) in bytes. Divide the value
by #OSINFO_MEBIBYTES if you need this value in mebibytes.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resources.c"
               line="297">the amount of RAM, or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="292">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_storage"
              c:identifier="osinfo_resources_get_storage"
              glib:get-property="storage">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="305">Retrieves the amount of storage space in bytes. Divide the value by
#OSINFO_GIBIBYTES if you need this value in gibibytes.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resources.c"
               line="312">the amount of storage, or -1.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="307">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_cpu"
              c:identifier="osinfo_resources_set_cpu"
              glib:set-property="cpu">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="348">Sets the CPU frequency.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="350">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
          <parameter name="cpu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="351">the CPU frequency in hertz (Hz)</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_n_cpus"
              c:identifier="osinfo_resources_set_n_cpus"
              glib:set-property="n-cpus">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="334">Sets the number of CPUs.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="336">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
          <parameter name="n_cpus" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="337">the number of CPUs</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ram"
              c:identifier="osinfo_resources_set_ram"
              glib:set-property="ram">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="362">Sets the amount of RAM in bytes.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="364">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
          <parameter name="ram" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="365">the amount of ram in bytes</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_storage"
              c:identifier="osinfo_resources_set_storage"
              glib:set-property="storage">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="376">Sets the amount of storage space.</doc>
        <source-position filename="../osinfo/osinfo_resources.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="resources" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="378">an #OsinfoResources instance</doc>
            <type name="Resources" c:type="OsinfoResources*"/>
          </instance-parameter>
          <parameter name="storage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resources.c"
                 line="379">the amount of storage in bytes</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="architecture"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="153">The target hardware architecture to which these resources applies.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="cpu"
                writable="1"
                transfer-ownership="none"
                setter="set_cpu"
                getter="get_cpu">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="166">The CPU frequency in hertz (Hz).</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="n-cpus"
                writable="1"
                transfer-ownership="none"
                setter="set_n_cpus"
                getter="get_n_cpus">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="180">The number of CPUs.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="ram"
                writable="1"
                transfer-ownership="none"
                setter="set_ram"
                getter="get_ram">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="194">The amount of Random Access Memory (RAM) in bytes.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="storage"
                writable="1"
                transfer-ownership="none"
                setter="set_storage"
                getter="get_storage">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resources.c"
             line="208">The amount of storage space in bytes.</doc>
        <type name="gint64" c:type="gint64"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="ResourcesPrivate" c:type="OsinfoResourcesPrivate*"/>
      </field>
    </class>
    <record name="ResourcesClass"
            c:type="OsinfoResourcesClass"
            glib:is-gtype-struct-for="Resources">
      <source-position filename="../osinfo/osinfo_resources.h" line="36"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <class name="ResourcesList"
           c:symbol-prefix="resourceslist"
           c:type="OsinfoResourcesList"
           parent="List"
           glib:type-name="OsinfoResourcesList"
           glib:get-type="osinfo_resourceslist_get_type"
           glib:type-struct="ResourcesListClass">
      <source-position filename="../osinfo/osinfo_resourceslist.h" line="29"/>
      <constructor name="new" c:identifier="osinfo_resourceslist_new">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resourceslist.c"
             line="62">Construct a new resources list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_resourceslist.h"
                         line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resourceslist.c"
               line="67">an empty resources list</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_resourceslist_new_copy"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resourceslist.c"
             line="76">Construct a new resources list that is filled with resources instances
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_resourceslist.h"
                         line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resourceslist.c"
               line="83">a copy of the resources list</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="78">the resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_resourceslist_new_filtered"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resourceslist.c"
             line="94">Construct a new resources list that is filled with resources instances
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_resourceslist.h"
                         line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resourceslist.c"
               line="102">a filtered copy of the resources list</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="96">the resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="97">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_resourceslist_new_intersection"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resourceslist.c"
             line="116">Construct a new resources list that is filled with only the
resources instances that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_resourceslist.h"
                         line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resourceslist.c"
               line="124">an intersection of the two resources lists</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="118">the first resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="119">the second resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_resourceslist_new_union"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_resourceslist.c"
             line="138">Construct a new resources list that is filled with all the
resources instances that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_resourceslist.h"
                         line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_resourceslist.c"
               line="146">a union of the two resources lists</doc>
          <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="140">the first resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_resourceslist.c"
                 line="141">the second resources list to copy</doc>
            <type name="ResourcesList" c:type="OsinfoResourcesList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="ResourcesListPrivate"
              c:type="OsinfoResourcesListPrivate*"/>
      </field>
    </class>
    <record name="ResourcesListClass"
            c:type="OsinfoResourcesListClass"
            glib:is-gtype-struct-for="ResourcesList">
      <source-position filename="../osinfo/osinfo_resourceslist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="ResourcesListPrivate"
            c:type="OsinfoResourcesListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_resourceslist.h" line="29"/>
    </record>
    <record name="ResourcesPrivate"
            c:type="OsinfoResourcesPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_resources.h" line="36"/>
    </record>
    <constant name="TREE_PROP_ARCHITECTURE"
              value="architecture"
              c:type="OSINFO_TREE_PROP_ARCHITECTURE">
      <source-position filename="../osinfo/osinfo_tree.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_BOOT_ISO"
              value="boot-iso"
              c:type="OSINFO_TREE_PROP_BOOT_ISO">
      <source-position filename="../osinfo/osinfo_tree.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_HAS_TREEINFO"
              value="has-treeinfo"
              c:type="OSINFO_TREE_PROP_HAS_TREEINFO">
      <source-position filename="../osinfo/osinfo_tree.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_INITRD"
              value="initrd"
              c:type="OSINFO_TREE_PROP_INITRD">
      <source-position filename="../osinfo/osinfo_tree.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_KERNEL"
              value="kernel"
              c:type="OSINFO_TREE_PROP_KERNEL">
      <source-position filename="../osinfo/osinfo_tree.h" line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_TREEINFO_ARCH"
              value="treeinfo-arch"
              c:type="OSINFO_TREE_PROP_TREEINFO_ARCH">
      <source-position filename="../osinfo/osinfo_tree.h" line="61"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_TREEINFO_FAMILY"
              value="treeinfo-family"
              c:type="OSINFO_TREE_PROP_TREEINFO_FAMILY">
      <source-position filename="../osinfo/osinfo_tree.h" line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_TREEINFO_VARIANT"
              value="treeinfo-variant"
              c:type="OSINFO_TREE_PROP_TREEINFO_VARIANT">
      <source-position filename="../osinfo/osinfo_tree.h" line="59"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_TREEINFO_VERSION"
              value="treeinfo-version"
              c:type="OSINFO_TREE_PROP_TREEINFO_VERSION">
      <source-position filename="../osinfo/osinfo_tree.h" line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_URL" value="url" c:type="OSINFO_TREE_PROP_URL">
      <source-position filename="../osinfo/osinfo_tree.h" line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TREE_PROP_VARIANT"
              value="variant"
              c:type="OSINFO_TREE_PROP_VARIANT">
      <source-position filename="../osinfo/osinfo_tree.h" line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Tree"
           c:symbol-prefix="tree"
           c:type="OsinfoTree"
           parent="Entity"
           glib:type-name="OsinfoTree"
           glib:get-type="osinfo_tree_get_type"
           glib:type-struct="TreeClass">
      <source-position filename="../osinfo/osinfo_tree.h" line="50"/>
      <constructor name="new" c:identifier="osinfo_tree_new" version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="446">Create a new tree entity</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="453">A tree entity</doc>
          <type name="Tree" c:type="OsinfoTree*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="448">the id of the tree to be created</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="architecture" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="449">the architecture of the tree to be created</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="create_from_location"
                c:identifier="osinfo_tree_create_from_location"
                version="0.1.0"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="485">Creates a new #OsinfoTree for installation tree at @location. The @location
could be a http:// or a https:// URI, or a local file.

NOTE: Currently this only works for trees with a .treeinfo file</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="496">a new #OsinfoTree , or NULL on error</doc>
          <type name="Tree" c:type="OsinfoTree*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="487">the location of an installation tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="488">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_async"
                c:identifier="osinfo_tree_create_from_location_async"
                version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="854">Asynchronous variant of #osinfo_tree_create_from_location.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="856">the location of an installation tree</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="857">the I/O priority of the request</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="858">a #GCancellable, or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="859">Function to call when result of this call is ready</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="860">The user data to pass to @callback, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_location_finish"
                c:identifier="osinfo_tree_create_from_location_finish"
                version="0.1.0"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="887">Finishes an asynchronous tree object creation process started with
#osinfo_tree_create_from_location_async.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="895">a new #OsinfoTree , or NULL on error</doc>
          <type name="Tree" c:type="OsinfoTree*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="889">a #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </function>
      <function name="create_from_treeinfo"
                c:identifier="osinfo_tree_create_from_treeinfo"
                version="1.7.0"
                throws="1">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1166">Creates a new #OsinfoTree for installation tree represented by @treeinfo.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1174">a new #OsinfoTree, or NULL on error</doc>
          <type name="Tree" c:type="OsinfoTree*"/>
        </return-value>
        <parameters>
          <parameter name="treeinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1168">a string representing the .treeinfo content</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1169">the location of the original @treeinfo</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_architecture"
              c:identifier="osinfo_tree_get_architecture"
              glib:get-property="architecture"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="909">Retrieves the target hardware architecture of the OS @tree provides.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="915">the hardware architecture, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="911">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_boot_iso_path"
              c:identifier="osinfo_tree_get_boot_iso_path"
              glib:get-property="boot-iso-path"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1017">Retrieves the path to the boot_iso image in the install tree.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1023">the path to boot_iso image, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1019">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_initrd_path"
              c:identifier="osinfo_tree_get_initrd_path"
              glib:get-property="initrd-path"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1051">Retrieves the path to the initrd image in the install tree.

Note: This only applies to installer trees of 'linux' OS family.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1059">the path to initrd image, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1053">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_path"
              c:identifier="osinfo_tree_get_kernel_path"
              glib:get-property="kernel-path"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1033">Retrieves the path to the kernel image in the install tree.

Note: This only applies to installer trees of 'linux' OS family.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1041">the path to kernel image, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1035">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os"
              c:identifier="osinfo_tree_get_os"
              glib:get-property="os"
              version="1.5.0">
        <source-position filename="../osinfo/osinfo_tree.h" line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1089">the operating system, or NULL</doc>
          <type name="Os" c:type="OsinfoOs*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1087">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_variants"
              c:identifier="osinfo_tree_get_os_variants"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1119">Gets the variants of the associated operating system.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1125">the operating system variant, or NULL</doc>
          <type name="OsVariantList" c:type="OsinfoOsVariantList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1121">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_treeinfo_arch"
              c:identifier="osinfo_tree_get_treeinfo_arch"
              glib:get-property="treeinfo-arch"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="960">If @tree has treeinfo, this function retrieves the expected architecture.

Note: In practice, this will usually not be the exact copy of the
architecture but rather a regular expression that matches it.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="969">the treeinfo architecture, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="962">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_treeinfo_family"
              c:identifier="osinfo_tree_get_treeinfo_family"
              glib:get-property="treeinfo-family"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="941">If @tree has treeinfo, this function retrieves the expected family.

Note: In practice, this will usually not be the exact copy of the family
but rather a regular expression that matches it.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="950">the treeinfo family, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="943">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_treeinfo_variant"
              c:identifier="osinfo_tree_get_treeinfo_variant"
              glib:get-property="treeinfo-variant"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="979">If @tree has treeinfo, this function retrieves the expected variant.

Note: In practice, this will usually not be the exact copy of the variant
but rather a regular expression that matches it.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="988">the treeinfo variant, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="981">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_treeinfo_version"
              c:identifier="osinfo_tree_get_treeinfo_version"
              glib:get-property="treeinfo-version"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="998">If @tree has treeinfo, this function retrieves the expected version.

Note: In practice, this will usually not be the exact copy of version but
rather a regular expression that matches it.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1007">the treeinfo version, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1000">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="osinfo_tree_get_url"
              glib:get-property="url"
              version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="925">The URL to the @tree</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="931">the URL, or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="927">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_treeinfo"
              c:identifier="osinfo_tree_has_treeinfo"
              version="1.3.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1069">Return whether a tree has treeinfo or not.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1075">TRUE if the tree has treeinfo. FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1071">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="matches"
              c:identifier="osinfo_tree_matches"
              version="1.10.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1193">Determines whether the metadata for the unidentified @tree is a match
for the @reference tree.

The metadata in the unidentified @tree must be literal strings,
while the metadata in the @reference tree must be regular expressions.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="1204">#TRUE if @tree is a match for @reference. #FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1195">an unidentified #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
          <parameter name="reference" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1196">a reference #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_os"
              c:identifier="osinfo_tree_set_os"
              glib:set-property="os"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="1101">Sets the #OsinfoOs associated to the #OsinfoTree instance.</doc>
        <source-position filename="../osinfo/osinfo_tree.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="tree" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1103">an #OsinfoTree instance</doc>
            <type name="Tree" c:type="OsinfoTree*"/>
          </instance-parameter>
          <parameter name="os" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_tree.c"
                 line="1104">an #OsinfoOs instance</doc>
            <type name="Os" c:type="OsinfoOs*"/>
          </parameter>
        </parameters>
      </method>
      <property name="architecture"
                writable="1"
                transfer-ownership="none"
                getter="get_architecture">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="300">The target hardware architecture of this tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="boot-iso-path"
                writable="1"
                transfer-ownership="none"
                getter="get_boot_iso_path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="348">The path to the boot ISO in the install tree</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="has-treeinfo" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="360">Whether the tree has treeinfo or not</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="initrd-path"
                writable="1"
                transfer-ownership="none"
                getter="get_initrd_path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="336">The path to the initrd image in the install tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kernel-path"
                writable="1"
                transfer-ownership="none"
                getter="get_kernel_path">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="324">The path to the kernel image in the install tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="os"
                writable="1"
                transfer-ownership="none"
                setter="set_os"
                getter="get_os">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="420">Os information for the current tree. For tree stored in an
#OsinfoDb, it will be filled when the database is loaded, otherwise
the property will be filled after a successful call to
osinfo_db_identify_tree().</doc>
        <type name="Os"/>
      </property>
      <property name="treeinfo-arch"
                writable="1"
                transfer-ownership="none"
                getter="get_treeinfo_arch">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="408">The treeinfo arch</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="treeinfo-family"
                writable="1"
                transfer-ownership="none"
                getter="get_treeinfo_family">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="372">The treeinfo family</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="treeinfo-variant"
                writable="1"
                transfer-ownership="none"
                getter="get_treeinfo_variant">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="384">The treeinfo variant</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="treeinfo-version"
                writable="1"
                transfer-ownership="none"
                getter="get_treeinfo_version">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="396">The treeinfo version</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="url"
                writable="1"
                transfer-ownership="none"
                getter="get_url">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="312">The URL to this tree.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Entity" c:type="OsinfoEntity"/>
      </field>
      <field name="priv">
        <type name="TreePrivate" c:type="OsinfoTreePrivate*"/>
      </field>
    </class>
    <record name="TreeClass"
            c:type="OsinfoTreeClass"
            glib:is-gtype-struct-for="Tree">
      <source-position filename="../osinfo/osinfo_tree.h" line="50"/>
      <field name="parent_class">
        <type name="EntityClass" c:type="OsinfoEntityClass"/>
      </field>
    </record>
    <enumeration name="TreeError"
                 version="1.6.0"
                 glib:type-name="OsinfoTreeError"
                 glib:get-type="osinfo_tree_error_get_type"
                 c:type="OsinfoTreeError"
                 glib:error-domain="osinfo-tree-error">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_tree.h"
           line="34">#GError codes used for errors in the #OSINFO_TREE_ERROR domain, during
reading the treeinfo from a URI.</doc>
      <member name="no_treeinfo"
              value="0"
              c:identifier="OSINFO_TREE_ERROR_NO_TREEINFO"
              glib:nick="no-treeinfo"
              glib:name="OSINFO_TREE_ERROR_NO_TREEINFO">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.h"
             line="36">No treeinfo found;</doc>
      </member>
      <member name="not_supported_protocol"
              value="1"
              c:identifier="OSINFO_TREE_ERROR_NOT_SUPPORTED_PROTOCOL"
              glib:nick="not-supported-protocol"
              glib:name="OSINFO_TREE_ERROR_NOT_SUPPORTED_PROTOCOL">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.h"
             line="37">The URL protocol is not supported.</doc>
      </member>
      <function name="quark"
                c:identifier="osinfo_tree_error_quark"
                version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="67">Gets a #GQuark representing the string "osinfo-tree-error"</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_tree.c"
               line="72">the #GQuark representing the string.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="TreeList"
           c:symbol-prefix="treelist"
           c:type="OsinfoTreeList"
           parent="List"
           glib:type-name="OsinfoTreeList"
           glib:get-type="osinfo_treelist_get_type"
           glib:type-struct="TreeListClass">
      <source-position filename="../osinfo/osinfo_treelist.h" line="29"/>
      <constructor name="new"
                   c:identifier="osinfo_treelist_new"
                   version="0.1.0">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_treelist.c"
             line="62">Construct a new tree list that is initially empty.</doc>
        <source-position filename="../osinfo/osinfo_treelist.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_treelist.c"
               line="67">an empty tree list</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
      </constructor>
      <method name="new_copy"
              c:identifier="osinfo_treelist_new_copy"
              version="0.1.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_treelist.c"
             line="78">Construct a new tree list that is filled with trees
from @source</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_copy() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_treelist.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_treelist.c"
               line="85">a copy of the tree list</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="80">the tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_filtered"
              c:identifier="osinfo_treelist_new_filtered"
              version="0.1.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_treelist.c"
             line="99">Construct a new tree list that is filled with trees
from @source that match @filter</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_filtered() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_treelist.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_treelist.c"
               line="107">a filtered copy of the tree list</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="101">the tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="102">the filter to apply</doc>
            <type name="Filter" c:type="OsinfoFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_intersection"
              c:identifier="osinfo_treelist_new_intersection"
              version="0.1.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_treelist.c"
             line="123">Construct a new tree list that is filled with only the
trees that are present in both @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_intersection() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_treelist.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_treelist.c"
               line="131">an intersection of the two tree lists</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="125">the first tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="126">the second tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_union"
              c:identifier="osinfo_treelist_new_union"
              version="0.1.0"
              deprecated="1"
              deprecated-version="0.2.2">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_treelist.c"
             line="147">Construct a new tree list that is filled with all the
trees that are present in either @sourceOne and @sourceTwo.</doc>
        <doc-deprecated xml:space="preserve">Use osinfo_list_new_union() instead.</doc-deprecated>
        <source-position filename="../osinfo/osinfo_treelist.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../osinfo/osinfo_treelist.c"
               line="155">a union of the two tree lists</doc>
          <type name="TreeList" c:type="OsinfoTreeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sourceOne" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="149">the first tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </instance-parameter>
          <parameter name="sourceTwo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../osinfo/osinfo_treelist.c"
                 line="150">the second tree list to copy</doc>
            <type name="TreeList" c:type="OsinfoTreeList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="List" c:type="OsinfoList"/>
      </field>
      <field name="priv">
        <type name="TreeListPrivate" c:type="OsinfoTreeListPrivate*"/>
      </field>
    </class>
    <record name="TreeListClass"
            c:type="OsinfoTreeListClass"
            glib:is-gtype-struct-for="TreeList">
      <source-position filename="../osinfo/osinfo_treelist.h" line="29"/>
      <field name="parent_class">
        <type name="ListClass" c:type="OsinfoListClass"/>
      </field>
    </record>
    <record name="TreeListPrivate"
            c:type="OsinfoTreeListPrivate"
            disguised="1">
      <source-position filename="../osinfo/osinfo_treelist.h" line="29"/>
    </record>
    <record name="TreePrivate" c:type="OsinfoTreePrivate" disguised="1">
      <source-position filename="../osinfo/osinfo_tree.h" line="50"/>
    </record>
    <function name="error_quark"
              c:identifier="osinfo_error_quark"
              moved-to="Error.quark"
              version="1.3.0">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_loader.c"
           line="158">Gets a #GQuark representing the string "libosinfo"</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_loader.c"
             line="163">the #GQuark representing the string.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="media_error_quark"
              c:identifier="osinfo_media_error_quark"
              moved-to="MediaError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="osinfo_datamap">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_datamap.c"
           line="28">#OsinfoDatamap is an object for representing OS
datamaps. It is to translate generic osinfo values to OS
specific data.</doc>
    </docsection>
    <docsection name="osinfo_datamaplist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_datamaplist.c"
           line="23">#OsinfoDatamapList is a list specialization that stores
only #OsinfoDatamap objects.</doc>
    </docsection>
    <docsection name="osinfo_db">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_db.c"
           line="113">#OsinfoDb is a database tracking all entity instances against which
metadata is recorded.</doc>
    </docsection>
    <docsection name="osinfo_deployment">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_deployment.c"
           line="24">#OsinfoDeployment is an entity representing an virtualization
deployment. Deployments have a list of supported devices</doc>
    </docsection>
    <docsection name="osinfo_deploymentlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_deploymentlist.c"
           line="24">#OsinfoDeploymentList is a list specialization that stores
only #OsinfoDeployment objects.</doc>
    </docsection>
    <docsection name="osinfo_device">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_device.c"
           line="24">#OsinfoDevice is an entity representing some kind of hardware
device. Devices can be associated with operating systems
and platforms.</doc>
    </docsection>
    <docsection name="osinfo_device_driver">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_device_driver.c"
           line="29">#OsinfoDeviceDriver is an entity representing device drivers for an (guest)
operating system.</doc>
    </docsection>
    <docsection name="osinfo_device_driverlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_device_driverlist.c"
           line="24">#OsinfoDeviceDriverList is a list specialization that stores only
#OsinfoDeviceDriver objects.</doc>
    </docsection>
    <docsection name="osinfo_devicelink">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_devicelink.c"
           line="24">#OsinfoDeviceLink is an entity representing some kind of hardware
devicelink. DeviceLinks can be associated with operating systems
and platforms.</doc>
    </docsection>
    <docsection name="osinfo_devicelinkfilter">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_devicelinkfilter.c"
           line="24">#OsinfoDeviceLinkFilter is a specialization of #OsinfoFilter that
can also set a constraint against the device link target.
It can only be used to filter entities
that are #OsinfoDeviceLink objects.</doc>
    </docsection>
    <docsection name="osinfo_devicelinklist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_devicelinklist.c"
           line="24">#OsinfoDeviceLinkList is a list specialization that stores
only #OsinfoDeviceLink objects.</doc>
    </docsection>
    <docsection name="osinfo_devicelist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_devicelist.c"
           line="24">#OsinfoDeviceList is a list specialization that stores
only #OsinfoDevice objects.</doc>
    </docsection>
    <docsection name="osinfo_entity">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_entity.c"
           line="24">#OsinfoEntity is an abstract base class for all objects against which
metadata needs to be recorded. Every object has a unique identifier,
which is recommended to be in URI format. Named, multi-valued data
parameters can be associated with each entity. When filtering lists
of entities, the parameter values can be used for matching.</doc>
    </docsection>
    <docsection name="osinfo_filter">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_filter.c"
           line="24">#OsinfoFilter provides a way to filter OsinfoEntity
instances based on their parameter values.</doc>
    </docsection>
    <docsection name="osinfo_firmware">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_firmware.c"
           line="27">#OsinfoFirmware is an entity representing a firmware used to boot
a (guest) operating system.</doc>
    </docsection>
    <docsection name="osinfo_firmwarelist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_firmwarelist.c"
           line="24">#OsinfoFirmwareList is a list specialization that stores
only #OsinfoFirmware objects.</doc>
    </docsection>
    <docsection name="osinfo_image">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_image.c"
           line="27">#OsinfoImage is an entity representing an installation image
a (guest) operating system.</doc>
    </docsection>
    <docsection name="osinfo_imagelist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_imagelist.c"
           line="24">#OsinfoImageList is a list specialization that stores
only #OsinfoImage objects.</doc>
    </docsection>
    <docsection name="osinfo_install_config">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_config.c"
           line="24">#OsinfoInstallConfig is an object for representing OS
install configuration data. It is used to generate an
automated installation script</doc>
    </docsection>
    <docsection name="osinfo_install_config_param">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_config_param.c"
           line="24">#OsinfoInstallConfigParam is an entity for describing all parameters that
can be set in an automated installation. It is used to help applications to
generate an automated installation script. The actual parameter values
for an #OsinfoInstallScript must be set using an #OsinfoInstallConfig
object.</doc>
    </docsection>
    <docsection name="osinfo_install_config_paramlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_config_paramlist.c"
           line="24">#OsinfoInstallConfigParamList is a list specialization that stores
only #OsinfoInstallConfigParam objects.</doc>
    </docsection>
    <docsection name="osinfo_install_script">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_script.c"
           line="30">#OsinfoInstallScript is an object used to generate an
automated installation script for an OS. The OS
configuration data (language, keyboard, timezone, ...)
comes from an #OsinfoInstallConfig object.</doc>
    </docsection>
    <docsection name="osinfo_install_scriptlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_install_scriptlist.c"
           line="24">#OsinfoInstallScriptList is a list specialization that stores
only #OsinfoInstallScript objects.</doc>
    </docsection>
    <docsection name="osinfo_list">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_list.c"
           line="24">#OsinfoList provides a way to maintain a list of #OsinfoEntity objects.</doc>
    </docsection>
    <docsection name="osinfo_loader">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_loader.c"
           line="45">#OsinfoLoader provides a way to populate an #OsinfoDb from
a set of XML documents.</doc>
    </docsection>
    <docsection name="osinfo_media">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_media.c"
           line="192">#OsinfoMedia is an entity representing an installation media
a (guest) operating system.</doc>
    </docsection>
    <docsection name="osinfo_medialist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_medialist.c"
           line="24">#OsinfoMediaList is a list specialization that stores
only #OsinfoMedia objects.</doc>
    </docsection>
    <docsection name="osinfo_os">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_os.c"
           line="27">#OsinfoOs is an entity representing an operating system.
Operating systems have a list of supported devices.
There are relationships amongst operating systems to
declare which are newest releases, which are clones
and which are derived from a common ancestry.</doc>
    </docsection>
    <docsection name="osinfo_os_variant">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_os_variant.c"
           line="24">#OsinfoOsVariant is an entity representing a variant of an operating system.</doc>
    </docsection>
    <docsection name="osinfo_os_variantlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_os_variantlist.c"
           line="23">#OsinfoOsVariantList is a list specialization that stores
only #OsinfoOsVariant objects.</doc>
    </docsection>
    <docsection name="osinfo_oslist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_oslist.c"
           line="24">#OsinfoOsList is a list specialization that stores
only #OsinfoOs objects.</doc>
    </docsection>
    <docsection name="osinfo_platform">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_platform.c"
           line="25">#OsinfoPlatform is an entity representing an virtualization
platform. Platforms have a list of supported devices</doc>
    </docsection>
    <docsection name="osinfo_platformlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_platformlist.c"
           line="24">#OsinfoPlatformList is a list specialization that stores
only #OsinfoPlatform objects.</doc>
    </docsection>
    <docsection name="osinfo_product">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_product.c"
           line="29">#OsinfoProduct is an entity representing an software
product. There are relationships amongst products
to declare which are newest releases, which are clones
and which are derived from a common ancestry.</doc>
    </docsection>
    <docsection name="osinfo_productfilter">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_productfilter.c"
           line="24">#OsinfoProductFilter is a specialization of #OsinfoFilter that
can also set constraints against operating system
relationships. It can only be used to filter entities
that are #OsinfoProduct objects.</doc>
    </docsection>
    <docsection name="osinfo_productlist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_productlist.c"
           line="24">#OsinfoProductList is a list specialization that stores
only #OsinfoProduct objects.</doc>
    </docsection>
    <docsection name="osinfo_resources">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_resources.c"
           line="41">#OsinfoResources is an entity representing required or recommended resources
for an (guest) operating system.</doc>
    </docsection>
    <docsection name="osinfo_resourceslist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_resourceslist.c"
           line="24">#OsinfoResourcesList is a list specialization that stores
only #OsinfoResources objects.</doc>
    </docsection>
    <docsection name="osinfo_tree">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_tree.c"
           line="87">#OsinfoTree is an entity representing an installation tree
a (guest) operating system.</doc>
    </docsection>
    <docsection name="osinfo_treelist">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_treelist.c"
           line="24">#OsinfoTreeList is a list specialization that stores
only #OsinfoTree objects.</doc>
    </docsection>
    <function name="tree_error_quark"
              c:identifier="osinfo_tree_error_quark"
              moved-to="TreeError.quark"
              version="0.1.0">
      <doc xml:space="preserve"
           filename="../osinfo/osinfo_tree.c"
           line="67">Gets a #GQuark representing the string "osinfo-tree-error"</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../osinfo/osinfo_tree.c"
             line="72">the #GQuark representing the string.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
