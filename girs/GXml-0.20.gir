<?xml version="1.0"?>
<!-- GXml-0.20.gir generated by valac 0.57.0.192-7d4e6, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="GLib" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="libxml2" version="2.0"/>
<package name="gxml-0.20"/>
<c:include name="gxml/gxml.h"/>
<namespace name="GXml" version="0.20" c:prefix="GXml" c:identifier-prefixes="GXml" c:symbol-prefixes="gxml">
	<enumeration name="CssCombiner" c:type="GXmlCssCombiner" glib:type-name="GXmlCssCombiner" glib:get-type="gxml_css_combiner_get_type">
		<member name="null" c:identifier="GXML_CSS_COMBINER_NULL" value="0"/>
		<member name="none" c:identifier="GXML_CSS_COMBINER_NONE" value="1"/>
		<member name="inside" c:identifier="GXML_CSS_COMBINER_INSIDE" value="2"/>
		<member name="and" c:identifier="GXML_CSS_COMBINER_AND" value="3"/>
		<member name="parent" c:identifier="GXML_CSS_COMBINER_PARENT" value="4"/>
		<member name="after" c:identifier="GXML_CSS_COMBINER_AFTER" value="5"/>
		<member name="preceded" c:identifier="GXML_CSS_COMBINER_PRECEDED" value="6"/>
	</enumeration>
	<enumeration name="CssSelectorType" c:type="GXmlCssSelectorType" glib:type-name="GXmlCssSelectorType" glib:get-type="gxml_css_selector_type_get_type">
		<member name="class" c:identifier="GXML_CSS_SELECTOR_TYPE_CLASS" value="0"/>
		<member name="id" c:identifier="GXML_CSS_SELECTOR_TYPE_ID" value="1"/>
		<member name="all" c:identifier="GXML_CSS_SELECTOR_TYPE_ALL" value="2"/>
		<member name="element" c:identifier="GXML_CSS_SELECTOR_TYPE_ELEMENT" value="3"/>
		<member name="attribute" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE" value="4"/>
		<member name="attribute_equal" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_EQUAL" value="5"/>
		<member name="attribute_contains" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_CONTAINS" value="6"/>
		<member name="attribute_substring" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_SUBSTRING" value="7"/>
		<member name="attribute_starts_with" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_STARTS_WITH" value="8"/>
		<member name="attribute_starts_with_word" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_STARTS_WITH_WORD" value="9"/>
		<member name="attribute_ends_with" c:identifier="GXML_CSS_SELECTOR_TYPE_ATTRIBUTE_ENDS_WITH" value="10"/>
		<member name="pseudo_class" c:identifier="GXML_CSS_SELECTOR_TYPE_PSEUDO_CLASS" value="11"/>
	</enumeration>
	<enumeration name="NodeType" c:type="GXmlNodeType" glib:type-name="GXmlNodeType" glib:get-type="gxml_node_type_get_type">
		<member name="invalid" c:identifier="GXML_NODE_TYPE_INVALID" value="0"/>
		<member name="element" c:identifier="GXML_NODE_TYPE_ELEMENT" value="1"/>
		<member name="attribute" c:identifier="GXML_NODE_TYPE_ATTRIBUTE" value="0"/>
		<member name="text" c:identifier="GXML_NODE_TYPE_TEXT" value="1"/>
		<member name="cdata_section" c:identifier="GXML_NODE_TYPE_CDATA_SECTION" value="2"/>
		<member name="entity_reference" c:identifier="GXML_NODE_TYPE_ENTITY_REFERENCE" value="3"/>
		<member name="entity" c:identifier="GXML_NODE_TYPE_ENTITY" value="4"/>
		<member name="processing_instruction" c:identifier="GXML_NODE_TYPE_PROCESSING_INSTRUCTION" value="5"/>
		<member name="comment" c:identifier="GXML_NODE_TYPE_COMMENT" value="6"/>
		<member name="document" c:identifier="GXML_NODE_TYPE_DOCUMENT" value="7"/>
		<member name="document_type" c:identifier="GXML_NODE_TYPE_DOCUMENT_TYPE" value="8"/>
		<member name="document_fragment" c:identifier="GXML_NODE_TYPE_DOCUMENT_FRAGMENT" value="9"/>
		<member name="notation" c:identifier="GXML_NODE_TYPE_NOTATION" value="10"/>
	</enumeration>
	<enumeration name="XPathObjectType" c:type="GXmlXPathObjectType" glib:type-name="GXmlXPathObjectType" glib:get-type="gxml_xpath_object_type_get_type">
		<member name="undefined" c:identifier="GXML_XPATH_OBJECT_TYPE_UNDEFINED" value="0"/>
		<member name="nodeset" c:identifier="GXML_XPATH_OBJECT_TYPE_NODESET" value="1"/>
		<member name="boolean" c:identifier="GXML_XPATH_OBJECT_TYPE_BOOLEAN" value="2"/>
		<member name="number" c:identifier="GXML_XPATH_OBJECT_TYPE_NUMBER" value="3"/>
		<member name="string" c:identifier="GXML_XPATH_OBJECT_TYPE_STRING" value="4"/>
		<member name="point" c:identifier="GXML_XPATH_OBJECT_TYPE_POINT" value="5"/>
		<member name="range" c:identifier="GXML_XPATH_OBJECT_TYPE_RANGE" value="6"/>
		<member name="locationset" c:identifier="GXML_XPATH_OBJECT_TYPE_LOCATIONSET" value="7"/>
		<member name="users" c:identifier="GXML_XPATH_OBJECT_TYPE_USERS" value="8"/>
		<member name="xslt_tree" c:identifier="GXML_XPATH_OBJECT_TYPE_XSLT_TREE" value="9"/>
	</enumeration>
	<enumeration name="CssSelectorError" c:type="GXmlCssSelectorError" glib:type-name="GXmlCssSelectorError" glib:get-type="gxml_css_selector_error_get_type" glib:error-domain="gxml-css-selector-error-quark">
		<member name="null" c:identifier="GXML_CSS_SELECTOR_ERROR_NULL" value="0"/>
		<member name="eof" c:identifier="GXML_CSS_SELECTOR_ERROR_EOF" value="1"/>
		<member name="not" c:identifier="GXML_CSS_SELECTOR_ERROR_NOT" value="2"/>
		<member name="pseudo" c:identifier="GXML_CSS_SELECTOR_ERROR_PSEUDO" value="3"/>
		<member name="attribute" c:identifier="GXML_CSS_SELECTOR_ERROR_ATTRIBUTE" value="4"/>
		<member name="identifier" c:identifier="GXML_CSS_SELECTOR_ERROR_IDENTIFIER" value="5"/>
		<member name="combiner" c:identifier="GXML_CSS_SELECTOR_ERROR_COMBINER" value="6"/>
	</enumeration>
	<enumeration name="DomDocumentError" c:type="GXmlDomDocumentError" glib:type-name="GXmlDomDocumentError" glib:get-type="gxml_dom_document_error_get_type" glib:error-domain="gxml-dom-document-error-quark">
		<member name="file_not_found_error" c:identifier="GXML_DOM_DOCUMENT_ERROR_FILE_NOT_FOUND_ERROR" value="0"/>
		<member name="invalid_document_error" c:identifier="GXML_DOM_DOCUMENT_ERROR_INVALID_DOCUMENT_ERROR" value="1"/>
	</enumeration>
	<enumeration name="DomError" c:type="GXmlDomError" glib:type-name="GXmlDomError" glib:get-type="gxml_dom_error_get_type" glib:error-domain="gxml-dom-error-quark">
		<member name="index_size_error" c:identifier="GXML_DOM_ERROR_INDEX_SIZE_ERROR" value="1"/>
		<member name="domstring_size_error" c:identifier="GXML_DOM_ERROR_DOMSTRING_SIZE_ERROR" value="0"/>
		<member name="hierarchy_request_error" c:identifier="GXML_DOM_ERROR_HIERARCHY_REQUEST_ERROR" value="1"/>
		<member name="wrong_document_error" c:identifier="GXML_DOM_ERROR_WRONG_DOCUMENT_ERROR" value="2"/>
		<member name="invalid_character_error" c:identifier="GXML_DOM_ERROR_INVALID_CHARACTER_ERROR" value="3"/>
		<member name="no_data_allowed_error" c:identifier="GXML_DOM_ERROR_NO_DATA_ALLOWED_ERROR" value="4"/>
		<member name="no_modification_allowed_error" c:identifier="GXML_DOM_ERROR_NO_MODIFICATION_ALLOWED_ERROR" value="5"/>
		<member name="not_found_error" c:identifier="GXML_DOM_ERROR_NOT_FOUND_ERROR" value="6"/>
		<member name="not_supported_error" c:identifier="GXML_DOM_ERROR_NOT_SUPPORTED_ERROR" value="7"/>
		<member name="inuse_attribute_error" c:identifier="GXML_DOM_ERROR_INUSE_ATTRIBUTE_ERROR" value="8"/>
		<member name="invalid_state_error" c:identifier="GXML_DOM_ERROR_INVALID_STATE_ERROR" value="9"/>
		<member name="syntax_error" c:identifier="GXML_DOM_ERROR_SYNTAX_ERROR" value="10"/>
		<member name="invalid_modification_error" c:identifier="GXML_DOM_ERROR_INVALID_MODIFICATION_ERROR" value="11"/>
		<member name="namespace_error" c:identifier="GXML_DOM_ERROR_NAMESPACE_ERROR" value="12"/>
		<member name="invalid_access_error" c:identifier="GXML_DOM_ERROR_INVALID_ACCESS_ERROR" value="13"/>
		<member name="validation_error" c:identifier="GXML_DOM_ERROR_VALIDATION_ERROR" value="14"/>
		<member name="type_mismatch_error" c:identifier="GXML_DOM_ERROR_TYPE_MISMATCH_ERROR" value="15"/>
		<member name="security_error" c:identifier="GXML_DOM_ERROR_SECURITY_ERROR" value="16"/>
		<member name="network_error" c:identifier="GXML_DOM_ERROR_NETWORK_ERROR" value="17"/>
		<member name="abort_error" c:identifier="GXML_DOM_ERROR_ABORT_ERROR" value="18"/>
		<member name="url_mismatch_error" c:identifier="GXML_DOM_ERROR_URL_MISMATCH_ERROR" value="19"/>
		<member name="quota_exceeded_error" c:identifier="GXML_DOM_ERROR_QUOTA_EXCEEDED_ERROR" value="20"/>
		<member name="time_out_error" c:identifier="GXML_DOM_ERROR_TIME_OUT_ERROR" value="21"/>
		<member name="invalid_node_type_error" c:identifier="GXML_DOM_ERROR_INVALID_NODE_TYPE_ERROR" value="22"/>
		<member name="data_clone_error" c:identifier="GXML_DOM_ERROR_DATA_CLONE_ERROR" value="23"/>
	</enumeration>
	<enumeration name="EnumerationError" c:type="GXmlEnumerationError" glib:type-name="GXmlEnumerationError" glib:get-type="gxml_enumeration_error_get_type" glib:error-domain="gxml-enumeration-error-quark">
		<member name="invalid_value" c:identifier="GXML_ENUMERATION_ERROR_INVALID_VALUE" value="0"/>
		<member name="invalid_text" c:identifier="GXML_ENUMERATION_ERROR_INVALID_TEXT" value="1"/>
	</enumeration>
	<enumeration name="IXsdSchemaError" c:type="GXmlIXsdSchemaError" glib:type-name="GXmlIXsdSchemaError" glib:get-type="gxml_ixsd_schema_error_get_type" glib:error-domain="gxml-ixsd-schema-error-quark">
		<member name="invalidation_error" c:identifier="GXML_IXSD_SCHEMA_ERROR_INVALIDATION_ERROR" value="0"/>
	</enumeration>
	<enumeration name="ParserError" c:type="GXmlParserError" glib:type-name="GXmlParserError" glib:get-type="gxml_parser_error_get_type" glib:error-domain="gxml-parser-error-quark">
		<member name="invalid_data_error" c:identifier="GXML_PARSER_ERROR_INVALID_DATA_ERROR" value="0"/>
		<member name="invalid_file_error" c:identifier="GXML_PARSER_ERROR_INVALID_FILE_ERROR" value="1"/>
		<member name="invalid_stream_error" c:identifier="GXML_PARSER_ERROR_INVALID_STREAM_ERROR" value="2"/>
	</enumeration>
	<enumeration name="Error" c:type="GXmlError" glib:type-name="GXmlError" glib:get-type="gxml_error_get_type" glib:error-domain="gxml-error-quark">
		<member name="not_supported" c:identifier="GXML_ERROR_NOT_SUPPORTED" value="0"/>
		<member name="parser" c:identifier="GXML_ERROR_PARSER" value="1"/>
		<member name="writer" c:identifier="GXML_ERROR_WRITER" value="2"/>
	</enumeration>
	<enumeration name="XPathError" c:type="GXmlXPathError" glib:type-name="GXmlXPathError" glib:get-type="gxml_xpath_error_get_type" glib:error-domain="gxml-xpath-error-quark">
		<member name="expression_ok" c:identifier="GXML_XPATH_ERROR_EXPRESSION_OK" value="0"/>
		<member name="number_error" c:identifier="GXML_XPATH_ERROR_NUMBER_ERROR" value="1"/>
		<member name="unfinished_literal_error" c:identifier="GXML_XPATH_ERROR_UNFINISHED_LITERAL_ERROR" value="2"/>
		<member name="start_literal_error" c:identifier="GXML_XPATH_ERROR_START_LITERAL_ERROR" value="3"/>
		<member name="variable_ref_error" c:identifier="GXML_XPATH_ERROR_VARIABLE_REF_ERROR" value="4"/>
		<member name="undef_variable_error" c:identifier="GXML_XPATH_ERROR_UNDEF_VARIABLE_ERROR" value="5"/>
		<member name="invalid_predicate_error" c:identifier="GXML_XPATH_ERROR_INVALID_PREDICATE_ERROR" value="6"/>
		<member name="expr_error" c:identifier="GXML_XPATH_ERROR_EXPR_ERROR" value="7"/>
		<member name="unclosed_error" c:identifier="GXML_XPATH_ERROR_UNCLOSED_ERROR" value="8"/>
		<member name="unknown_func_error" c:identifier="GXML_XPATH_ERROR_UNKNOWN_FUNC_ERROR" value="9"/>
		<member name="invalid_operand" c:identifier="GXML_XPATH_ERROR_INVALID_OPERAND" value="10"/>
		<member name="invalid_type" c:identifier="GXML_XPATH_ERROR_INVALID_TYPE" value="11"/>
		<member name="invalid_arity" c:identifier="GXML_XPATH_ERROR_INVALID_ARITY" value="12"/>
		<member name="invalid_ctxt_size" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT_SIZE" value="13"/>
		<member name="invalid_ctxt_position" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT_POSITION" value="14"/>
		<member name="memory_error" c:identifier="GXML_XPATH_ERROR_MEMORY_ERROR" value="15"/>
		<member name="xptr_syntax_error" c:identifier="GXML_XPATH_ERROR_XPTR_SYNTAX_ERROR" value="16"/>
		<member name="xptr_resource_error" c:identifier="GXML_XPATH_ERROR_XPTR_RESOURCE_ERROR" value="17"/>
		<member name="xptr_sub_resource_error" c:identifier="GXML_XPATH_ERROR_XPTR_SUB_RESOURCE_ERROR" value="18"/>
		<member name="undef_prefix_error" c:identifier="GXML_XPATH_ERROR_UNDEF_PREFIX_ERROR" value="19"/>
		<member name="encoding_error" c:identifier="GXML_XPATH_ERROR_ENCODING_ERROR" value="20"/>
		<member name="invalid_char_error" c:identifier="GXML_XPATH_ERROR_INVALID_CHAR_ERROR" value="21"/>
		<member name="invalid_ctxt" c:identifier="GXML_XPATH_ERROR_INVALID_CTXT" value="22"/>
	</enumeration>
	<enumeration name="XPathObjectError" c:type="GXmlXPathObjectError" glib:type-name="GXmlXPathObjectError" glib:get-type="gxml_xpath_object_error_get_type" glib:error-domain="gxml-xpath-object-error-quark">
		<member name="invalid_namespace_error" c:identifier="GXML_XPATH_OBJECT_ERROR_INVALID_NAMESPACE_ERROR" value="0"/>
	</enumeration>
	<class name="ArrayList" c:type="GXmlArrayList" c:symbol-prefix="array_list" glib:type-name="GXmlArrayList" glib:get-type="gxml_array_list_get_type" glib:type-struct="ArrayListClass" parent="GXml.BaseCollection">
		<implements name="GXml.List"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseCollection" c:type="GXmlBaseCollection"/>
		</field>
		<constructor name="new" c:identifier="gxml_array_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ArrayList" c:type="GXmlArrayList*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ArrayListPrivate" c:type="GXmlArrayListPrivate*"/>
		</field>
	</class>
	<record name="ArrayListClass" c:type="GXmlArrayListClass" glib:is-gtype-struct-for="ArrayList">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BaseCollectionClass" c:type="GXmlBaseCollectionClass"/>
		</field>
	</record>
	<record name="ArrayListPrivate" c:type="GXmlArrayListPrivate" disguised="1"/>
	<class name="Attr" c:type="GXmlAttr" c:symbol-prefix="attr" glib:type-name="GXmlAttr" glib:get-type="gxml_attr_get_type" glib:type-struct="AttrClass" parent="GXml.Node">
		<implements name="GXml.DomAttr"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<field name="_namespace_uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="prop" writable="1">
			<type name="GXml.Property" c:type="GXmlProperty*"/>
		</field>
		<property name="is-referenced">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_referenced" c:identifier="gxml_attr_get_is_referenced">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Attr" c:type="GXmlAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_attr_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Attr" c:type="GXmlAttr*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="namespace" c:identifier="gxml_attr_new_namespace">
			<return-value transfer-ownership="full">
				<type name="GXml.Attr" c:type="GXmlAttr*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="reference" c:identifier="gxml_attr_new_reference">
			<return-value transfer-ownership="full">
				<type name="GXml.Attr" c:type="GXmlAttr*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="AttrPrivate" c:type="GXmlAttrPrivate*"/>
		</field>
	</class>
	<record name="AttrClass" c:type="GXmlAttrClass" glib:is-gtype-struct-for="Attr">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="AttrPrivate" c:type="GXmlAttrPrivate" disguised="1"/>
	<class name="BaseCollection" c:type="GXmlBaseCollection" c:symbol-prefix="base_collection" glib:type-name="GXmlBaseCollection" glib:get-type="gxml_base_collection_get_type" glib:type-struct="BaseCollectionClass" parent="GObject.Object" abstract="1">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterable"/>
		<implements name="GXml.Collection"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_nodes_index" writable="1">
			<type name="GLib.Queue" c:type="GQueue*">
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="_element" writable="1">
			<type name="GXml.Element" c:type="GXmlElement*"/>
		</field>
		<field name="_items_name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_items_type" writable="1">
			<type name="GType" c:type="GType"/>
		</field>
		<method name="initialize_element" c:identifier="gxml_base_collection_initialize_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
				</instance-parameter>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
			</parameters>
		</method>
		<method name="validate_append" c:identifier="gxml_base_collection_validate_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="validate_append" invoker="validate_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clear" c:identifier="gxml_base_collection_clear" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="clear" invoker="clear" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="BaseCollectionPrivate" c:type="GXmlBaseCollectionPrivate*"/>
		</field>
	</class>
	<record name="BaseCollectionClass" c:type="GXmlBaseCollectionClass" glib:is-gtype-struct-for="BaseCollection">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="validate_append">
			<callback name="validate_append" c:type="validate_append" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear">
			<callback name="clear" c:type="clear" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.BaseCollection" c:type="GXmlBaseCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="BaseCollectionPrivate" c:type="GXmlBaseCollectionPrivate" disguised="1"/>
	<class name="CssSelector" c:type="GXmlCssSelector" c:symbol-prefix="css_selector" glib:type-name="GXmlCssSelector" glib:get-type="gxml_css_selector_get_type" glib:type-struct="CssSelectorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_css_selector_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
			</return-value>
			<parameters>
				<parameter name="t" transfer-ownership="none">
					<type name="GXml.CssSelectorType" c:type="GXmlCssSelectorType"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_value" c:identifier="gxml_css_selector_new_with_value">
			<return-value transfer-ownership="full">
				<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
			</return-value>
			<parameters>
				<parameter name="t" transfer-ownership="none">
					<type name="GXml.CssSelectorType" c:type="GXmlCssSelectorType"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="selector-type" writable="1" construct="1">
			<type name="GXml.CssSelectorType" c:type="GXmlCssSelectorType"/>
		</property>
		<method name="get_selector_type" c:identifier="gxml_css_selector_get_selector_type">
			<return-value transfer-ownership="none">
				<type name="GXml.CssSelectorType" c:type="GXmlCssSelectorType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_selector_type" c:identifier="gxml_css_selector_set_selector_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.CssSelectorType" c:type="GXmlCssSelectorType"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_css_selector_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="gxml_css_selector_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="value" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_css_selector_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_value" c:identifier="gxml_css_selector_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="combiner" writable="1">
			<type name="GXml.CssCombiner" c:type="GXmlCssCombiner"/>
		</property>
		<method name="get_combiner" c:identifier="gxml_css_selector_get_combiner">
			<return-value transfer-ownership="none">
				<type name="GXml.CssCombiner" c:type="GXmlCssCombiner"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_combiner" c:identifier="gxml_css_selector_set_combiner">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.CssCombiner" c:type="GXmlCssCombiner"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="CssSelectorPrivate" c:type="GXmlCssSelectorPrivate*"/>
		</field>
	</class>
	<record name="CssSelectorClass" c:type="GXmlCssSelectorClass" glib:is-gtype-struct-for="CssSelector">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CssSelectorPrivate" c:type="GXmlCssSelectorPrivate" disguised="1"/>
	<class name="CssElementSelector" c:type="GXmlCssElementSelector" c:symbol-prefix="css_element_selector" glib:type-name="GXmlCssElementSelector" glib:get-type="gxml_css_element_selector_get_type" glib:type-struct="CssElementSelectorClass" parent="GXml.CssSelector">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CssSelector" c:type="GXmlCssSelector"/>
		</field>
		<constructor name="new" c:identifier="gxml_css_element_selector_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
			</return-value>
			<parameters>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="prefixed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_prefixed" c:identifier="gxml_css_element_selector_get_prefixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="prefix" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_css_element_selector_get_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_prefix" c:identifier="gxml_css_element_selector_set_prefix">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="local-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_css_element_selector_get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_local_name" c:identifier="gxml_css_element_selector_set_local_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssElementSelector" c:type="GXmlCssElementSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="CssElementSelectorPrivate" c:type="GXmlCssElementSelectorPrivate*"/>
		</field>
	</class>
	<record name="CssElementSelectorClass" c:type="GXmlCssElementSelectorClass" glib:is-gtype-struct-for="CssElementSelector">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CssSelectorClass" c:type="GXmlCssSelectorClass"/>
		</field>
	</record>
	<record name="CssElementSelectorPrivate" c:type="GXmlCssElementSelectorPrivate" disguised="1"/>
	<class name="CssAttributeSelector" c:type="GXmlCssAttributeSelector" c:symbol-prefix="css_attribute_selector" glib:type-name="GXmlCssAttributeSelector" glib:get-type="gxml_css_attribute_selector_get_type" glib:type-struct="CssAttributeSelectorClass" parent="GXml.CssSelector">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CssSelector" c:type="GXmlCssSelector"/>
		</field>
		<constructor name="new" c:identifier="gxml_css_attribute_selector_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CssAttributeSelector" c:type="GXmlCssAttributeSelector*"/>
			</return-value>
			<parameters>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="prefix" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_css_attribute_selector_get_prefix">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssAttributeSelector" c:type="GXmlCssAttributeSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_prefix" c:identifier="gxml_css_attribute_selector_set_prefix">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssAttributeSelector" c:type="GXmlCssAttributeSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="local-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_css_attribute_selector_get_local_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssAttributeSelector" c:type="GXmlCssAttributeSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_local_name" c:identifier="gxml_css_attribute_selector_set_local_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssAttributeSelector" c:type="GXmlCssAttributeSelector*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="CssAttributeSelectorPrivate" c:type="GXmlCssAttributeSelectorPrivate*"/>
		</field>
	</class>
	<record name="CssAttributeSelectorClass" c:type="GXmlCssAttributeSelectorClass" glib:is-gtype-struct-for="CssAttributeSelector">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CssSelectorClass" c:type="GXmlCssSelectorClass"/>
		</field>
	</record>
	<record name="CssAttributeSelectorPrivate" c:type="GXmlCssAttributeSelectorPrivate" disguised="1"/>
	<class name="CssNotSelector" c:type="GXmlCssNotSelector" c:symbol-prefix="css_not_selector" glib:type-name="GXmlCssNotSelector" glib:get-type="gxml_css_not_selector_get_type" glib:type-struct="CssNotSelectorClass" parent="GXml.CssSelector">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CssSelector" c:type="GXmlCssSelector"/>
		</field>
		<constructor name="new" c:identifier="gxml_css_not_selector_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CssNotSelector" c:type="GXmlCssNotSelector*"/>
			</return-value>
		</constructor>
		<property name="selectors">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
			</type>
		</property>
		<method name="get_selectors" c:identifier="gxml_css_not_selector_get_selectors">
			<return-value transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssNotSelector" c:type="GXmlCssNotSelector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="CssNotSelectorPrivate" c:type="GXmlCssNotSelectorPrivate*"/>
		</field>
	</class>
	<record name="CssNotSelectorClass" c:type="GXmlCssNotSelectorClass" glib:is-gtype-struct-for="CssNotSelector">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CssSelectorClass" c:type="GXmlCssSelectorClass"/>
		</field>
	</record>
	<record name="CssNotSelectorPrivate" c:type="GXmlCssNotSelectorPrivate" disguised="1"/>
	<class name="CssSelectorParser" c:type="GXmlCssSelectorParser" c:symbol-prefix="css_selector_parser" glib:type-name="GXmlCssSelectorParser" glib:get-type="gxml_css_selector_parser_get_type" glib:type-struct="CssSelectorParserClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<method name="parse" c:identifier="gxml_css_selector_parser_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelectorParser" c:type="GXmlCssSelectorParser*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="selectors">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
			</type>
		</property>
		<method name="get_selectors" c:identifier="gxml_css_selector_parser_get_selectors">
			<return-value transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.CssSelector" c:type="GXmlCssSelector*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelectorParser" c:type="GXmlCssSelectorParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="match" c:identifier="gxml_css_selector_parser_match" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelectorParser" c:type="GXmlCssSelectorParser*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_selector_all" c:identifier="gxml_css_selector_parser_query_selector_all" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CssSelectorParser" c:type="GXmlCssSelectorParser*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_css_selector_parser_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CssSelectorParser" c:type="GXmlCssSelectorParser*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="CssSelectorParserPrivate" c:type="GXmlCssSelectorParserPrivate*"/>
		</field>
	</class>
	<record name="CssSelectorParserClass" c:type="GXmlCssSelectorParserClass" glib:is-gtype-struct-for="CssSelectorParser">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CssSelectorParserPrivate" c:type="GXmlCssSelectorParserPrivate" disguised="1"/>
	<class name="Document" c:type="GXmlDocument" c:symbol-prefix="document" glib:type-name="GXmlDocument" glib:get-type="gxml_document_get_type" glib:type-struct="DocumentClass" parent="GXml.Node">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocument"/>
		<implements name="GXml.DomXMLDocument"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<field name="_implementation" writable="1">
			<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
		</field>
		<field name="_url" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_origin" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_compat_mode" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_character_set" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_content_type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_constructor" writable="1">
			<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
		</field>
		<field name="_parser" writable="1">
			<type name="GXml.Parser" c:type="GXmlParser*"/>
		</field>
		<constructor name="new" c:identifier="gxml_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_document_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_document_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_document_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="search_root_element_property" c:identifier="gxml_document_search_root_element_property">
			<return-value transfer-ownership="full">
				<type name="GXml.Element" c:type="GXmlElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="from_stream" c:identifier="gxml_document_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_document_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DocumentPrivate" c:type="GXmlDocumentPrivate*"/>
		</field>
	</class>
	<record name="DocumentClass" c:type="GXmlDocumentClass" glib:is-gtype-struct-for="Document">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="DocumentPrivate" c:type="GXmlDocumentPrivate" disguised="1"/>
	<class name="Implementation" c:type="GXmlImplementation" c:symbol-prefix="implementation" glib:type-name="GXmlImplementation" glib:get-type="gxml_implementation_get_type" glib:type-struct="ImplementationClass" parent="GObject.Object">
		<implements name="GXml.DomImplementation"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_implementation_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Implementation" c:type="GXmlImplementation*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ImplementationPrivate" c:type="GXmlImplementationPrivate*"/>
		</field>
	</class>
	<record name="ImplementationClass" c:type="GXmlImplementationClass" glib:is-gtype-struct-for="Implementation">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ImplementationPrivate" c:type="GXmlImplementationPrivate" disguised="1"/>
	<class name="DocumentType" c:type="GXmlDocumentType" c:symbol-prefix="document_type" glib:type-name="GXmlDocumentType" glib:get-type="gxml_document_type_get_type" glib:type-struct="DocumentTypeClass" parent="GXml.Node">
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomDocumentType"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<field name="_name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_public_id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_system_id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="new" c:identifier="gxml_document_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DocumentType" c:type="GXmlDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_name" c:identifier="gxml_document_type_new_with_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DocumentType" c:type="GXmlDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_ids" c:identifier="gxml_document_type_new_with_ids">
			<return-value transfer-ownership="full">
				<type name="GXml.DocumentType" c:type="GXmlDocumentType*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DocumentTypePrivate" c:type="GXmlDocumentTypePrivate*"/>
		</field>
	</class>
	<record name="DocumentTypeClass" c:type="GXmlDocumentTypeClass" glib:is-gtype-struct-for="DocumentType">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="DocumentTypePrivate" c:type="GXmlDocumentTypePrivate" disguised="1"/>
	<class name="DocumentFragment" c:type="GXmlDocumentFragment" c:symbol-prefix="document_fragment" glib:type-name="GXmlDocumentFragment" glib:get-type="gxml_document_fragment_get_type" glib:type-struct="DocumentFragmentClass" parent="GXml.Node">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocumentFragment"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_document_fragment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DocumentFragment" c:type="GXmlDocumentFragment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DocumentFragmentPrivate" c:type="GXmlDocumentFragmentPrivate*"/>
		</field>
	</class>
	<record name="DocumentFragmentClass" c:type="GXmlDocumentFragmentClass" glib:is-gtype-struct-for="DocumentFragment">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="DocumentFragmentPrivate" c:type="GXmlDocumentFragmentPrivate" disguised="1"/>
	<class name="DomNodeFilter" c:type="GXmlDomNodeFilter" c:symbol-prefix="dom_node_filter" glib:type-name="GXmlDomNodeFilter" glib:get-type="gxml_dom_node_filter_get_type" glib:type-struct="DomNodeFilterClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constant name="SHOW_ALL" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ALL" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ELEMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ELEMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ATTRIBUTE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ATTRIBUTE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_TEXT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_TEXT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_CDATA_SECTION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_CDATA_SECTION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ENTITY_REFERENCE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ENTITY_REFERENCE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_ENTITY" c:identifier="GXML_DOM_NODE_FILTER_SHOW_ENTITY" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_PROCESSING_INSTRUCTION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_PROCESSING_INSTRUCTION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_COMMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_COMMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT_TYPE" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT_TYPE" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_DOCUMENT_FRAGMENT" c:identifier="GXML_DOM_NODE_FILTER_SHOW_DOCUMENT_FRAGMENT" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="SHOW_NOTATION" c:identifier="GXML_DOM_NODE_FILTER_SHOW_NOTATION" value="(null)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constructor name="new" c:identifier="gxml_dom_node_filter_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeFilter" c:type="GXmlDomNodeFilter*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomNodeFilterPrivate" c:type="GXmlDomNodeFilterPrivate*"/>
		</field>
	</class>
	<record name="DomNodeFilterClass" c:type="GXmlDomNodeFilterClass" glib:is-gtype-struct-for="DomNodeFilter">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomNodeFilterPrivate" c:type="GXmlDomNodeFilterPrivate" disguised="1"/>
	<enumeration name="DomNodeFilterFilter" c:type="GXmlDomNodeFilterFilter" glib:type-name="GXmlDomNodeFilterFilter" glib:get-type="gxml_dom_node_filter_filter_get_type">
		<member name="accept" c:identifier="GXML_DOM_NODE_FILTER_FILTER_ACCEPT" value="1"/>
		<member name="reject" c:identifier="GXML_DOM_NODE_FILTER_FILTER_REJECT" value="0"/>
		<member name="skip" c:identifier="GXML_DOM_NODE_FILTER_FILTER_SKIP" value="1"/>
	</enumeration>
	<class name="DomElementList" c:type="GXmlDomElementList" c:symbol-prefix="dom_element_list" glib:type-name="GXmlDomElementList" glib:get-type="gxml_dom_element_list_get_type" glib:type-struct="DomElementListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<constructor name="new" c:identifier="gxml_dom_element_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomElementListPrivate" c:type="GXmlDomElementListPrivate*"/>
		</field>
	</class>
	<record name="DomElementListClass" c:type="GXmlDomElementListClass" glib:is-gtype-struct-for="DomElementList">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="DomElementListPrivate" c:type="GXmlDomElementListPrivate" disguised="1"/>
	<class name="DomEventInit" c:type="GXmlDomEventInit" c:symbol-prefix="dom_event_init" glib:type-name="GXmlDomEventInit" glib:get-type="gxml_dom_event_init_get_type" glib:type-struct="DomEventInitClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="bubbles" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_bubbles" c:identifier="gxml_dom_event_init_get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_bubbles" c:identifier="gxml_dom_event_init_set_bubbles">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="cancelable" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_cancelable" c:identifier="gxml_dom_event_init_get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_cancelable" c:identifier="gxml_dom_event_init_set_cancelable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_event_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEventInit" c:type="GXmlDomEventInit*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomEventInitPrivate" c:type="GXmlDomEventInitPrivate*"/>
		</field>
	</class>
	<record name="DomEventInitClass" c:type="GXmlDomEventInitClass" glib:is-gtype-struct-for="DomEventInit">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomEventInitPrivate" c:type="GXmlDomEventInitPrivate" disguised="1"/>
	<class name="DomCustomEventInit" c:type="GXmlDomCustomEventInit" c:symbol-prefix="dom_custom_event_init" glib:type-name="GXmlDomCustomEventInit" glib:get-type="gxml_dom_custom_event_init_get_type" glib:type-struct="DomCustomEventInitClass" parent="GXml.DomEventInit">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.DomEventInit" c:type="GXmlDomEventInit"/>
		</field>
		<property name="detail" writable="1">
			<type name="GObject.Value" c:type="GValue"/>
		</property>
		<method name="get_detail" c:identifier="gxml_dom_custom_event_init_get_detail">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEventInit" c:type="GXmlDomCustomEventInit*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_detail" c:identifier="gxml_dom_custom_event_init_set_detail">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEventInit" c:type="GXmlDomCustomEventInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_custom_event_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomCustomEventInit" c:type="GXmlDomCustomEventInit*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomCustomEventInitPrivate" c:type="GXmlDomCustomEventInitPrivate*"/>
		</field>
	</class>
	<record name="DomCustomEventInitClass" c:type="GXmlDomCustomEventInitClass" glib:is-gtype-struct-for="DomCustomEventInit">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.DomEventInitClass" c:type="GXmlDomEventInitClass"/>
		</field>
	</record>
	<record name="DomCustomEventInitPrivate" c:type="GXmlDomCustomEventInitPrivate" disguised="1"/>
	<class name="DomTimeStamp" c:type="GXmlDomTimeStamp" c:symbol-prefix="dom_time_stamp" glib:type-name="GXmlDomTimeStamp" glib:get-type="gxml_dom_time_stamp_get_type" glib:type-struct="DomTimeStampClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="time" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</property>
		<method name="get_time" c:identifier="gxml_dom_time_stamp_get_time">
			<return-value transfer-ownership="none">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_time" c:identifier="gxml_dom_time_stamp_set_time">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_dom_time_stamp_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_time_stamp_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomTimeStampPrivate" c:type="GXmlDomTimeStampPrivate*"/>
		</field>
	</class>
	<record name="DomTimeStampClass" c:type="GXmlDomTimeStampClass" glib:is-gtype-struct-for="DomTimeStamp">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomTimeStampPrivate" c:type="GXmlDomTimeStampPrivate" disguised="1"/>
	<class name="DomMutationObserverInit" c:type="GXmlDomMutationObserverInit" c:symbol-prefix="dom_mutation_observer_init" glib:type-name="GXmlDomMutationObserverInit" glib:get-type="gxml_dom_mutation_observer_init_get_type" glib:type-struct="DomMutationObserverInitClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="child-list" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_child_list" c:identifier="gxml_dom_mutation_observer_init_get_child_list">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_child_list" c:identifier="gxml_dom_mutation_observer_init_set_child_list">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attributes" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_attributes" c:identifier="gxml_dom_mutation_observer_init_get_attributes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_attributes" c:identifier="gxml_dom_mutation_observer_init_set_attributes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="character-data" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_character_data" c:identifier="gxml_dom_mutation_observer_init_get_character_data">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_character_data" c:identifier="gxml_dom_mutation_observer_init_set_character_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="subtree" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_subtree" c:identifier="gxml_dom_mutation_observer_init_get_subtree">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_subtree" c:identifier="gxml_dom_mutation_observer_init_set_subtree">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attribute-old-value" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_attribute_old_value" c:identifier="gxml_dom_mutation_observer_init_get_attribute_old_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_attribute_old_value" c:identifier="gxml_dom_mutation_observer_init_set_attribute_old_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="character-data-old-value" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_character_data_old_value" c:identifier="gxml_dom_mutation_observer_init_get_character_data_old_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_character_data_old_value" c:identifier="gxml_dom_mutation_observer_init_set_character_data_old_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="attribute-filter" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_attribute_filter" c:identifier="gxml_dom_mutation_observer_init_get_attribute_filter">
			<return-value transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_attribute_filter" c:identifier="gxml_dom_mutation_observer_init_set_attribute_filter">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_mutation_observer_init_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomMutationObserverInitPrivate" c:type="GXmlDomMutationObserverInitPrivate*"/>
		</field>
	</class>
	<record name="DomMutationObserverInitClass" c:type="GXmlDomMutationObserverInitClass" glib:is-gtype-struct-for="DomMutationObserverInit">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomMutationObserverInitPrivate" c:type="GXmlDomMutationObserverInitPrivate" disguised="1"/>
	<class name="DomErrorName" c:type="GXmlDomErrorName" c:symbol-prefix="dom_error_name" glib:type-name="GXmlDomErrorName" glib:get-type="gxml_dom_error_name_get_type" glib:type-struct="DomErrorNameClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<method name="get_name" c:identifier="gxml_dom_error_name_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomErrorName" c:type="GXmlDomErrorName*"/>
				</instance-parameter>
				<parameter name="error_code" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_code" c:identifier="gxml_dom_error_name_get_code">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomErrorName" c:type="GXmlDomErrorName*"/>
				</instance-parameter>
				<parameter name="error_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_dom_error_name_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DomErrorName" c:type="GXmlDomErrorName*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DomErrorNamePrivate" c:type="GXmlDomErrorNamePrivate*"/>
		</field>
	</class>
	<record name="DomErrorNameClass" c:type="GXmlDomErrorNameClass" glib:is-gtype-struct-for="DomErrorName">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DomErrorNamePrivate" c:type="GXmlDomErrorNamePrivate" disguised="1"/>
	<class name="Element" c:type="GXmlElement" c:symbol-prefix="element" glib:type-name="GXmlElement" glib:get-type="gxml_element_get_type" glib:type-struct="ElementClass" parent="GXml.Node">
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomElement"/>
		<implements name="GXml.Object"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<field name="_attributes" writable="1">
			<type name="GXml.ElementAttributes" c:type="GXmlElementAttributes*"/>
		</field>
		<method name="lookup_prefix" c:identifier="gxml_element_lookup_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lookup_namespace_uri" c:identifier="gxml_element_lookup_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="_namespace_uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="initialize" c:identifier="gxml_element_initialize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_document" c:identifier="gxml_element_initialize_document">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_with_namespace" c:identifier="gxml_element_initialize_with_namespace">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="namespace_uri" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_document_with_namespace" c:identifier="gxml_element_initialize_document_with_namespace">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="namespace_uri" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="parse-children" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_parse_children" c:identifier="gxml_element_get_parse_children">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_parse_children" c:identifier="gxml_element_set_parse_children">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="unparsed" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_unparsed" c:identifier="gxml_element_get_unparsed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_unparsed" c:identifier="gxml_element_set_unparsed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_unparsed" c:identifier="gxml_element_read_unparsed" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="read-buffer" writable="1">
			<type name="Gio.MemoryOutputStream" c:type="GMemoryOutputStream*"/>
		</property>
		<method name="get_read_buffer" c:identifier="gxml_element_get_read_buffer">
			<return-value transfer-ownership="none">
				<type name="Gio.MemoryOutputStream" c:type="GMemoryOutputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_read_buffer" c:identifier="gxml_element_set_read_buffer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.MemoryOutputStream" c:type="GMemoryOutputStream*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_buffer" c:identifier="gxml_element_parse_buffer" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="parse_pending" c:identifier="gxml_element_parse_pending">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="parse_buffer_async" c:identifier="gxml_element_parse_buffer_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_buffer_finish" c:identifier="gxml_element_parse_buffer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_element_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Element" c:type="GXmlElement*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ElementPrivate" c:type="GXmlElementPrivate*"/>
		</field>
	</class>
	<record name="ElementClass" c:type="GXmlElementClass" glib:is-gtype-struct-for="Element">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="ElementPrivate" c:type="GXmlElementPrivate" disguised="1"/>
	<class name="ElementAttributes" c:type="GXmlElementAttributes" c:symbol-prefix="attributes" glib:type-name="GXmlElementAttributes" glib:get-type="gxml_element_attributes_get_type" glib:type-struct="ElementAttributesClass" parent="Gee.HashMap">
		<implements name="GXml.DomNamedNodeMap"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.HashMap" c:type="GeeHashMap"/>
		</field>
		<field name="_element" writable="1">
			<type name="GXml.Element" c:type="GXmlElement*"/>
		</field>
		<constructor name="new" c:identifier="gxml_element_attributes_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementAttributes" c:type="GXmlElementAttributes*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_reference" c:identifier="gxml_element_attributes_add_reference">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ElementAttributes" c:type="GXmlElementAttributes*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="ElementAttributesPrivate" c:type="GXmlElementAttributesPrivate*"/>
		</field>
	</class>
	<record name="ElementAttributesClass" c:type="GXmlElementAttributesClass" glib:is-gtype-struct-for="ElementAttributes">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.HashMapClass" c:type="GeeHashMapClass"/>
		</field>
	</record>
	<record name="ElementAttributesPrivate" c:type="GXmlElementAttributesPrivate" disguised="1"/>
	<class name="Enumeration" c:type="GXmlEnumeration" c:symbol-prefix="enumeration" glib:type-name="GXmlEnumeration" glib:get-type="gxml_enumeration_get_type" glib:type-struct="EnumerationClass" glib:fundamental="1" glib:ref-func="gxml_enumeration_ref" glib:unref-func="gxml_enumeration_unref" glib:set-value-func="gxml_value_set_enumeration" glib:get-value-func="gxml_value_get_enumeration">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<function name="get_nick" c:identifier="gxml_enumeration_get_nick" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_nick_camelcase" c:identifier="gxml_enumeration_get_nick_camelcase" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_string" c:identifier="gxml_enumeration_get_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="use_nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="camelcase" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse" c:identifier="gxml_enumeration_parse" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_array" c:identifier="gxml_enumeration_to_array">
			<return-value transfer-ownership="none">
				<array length="1" c:type="GEnumValue*">
					<type name="GObject.EnumValue" c:type="GEnumValue"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse_integer" c:identifier="gxml_enumeration_parse_integer">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_string_array" c:identifier="gxml_enumeration_to_string_array" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gxml_enumeration_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Enumeration" c:type="GXmlEnumeration*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="EnumerationPrivate" c:type="GXmlEnumerationPrivate*"/>
		</field>
	</class>
	<record name="EnumerationClass" c:type="GXmlEnumerationClass" glib:is-gtype-struct-for="Enumeration">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="EnumerationPrivate" c:type="GXmlEnumerationPrivate" disguised="1"/>
	<class name="Event" c:type="GXmlEvent" c:symbol-prefix="event" glib:type-name="GXmlEvent" glib:get-type="gxml_event_get_type" glib:type-struct="EventClass" parent="GObject.Object">
		<implements name="GXml.DomEvent"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_etype" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_event_target" writable="1">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</field>
		<field name="_current_target" writable="1">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</field>
		<field name="_bubbles" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_cancelable" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_is_trusted" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_time_stamp" writable="1">
			<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
		</field>
		<field name="_default_prevented" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_event_phase" writable="1">
			<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
		</field>
		<field name="_flags" writable="1">
			<type name="GXml.DomEventFlags" c:type="GXmlDomEventFlags"/>
		</field>
		<constructor name="new" c:identifier="gxml_event_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Event" c:type="GXmlEvent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="EventPrivate" c:type="GXmlEventPrivate*"/>
		</field>
	</class>
	<record name="EventClass" c:type="GXmlEventClass" glib:is-gtype-struct-for="Event">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="EventPrivate" c:type="GXmlEventPrivate" disguised="1"/>
	<class name="CustomEvent" c:type="GXmlCustomEvent" c:symbol-prefix="custom_event" glib:type-name="GXmlCustomEvent" glib:get-type="gxml_custom_event_get_type" glib:type-struct="CustomEventClass" parent="GXml.Event">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Event" c:type="GXmlEvent"/>
		</field>
		<field name="_detail" writable="1">
			<type name="GObject.Value" c:type="GValue"/>
		</field>
		<property name="detail">
			<type name="GObject.Value" c:type="GValue"/>
		</property>
		<method name="get_detail" c:identifier="gxml_custom_event_get_detail">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CustomEvent" c:type="GXmlCustomEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<method name="init_custom_event" c:identifier="gxml_custom_event_init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CustomEvent" c:type="GXmlCustomEvent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none" nullable="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_custom_event_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CustomEvent" c:type="GXmlCustomEvent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="CustomEventPrivate" c:type="GXmlCustomEventPrivate*"/>
		</field>
	</class>
	<record name="CustomEventClass" c:type="GXmlCustomEventClass" glib:is-gtype-struct-for="CustomEvent">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.EventClass" c:type="GXmlEventClass"/>
		</field>
	</record>
	<record name="CustomEventPrivate" c:type="GXmlCustomEventPrivate" disguised="1"/>
	<class name="HashMap" c:type="GXmlHashMap" c:symbol-prefix="hash_map" glib:type-name="GXmlHashMap" glib:get-type="gxml_hash_map_get_type" glib:type-struct="HashMapClass" parent="GXml.BaseCollection">
		<implements name="GXml.Map"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseCollection" c:type="GXmlBaseCollection"/>
		</field>
		<field name="_hashtable" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="gint" c:type="gint"/>
			</type>
		</field>
		<field name="_attribute_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="initialize_element_with_key" c:identifier="gxml_hash_map_initialize_element_with_key" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashMap" c:type="GXmlHashMap*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_with_key" c:identifier="gxml_hash_map_initialize_with_key" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashMap" c:type="GXmlHashMap*"/>
				</instance-parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gxml_hash_map_get">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashMap" c:type="GXmlHashMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_keys" c:identifier="gxml_hash_map_get_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashMap" c:type="GXmlHashMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_hash_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HashMap" c:type="GXmlHashMap*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HashMapPrivate" c:type="GXmlHashMapPrivate*"/>
		</field>
	</class>
	<record name="HashMapClass" c:type="GXmlHashMapClass" glib:is-gtype-struct-for="HashMap">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BaseCollectionClass" c:type="GXmlBaseCollectionClass"/>
		</field>
	</record>
	<record name="HashMapPrivate" c:type="GXmlHashMapPrivate" disguised="1"/>
	<class name="HashPairedMap" c:type="GXmlHashPairedMap" c:symbol-prefix="hash_paired_map" glib:type-name="GXmlHashPairedMap" glib:get-type="gxml_hash_paired_map_get_type" glib:type-struct="HashPairedMapClass" parent="GXml.BaseCollection">
		<implements name="GXml.PairedMap"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseCollection" c:type="GXmlBaseCollection"/>
		</field>
		<field name="_hashtable" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="gint" c:type="gint"/>
				</type>
			</type>
		</field>
		<field name="_attribute_primary_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_attribute_secondary_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="initialize_element_with_keys" c:identifier="gxml_hash_paired_map_initialize_element_with_keys" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_with_keys" c:identifier="gxml_hash_paired_map_initialize_with_keys" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
				</instance-parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gxml_hash_paired_map_get">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_primary_keys" c:identifier="gxml_hash_paired_map_get_primary_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_secondary_keys" c:identifier="gxml_hash_paired_map_get_secondary_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_hash_paired_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HashPairedMap" c:type="GXmlHashPairedMap*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HashPairedMapPrivate" c:type="GXmlHashPairedMapPrivate*"/>
		</field>
	</class>
	<record name="HashPairedMapClass" c:type="GXmlHashPairedMapClass" glib:is-gtype-struct-for="HashPairedMap">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BaseCollectionClass" c:type="GXmlBaseCollectionClass"/>
		</field>
	</record>
	<record name="HashPairedMapPrivate" c:type="GXmlHashPairedMapPrivate" disguised="1"/>
	<class name="HashThreeMap" c:type="GXmlHashThreeMap" c:symbol-prefix="hash_three_map" glib:type-name="GXmlHashThreeMap" glib:get-type="gxml_hash_three_map_get_type" glib:type-struct="HashThreeMapClass" parent="GXml.BaseCollection">
		<implements name="GXml.ThreeMap"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseCollection" c:type="GXmlBaseCollection"/>
		</field>
		<field name="_hashtable" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="Gee.HashMap" c:type="GeeHashMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="gint" c:type="gint"/>
					</type>
				</type>
			</type>
		</field>
		<field name="_attribute_primary_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_attribute_secondary_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_attribute_third_key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="initialize_element_with_keys" c:identifier="gxml_hash_three_map_initialize_element_with_keys" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_third_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_with_keys" c:identifier="gxml_hash_three_map_initialize_with_keys" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
				<parameter name="items_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="attribute_primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attribute_third_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gxml_hash_three_map_get">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="third_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_primary_keys" c:identifier="gxml_hash_three_map_get_primary_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_secondary_keys" c:identifier="gxml_hash_three_map_get_secondary_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_third_keys" c:identifier="gxml_hash_three_map_get_third_keys">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="skey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_hash_three_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HashThreeMap" c:type="GXmlHashThreeMap*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HashThreeMapPrivate" c:type="GXmlHashThreeMapPrivate*"/>
		</field>
	</class>
	<record name="HashThreeMapClass" c:type="GXmlHashThreeMapClass" glib:is-gtype-struct-for="HashThreeMap">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BaseCollectionClass" c:type="GXmlBaseCollectionClass"/>
		</field>
	</record>
	<record name="HashThreeMapPrivate" c:type="GXmlHashThreeMapPrivate" disguised="1"/>
	<class name="HTMLCollection" c:type="GXmlHTMLCollection" c:symbol-prefix="html_collection" glib:type-name="GXmlHTMLCollection" glib:get-type="gxml_html_collection_get_type" glib:type-struct="HTMLCollectionClass" parent="Gee.ArrayList">
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<constructor name="new" c:identifier="gxml_html_collection_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HTMLCollection" c:type="GXmlHTMLCollection*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HTMLCollectionPrivate" c:type="GXmlHTMLCollectionPrivate*"/>
		</field>
	</class>
	<record name="HTMLCollectionClass" c:type="GXmlHTMLCollectionClass" glib:is-gtype-struct-for="HTMLCollection">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="HTMLCollectionPrivate" c:type="GXmlHTMLCollectionPrivate" disguised="1"/>
	<class name="HtmlDocument" c:type="GXmlHtmlDocument" c:symbol-prefix="html_document" glib:type-name="GXmlHtmlDocument" glib:get-type="gxml_html_document_get_type" glib:type-struct="HtmlDocumentClass" parent="GXml.Document">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Document" c:type="GXmlDocument"/>
		</field>
		<property name="html" writable="1">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_html" c:identifier="gxml_html_document_get_html">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_html" c:identifier="gxml_html_document_set_html">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_html_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate*"/>
		</field>
	</class>
	<record name="HtmlDocumentClass" c:type="GXmlHtmlDocumentClass" glib:is-gtype-struct-for="HtmlDocument">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.DocumentClass" c:type="GXmlDocumentClass"/>
		</field>
	</record>
	<record name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate" disguised="1"/>
	<class name="HtmlElement" c:type="GXmlHtmlElement" c:symbol-prefix="html_element" glib:type-name="GXmlHtmlElement" glib:get-type="gxml_html_element_get_type" glib:type-struct="HtmlElementClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<constructor name="new" c:identifier="gxml_html_element_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlElement" c:type="GXmlHtmlElement*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="HtmlElementPrivate" c:type="GXmlHtmlElementPrivate*"/>
		</field>
	</class>
	<record name="HtmlElementClass" c:type="GXmlHtmlElementClass" glib:is-gtype-struct-for="HtmlElement">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="HtmlElementPrivate" c:type="GXmlHtmlElementPrivate" disguised="1"/>
	<class name="LXPathObject" c:type="GXmlLXPathObject" c:symbol-prefix="lx_path_object" glib:type-name="GXmlLXPathObject" glib:get-type="gxml_lx_path_object_get_type" glib:type-struct="LXPathObjectClass" parent="GObject.Object">
		<implements name="GXml.XPathObject"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_lx_path_object_new">
			<return-value transfer-ownership="full">
				<type name="GXml.LXPathObject" c:type="GXmlLXPathObject*"/>
			</return-value>
			<parameters>
				<parameter name="document" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="pointer" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlXPathObject*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="LXPathObjectPrivate" c:type="GXmlLXPathObjectPrivate*"/>
		</field>
	</class>
	<record name="LXPathObjectClass" c:type="GXmlLXPathObjectClass" glib:is-gtype-struct-for="LXPathObject">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LXPathObjectPrivate" c:type="GXmlLXPathObjectPrivate" disguised="1"/>
	<class name="Node" c:type="GXmlNode" c:symbol-prefix="node" glib:type-name="GXmlNode" glib:get-type="gxml_node_get_type" glib:type-struct="NodeClass" parent="GObject.Object">
		<implements name="GXml.DomEventTarget"/>
		<implements name="GXml.DomNode"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_local_name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_prefix" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_base_uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_node_value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_parent" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_node_type" writable="1">
			<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
		</field>
		<field name="_child_nodes" writable="1">
			<type name="GXml.NodeList" c:type="GXmlNodeList*"/>
		</field>
		<field name="_document" writable="1">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</field>
		<constructor name="new" c:identifier="gxml_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="NodePrivate" c:type="GXmlNodePrivate*"/>
		</field>
	</class>
	<record name="NodeClass" c:type="GXmlNodeClass" glib:is-gtype-struct-for="Node">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="NodePrivate" c:type="GXmlNodePrivate" disguised="1"/>
	<class name="NodeList" c:type="GXmlNodeList" c:symbol-prefix="node_list" glib:type-name="GXmlNodeList" glib:get-type="gxml_node_list_get_type" glib:type-struct="NodeListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomNodeList"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<constructor name="new" c:identifier="gxml_node_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.NodeList" c:type="GXmlNodeList*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="NodeListPrivate" c:type="GXmlNodeListPrivate*"/>
		</field>
	</class>
	<record name="NodeListClass" c:type="GXmlNodeListClass" glib:is-gtype-struct-for="NodeList">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="NodeListPrivate" c:type="GXmlNodeListPrivate" disguised="1"/>
	<class name="NodeIterator" c:type="GXmlNodeIterator" c:symbol-prefix="node_iterator" glib:type-name="GXmlNodeIterator" glib:get-type="gxml_node_iterator_get_type" glib:type-struct="NodeIteratorClass" parent="GObject.Object">
		<implements name="GXml.DomNodeIterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_root" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_reference_node" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_pointer_before_reference_node" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_what_to_show" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<constructor name="new" c:identifier="gxml_node_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.NodeIterator" c:type="GXmlNodeIterator*"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="NodeIteratorPrivate" c:type="GXmlNodeIteratorPrivate*"/>
		</field>
	</class>
	<record name="NodeIteratorClass" c:type="GXmlNodeIteratorClass" glib:is-gtype-struct-for="NodeIterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="NodeIteratorPrivate" c:type="GXmlNodeIteratorPrivate" disguised="1"/>
	<class name="BaseProperty" c:type="GXmlBaseProperty" c:symbol-prefix="base_property" glib:type-name="GXmlBaseProperty" glib:get-type="gxml_base_property_get_type" glib:type-struct="BasePropertyClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Property"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_base_property_get_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_base_property_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="validate_value" c:identifier="gxml_base_property_validate_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="validate_value" invoker="validate_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<field name="priv" readable="0" private="1">
			<type name="BasePropertyPrivate" c:type="GXmlBasePropertyPrivate*"/>
		</field>
	</class>
	<record name="BasePropertyClass" c:type="GXmlBasePropertyClass" glib:is-gtype-struct-for="BaseProperty">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="validate_value">
			<callback name="validate_value" c:type="validate_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.BaseProperty" c:type="GXmlBaseProperty*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="BasePropertyPrivate" c:type="GXmlBasePropertyPrivate" disguised="1"/>
	<class name="String" c:type="GXmlString" c:symbol-prefix="string" glib:type-name="GXmlString" glib:get-type="gxml_string_get_type" glib:type-struct="StringClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="with_string" c:identifier="gxml_string_new_with_string">
			<return-value transfer-ownership="full">
				<type name="GXml.String" c:type="GXmlString*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_string_new">
			<return-value transfer-ownership="full">
				<type name="GXml.String" c:type="GXmlString*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="StringPrivate" c:type="GXmlStringPrivate*"/>
		</field>
	</class>
	<record name="StringClass" c:type="GXmlStringClass" glib:is-gtype-struct-for="String">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="StringPrivate" c:type="GXmlStringPrivate" disguised="1"/>
	<class name="ArrayString" c:type="GXmlArrayString" c:symbol-prefix="array_string" glib:type-name="GXmlArrayString" glib:get-type="gxml_array_string_get_type" glib:type-struct="ArrayStringClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_values" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</field>
		<field name="_values_length1">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="get_values" c:identifier="gxml_array_string_get_values">
			<return-value transfer-ownership="none">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_strings" c:identifier="gxml_array_string_initialize_strings">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
				</instance-parameter>
				<parameter name="strs" transfer-ownership="full">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="strs_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="is_valid_value" c:identifier="gxml_array_string_is_valid_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="select" c:identifier="gxml_array_string_select">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="search" c:identifier="gxml_array_string_search">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_array_string_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ArrayString" c:type="GXmlArrayString*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ArrayStringPrivate" c:type="GXmlArrayStringPrivate*"/>
		</field>
	</class>
	<record name="ArrayStringClass" c:type="GXmlArrayStringClass" glib:is-gtype-struct-for="ArrayString">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="ArrayStringPrivate" c:type="GXmlArrayStringPrivate" disguised="1"/>
	<class name="XsdArrayString" c:type="GXmlXsdArrayString" c:symbol-prefix="xsd_array_string" glib:type-name="GXmlXsdArrayString" glib:get-type="gxml_xsd_array_string_get_type" glib:type-struct="XsdArrayStringClass" parent="GXml.ArrayString">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.ArrayString" c:type="GXmlArrayString"/>
		</field>
		<field name="_source" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</field>
		<field name="_simple_type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<property name="simple-type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_simple_type" c:identifier="gxml_xsd_array_string_get_simple_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_simple_type" c:identifier="gxml_xsd_array_string_set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="source" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_source" c:identifier="gxml_xsd_array_string_get_source">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_source" c:identifier="gxml_xsd_array_string_set_source">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load" c:identifier="gxml_xsd_array_string_load" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_array_string_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdArrayString" c:type="GXmlXsdArrayString*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdArrayStringPrivate" c:type="GXmlXsdArrayStringPrivate*"/>
		</field>
	</class>
	<record name="XsdArrayStringClass" c:type="GXmlXsdArrayStringClass" glib:is-gtype-struct-for="XsdArrayString">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ArrayStringClass" c:type="GXmlArrayStringClass"/>
		</field>
	</record>
	<record name="XsdArrayStringPrivate" c:type="GXmlXsdArrayStringPrivate" disguised="1"/>
	<class name="Double" c:type="GXmlDouble" c:symbol-prefix="double" glib:type-name="GXmlDouble" glib:get-type="gxml_double_get_type" glib:type-struct="DoubleClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<property name="decimals" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_decimals" c:identifier="gxml_double_get_decimals">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Double" c:type="GXmlDouble*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_decimals" c:identifier="gxml_double_set_decimals">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Double" c:type="GXmlDouble*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_double" c:identifier="gxml_double_get_double">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Double" c:type="GXmlDouble*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_double" c:identifier="gxml_double_set_double">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Double" c:type="GXmlDouble*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_double_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Double" c:type="GXmlDouble*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DoublePrivate" c:type="GXmlDoublePrivate*"/>
		</field>
	</class>
	<record name="DoubleClass" c:type="GXmlDoubleClass" glib:is-gtype-struct-for="Double">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="DoublePrivate" c:type="GXmlDoublePrivate" disguised="1"/>
	<class name="Float" c:type="GXmlFloat" c:symbol-prefix="float" glib:type-name="GXmlFloat" glib:get-type="gxml_float_get_type" glib:type-struct="FloatClass" parent="GXml.Double">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Double" c:type="GXmlDouble"/>
		</field>
		<method name="get_float" c:identifier="gxml_float_get_float">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Float" c:type="GXmlFloat*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_float" c:identifier="gxml_float_set_float">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Float" c:type="GXmlFloat*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_float_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Float" c:type="GXmlFloat*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="FloatPrivate" c:type="GXmlFloatPrivate*"/>
		</field>
	</class>
	<record name="FloatClass" c:type="GXmlFloatClass" glib:is-gtype-struct-for="Float">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.DoubleClass" c:type="GXmlDoubleClass"/>
		</field>
	</record>
	<record name="FloatPrivate" c:type="GXmlFloatPrivate" disguised="1"/>
	<class name="Int" c:type="GXmlInt" c:symbol-prefix="int" glib:type-name="GXmlInt" glib:get-type="gxml_int_get_type" glib:type-struct="IntClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="get_integer" c:identifier="gxml_int_get_integer">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Int" c:type="GXmlInt*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_integer" c:identifier="gxml_int_set_integer">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Int" c:type="GXmlInt*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_int_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Int" c:type="GXmlInt*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="IntPrivate" c:type="GXmlIntPrivate*"/>
		</field>
	</class>
	<record name="IntClass" c:type="GXmlIntClass" glib:is-gtype-struct-for="Int">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="IntPrivate" c:type="GXmlIntPrivate" disguised="1"/>
	<class name="Boolean" c:type="GXmlBoolean" c:symbol-prefix="boolean" glib:type-name="GXmlBoolean" glib:get-type="gxml_boolean_get_type" glib:type-struct="BooleanClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="get_boolean" c:identifier="gxml_boolean_get_boolean">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Boolean" c:type="GXmlBoolean*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_boolean" c:identifier="gxml_boolean_set_boolean">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Boolean" c:type="GXmlBoolean*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_boolean_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Boolean" c:type="GXmlBoolean*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="BooleanPrivate" c:type="GXmlBooleanPrivate*"/>
		</field>
	</class>
	<record name="BooleanClass" c:type="GXmlBooleanClass" glib:is-gtype-struct-for="Boolean">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="BooleanPrivate" c:type="GXmlBooleanPrivate" disguised="1"/>
	<class name="Enum" c:type="GXmlEnum" c:symbol-prefix="enum" glib:type-name="GXmlEnum" glib:get-type="gxml_enum_get_type" glib:type-struct="EnumClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_enum_type" writable="1">
			<type name="GType" c:type="GType"/>
		</field>
		<field name="_val" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<property name="use-nick" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_use_nick" c:identifier="gxml_enum_get_use_nick">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_use_nick" c:identifier="gxml_enum_set_use_nick">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="camel-case" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_camel_case" c:identifier="gxml_enum_get_camel_case">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_camel_case" c:identifier="gxml_enum_set_camel_case">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="upper-case" writable="1" construct="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_upper_case" c:identifier="gxml_enum_get_upper_case">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_upper_case" c:identifier="gxml_enum_set_upper_case">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="enum-type" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_enum_type" c:identifier="gxml_enum_get_enum_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enum_type" c:identifier="gxml_enum_set_enum_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="initialize_enum" c:identifier="gxml_enum_initialize_enum">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="enum_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_enum" c:identifier="gxml_enum_get_enum">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enum" c:identifier="gxml_enum_set_enum">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="is_valid" c:identifier="gxml_enum_is_valid">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Enum" c:type="GXmlEnum*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_enum_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Enum" c:type="GXmlEnum*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="EnumPrivate" c:type="GXmlEnumPrivate*"/>
		</field>
	</class>
	<record name="EnumClass" c:type="GXmlEnumClass" glib:is-gtype-struct-for="Enum">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="EnumPrivate" c:type="GXmlEnumPrivate" disguised="1"/>
	<class name="Date" c:type="GXmlDate" c:symbol-prefix="date" glib:type-name="GXmlDate" glib:get-type="gxml_date_get_type" glib:type-struct="DateClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="GLib.Date" c:type="GDate"/>
		</field>
		<method name="get_date" c:identifier="gxml_date_get_date">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Date" c:type="GXmlDate*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="GLib.Date" c:type="GDate*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_date" c:identifier="gxml_date_set_date">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Date" c:type="GXmlDate*"/>
				</instance-parameter>
				<parameter name="date" transfer-ownership="none">
					<type name="GLib.Date" c:type="GDate*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_date_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Date" c:type="GXmlDate*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DatePrivate" c:type="GXmlDatePrivate*"/>
		</field>
	</class>
	<record name="DateClass" c:type="GXmlDateClass" glib:is-gtype-struct-for="Date">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="DatePrivate" c:type="GXmlDatePrivate" disguised="1"/>
	<class name="DateTime" c:type="GXmlDateTime" c:symbol-prefix="date_time" glib:type-name="GXmlDateTime" glib:get-type="gxml_date_time_get_type" glib:type-struct="DateTimeClass" parent="GXml.BaseProperty">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.BaseProperty" c:type="GXmlBaseProperty"/>
		</field>
		<field name="_value" writable="1">
			<type name="GLib.DateTime" c:type="GDateTime*"/>
		</field>
		<property name="format" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_format" c:identifier="gxml_date_time_get_format">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DateTime" c:type="GXmlDateTime*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_format" c:identifier="gxml_date_time_set_format">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DateTime" c:type="GXmlDateTime*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_datetime" c:identifier="gxml_date_time_get_datetime">
			<return-value transfer-ownership="full">
				<type name="GLib.DateTime" c:type="GDateTime*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DateTime" c:type="GXmlDateTime*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_datetime" c:identifier="gxml_date_time_set_datetime">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DateTime" c:type="GXmlDateTime*"/>
				</instance-parameter>
				<parameter name="dt" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_date_time_new">
			<return-value transfer-ownership="full">
				<type name="GXml.DateTime" c:type="GXmlDateTime*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="DateTimePrivate" c:type="GXmlDateTimePrivate*"/>
		</field>
	</class>
	<record name="DateTimeClass" c:type="GXmlDateTimeClass" glib:is-gtype-struct-for="DateTime">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BasePropertyClass" c:type="GXmlBasePropertyClass"/>
		</field>
	</record>
	<record name="DateTimePrivate" c:type="GXmlDateTimePrivate" disguised="1"/>
	<class name="Range" c:type="GXmlRange" c:symbol-prefix="range" glib:type-name="GXmlRange" glib:get-type="gxml_range_get_type" glib:type-struct="RangeClass" parent="GObject.Object">
		<implements name="GXml.DomRange"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_document" writable="1">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</field>
		<field name="_start_container" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_start_offset" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_end_container" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_end_offset" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_collapse" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<field name="_common_ancestor_container" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<constructor name="new" c:identifier="gxml_range_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Range" c:type="GXmlRange*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="RangePrivate" c:type="GXmlRangePrivate*"/>
		</field>
	</class>
	<record name="RangeClass" c:type="GXmlRangeClass" glib:is-gtype-struct-for="Range">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="RangePrivate" c:type="GXmlRangePrivate" disguised="1"/>
	<class name="SettableTokenList" c:type="GXmlSettableTokenList" c:symbol-prefix="settable_token_list" glib:type-name="GXmlSettableTokenList" glib:get-type="gxml_settable_token_list_get_type" glib:type-struct="SettableTokenListClass" parent="GXml.TokenList">
		<implements name="GXml.DomSettableTokenList"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.TokenList" c:type="GXmlTokenList"/>
		</field>
		<constructor name="new" c:identifier="gxml_settable_token_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SettableTokenList" c:type="GXmlSettableTokenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="SettableTokenListPrivate" c:type="GXmlSettableTokenListPrivate*"/>
		</field>
	</class>
	<record name="SettableTokenListClass" c:type="GXmlSettableTokenListClass" glib:is-gtype-struct-for="SettableTokenList">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.TokenListClass" c:type="GXmlTokenListClass"/>
		</field>
	</record>
	<record name="SettableTokenListPrivate" c:type="GXmlSettableTokenListPrivate" disguised="1"/>
	<class name="StringRef" c:type="GXmlStringRef" c:symbol-prefix="string_ref" glib:type-name="GXmlStringRef" glib:get-type="gxml_string_ref_get_type" glib:type-struct="StringRefClass" parent="GObject.Object">
		<implements name="GXml.Property"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_string_ref_new">
			<return-value transfer-ownership="full">
				<type name="GXml.StringRef" c:type="GXmlStringRef*"/>
			</return-value>
			<parameters>
				<parameter name="obj" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="StringRefPrivate" c:type="GXmlStringRefPrivate*"/>
		</field>
	</class>
	<record name="StringRefClass" c:type="GXmlStringRefClass" glib:is-gtype-struct-for="StringRef">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="StringRefPrivate" c:type="GXmlStringRefPrivate" disguised="1"/>
	<class name="CharacterData" c:type="GXmlCharacterData" c:symbol-prefix="character_data" glib:type-name="GXmlCharacterData" glib:get-type="gxml_character_data_get_type" glib:type-struct="CharacterDataClass" parent="GXml.Node">
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<implements name="GXml.DomChildNode"/>
		<implements name="GXml.DomCharacterData"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Node" c:type="GXmlNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_character_data_new">
			<return-value transfer-ownership="full">
				<type name="GXml.CharacterData" c:type="GXmlCharacterData*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="CharacterDataPrivate" c:type="GXmlCharacterDataPrivate*"/>
		</field>
	</class>
	<record name="CharacterDataClass" c:type="GXmlCharacterDataClass" glib:is-gtype-struct-for="CharacterData">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.NodeClass" c:type="GXmlNodeClass"/>
		</field>
	</record>
	<record name="CharacterDataPrivate" c:type="GXmlCharacterDataPrivate" disguised="1"/>
	<class name="Text" c:type="GXmlText" c:symbol-prefix="text" glib:type-name="GXmlText" glib:get-type="gxml_text_get_type" glib:type-struct="TextClass" parent="GXml.CharacterData">
		<implements name="GXml.DomText"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CharacterData" c:type="GXmlCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_text_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Text" c:type="GXmlText*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="TextPrivate" c:type="GXmlTextPrivate*"/>
		</field>
	</class>
	<record name="TextClass" c:type="GXmlTextClass" glib:is-gtype-struct-for="Text">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CharacterDataClass" c:type="GXmlCharacterDataClass"/>
		</field>
	</record>
	<record name="TextPrivate" c:type="GXmlTextPrivate" disguised="1"/>
	<class name="ProcessingInstruction" c:type="GXmlProcessingInstruction" c:symbol-prefix="processing_instruction" glib:type-name="GXmlProcessingInstruction" glib:get-type="gxml_processing_instruction_get_type" glib:type-struct="ProcessingInstructionClass" parent="GXml.CharacterData">
		<implements name="GXml.DomProcessingInstruction"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CharacterData" c:type="GXmlCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_processing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="ProcessingInstructionPrivate" c:type="GXmlProcessingInstructionPrivate*"/>
		</field>
	</class>
	<record name="ProcessingInstructionClass" c:type="GXmlProcessingInstructionClass" glib:is-gtype-struct-for="ProcessingInstruction">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CharacterDataClass" c:type="GXmlCharacterDataClass"/>
		</field>
	</record>
	<record name="ProcessingInstructionPrivate" c:type="GXmlProcessingInstructionPrivate" disguised="1"/>
	<class name="Comment" c:type="GXmlComment" c:symbol-prefix="comment" glib:type-name="GXmlComment" glib:get-type="gxml_comment_get_type" glib:type-struct="CommentClass" parent="GXml.CharacterData">
		<implements name="GXml.DomComment"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.CharacterData" c:type="GXmlCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_comment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Comment" c:type="GXmlComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="CommentPrivate" c:type="GXmlCommentPrivate*"/>
		</field>
	</class>
	<record name="CommentClass" c:type="GXmlCommentClass" glib:is-gtype-struct-for="Comment">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.CharacterDataClass" c:type="GXmlCharacterDataClass"/>
		</field>
	</record>
	<record name="CommentPrivate" c:type="GXmlCommentPrivate" disguised="1"/>
	<class name="TokenList" c:type="GXmlTokenList" c:symbol-prefix="token_list" glib:type-name="GXmlTokenList" glib:get-type="gxml_token_list_get_type" glib:type-struct="TokenListClass" parent="Gee.ArrayList">
		<implements name="GXml.DomTokenList"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="_element" writable="1">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</field>
		<field name="_attr" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="new" c:identifier="gxml_token_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TokenList" c:type="GXmlTokenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="update" c:identifier="gxml_token_list_update">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.TokenList" c:type="GXmlTokenList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="TokenListPrivate" c:type="GXmlTokenListPrivate*"/>
		</field>
	</class>
	<record name="TokenListClass" c:type="GXmlTokenListClass" glib:is-gtype-struct-for="TokenList">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="TokenListPrivate" c:type="GXmlTokenListPrivate" disguised="1"/>
	<class name="TreeWalker" c:type="GXmlTreeWalker" c:symbol-prefix="tree_walker" glib:type-name="GXmlTreeWalker" glib:get-type="gxml_tree_walker_get_type" glib:type-struct="TreeWalkerClass" parent="GObject.Object">
		<implements name="GXml.DomTreeWalker"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_root" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<field name="_what_to_show" writable="1">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="_current_node" writable="1">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tree_walker_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TreeWalker" c:type="GXmlTreeWalker*"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="w" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="TreeWalkerPrivate" c:type="GXmlTreeWalkerPrivate*"/>
		</field>
	</class>
	<record name="TreeWalkerClass" c:type="GXmlTreeWalkerClass" glib:is-gtype-struct-for="TreeWalker">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TreeWalkerPrivate" c:type="GXmlTreeWalkerPrivate" disguised="1"/>
	<class name="XAttribute" c:type="GXmlXAttribute" c:symbol-prefix="xattribute" glib:type-name="GXmlXAttribute" glib:get-type="gxml_xattribute_get_type" glib:type-struct="XAttributeClass" parent="GXml.XNode">
		<implements name="GXml.DomAttr"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XNode" c:type="GXmlXNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_xattribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XAttribute" c:type="GXmlXAttribute*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XAttributePrivate" c:type="GXmlXAttributePrivate*"/>
		</field>
	</class>
	<record name="XAttributeClass" c:type="GXmlXAttributeClass" glib:is-gtype-struct-for="XAttribute">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XNodeClass" c:type="GXmlXNodeClass"/>
		</field>
	</record>
	<record name="XAttributePrivate" c:type="GXmlXAttributePrivate" disguised="1"/>
	<class name="XCharacterData" c:type="GXmlXCharacterData" c:symbol-prefix="xcharacter_data" glib:type-name="GXmlXCharacterData" glib:get-type="gxml_xcharacter_data_get_type" glib:type-struct="XCharacterDataClass" parent="GXml.XNonDocumentChildNode">
		<implements name="GXml.DomCharacterData"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XNonDocumentChildNode" c:type="GXmlXNonDocumentChildNode"/>
		</field>
		<property name="str" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_xcharacter_data_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XCharacterData" c:type="GXmlXCharacterData*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_str" c:identifier="gxml_xcharacter_data_set_str">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XCharacterData" c:type="GXmlXCharacterData*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xcharacter_data_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XCharacterData" c:type="GXmlXCharacterData*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XCharacterDataPrivate" c:type="GXmlXCharacterDataPrivate*"/>
		</field>
	</class>
	<record name="XCharacterDataClass" c:type="GXmlXCharacterDataClass" glib:is-gtype-struct-for="XCharacterData">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XNonDocumentChildNodeClass" c:type="GXmlXNonDocumentChildNodeClass"/>
		</field>
	</record>
	<record name="XCharacterDataPrivate" c:type="GXmlXCharacterDataPrivate" disguised="1"/>
	<class name="XChildNode" c:type="GXmlXChildNode" c:symbol-prefix="xchild_node" glib:type-name="GXmlXChildNode" glib:get-type="gxml_xchild_node_get_type" glib:type-struct="XChildNodeClass" parent="GXml.XNode">
		<implements name="GXml.DomChildNode"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XNode" c:type="GXmlXNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_xchild_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XChildNode" c:type="GXmlXChildNode*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XChildNodePrivate" c:type="GXmlXChildNodePrivate*"/>
		</field>
	</class>
	<record name="XChildNodeClass" c:type="GXmlXChildNodeClass" glib:is-gtype-struct-for="XChildNode">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XNodeClass" c:type="GXmlXNodeClass"/>
		</field>
	</record>
	<record name="XChildNodePrivate" c:type="GXmlXChildNodePrivate" disguised="1"/>
	<class name="XNonDocumentChildNode" c:type="GXmlXNonDocumentChildNode" c:symbol-prefix="xnon_document_child_node" glib:type-name="GXmlXNonDocumentChildNode" glib:get-type="gxml_xnon_document_child_node_get_type" glib:type-struct="XNonDocumentChildNodeClass" parent="GXml.XChildNode">
		<implements name="GXml.DomNonDocumentTypeChildNode"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XChildNode" c:type="GXmlXChildNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_xnon_document_child_node_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XNonDocumentChildNode" c:type="GXmlXNonDocumentChildNode*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XNonDocumentChildNodePrivate" c:type="GXmlXNonDocumentChildNodePrivate*"/>
		</field>
	</class>
	<record name="XNonDocumentChildNodeClass" c:type="GXmlXNonDocumentChildNodeClass" glib:is-gtype-struct-for="XNonDocumentChildNode">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XChildNodeClass" c:type="GXmlXChildNodeClass"/>
		</field>
	</record>
	<record name="XNonDocumentChildNodePrivate" c:type="GXmlXNonDocumentChildNodePrivate" disguised="1"/>
	<class name="XComment" c:type="GXmlXComment" c:symbol-prefix="xcomment" glib:type-name="GXmlXComment" glib:get-type="gxml_xcomment_get_type" glib:type-struct="XCommentClass" parent="GXml.XCharacterData">
		<implements name="GXml.DomComment"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XCharacterData" c:type="GXmlXCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_xcomment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XComment" c:type="GXmlXComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XCommentPrivate" c:type="GXmlXCommentPrivate*"/>
		</field>
	</class>
	<record name="XCommentClass" c:type="GXmlXCommentClass" glib:is-gtype-struct-for="XComment">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XCharacterDataClass" c:type="GXmlXCharacterDataClass"/>
		</field>
	</record>
	<record name="XCommentPrivate" c:type="GXmlXCommentPrivate" disguised="1"/>
	<class name="XDocument" c:type="GXmlXDocument" c:symbol-prefix="xdocument" glib:type-name="GXmlXDocument" glib:get-type="gxml_xdocument_get_type" glib:type-struct="XDocumentClass" parent="GXml.XNode">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomNonElementParentNode"/>
		<implements name="GXml.DomDocument"/>
		<implements name="GXml.DomXMLDocument"/>
		<implements name="GXml.XPathContext"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XNode" c:type="GXmlXNode"/>
		</field>
		<field name="doc" writable="1" nullable="1">
			<type name="gpointer" c:type="xmlDoc*"/>
		</field>
		<field name="_buffer" writable="1">
			<type name="libxml2.Buffer" c:type="xmlBuffer*"/>
		</field>
		<field name="_parser" writable="1">
			<type name="GXml.Parser" c:type="GXmlParser*"/>
		</field>
		<constructor name="new" c:identifier="gxml_xdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_xdocument_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_xdocument_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_xdocument_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_xdocument_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_xdocument_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_doc" c:identifier="gxml_xdocument_new_from_doc">
			<return-value transfer-ownership="full">
				<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="libxml2.Doc" c:type="xmlDoc*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="indent" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_indent" c:identifier="gxml_xdocument_get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_indent" c:identifier="gxml_xdocument_set_indent">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="ns-top" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_ns_top" c:identifier="gxml_xdocument_get_ns_top">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_ns_top" c:identifier="gxml_xdocument_set_ns_top">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="prefix-default-ns" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_prefix_default_ns" c:identifier="gxml_xdocument_get_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_prefix_default_ns" c:identifier="gxml_xdocument_set_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="backup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_backup" c:identifier="gxml_xdocument_get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_backup" c:identifier="gxml_xdocument_set_backup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="file" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_file" c:identifier="gxml_xdocument_get_file">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_file" c:identifier="gxml_xdocument_set_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<property name="root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_xdocument_get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="create_pi" c:identifier="gxml_xdocument_create_pi">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_text" c:identifier="gxml_xdocument_create_text">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="libxml_to_string" c:identifier="gxml_xdocument_libxml_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="save" c:identifier="gxml_xdocument_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save_as" c:identifier="gxml_xdocument_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save_as" invoker="save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<field name="_implementation" writable="1">
			<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
		</field>
		<field name="_url" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_origin" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_compat_mode" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_character_set" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_content_type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_constructor" writable="1">
			<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="XDocumentPrivate" c:type="GXmlXDocumentPrivate*"/>
		</field>
	</class>
	<record name="XDocumentClass" c:type="GXmlXDocumentClass" glib:is-gtype-struct-for="XDocument">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XNodeClass" c:type="GXmlXNodeClass"/>
		</field>
		<field name="save">
			<callback name="save" c:type="save" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="save_as">
			<callback name="save_as" c:type="save_as" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="XDocumentPrivate" c:type="GXmlXDocumentPrivate" disguised="1"/>
	<class name="XElement" c:type="GXmlXElement" c:symbol-prefix="xelement" glib:type-name="GXmlXElement" glib:get-type="gxml_xelement_get_type" glib:type-struct="XElementClass" parent="GXml.XNonDocumentChildNode">
		<implements name="GXml.DomParentNode"/>
		<implements name="GXml.DomElement"/>
		<implements name="GXml.XPathContext"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XNonDocumentChildNode" c:type="GXmlXNonDocumentChildNode"/>
		</field>
		<constructor name="new" c:identifier="gxml_xelement_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XElement" c:type="GXmlXElement*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="set_attr" c:identifier="gxml_xelement_set_attr">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="aname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="avalue" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_attr" c:identifier="gxml_xelement_get_attr">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_ns_attr" c:identifier="gxml_xelement_set_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="ns" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="aname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_ns_attr" c:identifier="gxml_xelement_get_ns_attr">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="normalize" c:identifier="gxml_xelement_normalize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="content" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content" c:identifier="gxml_xelement_get_content">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_content" c:identifier="gxml_xelement_set_content">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_attr" c:identifier="gxml_xelement_remove_attr">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_ns_attr" c:identifier="gxml_xelement_remove_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XElement" c:type="GXmlXElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="XElementPrivate" c:type="GXmlXElementPrivate*"/>
		</field>
	</class>
	<record name="XElementClass" c:type="GXmlXElementClass" glib:is-gtype-struct-for="XElement">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XNonDocumentChildNodeClass" c:type="GXmlXNonDocumentChildNodeClass"/>
		</field>
	</record>
	<record name="XElementPrivate" c:type="GXmlXElementPrivate" disguised="1"/>
	<class name="XHashMapAttr" c:type="GXmlXHashMapAttr" c:symbol-prefix="xhash_map_attr" glib:type-name="GXmlXHashMapAttr" glib:get-type="gxml_xhash_map_attr_get_type" glib:type-struct="XHashMapAttrClass" parent="Gee.AbstractMap">
		<implements name="GXml.DomNamedNodeMap"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.AbstractMap" c:type="GeeAbstractMap"/>
		</field>
		<constructor name="new" c:identifier="gxml_xhash_map_attr_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XHashMapAttr" c:type="GXmlXHashMapAttr*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XHashMapAttrPrivate" c:type="GXmlXHashMapAttrPrivate*"/>
		</field>
	</class>
	<record name="XHashMapAttrClass" c:type="GXmlXHashMapAttrClass" glib:is-gtype-struct-for="XHashMapAttr">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.AbstractMapClass" c:type="GeeAbstractMapClass"/>
		</field>
	</record>
	<record name="XHashMapAttrPrivate" c:type="GXmlXHashMapAttrPrivate" disguised="1"/>
	<class name="XHashMapAttrEntry" c:type="GXmlXHashMapAttrEntry" c:symbol-prefix="entry" glib:type-name="GXmlXHashMapAttrEntry" glib:get-type="gxml_xhash_map_attr_entry_get_type" glib:type-struct="XHashMapAttrEntryClass" parent="Gee.MapEntry">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.MapEntry" c:type="GeeMapEntry"/>
		</field>
		<constructor name="new" c:identifier="gxml_xhash_map_attr_entry_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XHashMapAttrEntry" c:type="GXmlXHashMapAttrEntry*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XHashMapAttrEntryPrivate" c:type="GXmlXHashMapAttrEntryPrivate*"/>
		</field>
	</class>
	<record name="XHashMapAttrEntryClass" c:type="GXmlXHashMapAttrEntryClass" glib:is-gtype-struct-for="XHashMapAttrEntry">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.MapEntryClass" c:type="GeeMapEntryClass"/>
		</field>
	</record>
	<record name="XHashMapAttrEntryPrivate" c:type="GXmlXHashMapAttrEntryPrivate" disguised="1"/>
	<class name="XHashMapAttrIterator" c:type="GXmlXHashMapAttrIterator" c:symbol-prefix="iterator" glib:type-name="GXmlXHashMapAttrIterator" glib:get-type="gxml_xhash_map_attr_iterator_get_type" glib:type-struct="XHashMapAttrIteratorClass" parent="GObject.Object">
		<implements name="Gee.MapIterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_xhash_map_attr_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XHashMapAttrIterator" c:type="GXmlXHashMapAttrIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XHashMapAttrIteratorPrivate" c:type="GXmlXHashMapAttrIteratorPrivate*"/>
		</field>
	</class>
	<record name="XHashMapAttrIteratorClass" c:type="GXmlXHashMapAttrIteratorClass" glib:is-gtype-struct-for="XHashMapAttrIterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="XHashMapAttrIteratorPrivate" c:type="GXmlXHashMapAttrIteratorPrivate" disguised="1"/>
	<class name="XHtmlDocument" c:type="GXmlXHtmlDocument" c:symbol-prefix="xhtml_document" glib:type-name="GXmlXHtmlDocument" glib:get-type="gxml_xhtml_document_get_type" glib:type-struct="XHtmlDocumentClass" parent="GXml.XDocument">
		<implements name="GXml.DomHtmlDocument"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XDocument" c:type="GXmlXDocument"/>
		</field>
		<function name="get_default_options" c:identifier="gxml_xhtml_document_get_default_options">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</function>
		<constructor name="from_path" c:identifier="gxml_xhtml_document_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_xhtml_document_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_xhtml_document_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_xhtml_document_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="html" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string_context" c:identifier="gxml_xhtml_document_new_from_string_context">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="html" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string_doc" c:identifier="gxml_xhtml_document_new_from_string_doc">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="html" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_xhtml_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XHtmlDocument" c:type="GXmlXHtmlDocument*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XHtmlDocumentPrivate" c:type="GXmlXHtmlDocumentPrivate*"/>
		</field>
	</class>
	<record name="XHtmlDocumentClass" c:type="GXmlXHtmlDocumentClass" glib:is-gtype-struct-for="XHtmlDocument">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XDocumentClass" c:type="GXmlXDocumentClass"/>
		</field>
	</record>
	<record name="XHtmlDocumentPrivate" c:type="GXmlXHtmlDocumentPrivate" disguised="1"/>
	<class name="XListChildren" c:type="GXmlXListChildren" c:symbol-prefix="xlist_children" glib:type-name="GXmlXListChildren" glib:get-type="gxml_xlist_children_get_type" glib:type-struct="XListChildrenClass" parent="Gee.AbstractBidirList">
		<implements name="GXml.DomNodeList"/>
		<implements name="GXml.DomHTMLCollection"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.AbstractBidirList" c:type="GeeAbstractBidirList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xlist_children_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XListChildren" c:type="GXmlXListChildren*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XListChildrenPrivate" c:type="GXmlXListChildrenPrivate*"/>
		</field>
	</class>
	<record name="XListChildrenClass" c:type="GXmlXListChildrenClass" glib:is-gtype-struct-for="XListChildren">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.AbstractBidirListClass" c:type="GeeAbstractBidirListClass"/>
		</field>
	</record>
	<record name="XListChildrenPrivate" c:type="GXmlXListChildrenPrivate" disguised="1"/>
	<class name="XListChildrenIterator" c:type="GXmlXListChildrenIterator" c:symbol-prefix="iterator" glib:type-name="GXmlXListChildrenIterator" glib:get-type="gxml_xlist_children_iterator_get_type" glib:type-struct="XListChildrenIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<implements name="Gee.BidirIterator"/>
		<implements name="Gee.ListIterator"/>
		<implements name="Gee.BidirListIterator"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_xlist_children_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XListChildrenIterator" c:type="GXmlXListChildrenIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XListChildrenIteratorPrivate" c:type="GXmlXListChildrenIteratorPrivate*"/>
		</field>
	</class>
	<record name="XListChildrenIteratorClass" c:type="GXmlXListChildrenIteratorClass" glib:is-gtype-struct-for="XListChildrenIterator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="XListChildrenIteratorPrivate" c:type="GXmlXListChildrenIteratorPrivate" disguised="1"/>
	<class name="XNode" c:type="GXmlXNode" c:symbol-prefix="xnode" glib:type-name="GXmlXNode" glib:get-type="gxml_xnode_get_type" glib:type-struct="XNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.DomEventTarget"/>
		<implements name="GXml.DomNode"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="_doc" writable="1">
			<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
		</field>
		<field name="_node" writable="1" nullable="1">
			<type name="gpointer" c:type="xmlNode*"/>
		</field>
		<field name="owned_node" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="set_namespace" c:identifier="gxml_xnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_xnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="children-nodes">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</type>
		</property>
		<method name="get_children_nodes" c:identifier="gxml_xnode_get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_children_nodes" invoker="get_children_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="document">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_xnode_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="parent">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_xnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_xnode_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_xnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_xnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_xnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_xnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_internal_node" c:identifier="gxml_xnode_get_internal_node">
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="xmlNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="to_gnode" c:identifier="gxml_xnode_to_gnode">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
				<parameter name="take_node" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<field name="_base_uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="clone_node" c:identifier="gxml_xnode_clone_node">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XNode" c:type="GXmlXNode*"/>
				</instance-parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="XNodePrivate" c:type="GXmlXNodePrivate*"/>
		</field>
	</class>
	<record name="XNodeClass" c:type="GXmlXNodeClass" glib:is-gtype-struct-for="XNode">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XNode" c:type="GXmlXNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XNode" c:type="GXmlXNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="XNodePrivate" c:type="GXmlXNodePrivate" disguised="1"/>
	<class name="XParser" c:type="GXmlXParser" c:symbol-prefix="xparser" glib:type-name="GXmlXParser" glib:get-type="gxml_xparser_get_type" glib:type-struct="XParserClass" parent="GObject.Object">
		<implements name="GXml.Parser"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<constructor name="new" c:identifier="gxml_xparser_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XParser" c:type="GXmlXParser*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="read_node" c:identifier="gxml_xparser_read_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XParser" c:type="GXmlXParser*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_child_nodes_stream_async" c:identifier="gxml_xparser_read_child_nodes_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XParser" c:type="GXmlXParser*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_child_nodes_stream_finish" c:identifier="gxml_xparser_read_child_nodes_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XParser" c:type="GXmlXParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="XParserPrivate" c:type="GXmlXParserPrivate*"/>
		</field>
	</class>
	<record name="XParserClass" c:type="GXmlXParserClass" glib:is-gtype-struct-for="XParser">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="XParserPrivate" c:type="GXmlXParserPrivate" disguised="1"/>
	<class name="XProcessingInstruction" c:type="GXmlXProcessingInstruction" c:symbol-prefix="xprocessing_instruction" glib:type-name="GXmlXProcessingInstruction" glib:get-type="gxml_xprocessing_instruction_get_type" glib:type-struct="XProcessingInstructionClass" parent="GXml.XCharacterData">
		<implements name="GXml.DomProcessingInstruction"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XCharacterData" c:type="GXmlXCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_xprocessing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XProcessingInstruction" c:type="GXmlXProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="data" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_xprocessing_instruction_get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XProcessingInstruction" c:type="GXmlXProcessingInstruction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_data" c:identifier="gxml_xprocessing_instruction_set_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XProcessingInstruction" c:type="GXmlXProcessingInstruction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<field name="priv" readable="0" private="1">
			<type name="XProcessingInstructionPrivate" c:type="GXmlXProcessingInstructionPrivate*"/>
		</field>
	</class>
	<record name="XProcessingInstructionClass" c:type="GXmlXProcessingInstructionClass" glib:is-gtype-struct-for="XProcessingInstruction">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XCharacterDataClass" c:type="GXmlXCharacterDataClass"/>
		</field>
	</record>
	<record name="XProcessingInstructionPrivate" c:type="GXmlXProcessingInstructionPrivate" disguised="1"/>
	<class name="XsdSchema" c:type="GXmlXsdSchema" c:symbol-prefix="xsd_schema" glib:type-name="GXmlXsdSchema" glib:get-type="gxml_xsd_schema_get_type" glib:type-struct="XsdSchemaClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="element-definitions" writable="1">
			<type name="GXml.XsdListElements" c:type="GXmlXsdListElements*"/>
		</property>
		<method name="get_element_definitions" c:identifier="gxml_xsd_schema_get_element_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdListElements" c:type="GXmlXsdListElements*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_element_definitions" c:identifier="gxml_xsd_schema_set_element_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdListElements" c:type="GXmlXsdListElements*"/>
				</parameter>
			</parameters>
		</method>
		<property name="simple-type-definitions" writable="1">
			<type name="GXml.XsdListSimpleTypes" c:type="GXmlXsdListSimpleTypes*"/>
		</property>
		<method name="get_simple_type_definitions" c:identifier="gxml_xsd_schema_get_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdListSimpleTypes" c:type="GXmlXsdListSimpleTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_simple_type_definitions" c:identifier="gxml_xsd_schema_set_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdListSimpleTypes" c:type="GXmlXsdListSimpleTypes*"/>
				</parameter>
			</parameters>
		</method>
		<property name="complex-type-definitions" writable="1">
			<type name="GXml.XsdListComplexTypes" c:type="GXmlXsdListComplexTypes*"/>
		</property>
		<method name="get_complex_type_definitions" c:identifier="gxml_xsd_schema_get_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdListComplexTypes" c:type="GXmlXsdListComplexTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_complex_type_definitions" c:identifier="gxml_xsd_schema_set_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdListComplexTypes" c:type="GXmlXsdListComplexTypes*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_schema_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdSchema" c:type="GXmlXsdSchema*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdSchemaPrivate" c:type="GXmlXsdSchemaPrivate*"/>
		</field>
	</class>
	<record name="XsdSchemaClass" c:type="GXmlXsdSchemaClass" glib:is-gtype-struct-for="XsdSchema">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdSchemaPrivate" c:type="GXmlXsdSchemaPrivate" disguised="1"/>
	<class name="XsdSimpleType" c:type="GXmlXsdSimpleType" c:symbol-prefix="xsd_simple_type" glib:type-name="GXmlXsdSimpleType" glib:get-type="gxml_xsd_simple_type_get_type" glib:type-struct="XsdSimpleTypeClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_xsd_simple_type_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_final" c:identifier="gxml_xsd_simple_type_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_xsd_simple_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="gxml_xsd_simple_type_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="annotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_annotation" c:identifier="gxml_xsd_simple_type_get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_annotation" c:identifier="gxml_xsd_simple_type_set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<property name="list" writable="1">
			<type name="GXml.XsdTypeList" c:type="GXmlXsdTypeList*"/>
		</property>
		<method name="get_list" c:identifier="gxml_xsd_simple_type_get_list">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdTypeList" c:type="GXmlXsdTypeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_list" c:identifier="gxml_xsd_simple_type_set_list">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdTypeList" c:type="GXmlXsdTypeList*"/>
				</parameter>
			</parameters>
		</method>
		<property name="union" writable="1">
			<type name="GXml.XsdTypeUnion" c:type="GXmlXsdTypeUnion*"/>
		</property>
		<method name="get_union" c:identifier="gxml_xsd_simple_type_get_union">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdTypeUnion" c:type="GXmlXsdTypeUnion*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_union" c:identifier="gxml_xsd_simple_type_set_union">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdTypeUnion" c:type="GXmlXsdTypeUnion*"/>
				</parameter>
			</parameters>
		</method>
		<property name="restriction" writable="1">
			<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
		</property>
		<method name="get_restriction" c:identifier="gxml_xsd_simple_type_get_restriction">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_restriction" c:identifier="gxml_xsd_simple_type_set_restriction">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_simple_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdSimpleTypePrivate" c:type="GXmlXsdSimpleTypePrivate*"/>
		</field>
	</class>
	<record name="XsdSimpleTypeClass" c:type="GXmlXsdSimpleTypeClass" glib:is-gtype-struct-for="XsdSimpleType">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdSimpleTypePrivate" c:type="GXmlXsdSimpleTypePrivate" disguised="1"/>
	<class name="XsdTypeDefinition" c:type="GXmlXsdTypeDefinition" c:symbol-prefix="xsd_type_definition" glib:type-name="GXmlXsdTypeDefinition" glib:get-type="gxml_xsd_type_definition_get_type" glib:type-struct="XsdTypeDefinitionClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="annotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_annotation" c:identifier="gxml_xsd_type_definition_get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_annotation" c:identifier="gxml_xsd_type_definition_set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_type_definition_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeDefinitionPrivate" c:type="GXmlXsdTypeDefinitionPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeDefinitionClass" c:type="GXmlXsdTypeDefinitionClass" glib:is-gtype-struct-for="XsdTypeDefinition">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdTypeDefinitionPrivate" c:type="GXmlXsdTypeDefinitionPrivate" disguised="1"/>
	<class name="XsdTypeList" c:type="GXmlXsdTypeList" c:symbol-prefix="xsd_type_list" glib:type-name="GXmlXsdTypeList" glib:get-type="gxml_xsd_type_list_get_type" glib:type-struct="XsdTypeListClass" parent="GXml.XsdTypeDefinition">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeList" c:type="GXmlXsdTypeList*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeListPrivate" c:type="GXmlXsdTypeListPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeListClass" c:type="GXmlXsdTypeListClass" glib:is-gtype-struct-for="XsdTypeList">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeDefinitionClass" c:type="GXmlXsdTypeDefinitionClass"/>
		</field>
	</record>
	<record name="XsdTypeListPrivate" c:type="GXmlXsdTypeListPrivate" disguised="1"/>
	<class name="XsdTypeUnion" c:type="GXmlXsdTypeUnion" c:symbol-prefix="xsd_type_union" glib:type-name="GXmlXsdTypeUnion" glib:get-type="gxml_xsd_type_union_get_type" glib:type-struct="XsdTypeUnionClass" parent="GXml.XsdTypeDefinition">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_union_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeUnion" c:type="GXmlXsdTypeUnion*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeUnionPrivate" c:type="GXmlXsdTypeUnionPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeUnionClass" c:type="GXmlXsdTypeUnionClass" glib:is-gtype-struct-for="XsdTypeUnion">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeDefinitionClass" c:type="GXmlXsdTypeDefinitionClass"/>
		</field>
	</record>
	<record name="XsdTypeUnionPrivate" c:type="GXmlXsdTypeUnionPrivate" disguised="1"/>
	<class name="XsdTypeRestriction" c:type="GXmlXsdTypeRestriction" c:symbol-prefix="xsd_type_restriction" glib:type-name="GXmlXsdTypeRestriction" glib:get-type="gxml_xsd_type_restriction_get_type" glib:type-struct="XsdTypeRestrictionClass" parent="GXml.XsdTypeDefinition">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeDefinition" c:type="GXmlXsdTypeDefinition"/>
		</field>
		<property name="base" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base" c:identifier="gxml_xsd_type_restriction_get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_base" c:identifier="gxml_xsd_type_restriction_set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="simple-type" writable="1">
			<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
		</property>
		<method name="get_simple_type" c:identifier="gxml_xsd_type_restriction_get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_simple_type" c:identifier="gxml_xsd_type_restriction_set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</parameter>
			</parameters>
		</method>
		<property name="enumerations" writable="1">
			<type name="GXml.XsdListTypeRestrictionEnumerations" c:type="GXmlXsdListTypeRestrictionEnumerations*"/>
		</property>
		<method name="get_enumerations" c:identifier="gxml_xsd_type_restriction_get_enumerations">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdListTypeRestrictionEnumerations" c:type="GXmlXsdListTypeRestrictionEnumerations*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enumerations" c:identifier="gxml_xsd_type_restriction_set_enumerations">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdListTypeRestrictionEnumerations" c:type="GXmlXsdListTypeRestrictionEnumerations*"/>
				</parameter>
			</parameters>
		</method>
		<property name="white-spaces" writable="1">
			<type name="GXml.XsdListTypeRestrictionWhiteSpaces" c:type="GXmlXsdListTypeRestrictionWhiteSpaces*"/>
		</property>
		<method name="get_white_spaces" c:identifier="gxml_xsd_type_restriction_get_white_spaces">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdListTypeRestrictionWhiteSpaces" c:type="GXmlXsdListTypeRestrictionWhiteSpaces*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_white_spaces" c:identifier="gxml_xsd_type_restriction_set_white_spaces">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdListTypeRestrictionWhiteSpaces" c:type="GXmlXsdListTypeRestrictionWhiteSpaces*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestriction" c:type="GXmlXsdTypeRestriction*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionPrivate" c:type="GXmlXsdTypeRestrictionPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionClass" c:type="GXmlXsdTypeRestrictionClass" glib:is-gtype-struct-for="XsdTypeRestriction">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeDefinitionClass" c:type="GXmlXsdTypeDefinitionClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionPrivate" c:type="GXmlXsdTypeRestrictionPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef" c:symbol-prefix="xsd_type_restriction_def" glib:type-name="GXmlXsdTypeRestrictionDef" glib:get-type="gxml_xsd_type_restriction_def_get_type" glib:type-struct="XsdTypeRestrictionDefClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="annotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_annotation" c:identifier="gxml_xsd_type_restriction_def_get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_annotation" c:identifier="gxml_xsd_type_restriction_def_set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_def_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionDefPrivate" c:type="GXmlXsdTypeRestrictionDefPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass" glib:is-gtype-struct-for="XsdTypeRestrictionDef">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionDefPrivate" c:type="GXmlXsdTypeRestrictionDefPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMinExclusive" c:type="GXmlXsdTypeRestrictionMinExclusive" c:symbol-prefix="xsd_type_restriction_min_exclusive" glib:type-name="GXmlXsdTypeRestrictionMinExclusive" glib:get-type="gxml_xsd_type_restriction_min_exclusive_get_type" glib:type-struct="XsdTypeRestrictionMinExclusiveClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_min_exclusive_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMinExclusive" c:type="GXmlXsdTypeRestrictionMinExclusive*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMinExclusivePrivate" c:type="GXmlXsdTypeRestrictionMinExclusivePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMinExclusiveClass" c:type="GXmlXsdTypeRestrictionMinExclusiveClass" glib:is-gtype-struct-for="XsdTypeRestrictionMinExclusive">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMinExclusivePrivate" c:type="GXmlXsdTypeRestrictionMinExclusivePrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMinInclusive" c:type="GXmlXsdTypeRestrictionMinInclusive" c:symbol-prefix="xsd_type_restriction_min_inclusive" glib:type-name="GXmlXsdTypeRestrictionMinInclusive" glib:get-type="gxml_xsd_type_restriction_min_inclusive_get_type" glib:type-struct="XsdTypeRestrictionMinInclusiveClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_min_inclusive_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMinInclusive" c:type="GXmlXsdTypeRestrictionMinInclusive*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMinInclusivePrivate" c:type="GXmlXsdTypeRestrictionMinInclusivePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMinInclusiveClass" c:type="GXmlXsdTypeRestrictionMinInclusiveClass" glib:is-gtype-struct-for="XsdTypeRestrictionMinInclusive">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMinInclusivePrivate" c:type="GXmlXsdTypeRestrictionMinInclusivePrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMaxExclusive" c:type="GXmlXsdTypeRestrictionMaxExclusive" c:symbol-prefix="xsd_type_restriction_max_exclusive" glib:type-name="GXmlXsdTypeRestrictionMaxExclusive" glib:get-type="gxml_xsd_type_restriction_max_exclusive_get_type" glib:type-struct="XsdTypeRestrictionMaxExclusiveClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_max_exclusive_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMaxExclusive" c:type="GXmlXsdTypeRestrictionMaxExclusive*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMaxExclusivePrivate" c:type="GXmlXsdTypeRestrictionMaxExclusivePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMaxExclusiveClass" c:type="GXmlXsdTypeRestrictionMaxExclusiveClass" glib:is-gtype-struct-for="XsdTypeRestrictionMaxExclusive">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMaxExclusivePrivate" c:type="GXmlXsdTypeRestrictionMaxExclusivePrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMaxInclusive" c:type="GXmlXsdTypeRestrictionMaxInclusive" c:symbol-prefix="xsd_type_restriction_max_inclusive" glib:type-name="GXmlXsdTypeRestrictionMaxInclusive" glib:get-type="gxml_xsd_type_restriction_max_inclusive_get_type" glib:type-struct="XsdTypeRestrictionMaxInclusiveClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_max_inclusive_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMaxInclusive" c:type="GXmlXsdTypeRestrictionMaxInclusive*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMaxInclusivePrivate" c:type="GXmlXsdTypeRestrictionMaxInclusivePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMaxInclusiveClass" c:type="GXmlXsdTypeRestrictionMaxInclusiveClass" glib:is-gtype-struct-for="XsdTypeRestrictionMaxInclusive">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMaxInclusivePrivate" c:type="GXmlXsdTypeRestrictionMaxInclusivePrivate" disguised="1"/>
	<class name="XsdTypeRestrictionTotalDigits" c:type="GXmlXsdTypeRestrictionTotalDigits" c:symbol-prefix="xsd_type_restriction_total_digits" glib:type-name="GXmlXsdTypeRestrictionTotalDigits" glib:get-type="gxml_xsd_type_restriction_total_digits_get_type" glib:type-struct="XsdTypeRestrictionTotalDigitsClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_total_digits_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionTotalDigits" c:type="GXmlXsdTypeRestrictionTotalDigits*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionTotalDigitsPrivate" c:type="GXmlXsdTypeRestrictionTotalDigitsPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionTotalDigitsClass" c:type="GXmlXsdTypeRestrictionTotalDigitsClass" glib:is-gtype-struct-for="XsdTypeRestrictionTotalDigits">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionTotalDigitsPrivate" c:type="GXmlXsdTypeRestrictionTotalDigitsPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionFractionDigits" c:type="GXmlXsdTypeRestrictionFractionDigits" c:symbol-prefix="xsd_type_restriction_fraction_digits" glib:type-name="GXmlXsdTypeRestrictionFractionDigits" glib:get-type="gxml_xsd_type_restriction_fraction_digits_get_type" glib:type-struct="XsdTypeRestrictionFractionDigitsClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_fraction_digits_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionFractionDigits" c:type="GXmlXsdTypeRestrictionFractionDigits*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionFractionDigitsPrivate" c:type="GXmlXsdTypeRestrictionFractionDigitsPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionFractionDigitsClass" c:type="GXmlXsdTypeRestrictionFractionDigitsClass" glib:is-gtype-struct-for="XsdTypeRestrictionFractionDigits">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionFractionDigitsPrivate" c:type="GXmlXsdTypeRestrictionFractionDigitsPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionLength" c:type="GXmlXsdTypeRestrictionLength" c:symbol-prefix="xsd_type_restriction_length" glib:type-name="GXmlXsdTypeRestrictionLength" glib:get-type="gxml_xsd_type_restriction_length_get_type" glib:type-struct="XsdTypeRestrictionLengthClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_length_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionLength" c:type="GXmlXsdTypeRestrictionLength*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionLengthPrivate" c:type="GXmlXsdTypeRestrictionLengthPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionLengthClass" c:type="GXmlXsdTypeRestrictionLengthClass" glib:is-gtype-struct-for="XsdTypeRestrictionLength">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionLengthPrivate" c:type="GXmlXsdTypeRestrictionLengthPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMinLength" c:type="GXmlXsdTypeRestrictionMinLength" c:symbol-prefix="xsd_type_restriction_min_length" glib:type-name="GXmlXsdTypeRestrictionMinLength" glib:get-type="gxml_xsd_type_restriction_min_length_get_type" glib:type-struct="XsdTypeRestrictionMinLengthClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_min_length_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMinLength" c:type="GXmlXsdTypeRestrictionMinLength*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMinLengthPrivate" c:type="GXmlXsdTypeRestrictionMinLengthPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMinLengthClass" c:type="GXmlXsdTypeRestrictionMinLengthClass" glib:is-gtype-struct-for="XsdTypeRestrictionMinLength">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMinLengthPrivate" c:type="GXmlXsdTypeRestrictionMinLengthPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionMaxLength" c:type="GXmlXsdTypeRestrictionMaxLength" c:symbol-prefix="xsd_type_restriction_max_length" glib:type-name="GXmlXsdTypeRestrictionMaxLength" glib:get-type="gxml_xsd_type_restriction_max_length_get_type" glib:type-struct="XsdTypeRestrictionMaxLengthClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_max_length_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionMaxLength" c:type="GXmlXsdTypeRestrictionMaxLength*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionMaxLengthPrivate" c:type="GXmlXsdTypeRestrictionMaxLengthPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionMaxLengthClass" c:type="GXmlXsdTypeRestrictionMaxLengthClass" glib:is-gtype-struct-for="XsdTypeRestrictionMaxLength">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionMaxLengthPrivate" c:type="GXmlXsdTypeRestrictionMaxLengthPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionEnumeration" c:type="GXmlXsdTypeRestrictionEnumeration" c:symbol-prefix="xsd_type_restriction_enumeration" glib:type-name="GXmlXsdTypeRestrictionEnumeration" glib:get-type="gxml_xsd_type_restriction_enumeration_get_type" glib:type-struct="XsdTypeRestrictionEnumerationClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_xsd_type_restriction_enumeration_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionEnumeration" c:type="GXmlXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_value" c:identifier="gxml_xsd_type_restriction_enumeration_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionEnumeration" c:type="GXmlXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_enumeration_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionEnumeration" c:type="GXmlXsdTypeRestrictionEnumeration*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionEnumerationPrivate" c:type="GXmlXsdTypeRestrictionEnumerationPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionEnumerationClass" c:type="GXmlXsdTypeRestrictionEnumerationClass" glib:is-gtype-struct-for="XsdTypeRestrictionEnumeration">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionEnumerationPrivate" c:type="GXmlXsdTypeRestrictionEnumerationPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace" c:symbol-prefix="xsd_type_restriction_white_space" glib:type-name="GXmlXsdTypeRestrictionWhiteSpace" glib:get-type="gxml_xsd_type_restriction_white_space_get_type" glib:type-struct="XsdTypeRestrictionWhiteSpaceClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<property name="fixed" writable="1">
			<type name="GXml.XsdTypeRestrictionWhiteSpaceFixed" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixed*"/>
		</property>
		<method name="get_fixed" c:identifier="gxml_xsd_type_restriction_white_space_get_fixed">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdTypeRestrictionWhiteSpaceFixed" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixed*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_fixed" c:identifier="gxml_xsd_type_restriction_white_space_set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionWhiteSpaceFixed" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixed*"/>
				</parameter>
			</parameters>
		</method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_xsd_type_restriction_white_space_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_value" c:identifier="gxml_xsd_type_restriction_white_space_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_white_space_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionWhiteSpace" c:type="GXmlXsdTypeRestrictionWhiteSpace*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionWhiteSpacePrivate" c:type="GXmlXsdTypeRestrictionWhiteSpacePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionWhiteSpaceClass" c:type="GXmlXsdTypeRestrictionWhiteSpaceClass" glib:is-gtype-struct-for="XsdTypeRestrictionWhiteSpace">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionWhiteSpacePrivate" c:type="GXmlXsdTypeRestrictionWhiteSpacePrivate" disguised="1"/>
	<class name="XsdTypeRestrictionWhiteSpaceFixed" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixed" c:symbol-prefix="fixed" glib:type-name="GXmlXsdTypeRestrictionWhiteSpaceFixed" glib:get-type="gxml_xsd_type_restriction_white_space_fixed_get_type" glib:type-struct="XsdTypeRestrictionWhiteSpaceFixedClass" parent="GXml.Boolean">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Boolean" c:type="GXmlBoolean"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_white_space_fixed_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionWhiteSpaceFixed" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixed*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionWhiteSpaceFixedPrivate" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixedPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionWhiteSpaceFixedClass" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixedClass" glib:is-gtype-struct-for="XsdTypeRestrictionWhiteSpaceFixed">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.BooleanClass" c:type="GXmlBooleanClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionWhiteSpaceFixedPrivate" c:type="GXmlXsdTypeRestrictionWhiteSpaceFixedPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionPattern" c:type="GXmlXsdTypeRestrictionPattern" c:symbol-prefix="xsd_type_restriction_pattern" glib:type-name="GXmlXsdTypeRestrictionPattern" glib:get-type="gxml_xsd_type_restriction_pattern_get_type" glib:type-struct="XsdTypeRestrictionPatternClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_pattern_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionPattern" c:type="GXmlXsdTypeRestrictionPattern*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionPatternPrivate" c:type="GXmlXsdTypeRestrictionPatternPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionPatternClass" c:type="GXmlXsdTypeRestrictionPatternClass" glib:is-gtype-struct-for="XsdTypeRestrictionPattern">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionPatternPrivate" c:type="GXmlXsdTypeRestrictionPatternPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionAssertion" c:type="GXmlXsdTypeRestrictionAssertion" c:symbol-prefix="xsd_type_restriction_assertion" glib:type-name="GXmlXsdTypeRestrictionAssertion" glib:get-type="gxml_xsd_type_restriction_assertion_get_type" glib:type-struct="XsdTypeRestrictionAssertionClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_assertion_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionAssertion" c:type="GXmlXsdTypeRestrictionAssertion*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionAssertionPrivate" c:type="GXmlXsdTypeRestrictionAssertionPrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionAssertionClass" c:type="GXmlXsdTypeRestrictionAssertionClass" glib:is-gtype-struct-for="XsdTypeRestrictionAssertion">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionAssertionPrivate" c:type="GXmlXsdTypeRestrictionAssertionPrivate" disguised="1"/>
	<class name="XsdTypeRestrictionExplicitTimezone" c:type="GXmlXsdTypeRestrictionExplicitTimezone" c:symbol-prefix="xsd_type_restriction_explicit_timezone" glib:type-name="GXmlXsdTypeRestrictionExplicitTimezone" glib:get-type="gxml_xsd_type_restriction_explicit_timezone_get_type" glib:type-struct="XsdTypeRestrictionExplicitTimezoneClass" parent="GXml.XsdTypeRestrictionDef">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDef" c:type="GXmlXsdTypeRestrictionDef"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_type_restriction_explicit_timezone_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdTypeRestrictionExplicitTimezone" c:type="GXmlXsdTypeRestrictionExplicitTimezone*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdTypeRestrictionExplicitTimezonePrivate" c:type="GXmlXsdTypeRestrictionExplicitTimezonePrivate*"/>
		</field>
	</class>
	<record name="XsdTypeRestrictionExplicitTimezoneClass" c:type="GXmlXsdTypeRestrictionExplicitTimezoneClass" glib:is-gtype-struct-for="XsdTypeRestrictionExplicitTimezone">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdTypeRestrictionDefClass" c:type="GXmlXsdTypeRestrictionDefClass"/>
		</field>
	</record>
	<record name="XsdTypeRestrictionExplicitTimezonePrivate" c:type="GXmlXsdTypeRestrictionExplicitTimezonePrivate" disguised="1"/>
	<class name="XsdComplexType" c:type="GXmlXsdComplexType" c:symbol-prefix="xsd_complex_type" glib:type-name="GXmlXsdComplexType" glib:get-type="gxml_xsd_complex_type_get_type" glib:type-struct="XsdComplexTypeClass" parent="GXml.XsdBaseType">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseType" c:type="GXmlXsdBaseType"/>
		</field>
		<field name="_type_attributes" writable="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
		</field>
		<field name="_group_attributes" writable="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
		</field>
		<property name="abstract" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_abstract" c:identifier="gxml_xsd_complex_type_get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_abstract" c:identifier="gxml_xsd_complex_type_set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="block" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_block" c:identifier="gxml_xsd_complex_type_get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_block" c:identifier="gxml_xsd_complex_type_set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_xsd_complex_type_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_final" c:identifier="gxml_xsd_complex_type_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="mixed" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_mixed" c:identifier="gxml_xsd_complex_type_get_mixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_mixed" c:identifier="gxml_xsd_complex_type_set_mixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_xsd_complex_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="gxml_xsd_complex_type_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="default-attributes-apply" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_attributes_apply" c:identifier="gxml_xsd_complex_type_get_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_default_attributes_apply" c:identifier="gxml_xsd_complex_type_set_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="content-type" writable="1">
			<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
		</property>
		<method name="get_content_type" c:identifier="gxml_xsd_complex_type_get_content_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_content_type" c:identifier="gxml_xsd_complex_type_set_content_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
				</parameter>
			</parameters>
		</method>
		<property name="type-attributes">
			<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
		</property>
		<method name="get_type_attributes" c:identifier="gxml_xsd_complex_type_get_type_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="group-attributes">
			<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
		</property>
		<method name="get_group_attributes" c:identifier="gxml_xsd_complex_type_get_group_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_complex_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdComplexTypePrivate" c:type="GXmlXsdComplexTypePrivate*"/>
		</field>
	</class>
	<record name="XsdComplexTypeClass" c:type="GXmlXsdComplexTypeClass" glib:is-gtype-struct-for="XsdComplexType">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseTypeClass" c:type="GXmlXsdBaseTypeClass"/>
		</field>
	</record>
	<record name="XsdComplexTypePrivate" c:type="GXmlXsdComplexTypePrivate" disguised="1"/>
	<class name="XsdExtension" c:type="GXmlXsdExtension" c:symbol-prefix="xsd_extension" glib:type-name="GXmlXsdExtension" glib:get-type="gxml_xsd_extension_get_type" glib:type-struct="XsdExtensionClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="base" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base" c:identifier="gxml_xsd_extension_get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdExtension" c:type="GXmlXsdExtension*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_base" c:identifier="gxml_xsd_extension_set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdExtension" c:type="GXmlXsdExtension*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_extension_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdExtension" c:type="GXmlXsdExtension*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdExtensionPrivate" c:type="GXmlXsdExtensionPrivate*"/>
		</field>
	</class>
	<record name="XsdExtensionClass" c:type="GXmlXsdExtensionClass" glib:is-gtype-struct-for="XsdExtension">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdExtensionPrivate" c:type="GXmlXsdExtensionPrivate" disguised="1"/>
	<class name="XsdElement" c:type="GXmlXsdElement" c:symbol-prefix="xsd_element" glib:type-name="GXmlXsdElement" glib:get-type="gxml_xsd_element_get_type" glib:type-struct="XsdElementClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="abstract" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_abstract" c:identifier="gxml_xsd_element_get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_abstract" c:identifier="gxml_xsd_element_set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="block" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_block" c:identifier="gxml_xsd_element_get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_block" c:identifier="gxml_xsd_element_set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="default" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_default" c:identifier="gxml_xsd_element_get_default">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_default" c:identifier="gxml_xsd_element_set_default">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_xsd_element_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_final" c:identifier="gxml_xsd_element_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="fixed" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_fixed" c:identifier="gxml_xsd_element_get_fixed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_fixed" c:identifier="gxml_xsd_element_set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="form" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_form" c:identifier="gxml_xsd_element_get_form">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_form" c:identifier="gxml_xsd_element_set_form">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="max-occurs" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_max_occurs" c:identifier="gxml_xsd_element_get_max_occurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_max_occurs" c:identifier="gxml_xsd_element_set_max_occurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="min-occurs" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_min_occurs" c:identifier="gxml_xsd_element_get_min_occurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_min_occurs" c:identifier="gxml_xsd_element_set_min_occurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_xsd_element_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_name" c:identifier="gxml_xsd_element_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="nillable" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_nillable" c:identifier="gxml_xsd_element_get_nillable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_nillable" c:identifier="gxml_xsd_element_set_nillable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="ref" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_ref" c:identifier="gxml_xsd_element_get_ref">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_ref" c:identifier="gxml_xsd_element_set_ref">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="substitution-group" writable="1">
			<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
		</property>
		<method name="get_substitution_group" c:identifier="gxml_xsd_element_get_substitution_group">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_substitution_group" c:identifier="gxml_xsd_element_set_substitution_group">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</parameter>
			</parameters>
		</method>
		<property name="target-namespace" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target_namespace" c:identifier="gxml_xsd_element_get_target_namespace">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_target_namespace" c:identifier="gxml_xsd_element_set_target_namespace">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="object-type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_object_type" c:identifier="gxml_xsd_element_get_object_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_object_type" c:identifier="gxml_xsd_element_set_object_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="anotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_xsd_element_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_anotation" c:identifier="gxml_xsd_element_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<property name="simple-type" writable="1">
			<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
		</property>
		<method name="get_simple_type" c:identifier="gxml_xsd_element_get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_simple_type" c:identifier="gxml_xsd_element_set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdSimpleType" c:type="GXmlXsdSimpleType*"/>
				</parameter>
			</parameters>
		</method>
		<property name="complex-type" writable="1">
			<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
		</property>
		<method name="get_complex_type" c:identifier="gxml_xsd_element_get_complex_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_complex_type" c:identifier="gxml_xsd_element_set_complex_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdComplexType" c:type="GXmlXsdComplexType*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_element_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdElement" c:type="GXmlXsdElement*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdElementPrivate" c:type="GXmlXsdElementPrivate*"/>
		</field>
	</class>
	<record name="XsdElementClass" c:type="GXmlXsdElementClass" glib:is-gtype-struct-for="XsdElement">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdElementPrivate" c:type="GXmlXsdElementPrivate" disguised="1"/>
	<class name="XsdAnnotation" c:type="GXmlXsdAnnotation" c:symbol-prefix="xsd_annotation" glib:type-name="GXmlXsdAnnotation" glib:get-type="gxml_xsd_annotation_get_type" glib:type-struct="XsdAnnotationClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_annotation_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdAnnotationPrivate" c:type="GXmlXsdAnnotationPrivate*"/>
		</field>
	</class>
	<record name="XsdAnnotationClass" c:type="GXmlXsdAnnotationClass" glib:is-gtype-struct-for="XsdAnnotation">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdAnnotationPrivate" c:type="GXmlXsdAnnotationPrivate" disguised="1"/>
	<class name="XsdBaseType" c:type="GXmlXsdBaseType" c:symbol-prefix="xsd_base_type" glib:type-name="GXmlXsdBaseType" glib:get-type="gxml_xsd_base_type_get_type" glib:type-struct="XsdBaseTypeClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="anotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_xsd_base_type_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseType" c:type="GXmlXsdBaseType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_anotation" c:identifier="gxml_xsd_base_type_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseType" c:type="GXmlXsdBaseType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_base_type_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdBaseType" c:type="GXmlXsdBaseType*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdBaseTypePrivate" c:type="GXmlXsdBaseTypePrivate*"/>
		</field>
	</class>
	<record name="XsdBaseTypeClass" c:type="GXmlXsdBaseTypeClass" glib:is-gtype-struct-for="XsdBaseType">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdBaseTypePrivate" c:type="GXmlXsdBaseTypePrivate" disguised="1"/>
	<class name="XsdBaseContent" c:type="GXmlXsdBaseContent" c:symbol-prefix="xsd_base_content" glib:type-name="GXmlXsdBaseContent" glib:get-type="gxml_xsd_base_content_get_type" glib:type-struct="XsdBaseContentClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="anotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_xsd_base_content_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_anotation" c:identifier="gxml_xsd_base_content_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_base_content_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdBaseContentPrivate" c:type="GXmlXsdBaseContentPrivate*"/>
		</field>
	</class>
	<record name="XsdBaseContentClass" c:type="GXmlXsdBaseContentClass" glib:is-gtype-struct-for="XsdBaseContent">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdBaseContentPrivate" c:type="GXmlXsdBaseContentPrivate" disguised="1"/>
	<class name="XsdSimpleContent" c:type="GXmlXsdSimpleContent" c:symbol-prefix="xsd_simple_content" glib:type-name="GXmlXsdSimpleContent" glib:get-type="gxml_xsd_simple_content_get_type" glib:type-struct="XsdSimpleContentClass" parent="GXml.XsdBaseContent">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_simple_content_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdSimpleContent" c:type="GXmlXsdSimpleContent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdSimpleContentPrivate" c:type="GXmlXsdSimpleContentPrivate*"/>
		</field>
	</class>
	<record name="XsdSimpleContentClass" c:type="GXmlXsdSimpleContentClass" glib:is-gtype-struct-for="XsdSimpleContent">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseContentClass" c:type="GXmlXsdBaseContentClass"/>
		</field>
	</record>
	<record name="XsdSimpleContentPrivate" c:type="GXmlXsdSimpleContentPrivate" disguised="1"/>
	<class name="XsdComplexContent" c:type="GXmlXsdComplexContent" c:symbol-prefix="xsd_complex_content" glib:type-name="GXmlXsdComplexContent" glib:get-type="gxml_xsd_complex_content_get_type" glib:type-struct="XsdComplexContentClass" parent="GXml.XsdBaseContent">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_complex_content_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdComplexContent" c:type="GXmlXsdComplexContent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdComplexContentPrivate" c:type="GXmlXsdComplexContentPrivate*"/>
		</field>
	</class>
	<record name="XsdComplexContentClass" c:type="GXmlXsdComplexContentClass" glib:is-gtype-struct-for="XsdComplexContent">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseContentClass" c:type="GXmlXsdBaseContentClass"/>
		</field>
	</record>
	<record name="XsdComplexContentPrivate" c:type="GXmlXsdComplexContentPrivate" disguised="1"/>
	<class name="XsdOpenContent" c:type="GXmlXsdOpenContent" c:symbol-prefix="xsd_open_content" glib:type-name="GXmlXsdOpenContent" glib:get-type="gxml_xsd_open_content_get_type" glib:type-struct="XsdOpenContentClass" parent="GXml.XsdBaseContent">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseContent" c:type="GXmlXsdBaseContent"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_open_content_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdOpenContent" c:type="GXmlXsdOpenContent*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdOpenContentPrivate" c:type="GXmlXsdOpenContentPrivate*"/>
		</field>
	</class>
	<record name="XsdOpenContentClass" c:type="GXmlXsdOpenContentClass" glib:is-gtype-struct-for="XsdOpenContent">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseContentClass" c:type="GXmlXsdBaseContentClass"/>
		</field>
	</record>
	<record name="XsdOpenContentPrivate" c:type="GXmlXsdOpenContentPrivate" disguised="1"/>
	<class name="XsdBaseAttribute" c:type="GXmlXsdBaseAttribute" c:symbol-prefix="xsd_base_attribute" glib:type-name="GXmlXsdBaseAttribute" glib:get-type="gxml_xsd_base_attribute_get_type" glib:type-struct="XsdBaseAttributeClass" parent="GXml.Element">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.Element" c:type="GXmlElement"/>
		</field>
		<property name="anotation" writable="1">
			<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_xsd_base_attribute_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseAttribute" c:type="GXmlXsdBaseAttribute*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_anotation" c:identifier="gxml_xsd_base_attribute_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdBaseAttribute" c:type="GXmlXsdBaseAttribute*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.XsdAnnotation" c:type="GXmlXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_base_attribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdBaseAttribute" c:type="GXmlXsdBaseAttribute*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdBaseAttributePrivate" c:type="GXmlXsdBaseAttributePrivate*"/>
		</field>
	</class>
	<record name="XsdBaseAttributeClass" c:type="GXmlXsdBaseAttributeClass" glib:is-gtype-struct-for="XsdBaseAttribute">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ElementClass" c:type="GXmlElementClass"/>
		</field>
	</record>
	<record name="XsdBaseAttributePrivate" c:type="GXmlXsdBaseAttributePrivate" disguised="1"/>
	<class name="XsdAttribute" c:type="GXmlXsdAttribute" c:symbol-prefix="xsd_attribute" glib:type-name="GXmlXsdAttribute" glib:get-type="gxml_xsd_attribute_get_type" glib:type-struct="XsdAttributeClass" parent="GXml.XsdBaseAttribute">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseAttribute" c:type="GXmlXsdBaseAttribute"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_attribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdAttribute" c:type="GXmlXsdAttribute*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdAttributePrivate" c:type="GXmlXsdAttributePrivate*"/>
		</field>
	</class>
	<record name="XsdAttributeClass" c:type="GXmlXsdAttributeClass" glib:is-gtype-struct-for="XsdAttribute">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseAttributeClass" c:type="GXmlXsdBaseAttributeClass"/>
		</field>
	</record>
	<record name="XsdAttributePrivate" c:type="GXmlXsdAttributePrivate" disguised="1"/>
	<class name="XsdAttributeGroup" c:type="GXmlXsdAttributeGroup" c:symbol-prefix="xsd_attribute_group" glib:type-name="GXmlXsdAttributeGroup" glib:get-type="gxml_xsd_attribute_group_get_type" glib:type-struct="XsdAttributeGroupClass" parent="GXml.XsdBaseAttribute">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdBaseAttribute" c:type="GXmlXsdBaseAttribute"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_attribute_group_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdAttributeGroup" c:type="GXmlXsdAttributeGroup*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdAttributeGroupPrivate" c:type="GXmlXsdAttributeGroupPrivate*"/>
		</field>
	</class>
	<record name="XsdAttributeGroupClass" c:type="GXmlXsdAttributeGroupClass" glib:is-gtype-struct-for="XsdAttributeGroup">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdBaseAttributeClass" c:type="GXmlXsdBaseAttributeClass"/>
		</field>
	</record>
	<record name="XsdAttributeGroupPrivate" c:type="GXmlXsdAttributeGroupPrivate" disguised="1"/>
	<class name="XsdList" c:type="GXmlXsdList" c:symbol-prefix="xsd_list" glib:type-name="GXmlXsdList" glib:get-type="gxml_xsd_list_get_type" glib:type-struct="XsdListClass" parent="GXml.ArrayList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.ArrayList" c:type="GXmlArrayList"/>
		</field>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_xsd_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="remove" c:identifier="gxml_xsd_list_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="index_of" c:identifier="gxml_xsd_list_index_of">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_xsd_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdList" c:type="GXmlXsdList*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListPrivate" c:type="GXmlXsdListPrivate*"/>
		</field>
	</class>
	<record name="XsdListClass" c:type="GXmlXsdListClass" glib:is-gtype-struct-for="XsdList">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.ArrayListClass" c:type="GXmlArrayListClass"/>
		</field>
	</record>
	<record name="XsdListPrivate" c:type="GXmlXsdListPrivate" disguised="1"/>
	<class name="XsdListElements" c:type="GXmlXsdListElements" c:symbol-prefix="xsd_list_elements" glib:type-name="GXmlXsdListElements" glib:get-type="gxml_xsd_list_elements_get_type" glib:type-struct="XsdListElementsClass" parent="GXml.XsdList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_list_elements_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdListElements" c:type="GXmlXsdListElements*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListElementsPrivate" c:type="GXmlXsdListElementsPrivate*"/>
		</field>
	</class>
	<record name="XsdListElementsClass" c:type="GXmlXsdListElementsClass" glib:is-gtype-struct-for="XsdListElements">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdListClass" c:type="GXmlXsdListClass"/>
		</field>
	</record>
	<record name="XsdListElementsPrivate" c:type="GXmlXsdListElementsPrivate" disguised="1"/>
	<class name="XsdListSimpleTypes" c:type="GXmlXsdListSimpleTypes" c:symbol-prefix="xsd_list_simple_types" glib:type-name="GXmlXsdListSimpleTypes" glib:get-type="gxml_xsd_list_simple_types_get_type" glib:type-struct="XsdListSimpleTypesClass" parent="GXml.XsdList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_list_simple_types_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdListSimpleTypes" c:type="GXmlXsdListSimpleTypes*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListSimpleTypesPrivate" c:type="GXmlXsdListSimpleTypesPrivate*"/>
		</field>
	</class>
	<record name="XsdListSimpleTypesClass" c:type="GXmlXsdListSimpleTypesClass" glib:is-gtype-struct-for="XsdListSimpleTypes">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdListClass" c:type="GXmlXsdListClass"/>
		</field>
	</record>
	<record name="XsdListSimpleTypesPrivate" c:type="GXmlXsdListSimpleTypesPrivate" disguised="1"/>
	<class name="XsdListComplexTypes" c:type="GXmlXsdListComplexTypes" c:symbol-prefix="xsd_list_complex_types" glib:type-name="GXmlXsdListComplexTypes" glib:get-type="gxml_xsd_list_complex_types_get_type" glib:type-struct="XsdListComplexTypesClass" parent="GXml.XsdList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_list_complex_types_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdListComplexTypes" c:type="GXmlXsdListComplexTypes*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListComplexTypesPrivate" c:type="GXmlXsdListComplexTypesPrivate*"/>
		</field>
	</class>
	<record name="XsdListComplexTypesClass" c:type="GXmlXsdListComplexTypesClass" glib:is-gtype-struct-for="XsdListComplexTypes">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdListClass" c:type="GXmlXsdListClass"/>
		</field>
	</record>
	<record name="XsdListComplexTypesPrivate" c:type="GXmlXsdListComplexTypesPrivate" disguised="1"/>
	<class name="XsdListTypeRestrictionEnumerations" c:type="GXmlXsdListTypeRestrictionEnumerations" c:symbol-prefix="xsd_list_type_restriction_enumerations" glib:type-name="GXmlXsdListTypeRestrictionEnumerations" glib:get-type="gxml_xsd_list_type_restriction_enumerations_get_type" glib:type-struct="XsdListTypeRestrictionEnumerationsClass" parent="GXml.XsdList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_list_type_restriction_enumerations_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdListTypeRestrictionEnumerations" c:type="GXmlXsdListTypeRestrictionEnumerations*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListTypeRestrictionEnumerationsPrivate" c:type="GXmlXsdListTypeRestrictionEnumerationsPrivate*"/>
		</field>
	</class>
	<record name="XsdListTypeRestrictionEnumerationsClass" c:type="GXmlXsdListTypeRestrictionEnumerationsClass" glib:is-gtype-struct-for="XsdListTypeRestrictionEnumerations">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdListClass" c:type="GXmlXsdListClass"/>
		</field>
	</record>
	<record name="XsdListTypeRestrictionEnumerationsPrivate" c:type="GXmlXsdListTypeRestrictionEnumerationsPrivate" disguised="1"/>
	<class name="XsdListTypeRestrictionWhiteSpaces" c:type="GXmlXsdListTypeRestrictionWhiteSpaces" c:symbol-prefix="xsd_list_type_restriction_white_spaces" glib:type-name="GXmlXsdListTypeRestrictionWhiteSpaces" glib:get-type="gxml_xsd_list_type_restriction_white_spaces_get_type" glib:type-struct="XsdListTypeRestrictionWhiteSpacesClass" parent="GXml.XsdList">
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XsdList" c:type="GXmlXsdList"/>
		</field>
		<constructor name="new" c:identifier="gxml_xsd_list_type_restriction_white_spaces_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XsdListTypeRestrictionWhiteSpaces" c:type="GXmlXsdListTypeRestrictionWhiteSpaces*"/>
			</return-value>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XsdListTypeRestrictionWhiteSpacesPrivate" c:type="GXmlXsdListTypeRestrictionWhiteSpacesPrivate*"/>
		</field>
	</class>
	<record name="XsdListTypeRestrictionWhiteSpacesClass" c:type="GXmlXsdListTypeRestrictionWhiteSpacesClass" glib:is-gtype-struct-for="XsdListTypeRestrictionWhiteSpaces">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XsdListClass" c:type="GXmlXsdListClass"/>
		</field>
	</record>
	<record name="XsdListTypeRestrictionWhiteSpacesPrivate" c:type="GXmlXsdListTypeRestrictionWhiteSpacesPrivate" disguised="1"/>
	<class name="XText" c:type="GXmlXText" c:symbol-prefix="xtext" glib:type-name="GXmlXText" glib:get-type="gxml_xtext_get_type" glib:type-struct="XTextClass" parent="GXml.XCharacterData">
		<implements name="GXml.DomText"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GXml.XCharacterData" c:type="GXmlXCharacterData"/>
		</field>
		<constructor name="new" c:identifier="gxml_xtext_new">
			<return-value transfer-ownership="full">
				<type name="GXml.XText" c:type="GXmlXText*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.XDocument" c:type="GXmlXDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
		<field name="priv" readable="0" private="1">
			<type name="XTextPrivate" c:type="GXmlXTextPrivate*"/>
		</field>
	</class>
	<record name="XTextClass" c:type="GXmlXTextClass" glib:is-gtype-struct-for="XText">
		<field name="parent_class" readable="0" private="1">
			<type name="GXml.XCharacterDataClass" c:type="GXmlXCharacterDataClass"/>
		</field>
	</record>
	<record name="XTextPrivate" c:type="GXmlXTextPrivate" disguised="1"/>
	<interface name="Collection" c:type="GXmlCollection" c:symbol-prefix="collection" glib:type-name="GXmlCollection" glib:get-type="gxml_collection_get_type" glib:type-struct="CollectionIface">
		<prerequisite name="GObject.Object"/>
		<property name="nodes-index">
			<type name="GLib.Queue" c:type="GQueue*">
				<type name="gint" c:type="gint"/>
			</type>
		</property>
		<method name="get_nodes_index" c:identifier="gxml_collection_get_nodes_index">
			<return-value transfer-ownership="none">
				<type name="GLib.Queue" c:type="GQueue*">
					<type name="gint" c:type="gint"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_nodes_index" invoker="get_nodes_index">
			<return-value transfer-ownership="none">
				<type name="GLib.Queue" c:type="GQueue*">
					<type name="gint" c:type="gint"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="element" writable="1" construct="1">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_element" c:identifier="gxml_collection_get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_element" invoker="get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_element" c:identifier="gxml_collection_set_element">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_element" invoker="set_element">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="items-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_items_name" c:identifier="gxml_collection_get_items_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_items_name" invoker="get_items_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="items-type" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_items_type" c:identifier="gxml_collection_get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_items_type" invoker="get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_items_type" c:identifier="gxml_collection_set_items_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_items_type" invoker="set_items_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="search" c:identifier="gxml_collection_search" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="search" invoker="search" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_item" c:identifier="gxml_collection_get_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_item" invoker="get_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append" c:identifier="gxml_collection_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append" invoker="append" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_length" c:identifier="gxml_collection_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="initialize" c:identifier="gxml_collection_initialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="t" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="initialize" invoker="initialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="t" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_item" c:identifier="gxml_collection_create_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_item" invoker="create_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="validate_append" c:identifier="gxml_collection_validate_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="validate_append" invoker="validate_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clear" c:identifier="gxml_collection_clear" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="clear" invoker="clear" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Collection" c:type="GXmlCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="CollectionIface" c:type="GXmlCollectionIface" glib:is-gtype-struct-for="Collection">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="search">
			<callback name="search" c:type="search" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_item">
			<callback name="get_item" c:type="get_item" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append">
			<callback name="append" c:type="append" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="initialize">
			<callback name="initialize" c:type="initialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="t" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_item">
			<callback name="create_item" c:type="create_item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="validate_append">
			<callback name="validate_append" c:type="validate_append" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clear">
			<callback name="clear" c:type="clear" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_nodes_index">
			<callback name="get_nodes_index" c:type="get_nodes_index">
				<return-value transfer-ownership="none">
					<type name="GLib.Queue" c:type="GQueue*">
						<type name="gint" c:type="gint"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_element">
			<callback name="get_element" c:type="get_element">
				<return-value transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_element">
			<callback name="set_element" c:type="set_element">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_name">
			<callback name="get_items_name" c:type="get_items_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_type">
			<callback name="get_items_type" c:type="get_items_type">
				<return-value transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_items_type">
			<callback name="set_items_type" c:type="set_items_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Collection" c:type="GXmlCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="List" c:type="GXmlList" c:symbol-prefix="list" glib:type-name="GXmlList" glib:get-type="gxml_list_get_type" glib:type-struct="ListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="Gee.Iterable"/>
	</interface>
	<record name="ListIface" c:type="GXmlListIface" glib:is-gtype-struct-for="List">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="MappeableElement" c:type="GXmlMappeableElement" c:symbol-prefix="mappeable_element" glib:type-name="GXmlMappeableElement" glib:get-type="gxml_mappeable_element_get_type" glib:type-struct="MappeableElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<method name="get_map_key" c:identifier="gxml_mappeable_element_get_map_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElement" c:type="GXmlMappeableElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_key" invoker="get_map_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElement" c:type="GXmlMappeableElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="MappeableElementIface" c:type="GXmlMappeableElementIface" glib:is-gtype-struct-for="MappeableElement">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_key">
			<callback name="get_map_key" c:type="get_map_key">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElement" c:type="GXmlMappeableElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Map" c:type="GXmlMap" c:symbol-prefix="map" glib:type-name="GXmlMap" glib:get-type="gxml_map_get_type" glib:type-struct="MapIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="Gee.Iterable"/>
		<property name="attribute-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_key" c:identifier="gxml_map_get_attribute_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_key" invoker="get_attribute_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_key" c:identifier="gxml_map_set_attribute_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_key" invoker="set_attribute_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_map_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_key" c:identifier="gxml_map_has_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_key" invoker="has_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="keys-set">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_keys_set" c:identifier="gxml_map_get_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_keys_set" invoker="get_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Map" c:type="GXmlMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="MapIface" c:type="GXmlMapIface" glib:is-gtype-struct-for="Map">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Map" c:type="GXmlMap*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_key">
			<callback name="has_key" c:type="has_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Map" c:type="GXmlMap*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_key">
			<callback name="get_attribute_key" c:type="get_attribute_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Map" c:type="GXmlMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_key">
			<callback name="set_attribute_key" c:type="set_attribute_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Map" c:type="GXmlMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_keys_set">
			<callback name="get_keys_set" c:type="get_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Map" c:type="GXmlMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="MappeableElementPairKey" c:type="GXmlMappeableElementPairKey" c:symbol-prefix="mappeable_element_pair_key" glib:type-name="GXmlMappeableElementPairKey" glib:get-type="gxml_mappeable_element_pair_key_get_type" glib:type-struct="MappeableElementPairKeyIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<method name="get_map_primary_key" c:identifier="gxml_mappeable_element_pair_key_get_map_primary_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_primary_key" invoker="get_map_primary_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_map_secondary_key" c:identifier="gxml_mappeable_element_pair_key_get_map_secondary_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_secondary_key" invoker="get_map_secondary_key">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="MappeableElementPairKeyIface" c:type="GXmlMappeableElementPairKeyIface" glib:is-gtype-struct-for="MappeableElementPairKey">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_primary_key">
			<callback name="get_map_primary_key" c:type="get_map_primary_key">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_map_secondary_key">
			<callback name="get_map_secondary_key" c:type="get_map_secondary_key">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElementPairKey" c:type="GXmlMappeableElementPairKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="PairedMap" c:type="GXmlPairedMap" c:symbol-prefix="paired_map" glib:type-name="GXmlPairedMap" glib:get-type="gxml_paired_map_get_type" glib:type-struct="PairedMapIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="Gee.Iterable"/>
		<property name="attribute-primary-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_primary_key" c:identifier="gxml_paired_map_get_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_primary_key" invoker="get_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_primary_key" c:identifier="gxml_paired_map_set_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_primary_key" invoker="set_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attribute-secondary-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_secondary_key" c:identifier="gxml_paired_map_get_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_secondary_key" invoker="get_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_secondary_key" c:identifier="gxml_paired_map_set_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_secondary_key" invoker="set_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="primary-keys-set">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_primary_keys_set" c:identifier="gxml_paired_map_get_primary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_primary_keys_set" invoker="get_primary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_paired_map_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_primary_key" c:identifier="gxml_paired_map_has_primary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_primary_key" invoker="has_primary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_secondary_key" c:identifier="gxml_paired_map_has_secondary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_secondary_key" invoker="has_secondary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="secondary_keys_set" c:identifier="gxml_paired_map_secondary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="secondary_keys_set" invoker="secondary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="PairedMapIface" c:type="GXmlPairedMapIface" glib:is-gtype-struct-for="PairedMap">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="primary_key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="secondary_key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_primary_key">
			<callback name="has_primary_key" c:type="has_primary_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_secondary_key">
			<callback name="has_secondary_key" c:type="has_secondary_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="secondary_keys_set">
			<callback name="secondary_keys_set" c:type="secondary_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_primary_key">
			<callback name="get_attribute_primary_key" c:type="get_attribute_primary_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_primary_key">
			<callback name="set_attribute_primary_key" c:type="set_attribute_primary_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_secondary_key">
			<callback name="get_attribute_secondary_key" c:type="get_attribute_secondary_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_secondary_key">
			<callback name="set_attribute_secondary_key" c:type="set_attribute_secondary_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_primary_keys_set">
			<callback name="get_primary_keys_set" c:type="get_primary_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.PairedMap" c:type="GXmlPairedMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey" c:symbol-prefix="mappeable_element_three_key" glib:type-name="GXmlMappeableElementThreeKey" glib:get-type="gxml_mappeable_element_three_key_get_type" glib:type-struct="MappeableElementThreeKeyIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<method name="get_map_pkey" c:identifier="gxml_mappeable_element_three_key_get_map_pkey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_pkey" invoker="get_map_pkey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_map_skey" c:identifier="gxml_mappeable_element_three_key_get_map_skey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_skey" invoker="get_map_skey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_map_tkey" c:identifier="gxml_mappeable_element_three_key_get_map_tkey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_map_tkey" invoker="get_map_tkey">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="MappeableElementThreeKeyIface" c:type="GXmlMappeableElementThreeKeyIface" glib:is-gtype-struct-for="MappeableElementThreeKey">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_pkey">
			<callback name="get_map_pkey" c:type="get_map_pkey">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_map_skey">
			<callback name="get_map_skey" c:type="get_map_skey">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_map_tkey">
			<callback name="get_map_tkey" c:type="get_map_tkey">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.MappeableElementThreeKey" c:type="GXmlMappeableElementThreeKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ThreeMap" c:type="GXmlThreeMap" c:symbol-prefix="three_map" glib:type-name="GXmlThreeMap" glib:get-type="gxml_three_map_get_type" glib:type-struct="ThreeMapIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="Gee.Iterable"/>
		<property name="attribute-primary-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_primary_key" c:identifier="gxml_three_map_get_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_primary_key" invoker="get_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_primary_key" c:identifier="gxml_three_map_set_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_primary_key" invoker="set_attribute_primary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attribute-secondary-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_secondary_key" c:identifier="gxml_three_map_get_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_secondary_key" invoker="get_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_secondary_key" c:identifier="gxml_three_map_set_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_secondary_key" invoker="set_attribute_secondary_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attribute-third-key" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_third_key" c:identifier="gxml_three_map_get_attribute_third_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_third_key" invoker="get_attribute_third_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_third_key" c:identifier="gxml_three_map_set_attribute_third_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_third_key" invoker="set_attribute_third_key">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="primary-keys-set">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_primary_keys_set" c:identifier="gxml_three_map_get_primary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_primary_keys_set" invoker="get_primary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_three_map_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="third_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="primary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="third_key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_primary_key" c:identifier="gxml_three_map_has_primary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_primary_key" invoker="has_primary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_secondary_key" c:identifier="gxml_three_map_has_secondary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_secondary_key" invoker="has_secondary_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_third_key" c:identifier="gxml_three_map_has_third_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="skey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_third_key" invoker="has_third_key">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="skey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="secondary_keys_set" c:identifier="gxml_three_map_secondary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="secondary_keys_set" invoker="secondary_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="third_keys_set" c:identifier="gxml_three_map_third_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="skey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="third_keys_set" invoker="third_keys_set">
			<return-value transfer-ownership="full">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
				</instance-parameter>
				<parameter name="pkey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="skey" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ThreeMapIface" c:type="GXmlThreeMapIface" glib:is-gtype-struct-for="ThreeMap">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="primary_key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="secondary_key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="third_key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_primary_key">
			<callback name="has_primary_key" c:type="has_primary_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_secondary_key">
			<callback name="has_secondary_key" c:type="has_secondary_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_third_key">
			<callback name="has_third_key" c:type="has_third_key">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="skey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="secondary_keys_set">
			<callback name="secondary_keys_set" c:type="secondary_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="third_keys_set">
			<callback name="third_keys_set" c:type="third_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="pkey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="skey" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_primary_key">
			<callback name="get_attribute_primary_key" c:type="get_attribute_primary_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_primary_key">
			<callback name="set_attribute_primary_key" c:type="set_attribute_primary_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_secondary_key">
			<callback name="get_attribute_secondary_key" c:type="get_attribute_secondary_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_secondary_key">
			<callback name="set_attribute_secondary_key" c:type="set_attribute_secondary_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_third_key">
			<callback name="get_attribute_third_key" c:type="get_attribute_third_key">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_third_key">
			<callback name="set_attribute_third_key" c:type="set_attribute_third_key">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_primary_keys_set">
			<callback name="get_primary_keys_set" c:type="get_primary_keys_set">
				<return-value transfer-ownership="full">
					<type name="Gee.Set" c:type="GeeSet*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ThreeMap" c:type="GXmlThreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CollectionParent" c:type="GXmlCollectionParent" c:symbol-prefix="collection_parent" glib:type-name="GXmlCollectionParent" glib:get-type="gxml_collection_parent_get_type" glib:type-struct="CollectionParentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<method name="get_types" c:identifier="gxml_collection_parent_get_types">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GType" c:type="GType"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CollectionParent" c:type="GXmlCollectionParent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_types" invoker="get_types">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GType" c:type="GType"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.CollectionParent" c:type="GXmlCollectionParent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<function name="add_supported_type" c:identifier="gxml_collection_parent_add_supported_type">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="types" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GType" c:type="GType"/>
					</type>
				</parameter>
				<parameter name="parent_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</function>
		<function name="add_supported_types" c:identifier="gxml_collection_parent_add_supported_types">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="table" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GType" c:type="GType"/>
					</type>
				</parameter>
				<parameter name="parent_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="types" transfer-ownership="none">
					<array length="3" c:type="GType*">
						<type name="GType" c:type="GType"/>
					</array>
				</parameter>
				<parameter name="types_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
	</interface>
	<record name="CollectionParentIface" c:type="GXmlCollectionParentIface" glib:is-gtype-struct-for="CollectionParent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_types">
			<callback name="get_types" c:type="get_types">
				<return-value transfer-ownership="full">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GType" c:type="GType"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.CollectionParent" c:type="GXmlCollectionParent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomAttr" c:type="GXmlDomAttr" c:symbol-prefix="dom_attr" glib:type-name="GXmlDomAttr" glib:get-type="gxml_dom_attr_get_type" glib:type-struct="DomAttrIface">
		<prerequisite name="GObject.Object"/>
		<property name="namespace-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_uri" c:identifier="gxml_dom_attr_get_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_namespace_uri" invoker="get_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_dom_attr_get_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="local-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_dom_attr_get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_local_name" invoker="get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_dom_attr_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_dom_attr_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_dom_attr_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_specified" c:identifier="gxml_dom_attr_get_specified">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_specified" invoker="get_specified">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomAttrIface" c:type="GXmlDomAttrIface" glib:is-gtype-struct-for="DomAttr">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_namespace_uri">
			<callback name="get_namespace_uri" c:type="get_namespace_uri">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_local_name">
			<callback name="get_local_name" c:type="get_local_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_specified">
			<callback name="get_specified" c:type="get_specified">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomAttr" c:type="GXmlDomAttr*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomCharacterData" c:type="GXmlDomCharacterData" c:symbol-prefix="dom_character_data" glib:type-name="GXmlDomCharacterData" glib:get-type="gxml_dom_character_data_get_type" glib:type-struct="DomCharacterDataIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomNonDocumentTypeChildNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<property name="data" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_dom_character_data_get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_data" invoker="get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_data" c:identifier="gxml_dom_character_data_set_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_data" invoker="set_data">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_length" c:identifier="gxml_dom_character_data_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="substring_data" c:identifier="gxml_dom_character_data_substring_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="substring_data" invoker="substring_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_data" c:identifier="gxml_dom_character_data_append_data">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_data" invoker="append_data">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_data" c:identifier="gxml_dom_character_data_insert_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_data" invoker="insert_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="delete_data" c:identifier="gxml_dom_character_data_delete_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="delete_data" invoker="delete_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_data" c:identifier="gxml_dom_character_data_replace_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_data" invoker="replace_data" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomCharacterDataIface" c:type="GXmlDomCharacterDataIface" glib:is-gtype-struct-for="DomCharacterData">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="substring_data">
			<callback name="substring_data" c:type="substring_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append_data">
			<callback name="append_data" c:type="append_data">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_data">
			<callback name="insert_data" c:type="insert_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete_data">
			<callback name="delete_data" c:type="delete_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_data">
			<callback name="replace_data" c:type="replace_data" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="count" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_data">
			<callback name="get_data" c:type="get_data">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_data">
			<callback name="set_data" c:type="set_data">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCharacterData" c:type="GXmlDomCharacterData*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomText" c:type="GXmlDomText" c:symbol-prefix="dom_text" glib:type-name="GXmlDomText" glib:get-type="gxml_dom_text_get_type" glib:type-struct="DomTextIface">
		<prerequisite name="GXml.DomCharacterData"/>
		<method name="split_text" c:identifier="gxml_dom_text_split_text" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="split_text" invoker="split_text" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</instance-parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_whole_text" c:identifier="gxml_dom_text_get_whole_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_whole_text" invoker="get_whole_text">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomTextIface" c:type="GXmlDomTextIface" glib:is-gtype-struct-for="DomText">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="split_text">
			<callback name="split_text" c:type="split_text" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomText" c:type="GXmlDomText*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_whole_text">
			<callback name="get_whole_text" c:type="get_whole_text">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomText" c:type="GXmlDomText*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomProcessingInstruction" c:type="GXmlDomProcessingInstruction" c:symbol-prefix="dom_processing_instruction" glib:type-name="GXmlDomProcessingInstruction" glib:get-type="gxml_dom_processing_instruction_get_type" glib:type-struct="DomProcessingInstructionIface">
		<prerequisite name="GXml.DomCharacterData"/>
		<property name="target">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target" c:identifier="gxml_dom_processing_instruction_get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomProcessingInstructionIface" c:type="GXmlDomProcessingInstructionIface" glib:is-gtype-struct-for="DomProcessingInstruction">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomComment" c:type="GXmlDomComment" c:symbol-prefix="dom_comment" glib:type-name="GXmlDomComment" glib:get-type="gxml_dom_comment_get_type" glib:type-struct="DomCommentIface">
		<prerequisite name="GXml.DomCharacterData"/>
	</interface>
	<record name="DomCommentIface" c:type="GXmlDomCommentIface" glib:is-gtype-struct-for="DomComment">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomNonElementParentNode" c:type="GXmlDomNonElementParentNode" c:symbol-prefix="dom_non_element_parent_node" glib:type-name="GXmlDomNonElementParentNode" glib:get-type="gxml_dom_non_element_parent_node_get_type" glib:type-struct="DomNonElementParentNodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_element_by_id" c:identifier="gxml_dom_non_element_parent_node_get_element_by_id" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonElementParentNode" c:type="GXmlDomNonElementParentNode*"/>
				</instance-parameter>
				<parameter name="element_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_element_by_id" invoker="get_element_by_id" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonElementParentNode" c:type="GXmlDomNonElementParentNode*"/>
				</instance-parameter>
				<parameter name="element_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNonElementParentNodeIface" c:type="GXmlDomNonElementParentNodeIface" glib:is-gtype-struct-for="DomNonElementParentNode">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_element_by_id">
			<callback name="get_element_by_id" c:type="get_element_by_id" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonElementParentNode" c:type="GXmlDomNonElementParentNode*"/>
					</parameter>
					<parameter name="element_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomParentNode" c:type="GXmlDomParentNode" c:symbol-prefix="dom_parent_node" glib:type-name="GXmlDomParentNode" glib:get-type="gxml_dom_parent_node_get_type" glib:type-struct="DomParentNodeIface">
		<prerequisite name="GObject.Object"/>
		<property name="children">
			<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
		</property>
		<method name="get_children" c:identifier="gxml_dom_parent_node_get_children">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="first-element-child">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_first_element_child" c:identifier="gxml_dom_parent_node_get_first_element_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_first_element_child" invoker="get_first_element_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="last-element-child">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_last_element_child" c:identifier="gxml_dom_parent_node_get_last_element_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_last_element_child" invoker="get_last_element_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="child-element-count">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_child_element_count" c:identifier="gxml_dom_parent_node_get_child_element_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_child_element_count" invoker="get_child_element_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="query_selector" c:identifier="gxml_dom_parent_node_query_selector" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query_selector" invoker="query_selector" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="query_selector_all" c:identifier="gxml_dom_parent_node_query_selector_all" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="query_selector_all" invoker="query_selector_all" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_property_value" c:identifier="gxml_dom_parent_node_get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_property_value" invoker="get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
				</instance-parameter>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomParentNodeIface" c:type="GXmlDomParentNodeIface" glib:is-gtype-struct-for="DomParentNode">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="query_selector">
			<callback name="query_selector" c:type="query_selector" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="selectors" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="query_selector_all">
			<callback name="query_selector_all" c:type="query_selector_all" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="selectors" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_property_value">
			<callback name="get_elements_by_property_value" c:type="get_elements_by_property_value">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
					<parameter name="property" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_children">
			<callback name="get_children" c:type="get_children">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_first_element_child">
			<callback name="get_first_element_child" c:type="get_first_element_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_last_element_child">
			<callback name="get_last_element_child" c:type="get_last_element_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child_element_count">
			<callback name="get_child_element_count" c:type="get_child_element_count">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomParentNode" c:type="GXmlDomParentNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode" c:symbol-prefix="dom_non_document_type_child_node" glib:type-name="GXmlDomNonDocumentTypeChildNode" glib:get-type="gxml_dom_non_document_type_child_node_get_type" glib:type-struct="DomNonDocumentTypeChildNodeIface">
		<prerequisite name="GObject.Object"/>
		<property name="previous-element-sibling">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_previous_element_sibling" c:identifier="gxml_dom_non_document_type_child_node_get_previous_element_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_previous_element_sibling" invoker="get_previous_element_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="next-element-sibling">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_next_element_sibling" c:identifier="gxml_dom_non_document_type_child_node_get_next_element_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_next_element_sibling" invoker="get_next_element_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNonDocumentTypeChildNodeIface" c:type="GXmlDomNonDocumentTypeChildNodeIface" glib:is-gtype-struct-for="DomNonDocumentTypeChildNode">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_previous_element_sibling">
			<callback name="get_previous_element_sibling" c:type="get_previous_element_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_element_sibling">
			<callback name="get_next_element_sibling" c:type="get_next_element_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNonDocumentTypeChildNode" c:type="GXmlDomNonDocumentTypeChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomChildNode" c:type="GXmlDomChildNode" c:symbol-prefix="dom_child_node" glib:type-name="GXmlDomChildNode" glib:get-type="gxml_dom_child_node_get_type" glib:type-struct="DomChildNodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="remove" c:identifier="gxml_dom_child_node_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomChildNode" c:type="GXmlDomChildNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomChildNode" c:type="GXmlDomChildNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomChildNodeIface" c:type="GXmlDomChildNodeIface" glib:is-gtype-struct-for="DomChildNode">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomChildNode" c:type="GXmlDomChildNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNodeList" c:type="GXmlDomNodeList" c:symbol-prefix="dom_node_list" glib:type-name="GXmlDomNodeList" glib:get-type="gxml_dom_node_list_get_type" glib:type-struct="DomNodeListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<method name="item" c:identifier="gxml_dom_node_list_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_node_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNodeListIface" c:type="GXmlDomNodeListIface" glib:is-gtype-struct-for="DomNodeList">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomHTMLCollection" c:type="GXmlDomHTMLCollection" c:symbol-prefix="dom_html_collection" glib:type-name="GXmlDomHTMLCollection" glib:get-type="gxml_dom_html_collection_get_type" glib:type-struct="DomHTMLCollectionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<method name="get_element" c:identifier="gxml_dom_html_collection_get_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_element" invoker="get_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_array" c:identifier="gxml_dom_html_collection_to_array">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GXmlDomElement**">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="to_array" invoker="to_array">
			<return-value transfer-ownership="full">
				<array length="0" c:type="GXmlDomElement**">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_length" c:identifier="gxml_dom_html_collection_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_dom_html_collection_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="named_item" c:identifier="gxml_dom_html_collection_named_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="named_item" invoker="named_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomHTMLCollectionIface" c:type="GXmlDomHTMLCollectionIface" glib:is-gtype-struct-for="DomHTMLCollection">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_element">
			<callback name="get_element" c:type="get_element">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_array">
			<callback name="to_array" c:type="to_array">
				<return-value transfer-ownership="full">
					<array length="0" c:type="GXmlDomElement**">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="named_item">
			<callback name="named_item" c:type="named_item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNodeIterator" c:type="GXmlDomNodeIterator" c:symbol-prefix="dom_node_iterator" glib:type-name="GXmlDomNodeIterator" glib:get-type="gxml_dom_node_iterator_get_type" glib:type-struct="DomNodeIteratorIface">
		<prerequisite name="GObject.Object"/>
		<property name="root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_dom_node_iterator_get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="reference-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_reference_node" c:identifier="gxml_dom_node_iterator_get_reference_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_reference_node" invoker="get_reference_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="pointer-before-reference-node">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_pointer_before_reference_node" c:identifier="gxml_dom_node_iterator_get_pointer_before_reference_node">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_pointer_before_reference_node" invoker="get_pointer_before_reference_node">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="what-to-show">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_what_to_show" c:identifier="gxml_dom_node_iterator_get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_what_to_show" invoker="get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="accept-node">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeFilterFilter" c:type="GXmlDomNodeFilterFilter"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<method name="next_node" c:identifier="gxml_dom_node_iterator_next_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="next_node" invoker="next_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="previous_node" c:identifier="gxml_dom_node_iterator_previous_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="previous_node" invoker="previous_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="detach" c:identifier="gxml_dom_node_iterator_detach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="detach" invoker="detach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNodeIteratorIface" c:type="GXmlDomNodeIteratorIface" glib:is-gtype-struct-for="DomNodeIterator">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="next_node">
			<callback name="next_node" c:type="next_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previous_node">
			<callback name="previous_node" c:type="previous_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detach">
			<callback name="detach" c:type="detach">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_reference_node">
			<callback name="get_reference_node" c:type="get_reference_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_pointer_before_reference_node">
			<callback name="get_pointer_before_reference_node" c:type="get_pointer_before_reference_node">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_what_to_show">
			<callback name="get_what_to_show" c:type="get_what_to_show">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomTreeWalker" c:type="GXmlDomTreeWalker" c:symbol-prefix="dom_tree_walker" glib:type-name="GXmlDomTreeWalker" glib:get-type="gxml_dom_tree_walker_get_type" glib:type-struct="DomTreeWalkerIface">
		<prerequisite name="GObject.Object"/>
		<property name="root">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_dom_tree_walker_get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="what-to-show">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_what_to_show" c:identifier="gxml_dom_tree_walker_get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_what_to_show" invoker="get_what_to_show">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="current-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_current_node" c:identifier="gxml_dom_tree_walker_get_current_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_current_node" invoker="get_current_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="accept-node">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeFilterFilter" c:type="GXmlDomNodeFilterFilter"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<method name="parent_node" c:identifier="gxml_dom_tree_walker_parent_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="parent_node" invoker="parent_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="first_child" c:identifier="gxml_dom_tree_walker_first_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="first_child" invoker="first_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="last_child" c:identifier="gxml_dom_tree_walker_last_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="last_child" invoker="last_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="previous_sibling" c:identifier="gxml_dom_tree_walker_previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="previous_sibling" invoker="previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="next_sibling" c:identifier="gxml_dom_tree_walker_next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="next_sibling" invoker="next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="previous_node" c:identifier="gxml_dom_tree_walker_previous_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="previous_node" invoker="previous_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="next_node" c:identifier="gxml_dom_tree_walker_next_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="next_node" invoker="next_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomTreeWalkerIface" c:type="GXmlDomTreeWalkerIface" glib:is-gtype-struct-for="DomTreeWalker">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="parent_node">
			<callback name="parent_node" c:type="parent_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="first_child">
			<callback name="first_child" c:type="first_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="last_child">
			<callback name="last_child" c:type="last_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previous_sibling">
			<callback name="previous_sibling" c:type="previous_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="next_sibling">
			<callback name="next_sibling" c:type="next_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="previous_node">
			<callback name="previous_node" c:type="previous_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="next_node">
			<callback name="next_node" c:type="next_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_what_to_show">
			<callback name="get_what_to_show" c:type="get_what_to_show">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_current_node">
			<callback name="get_current_node" c:type="get_current_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNamedNodeMap" c:type="GXmlDomNamedNodeMap" c:symbol-prefix="dom_named_node_map" glib:type-name="GXmlDomNamedNodeMap" glib:get-type="gxml_dom_named_node_map_get_type" glib:type-struct="DomNamedNodeMapIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Map"/>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_named_node_map_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_dom_named_node_map_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_named_item" c:identifier="gxml_dom_named_node_map_get_named_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_named_item" invoker="get_named_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_named_item" c:identifier="gxml_dom_named_node_map_set_named_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_named_item" invoker="set_named_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_named_item" c:identifier="gxml_dom_named_node_map_remove_named_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_named_item" invoker="remove_named_item" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_named_item_ns" c:identifier="gxml_dom_named_node_map_remove_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="localName" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_named_item_ns" invoker="remove_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="localName" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_named_item_ns" c:identifier="gxml_dom_named_node_map_get_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_named_item_ns" invoker="get_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="namespace_uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_named_item_ns" c:identifier="gxml_dom_named_node_map_set_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_named_item_ns" invoker="set_named_item_ns" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomNamedNodeMapIface" c:type="GXmlDomNamedNodeMapIface" glib:is-gtype-struct-for="DomNamedNodeMap">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_named_item">
			<callback name="get_named_item" c:type="get_named_item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_named_item">
			<callback name="set_named_item" c:type="set_named_item" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_named_item">
			<callback name="remove_named_item" c:type="remove_named_item" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_named_item_ns">
			<callback name="remove_named_item_ns" c:type="remove_named_item_ns" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="namespace_uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="localName" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_named_item_ns">
			<callback name="get_named_item_ns" c:type="get_named_item_ns" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="namespace_uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_named_item_ns">
			<callback name="set_named_item_ns" c:type="set_named_item_ns" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomTokenList" c:type="GXmlDomTokenList" c:symbol-prefix="dom_token_list" glib:type-name="GXmlDomTokenList" glib:get-type="gxml_dom_token_list_get_type" glib:type-struct="DomTokenListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.BidirList"/>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_dom_token_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_dom_token_list_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="contains" c:identifier="gxml_dom_token_list_contains" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="contains" invoker="contains" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add" c:identifier="gxml_dom_token_list_add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add" invoker="add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove" c:identifier="gxml_dom_token_list_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="tokens" transfer-ownership="none">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="tokens_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="toggle" c:identifier="gxml_dom_token_list_toggle" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="force" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="_auto_" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="toggle" invoker="toggle" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
				<parameter name="token" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="force" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="_auto_" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_dom_token_list_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomTokenListIface" c:type="GXmlDomTokenListIface" glib:is-gtype-struct-for="DomTokenList">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="contains">
			<callback name="contains" c:type="contains" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="token" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add">
			<callback name="add" c:type="add" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="tokens" transfer-ownership="none">
						<array length="2" c:type="gchar**">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="tokens_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="tokens" transfer-ownership="none">
						<array length="2" c:type="gchar**">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="tokens_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="toggle">
			<callback name="toggle" c:type="toggle" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
					<parameter name="token" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="force" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="_auto_" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomSettableTokenList" c:type="GXmlDomSettableTokenList" c:symbol-prefix="dom_settable_token_list" glib:type-name="GXmlDomSettableTokenList" glib:get-type="gxml_dom_settable_token_list_get_type" glib:type-struct="DomSettableTokenListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomTokenList"/>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_dom_settable_token_list_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_dom_settable_token_list_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomSettableTokenListIface" c:type="GXmlDomSettableTokenListIface" glib:is-gtype-struct-for="DomSettableTokenList">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomSettableTokenList" c:type="GXmlDomSettableTokenList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomDocument" c:type="GXmlDomDocument" c:symbol-prefix="dom_document" glib:type-name="GXmlDomDocument" glib:get-type="gxml_dom_document_get_type" glib:type-struct="DomDocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<prerequisite name="GXml.DomNonElementParentNode"/>
		<property name="implementation">
			<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
		</property>
		<method name="get_implementation" c:identifier="gxml_dom_document_get_implementation">
			<return-value transfer-ownership="none">
				<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_implementation" invoker="get_implementation">
			<return-value transfer-ownership="none">
				<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="url">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_url" c:identifier="gxml_dom_document_get_url">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_url" invoker="get_url">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="document-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_document_uri" c:identifier="gxml_dom_document_get_document_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_document_uri" invoker="get_document_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="origin">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_origin" c:identifier="gxml_dom_document_get_origin">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_origin" invoker="get_origin">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="compat-mode">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_compat_mode" c:identifier="gxml_dom_document_get_compat_mode">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_compat_mode" invoker="get_compat_mode">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="character-set">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_character_set" c:identifier="gxml_dom_document_get_character_set">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_character_set" invoker="get_character_set">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="content-type">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content_type" c:identifier="gxml_dom_document_get_content_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_content_type" invoker="get_content_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="doctype">
			<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
		</property>
		<method name="get_doctype" c:identifier="gxml_dom_document_get_doctype">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_doctype" invoker="get_doctype">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="document-element">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_document_element" c:identifier="gxml_dom_document_get_document_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_document_element" invoker="get_document_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name" c:identifier="gxml_dom_document_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name" invoker="get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name_ns" c:identifier="gxml_dom_document_get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name_ns" invoker="get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_class_name" c:identifier="gxml_dom_document_get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="classNames" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_class_name" invoker="get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="classNames" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_element" c:identifier="gxml_dom_document_create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element" invoker="create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_element_ns" c:identifier="gxml_dom_document_create_element_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element_ns" invoker="create_element_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_document_fragment" c:identifier="gxml_dom_document_create_document_fragment">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_document_fragment" invoker="create_document_fragment">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_text_node" c:identifier="gxml_dom_document_create_text_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_text_node" invoker="create_text_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomText" c:type="GXmlDomText*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_comment" c:identifier="gxml_dom_document_create_comment" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_comment" invoker="create_comment" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_processing_instruction" c:identifier="gxml_dom_document_create_processing_instruction" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_processing_instruction" invoker="create_processing_instruction" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="import_node" c:identifier="gxml_dom_document_import_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="import_node" invoker="import_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="adopt_node" c:identifier="gxml_dom_document_adopt_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="adopt_node" invoker="adopt_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_event" c:identifier="gxml_dom_document_create_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="interface" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_event" invoker="create_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="interface" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_range" c:identifier="gxml_dom_document_create_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_range" invoker="create_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_node_iterator" c:identifier="gxml_dom_document_create_node_iterator">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="whatToShow" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_node_iterator" invoker="create_node_iterator">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="whatToShow" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_tree_walker" c:identifier="gxml_dom_document_create_tree_walker">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_tree_walker" invoker="create_tree_walker">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="what_to_show" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_file" c:identifier="gxml_dom_document_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file" invoker="write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_file_async" c:identifier="gxml_dom_document_write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_file_finish" c:identifier="gxml_dom_document_write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file_async" invoker="write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_file_finish" invoker="write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream" c:identifier="gxml_dom_document_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream" invoker="write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream_async" c:identifier="gxml_dom_document_write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_stream_finish" c:identifier="gxml_dom_document_write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream_async" invoker="write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_stream_finish" invoker="write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream" c:identifier="gxml_dom_document_create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream" invoker="create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream_async" c:identifier="gxml_dom_document_create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_stream_finish" c:identifier="gxml_dom_document_create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream_async" invoker="create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_stream_finish" invoker="create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string" c:identifier="gxml_dom_document_write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_string" invoker="write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string_async" c:identifier="gxml_dom_document_write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_string_finish" c:identifier="gxml_dom_document_write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_string_async" invoker="write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_string_finish" invoker="write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_file" c:identifier="gxml_dom_document_read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_file" invoker="read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_file_async" c:identifier="gxml_dom_document_read_from_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_file_finish" c:identifier="gxml_dom_document_read_from_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_file_async" invoker="read_from_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_file_finish" invoker="read_from_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_string" c:identifier="gxml_dom_document_read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string" invoker="read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_string_async" c:identifier="gxml_dom_document_read_from_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_string_finish" c:identifier="gxml_dom_document_read_from_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string_async" invoker="read_from_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_string_finish" invoker="read_from_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_stream" c:identifier="gxml_dom_document_read_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_stream" invoker="read_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_stream_async" c:identifier="gxml_dom_document_read_from_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_stream_finish" c:identifier="gxml_dom_document_read_from_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_stream_async" invoker="read_from_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_stream_finish" invoker="read_from_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_xml_parser" c:identifier="gxml_dom_document_get_xml_parser">
			<return-value transfer-ownership="full">
				<type name="GXml.Parser" c:type="GXmlParser*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_xml_parser" invoker="get_xml_parser">
			<return-value transfer-ownership="full">
				<type name="GXml.Parser" c:type="GXmlParser*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_xml_parser" c:identifier="gxml_dom_document_set_xml_parser">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="parser" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_xml_parser" invoker="set_xml_parser">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</instance-parameter>
				<parameter name="parser" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomDocumentIface" c:type="GXmlDomDocumentIface" glib:is-gtype-struct-for="DomDocument">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_elements_by_tag_name">
			<callback name="get_elements_by_tag_name" c:type="get_elements_by_tag_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name_ns">
			<callback name="get_elements_by_tag_name_ns" c:type="get_elements_by_tag_name_ns">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_class_name">
			<callback name="get_elements_by_class_name" c:type="get_elements_by_class_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="classNames" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_element">
			<callback name="create_element" c:type="create_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_element_ns">
			<callback name="create_element_ns" c:type="create_element_ns" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_document_fragment">
			<callback name="create_document_fragment" c:type="create_document_fragment">
				<return-value transfer-ownership="full">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_text_node">
			<callback name="create_text_node" c:type="create_text_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomText" c:type="GXmlDomText*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_comment">
			<callback name="create_comment" c:type="create_comment" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomComment" c:type="GXmlDomComment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_processing_instruction">
			<callback name="create_processing_instruction" c:type="create_processing_instruction" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomProcessingInstruction" c:type="GXmlDomProcessingInstruction*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="import_node">
			<callback name="import_node" c:type="import_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="deep" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="adopt_node">
			<callback name="adopt_node" c:type="adopt_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_event">
			<callback name="create_event" c:type="create_event" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="interface" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_range">
			<callback name="create_range" c:type="create_range">
				<return-value transfer-ownership="full">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_node_iterator">
			<callback name="create_node_iterator" c:type="create_node_iterator">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeIterator" c:type="GXmlDomNodeIterator*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="root" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="whatToShow" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_tree_walker">
			<callback name="create_tree_walker" c:type="create_tree_walker">
				<return-value transfer-ownership="full">
					<type name="GXml.DomTreeWalker" c:type="GXmlDomTreeWalker*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="root" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="what_to_show" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file">
			<callback name="write_file" c:type="write_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_async">
			<callback name="write_file_async" c:type="write_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_finish">
			<callback name="write_file_finish" c:type="write_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream">
			<callback name="write_stream" c:type="write_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_async">
			<callback name="write_stream_async" c:type="write_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_finish">
			<callback name="write_stream_finish" c:type="write_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream">
			<callback name="create_stream" c:type="create_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_async">
			<callback name="create_stream_async" c:type="create_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_finish">
			<callback name="create_stream_finish" c:type="create_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string">
			<callback name="write_string" c:type="write_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_async">
			<callback name="write_string_async" c:type="write_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_finish">
			<callback name="write_string_finish" c:type="write_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file">
			<callback name="read_from_file" c:type="read_from_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file_async">
			<callback name="read_from_file_async" c:type="read_from_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file_finish">
			<callback name="read_from_file_finish" c:type="read_from_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string">
			<callback name="read_from_string" c:type="read_from_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string_async">
			<callback name="read_from_string_async" c:type="read_from_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string_finish">
			<callback name="read_from_string_finish" c:type="read_from_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream">
			<callback name="read_from_stream" c:type="read_from_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream_async">
			<callback name="read_from_stream_async" c:type="read_from_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream_finish">
			<callback name="read_from_stream_finish" c:type="read_from_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_xml_parser">
			<callback name="get_xml_parser" c:type="get_xml_parser">
				<return-value transfer-ownership="full">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_xml_parser">
			<callback name="set_xml_parser" c:type="set_xml_parser">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
					<parameter name="parser" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_implementation">
			<callback name="get_implementation" c:type="get_implementation">
				<return-value transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_url">
			<callback name="get_url" c:type="get_url">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document_uri">
			<callback name="get_document_uri" c:type="get_document_uri">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_origin">
			<callback name="get_origin" c:type="get_origin">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_compat_mode">
			<callback name="get_compat_mode" c:type="get_compat_mode">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_character_set">
			<callback name="get_character_set" c:type="get_character_set">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_content_type">
			<callback name="get_content_type" c:type="get_content_type">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_doctype">
			<callback name="get_doctype" c:type="get_doctype">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document_element">
			<callback name="get_document_element" c:type="get_document_element">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomXMLDocument" c:type="GXmlDomXMLDocument" c:symbol-prefix="dom_xml_document" glib:type-name="GXmlDomXMLDocument" glib:get-type="gxml_dom_xml_document_get_type" glib:type-struct="DomXMLDocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomDocument"/>
	</interface>
	<record name="DomXMLDocumentIface" c:type="GXmlDomXMLDocumentIface" glib:is-gtype-struct-for="DomXMLDocument">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomImplementation" c:type="GXmlDomImplementation" c:symbol-prefix="dom_implementation" glib:type-name="GXmlDomImplementation" glib:get-type="gxml_dom_implementation_get_type" glib:type-struct="DomImplementationIface">
		<prerequisite name="GObject.Object"/>
		<method name="create_document_type" c:identifier="gxml_dom_implementation_create_document_type" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_document_type" invoker="create_document_type" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="qualified_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="public_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="system_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_document" c:identifier="gxml_dom_implementation_create_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="doctype" transfer-ownership="none" nullable="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_document" invoker="create_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="doctype" transfer-ownership="none" nullable="1">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_html_document" c:identifier="gxml_dom_implementation_create_html_document">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_html_document" invoker="create_html_document">
			<return-value transfer-ownership="full">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_feature" c:identifier="gxml_dom_implementation_has_feature">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="has_feature" invoker="has_feature">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomImplementationIface" c:type="GXmlDomImplementationIface" glib:is-gtype-struct-for="DomImplementation">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_document_type">
			<callback name="create_document_type" c:type="create_document_type" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="public_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="system_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_document">
			<callback name="create_document" c:type="create_document" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomXMLDocument" c:type="GXmlDomXMLDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="qualified_name" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="doctype" transfer-ownership="none" nullable="1">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_html_document">
			<callback name="create_html_document" c:type="create_html_document">
				<return-value transfer-ownership="full">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
					<parameter name="title" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_feature">
			<callback name="has_feature" c:type="has_feature">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomImplementation" c:type="GXmlDomImplementation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomDocumentFragment" c:type="GXmlDomDocumentFragment" c:symbol-prefix="dom_document_fragment" glib:type-name="GXmlDomDocumentFragment" glib:get-type="gxml_dom_document_fragment_get_type" glib:type-struct="DomDocumentFragmentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<prerequisite name="GXml.DomNonElementParentNode"/>
	</interface>
	<record name="DomDocumentFragmentIface" c:type="GXmlDomDocumentFragmentIface" glib:is-gtype-struct-for="DomDocumentFragment">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DomDocumentType" c:type="GXmlDomDocumentType" c:symbol-prefix="dom_document_type" glib:type-name="GXmlDomDocumentType" glib:get-type="gxml_dom_document_type_get_type" glib:type-struct="DomDocumentTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_dom_document_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="public-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_public_id" c:identifier="gxml_dom_document_type_get_public_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_public_id" invoker="get_public_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="system-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_system_id" c:identifier="gxml_dom_document_type_get_system_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_system_id" invoker="get_system_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomDocumentTypeIface" c:type="GXmlDomDocumentTypeIface" glib:is-gtype-struct-for="DomDocumentType">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_public_id">
			<callback name="get_public_id" c:type="get_public_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_system_id">
			<callback name="get_system_id" c:type="get_system_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomDocumentType" c:type="GXmlDomDocumentType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomHtmlDocument" c:type="GXmlDomHtmlDocument" c:symbol-prefix="dom_html_document" glib:type-name="GXmlDomHtmlDocument" glib:get-type="gxml_dom_html_document_get_type" glib:type-struct="DomHtmlDocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomDocument"/>
		<method name="read_from_string" c:identifier="gxml_dom_html_document_read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string" invoker="read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_string_tolerant" c:identifier="gxml_dom_html_document_read_from_string_tolerant" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string_tolerant" invoker="read_from_string_tolerant" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_html" c:identifier="gxml_dom_html_document_to_html" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_html" invoker="to_html" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomHtmlDocumentIface" c:type="GXmlDomHtmlDocumentIface" glib:is-gtype-struct-for="DomHtmlDocument">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="read_from_string">
			<callback name="read_from_string" c:type="read_from_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string_tolerant">
			<callback name="read_from_string_tolerant" c:type="read_from_string_tolerant" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_html">
			<callback name="to_html" c:type="to_html" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomHtmlDocument" c:type="GXmlDomHtmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomElement" c:type="GXmlDomElement" c:symbol-prefix="dom_element" glib:type-name="GXmlDomElement" glib:get-type="gxml_dom_element_get_type" glib:type-struct="DomElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomChildNode"/>
		<prerequisite name="GXml.DomNonDocumentTypeChildNode"/>
		<prerequisite name="GXml.DomParentNode"/>
		<property name="namespace-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_uri" c:identifier="gxml_dom_element_get_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_namespace_uri" invoker="get_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_dom_element_get_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="local-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_dom_element_get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_local_name" invoker="get_local_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="tag-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_tag_name" c:identifier="gxml_dom_element_get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_tag_name" invoker="get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_dom_element_get_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_dom_element_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="class-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_class_name" c:identifier="gxml_dom_element_get_class_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_class_name" invoker="get_class_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_class_name" c:identifier="gxml_dom_element_set_class_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_class_name" invoker="set_class_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="class-list">
			<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
		</property>
		<method name="get_class_list" c:identifier="gxml_dom_element_get_class_list">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_class_list" invoker="get_class_list">
			<return-value transfer-ownership="full">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="attributes">
			<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
		</property>
		<method name="get_attributes" c:identifier="gxml_dom_element_get_attributes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attributes" invoker="get_attributes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_attribute" c:identifier="gxml_dom_element_get_attribute">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute" invoker="get_attribute">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_attribute_ns" c:identifier="gxml_dom_element_get_attribute_ns">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_ns" invoker="get_attribute_ns">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute" c:identifier="gxml_dom_element_set_attribute" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute" invoker="set_attribute" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute_ns" c:identifier="gxml_dom_element_set_attribute_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute_ns" invoker="set_attribute_ns" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute" c:identifier="gxml_dom_element_remove_attribute">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute" invoker="remove_attribute">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute_ns" c:identifier="gxml_dom_element_remove_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute_ns" invoker="remove_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_attribute" c:identifier="gxml_dom_element_has_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_attribute" invoker="has_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_attribute_ns" c:identifier="gxml_dom_element_has_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="has_attribute_ns" invoker="has_attribute_ns">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name" c:identifier="gxml_dom_element_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name" invoker="get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_tag_name_ns" c:identifier="gxml_dom_element_get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_tag_name_ns" invoker="get_elements_by_tag_name_ns">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="namespace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="local_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_class_name" c:identifier="gxml_dom_element_get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="class_names" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_class_name" invoker="get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="class_names" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="matches" c:identifier="gxml_dom_element_matches" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="matches" invoker="matches" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="selectors" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_uri" c:identifier="gxml_dom_element_read_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_uri" invoker="read_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_uri_async" c:identifier="gxml_dom_element_read_from_uri_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_uri_finish" c:identifier="gxml_dom_element_read_from_uri_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_uri_async" invoker="read_from_uri_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_uri_finish" invoker="read_from_uri_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_file" c:identifier="gxml_dom_element_read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_file" invoker="read_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_file_async" c:identifier="gxml_dom_element_read_from_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_file_finish" c:identifier="gxml_dom_element_read_from_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_file_async" invoker="read_from_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_file_finish" invoker="read_from_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_stream" c:identifier="gxml_dom_element_read_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_stream" invoker="read_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_stream_async" c:identifier="gxml_dom_element_read_from_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_stream_finish" c:identifier="gxml_dom_element_read_from_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_stream_async" invoker="read_from_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_stream_finish" invoker="read_from_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_string" c:identifier="gxml_dom_element_read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string" invoker="read_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_from_string_async" c:identifier="gxml_dom_element_read_from_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_from_string_finish" c:identifier="gxml_dom_element_read_from_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_from_string_async" invoker="read_from_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_from_string_finish" invoker="read_from_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string" c:identifier="gxml_dom_element_write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_string" invoker="write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string_async" c:identifier="gxml_dom_element_write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_string_finish" c:identifier="gxml_dom_element_write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_string_async" invoker="write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_string_finish" invoker="write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_file" c:identifier="gxml_dom_element_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file" invoker="write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_file_async" c:identifier="gxml_dom_element_write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_file_finish" c:identifier="gxml_dom_element_write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file_async" invoker="write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_file_finish" invoker="write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream" c:identifier="gxml_dom_element_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream" invoker="write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream_async" c:identifier="gxml_dom_element_write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_stream_finish" c:identifier="gxml_dom_element_write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream_async" invoker="write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_stream_finish" invoker="write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream" c:identifier="gxml_dom_element_create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream" invoker="create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream_async" c:identifier="gxml_dom_element_create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_stream_finish" c:identifier="gxml_dom_element_create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream_async" invoker="create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_stream_finish" invoker="create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomElementIface" c:type="GXmlDomElementIface" glib:is-gtype-struct-for="DomElement">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_attribute">
			<callback name="get_attribute" c:type="get_attribute">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_ns">
			<callback name="get_attribute_ns" c:type="get_attribute_ns">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute">
			<callback name="set_attribute" c:type="set_attribute" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute_ns">
			<callback name="set_attribute_ns" c:type="set_attribute_ns" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute">
			<callback name="remove_attribute" c:type="remove_attribute">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute_ns">
			<callback name="remove_attribute_ns" c:type="remove_attribute_ns">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_attribute">
			<callback name="has_attribute" c:type="has_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="has_attribute_ns">
			<callback name="has_attribute_ns" c:type="has_attribute_ns">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name">
			<callback name="get_elements_by_tag_name" c:type="get_elements_by_tag_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_tag_name_ns">
			<callback name="get_elements_by_tag_name_ns" c:type="get_elements_by_tag_name_ns">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="namespace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="local_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_class_name">
			<callback name="get_elements_by_class_name" c:type="get_elements_by_class_name">
				<return-value transfer-ownership="full">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="class_names" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="matches">
			<callback name="matches" c:type="matches" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="selectors" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_uri">
			<callback name="read_from_uri" c:type="read_from_uri" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_uri_async">
			<callback name="read_from_uri_async" c:type="read_from_uri_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_uri_finish">
			<callback name="read_from_uri_finish" c:type="read_from_uri_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file">
			<callback name="read_from_file" c:type="read_from_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file_async">
			<callback name="read_from_file_async" c:type="read_from_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_file_finish">
			<callback name="read_from_file_finish" c:type="read_from_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream">
			<callback name="read_from_stream" c:type="read_from_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="istream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream_async">
			<callback name="read_from_stream_async" c:type="read_from_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="istream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_stream_finish">
			<callback name="read_from_stream_finish" c:type="read_from_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string">
			<callback name="read_from_string" c:type="read_from_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string_async">
			<callback name="read_from_string_async" c:type="read_from_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_from_string_finish">
			<callback name="read_from_string_finish" c:type="read_from_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string">
			<callback name="write_string" c:type="write_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_async">
			<callback name="write_string_async" c:type="write_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_finish">
			<callback name="write_string_finish" c:type="write_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file">
			<callback name="write_file" c:type="write_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_async">
			<callback name="write_file_async" c:type="write_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_finish">
			<callback name="write_file_finish" c:type="write_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream">
			<callback name="write_stream" c:type="write_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_async">
			<callback name="write_stream_async" c:type="write_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_finish">
			<callback name="write_stream_finish" c:type="write_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream">
			<callback name="create_stream" c:type="create_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_async">
			<callback name="create_stream_async" c:type="create_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_finish">
			<callback name="create_stream_finish" c:type="create_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_namespace_uri">
			<callback name="get_namespace_uri" c:type="get_namespace_uri">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_local_name">
			<callback name="get_local_name" c:type="get_local_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_tag_name">
			<callback name="get_tag_name" c:type="get_tag_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_class_name">
			<callback name="get_class_name" c:type="get_class_name">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_class_name">
			<callback name="set_class_name" c:type="set_class_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_class_list">
			<callback name="get_class_list" c:type="get_class_list">
				<return-value transfer-ownership="full">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attributes">
			<callback name="get_attributes" c:type="get_attributes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNamedNodeMap" c:type="GXmlDomNamedNodeMap*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEventTarget" c:type="GXmlDomEventTarget" c:symbol-prefix="dom_event_target" glib:type-name="GXmlDomEventTarget" glib:get-type="gxml_dom_event_target_get_type" glib:type-struct="DomEventTargetIface">
		<prerequisite name="GObject.Object"/>
		<method name="add_event_listener" c:identifier="gxml_dom_event_target_add_event_listener">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_event_listener" invoker="add_event_listener">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_event_listener" c:identifier="gxml_dom_event_target_remove_event_listener">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_event_listener" invoker="remove_event_listener">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="callback" transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</parameter>
				<parameter name="capture" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="dispatch_event" c:identifier="gxml_dom_event_target_dispatch_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="dispatch_event" invoker="dispatch_event" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomEventTargetIface" c:type="GXmlDomEventTargetIface" glib:is-gtype-struct-for="DomEventTarget">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="add_event_listener">
			<callback name="add_event_listener" c:type="add_event_listener">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="callback" transfer-ownership="none" nullable="1">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="capture" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_event_listener">
			<callback name="remove_event_listener" c:type="remove_event_listener">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="callback" transfer-ownership="none" nullable="1">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="capture" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="dispatch_event">
			<callback name="dispatch_event" c:type="dispatch_event" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEventListener" c:type="GXmlDomEventListener" c:symbol-prefix="dom_event_listener" glib:type-name="GXmlDomEventListener" glib:get-type="gxml_dom_event_listener_get_type" glib:type-struct="DomEventListenerIface">
		<prerequisite name="GObject.Object"/>
		<method name="handle_event" c:identifier="gxml_dom_event_listener_handle_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="handle_event" invoker="handle_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
				</instance-parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomEventListenerIface" c:type="GXmlDomEventListenerIface" glib:is-gtype-struct-for="DomEventListener">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="handle_event">
			<callback name="handle_event" c:type="handle_event">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEventListener" c:type="GXmlDomEventListener*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomEvent" c:type="GXmlDomEvent" c:symbol-prefix="dom_event" glib:type-name="GXmlDomEvent" glib:get-type="gxml_dom_event_get_type" glib:type-struct="DomEventIface">
		<prerequisite name="GObject.Object"/>
		<property name="etype">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_etype" c:identifier="gxml_dom_event_get_etype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_etype" invoker="get_etype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="event-target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</property>
		<method name="get_event_target" c:identifier="gxml_dom_event_get_event_target">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_event_target" invoker="get_event_target">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="current-target">
			<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
		</property>
		<method name="get_current_target" c:identifier="gxml_dom_event_get_current_target">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_current_target" invoker="get_current_target">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="bubbles">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_bubbles" c:identifier="gxml_dom_event_get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_bubbles" invoker="get_bubbles">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="cancelable">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_cancelable" c:identifier="gxml_dom_event_get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_cancelable" invoker="get_cancelable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="is-trusted">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_trusted" c:identifier="gxml_dom_event_get_is_trusted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_is_trusted" invoker="get_is_trusted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="time-stamp">
			<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
		</property>
		<method name="get_time_stamp" c:identifier="gxml_dom_event_get_time_stamp">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_time_stamp" invoker="get_time_stamp">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="default-prevented">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_prevented" c:identifier="gxml_dom_event_get_default_prevented">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_default_prevented" invoker="get_default_prevented">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="event-phase">
			<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
		</property>
		<method name="get_event_phase" c:identifier="gxml_dom_event_get_event_phase">
			<return-value transfer-ownership="none">
				<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_event_phase" invoker="get_event_phase">
			<return-value transfer-ownership="none">
				<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="stop_propagation" c:identifier="gxml_dom_event_stop_propagation">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="stop_propagation" invoker="stop_propagation">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="stop_immediate_propagation" c:identifier="gxml_dom_event_stop_immediate_propagation">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="stop_immediate_propagation" invoker="stop_immediate_propagation">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="prevent_default" c:identifier="gxml_dom_event_prevent_default">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="prevent_default" invoker="prevent_default">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="init_event" c:identifier="gxml_dom_event_init_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init_event" invoker="init_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomEventIface" c:type="GXmlDomEventIface" glib:is-gtype-struct-for="DomEvent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="stop_propagation">
			<callback name="stop_propagation" c:type="stop_propagation">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop_immediate_propagation">
			<callback name="stop_immediate_propagation" c:type="stop_immediate_propagation">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prevent_default">
			<callback name="prevent_default" c:type="prevent_default">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="init_event">
			<callback name="init_event" c:type="init_event">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="bubbles" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="cancelable" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_etype">
			<callback name="get_etype" c:type="get_etype">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_event_target">
			<callback name="get_event_target" c:type="get_event_target">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_current_target">
			<callback name="get_current_target" c:type="get_current_target">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GXml.DomEventTarget" c:type="GXmlDomEventTarget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_bubbles">
			<callback name="get_bubbles" c:type="get_bubbles">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_cancelable">
			<callback name="get_cancelable" c:type="get_cancelable">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_is_trusted">
			<callback name="get_is_trusted" c:type="get_is_trusted">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_time_stamp">
			<callback name="get_time_stamp" c:type="get_time_stamp">
				<return-value transfer-ownership="none">
					<type name="GXml.DomTimeStamp" c:type="GXmlDomTimeStamp*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_default_prevented">
			<callback name="get_default_prevented" c:type="get_default_prevented">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_event_phase">
			<callback name="get_event_phase" c:type="get_event_phase">
				<return-value transfer-ownership="none">
					<type name="GXml.DomEventPhase" c:type="GXmlDomEventPhase"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomEvent" c:type="GXmlDomEvent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomEventPhase" c:type="GXmlDomEventPhase" glib:type-name="GXmlDomEventPhase" glib:get-type="gxml_dom_event_phase_get_type">
		<member name="none" c:identifier="GXML_DOM_EVENT_PHASE_NONE" value="0"/>
		<member name="capturing_phase" c:identifier="GXML_DOM_EVENT_PHASE_CAPTURING_PHASE" value="0"/>
		<member name="at_target" c:identifier="GXML_DOM_EVENT_PHASE_AT_TARGET" value="1"/>
		<member name="bubbling_phase" c:identifier="GXML_DOM_EVENT_PHASE_BUBBLING_PHASE" value="2"/>
	</enumeration>
	<bitfield name="DomEventFlags" c:type="GXmlDomEventFlags" glib:type-name="GXmlDomEventFlags" glib:get-type="gxml_dom_event_flags_get_type">
		<member name="stop_propagation_flag" c:identifier="GXML_DOM_EVENT_FLAGS_STOP_PROPAGATION_FLAG" value="1"/>
		<member name="stop_immediate_propagation_flag" c:identifier="GXML_DOM_EVENT_FLAGS_STOP_IMMEDIATE_PROPAGATION_FLAG" value="2"/>
		<member name="canceled_flag" c:identifier="GXML_DOM_EVENT_FLAGS_CANCELED_FLAG" value="4"/>
		<member name="initialized_flag" c:identifier="GXML_DOM_EVENT_FLAGS_INITIALIZED_FLAG" value="8"/>
		<member name="dispatch_flag" c:identifier="GXML_DOM_EVENT_FLAGS_DISPATCH_FLAG" value="16"/>
	</bitfield>
	<interface name="DomCustomEvent" c:type="GXmlDomCustomEvent" c:symbol-prefix="dom_custom_event" glib:type-name="GXmlDomCustomEvent" glib:get-type="gxml_dom_custom_event_get_type" glib:type-struct="DomCustomEventIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomEvent"/>
		<property name="detail">
			<type name="GObject.Value" c:type="GValue"/>
		</property>
		<method name="get_detail" c:identifier="gxml_dom_custom_event_get_detail">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_detail" invoker="get_detail">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="init_custom_event" c:identifier="gxml_dom_custom_event_init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init_custom_event" invoker="init_custom_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="bubbles" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancelable" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="detail" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomCustomEventIface" c:type="GXmlDomCustomEventIface" glib:is-gtype-struct-for="DomCustomEvent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="init_custom_event">
			<callback name="init_custom_event" c:type="init_custom_event">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="bubbles" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="cancelable" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="detail" transfer-ownership="none">
						<type name="GObject.Value" c:type="GValue*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_detail">
			<callback name="get_detail" c:type="get_detail">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomCustomEvent" c:type="GXmlDomCustomEvent*"/>
					</parameter>
					<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
						<type name="GObject.Value" c:type="GValue*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomMutationObserver" c:type="GXmlDomMutationObserver" c:symbol-prefix="dom_mutation_observer" glib:type-name="GXmlDomMutationObserver" glib:get-type="gxml_dom_mutation_observer_get_type" glib:type-struct="DomMutationObserverIface">
		<prerequisite name="GObject.Object"/>
		<method name="observe" c:identifier="gxml_dom_mutation_observer_observe">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="observe" invoker="observe">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="disconnect" c:identifier="gxml_dom_mutation_observer_disconnect">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="disconnect" invoker="disconnect">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="take_records" c:identifier="gxml_dom_mutation_observer_take_records">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="take_records" invoker="take_records">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomMutationObserverIface" c:type="GXmlDomMutationObserverIface" glib:is-gtype-struct-for="DomMutationObserver">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="observe">
			<callback name="observe" c:type="observe">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GXml.DomMutationObserverInit" c:type="GXmlDomMutationObserverInit*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disconnect">
			<callback name="disconnect" c:type="disconnect">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="take_records">
			<callback name="take_records" c:type="take_records">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomMutationRecord" c:type="GXmlDomMutationRecord" c:symbol-prefix="dom_mutation_record" glib:type-name="GXmlDomMutationRecord" glib:get-type="gxml_dom_mutation_record_get_type" glib:type-struct="DomMutationRecordIface">
		<prerequisite name="GObject.Object"/>
		<property name="mtype">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_mtype" c:identifier="gxml_dom_mutation_record_get_mtype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_mtype" invoker="get_mtype">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="target">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_target" c:identifier="gxml_dom_mutation_record_get_target">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="added-nodes" writable="1">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_added_nodes" c:identifier="gxml_dom_mutation_record_get_added_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_added_nodes" invoker="get_added_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_added_nodes" c:identifier="gxml_dom_mutation_record_set_added_nodes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_added_nodes" invoker="set_added_nodes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="removed-nodes" writable="1">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_removed_nodes" c:identifier="gxml_dom_mutation_record_get_removed_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_removed_nodes" invoker="get_removed_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_removed_nodes" c:identifier="gxml_dom_mutation_record_set_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_removed_nodes" invoker="set_removed_nodes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="previous-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_previous_sibling" c:identifier="gxml_dom_mutation_record_get_previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_previous_sibling" invoker="get_previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="next-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_next_sibling" c:identifier="gxml_dom_mutation_record_get_next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_next_sibling" invoker="get_next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="attribute-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_name" c:identifier="gxml_dom_mutation_record_get_attribute_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_name" invoker="get_attribute_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="attribute-namespace">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_attribute_namespace" c:identifier="gxml_dom_mutation_record_get_attribute_namespace">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute_namespace" invoker="get_attribute_namespace">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="old-value">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_old_value" c:identifier="gxml_dom_mutation_record_get_old_value">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_old_value" invoker="get_old_value">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomMutationRecordIface" c:type="GXmlDomMutationRecordIface" glib:is-gtype-struct-for="DomMutationRecord">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_mtype">
			<callback name="get_mtype" c:type="get_mtype">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_added_nodes">
			<callback name="get_added_nodes" c:type="get_added_nodes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_added_nodes">
			<callback name="set_added_nodes" c:type="set_added_nodes">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_removed_nodes">
			<callback name="get_removed_nodes" c:type="get_removed_nodes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_removed_nodes">
			<callback name="set_removed_nodes" c:type="set_removed_nodes">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_previous_sibling">
			<callback name="get_previous_sibling" c:type="get_previous_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_sibling">
			<callback name="get_next_sibling" c:type="get_next_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_name">
			<callback name="get_attribute_name" c:type="get_attribute_name">
				<return-value transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute_namespace">
			<callback name="get_attribute_namespace" c:type="get_attribute_namespace">
				<return-value transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_old_value">
			<callback name="get_old_value" c:type="get_old_value">
				<return-value transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DomNode" c:type="GXmlDomNode" c:symbol-prefix="dom_node" glib:type-name="GXmlDomNode" glib:get-type="gxml_dom_node_get_type" glib:type-struct="DomNodeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomEventTarget"/>
		<property name="node-type">
			<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
		</property>
		<method name="get_node_type" c:identifier="gxml_dom_node_get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_node_type" invoker="get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="node-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_name" c:identifier="gxml_dom_node_get_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_node_name" invoker="get_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="base-uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base_uri" c:identifier="gxml_dom_node_get_base_uri">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_base_uri" invoker="get_base_uri">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="owner-document" writable="1" construct="1">
			<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
		</property>
		<method name="get_owner_document" c:identifier="gxml_dom_node_get_owner_document">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_owner_document" invoker="get_owner_document">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_owner_document" c:identifier="gxml_dom_node_set_owner_document">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_owner_document" invoker="set_owner_document">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parent-node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_parent_node" c:identifier="gxml_dom_node_get_parent_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_parent_node" invoker="get_parent_node">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="parent-element">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_parent_element" c:identifier="gxml_dom_node_get_parent_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_parent_element" invoker="get_parent_element">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="child-nodes">
			<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
		</property>
		<method name="get_child_nodes" c:identifier="gxml_dom_node_get_child_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_child_nodes" invoker="get_child_nodes">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="first-child">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_first_child" c:identifier="gxml_dom_node_get_first_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_first_child" invoker="get_first_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="last-child">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_last_child" c:identifier="gxml_dom_node_get_last_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_last_child" invoker="get_last_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="previous-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_previous_sibling" c:identifier="gxml_dom_node_get_previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_previous_sibling" invoker="get_previous_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="next-sibling">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_next_sibling" c:identifier="gxml_dom_node_get_next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_next_sibling" invoker="get_next_sibling">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="node-value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_value" c:identifier="gxml_dom_node_get_node_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_node_value" invoker="get_node_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_node_value" c:identifier="gxml_dom_node_set_node_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_node_value" invoker="set_node_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="text-content" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_text_content" c:identifier="gxml_dom_node_get_text_content">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_text_content" invoker="get_text_content">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_text_content" c:identifier="gxml_dom_node_set_text_content">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_text_content" invoker="set_text_content">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_child_nodes" c:identifier="gxml_dom_node_has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="has_child_nodes" invoker="has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="normalize" c:identifier="gxml_dom_node_normalize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="normalize" invoker="normalize">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="is_equal_node" c:identifier="gxml_dom_node_is_equal_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_equal_node" invoker="is_equal_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_document_position" c:identifier="gxml_dom_node_compare_document_position">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_document_position" invoker="compare_document_position">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="contains" c:identifier="gxml_dom_node_contains">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="contains" invoker="contains">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="other" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="lookup_prefix" c:identifier="gxml_dom_node_lookup_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup_prefix" invoker="lookup_prefix">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="lookup_namespace_uri" c:identifier="gxml_dom_node_lookup_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="lookup_namespace_uri" invoker="lookup_namespace_uri">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="prefix" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="is_default_namespace" c:identifier="gxml_dom_node_is_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_default_namespace" invoker="is_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="nspace" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_before" c:identifier="gxml_dom_node_insert_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_before" invoker="insert_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_child" c:identifier="gxml_dom_node_append_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_child" invoker="append_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_child" c:identifier="gxml_dom_node_replace_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_child" invoker="replace_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_child" c:identifier="gxml_dom_node_remove_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_child" invoker="remove_child" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</instance-parameter>
				<parameter name="child" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="copy" c:identifier="gxml_dom_node_copy" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
	</interface>
	<record name="DomNodeIface" c:type="GXmlDomNodeIface" glib:is-gtype-struct-for="DomNode">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="has_child_nodes">
			<callback name="has_child_nodes" c:type="has_child_nodes">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="normalize">
			<callback name="normalize" c:type="normalize">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_equal_node">
			<callback name="is_equal_node" c:type="is_equal_node">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none" nullable="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_document_position">
			<callback name="compare_document_position" c:type="compare_document_position">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="contains">
			<callback name="contains" c:type="contains">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="other" transfer-ownership="none" nullable="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup_prefix">
			<callback name="lookup_prefix" c:type="lookup_prefix">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="lookup_namespace_uri">
			<callback name="lookup_namespace_uri" c:type="lookup_namespace_uri">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_default_namespace">
			<callback name="is_default_namespace" c:type="is_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="nspace" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_before">
			<callback name="insert_before" c:type="insert_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none" nullable="1">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append_child">
			<callback name="append_child" c:type="append_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_child">
			<callback name="replace_child" c:type="replace_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_child">
			<callback name="remove_child" c:type="remove_child" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="child" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_type">
			<callback name="get_node_type" c:type="get_node_type">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNodeNodeType" c:type="GXmlDomNodeNodeType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_name">
			<callback name="get_node_name" c:type="get_node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_base_uri">
			<callback name="get_base_uri" c:type="get_base_uri">
				<return-value transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_owner_document">
			<callback name="get_owner_document" c:type="get_owner_document">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_owner_document">
			<callback name="set_owner_document" c:type="set_owner_document">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="GXml.DomDocument" c:type="GXmlDomDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent_node">
			<callback name="get_parent_node" c:type="get_parent_node">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent_element">
			<callback name="get_parent_element" c:type="get_parent_element">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child_nodes">
			<callback name="get_child_nodes" c:type="get_child_nodes">
				<return-value transfer-ownership="full">
					<type name="GXml.DomNodeList" c:type="GXmlDomNodeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_first_child">
			<callback name="get_first_child" c:type="get_first_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_last_child">
			<callback name="get_last_child" c:type="get_last_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_previous_sibling">
			<callback name="get_previous_sibling" c:type="get_previous_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_next_sibling">
			<callback name="get_next_sibling" c:type="get_next_sibling">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node_value">
			<callback name="get_node_value" c:type="get_node_value">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_node_value">
			<callback name="set_node_value" c:type="set_node_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_text_content">
			<callback name="get_text_content" c:type="get_text_content">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_text_content">
			<callback name="set_text_content" c:type="set_text_content">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomNodeNodeType" c:type="GXmlDomNodeNodeType" glib:type-name="GXmlDomNodeNodeType" glib:get-type="gxml_dom_node_node_type_get_type">
		<member name="invalid" c:identifier="GXML_DOM_NODE_NODE_TYPE_INVALID" value="0"/>
		<member name="element_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ELEMENT_NODE" value="1"/>
		<member name="attribute_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ATTRIBUTE_NODE" value="0"/>
		<member name="text_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_TEXT_NODE" value="1"/>
		<member name="cdata_section_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_CDATA_SECTION_NODE" value="2"/>
		<member name="entity_reference_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ENTITY_REFERENCE_NODE" value="3"/>
		<member name="entity_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_ENTITY_NODE" value="4"/>
		<member name="processing_instruction_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_PROCESSING_INSTRUCTION_NODE" value="5"/>
		<member name="comment_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_COMMENT_NODE" value="6"/>
		<member name="document_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_NODE" value="7"/>
		<member name="document_type_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_TYPE_NODE" value="8"/>
		<member name="document_fragment_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_DOCUMENT_FRAGMENT_NODE" value="9"/>
		<member name="notation_node" c:identifier="GXML_DOM_NODE_NODE_TYPE_NOTATION_NODE" value="10"/>
	</enumeration>
	<bitfield name="DomNodeDocumentPosition" c:type="GXmlDomNodeDocumentPosition" glib:type-name="GXmlDomNodeDocumentPosition" glib:get-type="gxml_dom_node_document_position_get_type">
		<member name="none" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_NONE" value="1"/>
		<member name="disconnected" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_DISCONNECTED" value="2"/>
		<member name="preceding" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_PRECEDING" value="4"/>
		<member name="following" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_FOLLOWING" value="8"/>
		<member name="contains" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_CONTAINS" value="16"/>
		<member name="contained_by" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_CONTAINED_BY" value="32"/>
		<member name="implementation_specific" c:identifier="GXML_DOM_NODE_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC" value="64"/>
	</bitfield>
	<interface name="DomRange" c:type="GXmlDomRange" c:symbol-prefix="dom_range" glib:type-name="GXmlDomRange" glib:get-type="gxml_dom_range_get_type" glib:type-struct="DomRangeIface">
		<prerequisite name="GObject.Object"/>
		<property name="start-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_start_container" c:identifier="gxml_dom_range_get_start_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_start_container" invoker="get_start_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="start-offset">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_start_offset" c:identifier="gxml_dom_range_get_start_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_start_offset" invoker="get_start_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="end-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_end_container" c:identifier="gxml_dom_range_get_end_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_end_container" invoker="get_end_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="end-offset">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_end_offset" c:identifier="gxml_dom_range_get_end_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_end_offset" invoker="get_end_offset">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="collapsed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_collapsed" c:identifier="gxml_dom_range_get_collapsed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_collapsed" invoker="get_collapsed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="common-ancestor-container">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_common_ancestor_container" c:identifier="gxml_dom_range_get_common_ancestor_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_common_ancestor_container" invoker="get_common_ancestor_container">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_start" c:identifier="gxml_dom_range_set_start" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start" invoker="set_start" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end" c:identifier="gxml_dom_range_set_end" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end" invoker="set_end" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_start_before" c:identifier="gxml_dom_range_set_start_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start_before" invoker="set_start_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_start_after" c:identifier="gxml_dom_range_set_start_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_start_after" invoker="set_start_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end_before" c:identifier="gxml_dom_range_set_end_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end_before" invoker="set_end_before" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_end_after" c:identifier="gxml_dom_range_set_end_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_end_after" invoker="set_end_after" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="collapse" c:identifier="gxml_dom_range_collapse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="to_start" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="collapse" invoker="collapse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="to_start" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_node" c:identifier="gxml_dom_range_select_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_node" invoker="select_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_node_contents" c:identifier="gxml_dom_range_select_node_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_node_contents" invoker="select_node_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_boundary_points" c:identifier="gxml_dom_range_compare_boundary_points" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="how" transfer-ownership="none">
					<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
				</parameter>
				<parameter name="sourceRange" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_boundary_points" invoker="compare_boundary_points" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="how" transfer-ownership="none">
					<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
				</parameter>
				<parameter name="sourceRange" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="delete_contents" c:identifier="gxml_dom_range_delete_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="delete_contents" invoker="delete_contents" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="extract_contents" c:identifier="gxml_dom_range_extract_contents" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="extract_contents" invoker="extract_contents" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="clone_contents" c:identifier="gxml_dom_range_clone_contents" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="clone_contents" invoker="clone_contents" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="insert_node" c:identifier="gxml_dom_range_insert_node">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_node" invoker="insert_node">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="surround_contents" c:identifier="gxml_dom_range_surround_contents">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="newParent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="surround_contents" invoker="surround_contents">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="newParent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clone_range" c:identifier="gxml_dom_range_clone_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="clone_range" invoker="clone_range">
			<return-value transfer-ownership="full">
				<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="detach" c:identifier="gxml_dom_range_detach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="detach" invoker="detach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="is_point_in_range" c:identifier="gxml_dom_range_is_point_in_range">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="is_point_in_range" invoker="is_point_in_range">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="compare_point" c:identifier="gxml_dom_range_compare_point">
			<return-value transfer-ownership="full">
				<type name="gshort" c:type="gshort"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="compare_point" invoker="compare_point">
			<return-value transfer-ownership="full">
				<type name="gshort" c:type="gshort"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="intersects_node" c:identifier="gxml_dom_range_intersects_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="intersects_node" invoker="intersects_node">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_dom_range_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DomRangeIface" c:type="GXmlDomRangeIface" glib:is-gtype-struct-for="DomRange">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="set_start">
			<callback name="set_start" c:type="set_start" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end">
			<callback name="set_end" c:type="set_end" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_start_before">
			<callback name="set_start_before" c:type="set_start_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_start_after">
			<callback name="set_start_after" c:type="set_start_after" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end_before">
			<callback name="set_end_before" c:type="set_end_before" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_end_after">
			<callback name="set_end_after" c:type="set_end_after" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="collapse">
			<callback name="collapse" c:type="collapse" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="to_start" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="select_node">
			<callback name="select_node" c:type="select_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="select_node_contents">
			<callback name="select_node_contents" c:type="select_node_contents" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_boundary_points">
			<callback name="compare_boundary_points" c:type="compare_boundary_points" throws="1">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="how" transfer-ownership="none">
						<type name="GXml.DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints"/>
					</parameter>
					<parameter name="sourceRange" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="delete_contents">
			<callback name="delete_contents" c:type="delete_contents" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="extract_contents">
			<callback name="extract_contents" c:type="extract_contents" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clone_contents">
			<callback name="clone_contents" c:type="clone_contents" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomDocumentFragment" c:type="GXmlDomDocumentFragment*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_node">
			<callback name="insert_node" c:type="insert_node">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="surround_contents">
			<callback name="surround_contents" c:type="surround_contents">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="newParent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clone_range">
			<callback name="clone_range" c:type="clone_range">
				<return-value transfer-ownership="full">
					<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detach">
			<callback name="detach" c:type="detach">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_point_in_range">
			<callback name="is_point_in_range" c:type="is_point_in_range">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="compare_point">
			<callback name="compare_point" c:type="compare_point">
				<return-value transfer-ownership="full">
					<type name="gshort" c:type="gshort"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="offset" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="intersects_node">
			<callback name="intersects_node" c:type="intersects_node">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_start_container">
			<callback name="get_start_container" c:type="get_start_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_start_offset">
			<callback name="get_start_offset" c:type="get_start_offset">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_end_container">
			<callback name="get_end_container" c:type="get_end_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_end_offset">
			<callback name="get_end_offset" c:type="get_end_offset">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_collapsed">
			<callback name="get_collapsed" c:type="get_collapsed">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_common_ancestor_container">
			<callback name="get_common_ancestor_container" c:type="get_common_ancestor_container">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.DomRange" c:type="GXmlDomRange*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<enumeration name="DomRangeBoundaryPoints" c:type="GXmlDomRangeBoundaryPoints" glib:type-name="GXmlDomRangeBoundaryPoints" glib:get-type="gxml_dom_range_boundary_points_get_type">
		<member name="start_to_start" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_START_TO_START" value="0"/>
		<member name="start_to_end" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_START_TO_END" value="0"/>
		<member name="end_to_end" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_END_TO_END" value="1"/>
		<member name="end_to_start" c:identifier="GXML_DOM_RANGE_BOUNDARY_POINTS_END_TO_START" value="2"/>
	</enumeration>
	<interface name="IXsdSchema" c:type="GXmlIXsdSchema" c:symbol-prefix="ixsd_schema" glib:type-name="GXmlIXsdSchema" glib:get-type="gxml_ixsd_schema_get_type" glib:type-struct="IXsdSchemaIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_SCHEMA_SCHEMA_NODE_NAME" value="schema">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<constant name="SCHEMA_NAMESPACE_URI" c:identifier="GXML_IXSD_SCHEMA_SCHEMA_NAMESPACE_URI" value="http://www.w3.org/2001/XMLSchema">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<constant name="SCHEMA_NAMESPACE_PREFIX" c:identifier="GXML_IXSD_SCHEMA_SCHEMA_NAMESPACE_PREFIX" value="xs">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="element-definitions" writable="1">
			<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
		</property>
		<method name="get_element_definitions" c:identifier="gxml_ixsd_schema_get_element_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_element_definitions" invoker="get_element_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_element_definitions" c:identifier="gxml_ixsd_schema_set_element_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_element_definitions" invoker="set_element_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="simple-type-definitions" writable="1">
			<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
		</property>
		<method name="get_simple_type_definitions" c:identifier="gxml_ixsd_schema_get_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_simple_type_definitions" invoker="get_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_simple_type_definitions" c:identifier="gxml_ixsd_schema_set_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_simple_type_definitions" invoker="set_simple_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="complex-type-definitions" writable="1">
			<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
		</property>
		<method name="get_complex_type_definitions" c:identifier="gxml_ixsd_schema_get_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_complex_type_definitions" invoker="get_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_complex_type_definitions" c:identifier="gxml_ixsd_schema_set_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_complex_type_definitions" invoker="set_complex_type_definitions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdSchemaIface" c:type="GXmlIXsdSchemaIface" glib:is-gtype-struct-for="IXsdSchema">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_element_definitions">
			<callback name="get_element_definitions" c:type="get_element_definitions">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_element_definitions">
			<callback name="set_element_definitions" c:type="set_element_definitions">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdListElements" c:type="GXmlIXsdListElements*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_simple_type_definitions">
			<callback name="get_simple_type_definitions" c:type="get_simple_type_definitions">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_simple_type_definitions">
			<callback name="set_simple_type_definitions" c:type="set_simple_type_definitions">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_complex_type_definitions">
			<callback name="get_complex_type_definitions" c:type="get_complex_type_definitions">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_complex_type_definitions">
			<callback name="set_complex_type_definitions" c:type="set_complex_type_definitions">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSchema" c:type="GXmlIXsdSchema*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdBaseType" c:type="GXmlIXsdBaseType" c:symbol-prefix="ixsd_base_type" glib:type-name="GXmlIXsdBaseType" glib:get-type="gxml_ixsd_base_type_get_type" glib:type-struct="IXsdBaseTypeIface">
		<prerequisite name="GObject.Object"/>
		<property name="anotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_ixsd_base_type_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_anotation" invoker="get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_anotation" c:identifier="gxml_ixsd_base_type_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_anotation" invoker="set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdBaseTypeIface" c:type="GXmlIXsdBaseTypeIface" glib:is-gtype-struct-for="IXsdBaseType">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_anotation">
			<callback name="get_anotation" c:type="get_anotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_anotation">
			<callback name="set_anotation" c:type="set_anotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseType" c:type="GXmlIXsdBaseType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdSimpleType" c:type="GXmlIXsdSimpleType" c:symbol-prefix="ixsd_simple_type" glib:type-name="GXmlIXsdSimpleType" glib:get-type="gxml_ixsd_simple_type_get_type" glib:type-struct="IXsdSimpleTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<prerequisite name="GXml.IXsdBaseType"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_SIMPLE_TYPE_SCHEMA_NODE_NAME" value="simpleType">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_ixsd_simple_type_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_final" invoker="get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_final" c:identifier="gxml_ixsd_simple_type_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_final" invoker="set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_ixsd_simple_type_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_ixsd_simple_type_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_ixsd_simple_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_name" c:identifier="gxml_ixsd_simple_type_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_name" invoker="set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="annotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_annotation" c:identifier="gxml_ixsd_simple_type_get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_annotation" invoker="get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_annotation" c:identifier="gxml_ixsd_simple_type_set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_annotation" invoker="set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="list" writable="1">
			<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
		</property>
		<method name="get_list" c:identifier="gxml_ixsd_simple_type_get_list">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_list" invoker="get_list">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_list" c:identifier="gxml_ixsd_simple_type_set_list">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_list" invoker="set_list">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="union" writable="1">
			<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
		</property>
		<method name="get_union" c:identifier="gxml_ixsd_simple_type_get_union">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_union" invoker="get_union">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_union" c:identifier="gxml_ixsd_simple_type_set_union">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_union" invoker="set_union">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="restriction" writable="1">
			<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
		</property>
		<method name="get_restriction" c:identifier="gxml_ixsd_simple_type_get_restriction">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_restriction" invoker="get_restriction">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_restriction" c:identifier="gxml_ixsd_simple_type_set_restriction">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_restriction" invoker="set_restriction">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdSimpleTypeIface" c:type="GXmlIXsdSimpleTypeIface" glib:is-gtype-struct-for="IXsdSimpleType">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_final">
			<callback name="get_final" c:type="get_final">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_final">
			<callback name="set_final" c:type="set_final">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_name">
			<callback name="set_name" c:type="set_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_annotation">
			<callback name="get_annotation" c:type="get_annotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_annotation">
			<callback name="set_annotation" c:type="set_annotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_list">
			<callback name="get_list" c:type="get_list">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_list">
			<callback name="set_list" c:type="set_list">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdTypeList" c:type="GXmlIXsdTypeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_union">
			<callback name="get_union" c:type="get_union">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_union">
			<callback name="set_union" c:type="set_union">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdTypeUnion" c:type="GXmlIXsdTypeUnion*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_restriction">
			<callback name="get_restriction" c:type="get_restriction">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_restriction">
			<callback name="set_restriction" c:type="set_restriction">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdTypeDef" c:type="GXmlIXsdTypeDef" c:symbol-prefix="ixsd_type_def" glib:type-name="GXmlIXsdTypeDef" glib:get-type="gxml_ixsd_type_def_get_type" glib:type-struct="IXsdTypeDefIface">
		<prerequisite name="GObject.Object"/>
	</interface>
	<record name="IXsdTypeDefIface" c:type="GXmlIXsdTypeDefIface" glib:is-gtype-struct-for="IXsdTypeDef">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction" c:symbol-prefix="ixsd_type_restriction" glib:type-name="GXmlIXsdTypeRestriction" glib:get-type="gxml_ixsd_type_restriction_get_type" glib:type-struct="IXsdTypeRestrictionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeDef"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_TYPE_RESTRICTION_SCHEMA_NODE_NAME" value="restriction">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="base" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base" c:identifier="gxml_ixsd_type_restriction_get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_base" invoker="get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_base" c:identifier="gxml_ixsd_type_restriction_set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_base" invoker="set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_ixsd_type_restriction_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_ixsd_type_restriction_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="simple-type" writable="1">
			<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
		</property>
		<method name="get_simple_type" c:identifier="gxml_ixsd_type_restriction_get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_simple_type" invoker="get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_simple_type" c:identifier="gxml_ixsd_type_restriction_set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_simple_type" invoker="set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="enumerations" writable="1">
			<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
		</property>
		<method name="get_enumerations" c:identifier="gxml_ixsd_type_restriction_get_enumerations">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_enumerations" invoker="get_enumerations">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_enumerations" c:identifier="gxml_ixsd_type_restriction_set_enumerations">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_enumerations" invoker="set_enumerations">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="white-spaces" writable="1">
			<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
		</property>
		<method name="get_white_spaces" c:identifier="gxml_ixsd_type_restriction_get_white_spaces">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_white_spaces" invoker="get_white_spaces">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_white_spaces" c:identifier="gxml_ixsd_type_restriction_set_white_spaces">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_white_spaces" invoker="set_white_spaces">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdTypeRestrictionIface" c:type="GXmlIXsdTypeRestrictionIface" glib:is-gtype-struct-for="IXsdTypeRestriction">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_base">
			<callback name="get_base" c:type="get_base">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_base">
			<callback name="set_base" c:type="set_base">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_simple_type">
			<callback name="get_simple_type" c:type="get_simple_type">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_simple_type">
			<callback name="set_simple_type" c:type="set_simple_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_enumerations">
			<callback name="get_enumerations" c:type="get_enumerations">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_enumerations">
			<callback name="set_enumerations" c:type="set_enumerations">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_white_spaces">
			<callback name="get_white_spaces" c:type="get_white_spaces">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_white_spaces">
			<callback name="set_white_spaces" c:type="set_white_spaces">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestriction" c:type="GXmlIXsdTypeRestriction*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdTypeList" c:type="GXmlIXsdTypeList" c:symbol-prefix="ixsd_type_list" glib:type-name="GXmlIXsdTypeList" glib:get-type="gxml_ixsd_type_list_get_type" glib:type-struct="IXsdTypeListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeDef"/>
	</interface>
	<record name="IXsdTypeListIface" c:type="GXmlIXsdTypeListIface" glib:is-gtype-struct-for="IXsdTypeList">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeUnion" c:type="GXmlIXsdTypeUnion" c:symbol-prefix="ixsd_type_union" glib:type-name="GXmlIXsdTypeUnion" glib:get-type="gxml_ixsd_type_union_get_type" glib:type-struct="IXsdTypeUnionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeDef"/>
	</interface>
	<record name="IXsdTypeUnionIface" c:type="GXmlIXsdTypeUnionIface" glib:is-gtype-struct-for="IXsdTypeUnion">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef" c:symbol-prefix="ixsd_type_restriction_def" glib:type-name="GXmlIXsdTypeRestrictionDef" glib:get-type="gxml_ixsd_type_restriction_def_get_type" glib:type-struct="IXsdTypeRestrictionDefIface">
		<prerequisite name="GObject.Object"/>
		<property name="annotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_annotation" c:identifier="gxml_ixsd_type_restriction_def_get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_annotation" invoker="get_annotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_annotation" c:identifier="gxml_ixsd_type_restriction_def_set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_annotation" invoker="set_annotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdTypeRestrictionDefIface" c:type="GXmlIXsdTypeRestrictionDefIface" glib:is-gtype-struct-for="IXsdTypeRestrictionDef">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_annotation">
			<callback name="get_annotation" c:type="get_annotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_annotation">
			<callback name="set_annotation" c:type="set_annotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionDef" c:type="GXmlIXsdTypeRestrictionDef*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMinExclusive" c:type="GXmlIXsdTypeRestrictionMinExclusive" c:symbol-prefix="ixsd_type_restriction_min_exclusive" glib:type-name="GXmlIXsdTypeRestrictionMinExclusive" glib:get-type="gxml_ixsd_type_restriction_min_exclusive_get_type" glib:type-struct="IXsdTypeRestrictionMinExclusiveIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMinExclusiveIface" c:type="GXmlIXsdTypeRestrictionMinExclusiveIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMinExclusive">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMinInclusive" c:type="GXmlIXsdTypeRestrictionMinInclusive" c:symbol-prefix="ixsd_type_restriction_min_inclusive" glib:type-name="GXmlIXsdTypeRestrictionMinInclusive" glib:get-type="gxml_ixsd_type_restriction_min_inclusive_get_type" glib:type-struct="IXsdTypeRestrictionMinInclusiveIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMinInclusiveIface" c:type="GXmlIXsdTypeRestrictionMinInclusiveIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMinInclusive">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMaxExclusive" c:type="GXmlIXsdTypeRestrictionMaxExclusive" c:symbol-prefix="ixsd_type_restriction_max_exclusive" glib:type-name="GXmlIXsdTypeRestrictionMaxExclusive" glib:get-type="gxml_ixsd_type_restriction_max_exclusive_get_type" glib:type-struct="IXsdTypeRestrictionMaxExclusiveIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMaxExclusiveIface" c:type="GXmlIXsdTypeRestrictionMaxExclusiveIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMaxExclusive">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMaxInclusive" c:type="GXmlIXsdTypeRestrictionMaxInclusive" c:symbol-prefix="ixsd_type_restriction_max_inclusive" glib:type-name="GXmlIXsdTypeRestrictionMaxInclusive" glib:get-type="gxml_ixsd_type_restriction_max_inclusive_get_type" glib:type-struct="IXsdTypeRestrictionMaxInclusiveIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMaxInclusiveIface" c:type="GXmlIXsdTypeRestrictionMaxInclusiveIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMaxInclusive">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionTotalDigits" c:type="GXmlIXsdTypeRestrictionTotalDigits" c:symbol-prefix="ixsd_type_restriction_total_digits" glib:type-name="GXmlIXsdTypeRestrictionTotalDigits" glib:get-type="gxml_ixsd_type_restriction_total_digits_get_type" glib:type-struct="IXsdTypeRestrictionTotalDigitsIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionTotalDigitsIface" c:type="GXmlIXsdTypeRestrictionTotalDigitsIface" glib:is-gtype-struct-for="IXsdTypeRestrictionTotalDigits">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionFractionDigits" c:type="GXmlIXsdTypeRestrictionFractionDigits" c:symbol-prefix="ixsd_type_restriction_fraction_digits" glib:type-name="GXmlIXsdTypeRestrictionFractionDigits" glib:get-type="gxml_ixsd_type_restriction_fraction_digits_get_type" glib:type-struct="IXsdTypeRestrictionFractionDigitsIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionFractionDigitsIface" c:type="GXmlIXsdTypeRestrictionFractionDigitsIface" glib:is-gtype-struct-for="IXsdTypeRestrictionFractionDigits">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionLength" c:type="GXmlIXsdTypeRestrictionLength" c:symbol-prefix="ixsd_type_restriction_length" glib:type-name="GXmlIXsdTypeRestrictionLength" glib:get-type="gxml_ixsd_type_restriction_length_get_type" glib:type-struct="IXsdTypeRestrictionLengthIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionLengthIface" c:type="GXmlIXsdTypeRestrictionLengthIface" glib:is-gtype-struct-for="IXsdTypeRestrictionLength">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMinLength" c:type="GXmlIXsdTypeRestrictionMinLength" c:symbol-prefix="ixsd_type_restriction_min_length" glib:type-name="GXmlIXsdTypeRestrictionMinLength" glib:get-type="gxml_ixsd_type_restriction_min_length_get_type" glib:type-struct="IXsdTypeRestrictionMinLengthIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMinLengthIface" c:type="GXmlIXsdTypeRestrictionMinLengthIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMinLength">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionMaxLength" c:type="GXmlIXsdTypeRestrictionMaxLength" c:symbol-prefix="ixsd_type_restriction_max_length" glib:type-name="GXmlIXsdTypeRestrictionMaxLength" glib:get-type="gxml_ixsd_type_restriction_max_length_get_type" glib:type-struct="IXsdTypeRestrictionMaxLengthIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionMaxLengthIface" c:type="GXmlIXsdTypeRestrictionMaxLengthIface" glib:is-gtype-struct-for="IXsdTypeRestrictionMaxLength">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration" c:symbol-prefix="ixsd_type_restriction_enumeration" glib:type-name="GXmlIXsdTypeRestrictionEnumeration" glib:get-type="gxml_ixsd_type_restriction_enumeration_get_type" glib:type-struct="IXsdTypeRestrictionEnumerationIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_TYPE_RESTRICTION_ENUMERATION_SCHEMA_NODE_NAME" value="enumeration">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_ixsd_type_restriction_enumeration_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_ixsd_type_restriction_enumeration_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_ixsd_type_restriction_enumeration_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_ixsd_type_restriction_enumeration_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdTypeRestrictionEnumerationIface" c:type="GXmlIXsdTypeRestrictionEnumerationIface" glib:is-gtype-struct-for="IXsdTypeRestrictionEnumeration">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionEnumeration" c:type="GXmlIXsdTypeRestrictionEnumeration*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace" c:symbol-prefix="ixsd_type_restriction_white_space" glib:type-name="GXmlIXsdTypeRestrictionWhiteSpace" glib:get-type="gxml_ixsd_type_restriction_white_space_get_type" glib:type-struct="IXsdTypeRestrictionWhiteSpaceIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_TYPE_RESTRICTION_WHITE_SPACE_SCHEMA_NODE_NAME" value="whiteSpace">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="fixed" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_fixed" c:identifier="gxml_ixsd_type_restriction_white_space_get_fixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_fixed" invoker="get_fixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_fixed" c:identifier="gxml_ixsd_type_restriction_white_space_set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_fixed" invoker="set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_ixsd_type_restriction_white_space_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_ixsd_type_restriction_white_space_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_ixsd_type_restriction_white_space_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_ixsd_type_restriction_white_space_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdTypeRestrictionWhiteSpaceIface" c:type="GXmlIXsdTypeRestrictionWhiteSpaceIface" glib:is-gtype-struct-for="IXsdTypeRestrictionWhiteSpace">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_fixed">
			<callback name="get_fixed" c:type="get_fixed">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_fixed">
			<callback name="set_fixed" c:type="set_fixed">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdTypeRestrictionWhiteSpace" c:type="GXmlIXsdTypeRestrictionWhiteSpace*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionPattern" c:type="GXmlIXsdTypeRestrictionPattern" c:symbol-prefix="ixsd_type_restriction_pattern" glib:type-name="GXmlIXsdTypeRestrictionPattern" glib:get-type="gxml_ixsd_type_restriction_pattern_get_type" glib:type-struct="IXsdTypeRestrictionPatternIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionPatternIface" c:type="GXmlIXsdTypeRestrictionPatternIface" glib:is-gtype-struct-for="IXsdTypeRestrictionPattern">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionAssertion" c:type="GXmlIXsdTypeRestrictionAssertion" c:symbol-prefix="ixsd_type_restriction_assertion" glib:type-name="GXmlIXsdTypeRestrictionAssertion" glib:get-type="gxml_ixsd_type_restriction_assertion_get_type" glib:type-struct="IXsdTypeRestrictionAssertionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionAssertionIface" c:type="GXmlIXsdTypeRestrictionAssertionIface" glib:is-gtype-struct-for="IXsdTypeRestrictionAssertion">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdTypeRestrictionExplicitTimezone" c:type="GXmlIXsdTypeRestrictionExplicitTimezone" c:symbol-prefix="ixsd_type_restriction_explicit_timezone" glib:type-name="GXmlIXsdTypeRestrictionExplicitTimezone" glib:get-type="gxml_ixsd_type_restriction_explicit_timezone_get_type" glib:type-struct="IXsdTypeRestrictionExplicitTimezoneIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdTypeRestrictionDef"/>
	</interface>
	<record name="IXsdTypeRestrictionExplicitTimezoneIface" c:type="GXmlIXsdTypeRestrictionExplicitTimezoneIface" glib:is-gtype-struct-for="IXsdTypeRestrictionExplicitTimezone">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdComplexType" c:type="GXmlIXsdComplexType" c:symbol-prefix="ixsd_complex_type" glib:type-name="GXmlIXsdComplexType" glib:get-type="gxml_ixsd_complex_type_get_type" glib:type-struct="IXsdComplexTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<prerequisite name="GXml.IXsdBaseType"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_COMPLEX_TYPE_SCHEMA_NODE_NAME" value="complexType">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="abstract" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_abstract" c:identifier="gxml_ixsd_complex_type_get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_abstract" invoker="get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_abstract" c:identifier="gxml_ixsd_complex_type_set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_abstract" invoker="set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="block" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_block" c:identifier="gxml_ixsd_complex_type_get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_block" invoker="get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_block" c:identifier="gxml_ixsd_complex_type_set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_block" invoker="set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_ixsd_complex_type_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_final" invoker="get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_final" c:identifier="gxml_ixsd_complex_type_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_final" invoker="set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="mixed" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_mixed" c:identifier="gxml_ixsd_complex_type_get_mixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_mixed" invoker="get_mixed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_mixed" c:identifier="gxml_ixsd_complex_type_set_mixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_mixed" invoker="set_mixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_ixsd_complex_type_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_name" c:identifier="gxml_ixsd_complex_type_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_name" invoker="set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="default-attributes-apply" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_default_attributes_apply" c:identifier="gxml_ixsd_complex_type_get_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_default_attributes_apply" invoker="get_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_default_attributes_apply" c:identifier="gxml_ixsd_complex_type_set_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_attributes_apply" invoker="set_default_attributes_apply">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="content-type" writable="1">
			<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
		</property>
		<method name="get_content_type" c:identifier="gxml_ixsd_complex_type_get_content_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_content_type" invoker="get_content_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_content_type" c:identifier="gxml_ixsd_complex_type_set_content_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_content_type" invoker="set_content_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="type-attributes">
			<type name="GXml.IXsdListAttributes" c:type="GXmlIXsdListAttributes*"/>
		</property>
		<method name="get_type_attributes" c:identifier="gxml_ixsd_complex_type_get_type_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListAttributes" c:type="GXmlIXsdListAttributes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_type_attributes" invoker="get_type_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListAttributes" c:type="GXmlIXsdListAttributes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="group-attributes">
			<type name="GXml.IXsdListAttributesGroup" c:type="GXmlIXsdListAttributesGroup*"/>
		</property>
		<method name="get_group_attributes" c:identifier="gxml_ixsd_complex_type_get_group_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListAttributesGroup" c:type="GXmlIXsdListAttributesGroup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_group_attributes" invoker="get_group_attributes">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdListAttributesGroup" c:type="GXmlIXsdListAttributesGroup*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdComplexTypeIface" c:type="GXmlIXsdComplexTypeIface" glib:is-gtype-struct-for="IXsdComplexType">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_abstract">
			<callback name="get_abstract" c:type="get_abstract">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_abstract">
			<callback name="set_abstract" c:type="set_abstract">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_block">
			<callback name="get_block" c:type="get_block">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_block">
			<callback name="set_block" c:type="set_block">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_final">
			<callback name="get_final" c:type="get_final">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_final">
			<callback name="set_final" c:type="set_final">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_mixed">
			<callback name="get_mixed" c:type="get_mixed">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_mixed">
			<callback name="set_mixed" c:type="set_mixed">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_name">
			<callback name="set_name" c:type="set_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_default_attributes_apply">
			<callback name="get_default_attributes_apply" c:type="get_default_attributes_apply">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_default_attributes_apply">
			<callback name="set_default_attributes_apply" c:type="set_default_attributes_apply">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_content_type">
			<callback name="get_content_type" c:type="get_content_type">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_content_type">
			<callback name="set_content_type" c:type="set_content_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_type_attributes">
			<callback name="get_type_attributes" c:type="get_type_attributes">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListAttributes" c:type="GXmlIXsdListAttributes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_group_attributes">
			<callback name="get_group_attributes" c:type="get_group_attributes">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdListAttributesGroup" c:type="GXmlIXsdListAttributesGroup*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdExtension" c:type="GXmlIXsdExtension" c:symbol-prefix="ixsd_extension" glib:type-name="GXmlIXsdExtension" glib:get-type="gxml_ixsd_extension_get_type" glib:type-struct="IXsdExtensionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_EXTENSION_SCHEMA_NODE_NAME" value="extension">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="base" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_base" c:identifier="gxml_ixsd_extension_get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_base" invoker="get_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_base" c:identifier="gxml_ixsd_extension_set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_base" invoker="set_base">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdExtensionIface" c:type="GXmlIXsdExtensionIface" glib:is-gtype-struct-for="IXsdExtension">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_base">
			<callback name="get_base" c:type="get_base">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_base">
			<callback name="set_base" c:type="set_base">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdExtension" c:type="GXmlIXsdExtension*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdElement" c:type="GXmlIXsdElement" c:symbol-prefix="ixsd_element" glib:type-name="GXmlIXsdElement" glib:get-type="gxml_ixsd_element_get_type" glib:type-struct="IXsdElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomElement"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_ELEMENT_SCHEMA_NODE_NAME" value="element">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
		<property name="abstract" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_abstract" c:identifier="gxml_ixsd_element_get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_abstract" invoker="get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_abstract" c:identifier="gxml_ixsd_element_set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_abstract" invoker="set_abstract">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="block" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_block" c:identifier="gxml_ixsd_element_get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_block" invoker="get_block">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_block" c:identifier="gxml_ixsd_element_set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_block" invoker="set_block">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="default" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_default" c:identifier="gxml_ixsd_element_get_default">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_default" invoker="get_default">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_default" c:identifier="gxml_ixsd_element_set_default">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default" invoker="set_default">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="final" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_final" c:identifier="gxml_ixsd_element_get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_final" invoker="get_final">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_final" c:identifier="gxml_ixsd_element_set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_final" invoker="set_final">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="fixed" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_fixed" c:identifier="gxml_ixsd_element_get_fixed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_fixed" invoker="get_fixed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_fixed" c:identifier="gxml_ixsd_element_set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_fixed" invoker="set_fixed">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="form" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_form" c:identifier="gxml_ixsd_element_get_form">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_form" invoker="get_form">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_form" c:identifier="gxml_ixsd_element_set_form">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_form" invoker="set_form">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="gxml_ixsd_element_get_id">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_id" c:identifier="gxml_ixsd_element_set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_id" invoker="set_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="maxOccurs" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_maxOccurs" c:identifier="gxml_ixsd_element_get_maxOccurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_maxOccurs" invoker="get_maxOccurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_maxOccurs" c:identifier="gxml_ixsd_element_set_maxOccurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_maxOccurs" invoker="set_maxOccurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="minOccurs" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_minOccurs" c:identifier="gxml_ixsd_element_get_minOccurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_minOccurs" invoker="get_minOccurs">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_minOccurs" c:identifier="gxml_ixsd_element_set_minOccurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_minOccurs" invoker="set_minOccurs">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_ixsd_element_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_name" c:identifier="gxml_ixsd_element_set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_name" invoker="set_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="nillable" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_nillable" c:identifier="gxml_ixsd_element_get_nillable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_nillable" invoker="get_nillable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_nillable" c:identifier="gxml_ixsd_element_set_nillable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_nillable" invoker="set_nillable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="ref" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_ref" c:identifier="gxml_ixsd_element_get_ref">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_ref" invoker="get_ref">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_ref" c:identifier="gxml_ixsd_element_set_ref">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_ref" invoker="set_ref">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="substitution-group" writable="1">
			<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
		</property>
		<method name="get_substitution_group" c:identifier="gxml_ixsd_element_get_substitution_group">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_substitution_group" invoker="get_substitution_group">
			<return-value transfer-ownership="none">
				<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_substitution_group" c:identifier="gxml_ixsd_element_set_substitution_group">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_substitution_group" invoker="set_substitution_group">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="target-namespace" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target_namespace" c:identifier="gxml_ixsd_element_get_target_namespace">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_target_namespace" invoker="get_target_namespace">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_target_namespace" c:identifier="gxml_ixsd_element_set_target_namespace">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_target_namespace" invoker="set_target_namespace">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="object-type" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_object_type" c:identifier="gxml_ixsd_element_get_object_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_object_type" invoker="get_object_type">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_object_type" c:identifier="gxml_ixsd_element_set_object_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_object_type" invoker="set_object_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="anotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_ixsd_element_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_anotation" invoker="get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_anotation" c:identifier="gxml_ixsd_element_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_anotation" invoker="set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="simple-type" writable="1">
			<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
		</property>
		<method name="get_simple_type" c:identifier="gxml_ixsd_element_get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_simple_type" invoker="get_simple_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_simple_type" c:identifier="gxml_ixsd_element_set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_simple_type" invoker="set_simple_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="complex-type" writable="1">
			<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
		</property>
		<method name="get_complex_type" c:identifier="gxml_ixsd_element_get_complex_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_complex_type" invoker="get_complex_type">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_complex_type" c:identifier="gxml_ixsd_element_set_complex_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_complex_type" invoker="set_complex_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdElementIface" c:type="GXmlIXsdElementIface" glib:is-gtype-struct-for="IXsdElement">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_abstract">
			<callback name="get_abstract" c:type="get_abstract">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_abstract">
			<callback name="set_abstract" c:type="set_abstract">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_block">
			<callback name="get_block" c:type="get_block">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_block">
			<callback name="set_block" c:type="set_block">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_default">
			<callback name="get_default" c:type="get_default">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_default">
			<callback name="set_default" c:type="set_default">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_final">
			<callback name="get_final" c:type="get_final">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_final">
			<callback name="set_final" c:type="set_final">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_fixed">
			<callback name="get_fixed" c:type="get_fixed">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_fixed">
			<callback name="set_fixed" c:type="set_fixed">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_form">
			<callback name="get_form" c:type="get_form">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_form">
			<callback name="set_form" c:type="set_form">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_id">
			<callback name="set_id" c:type="set_id">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_maxOccurs">
			<callback name="get_maxOccurs" c:type="get_maxOccurs">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_maxOccurs">
			<callback name="set_maxOccurs" c:type="set_maxOccurs">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_minOccurs">
			<callback name="get_minOccurs" c:type="get_minOccurs">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_minOccurs">
			<callback name="set_minOccurs" c:type="set_minOccurs">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_name">
			<callback name="set_name" c:type="set_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_nillable">
			<callback name="get_nillable" c:type="get_nillable">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_nillable">
			<callback name="set_nillable" c:type="set_nillable">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_ref">
			<callback name="get_ref" c:type="get_ref">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_ref">
			<callback name="set_ref" c:type="set_ref">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_substitution_group">
			<callback name="get_substitution_group" c:type="get_substitution_group">
				<return-value transfer-ownership="none">
					<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_substitution_group">
			<callback name="set_substitution_group" c:type="set_substitution_group">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomTokenList" c:type="GXmlDomTokenList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_target_namespace">
			<callback name="get_target_namespace" c:type="get_target_namespace">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_target_namespace">
			<callback name="set_target_namespace" c:type="set_target_namespace">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_object_type">
			<callback name="get_object_type" c:type="get_object_type">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_object_type">
			<callback name="set_object_type" c:type="set_object_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_anotation">
			<callback name="get_anotation" c:type="get_anotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_anotation">
			<callback name="set_anotation" c:type="set_anotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_simple_type">
			<callback name="get_simple_type" c:type="get_simple_type">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_simple_type">
			<callback name="set_simple_type" c:type="set_simple_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdSimpleType" c:type="GXmlIXsdSimpleType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_complex_type">
			<callback name="get_complex_type" c:type="get_complex_type">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_complex_type">
			<callback name="set_complex_type" c:type="set_complex_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdElement" c:type="GXmlIXsdElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdComplexType" c:type="GXmlIXsdComplexType*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdAnnotation" c:type="GXmlIXsdAnnotation" c:symbol-prefix="ixsd_annotation" glib:type-name="GXmlIXsdAnnotation" glib:get-type="gxml_ixsd_annotation_get_type" glib:type-struct="IXsdAnnotationIface">
		<prerequisite name="GObject.Object"/>
	</interface>
	<record name="IXsdAnnotationIface" c:type="GXmlIXsdAnnotationIface" glib:is-gtype-struct-for="IXsdAnnotation">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdBaseContent" c:type="GXmlIXsdBaseContent" c:symbol-prefix="ixsd_base_content" glib:type-name="GXmlIXsdBaseContent" glib:get-type="gxml_ixsd_base_content_get_type" glib:type-struct="IXsdBaseContentIface">
		<prerequisite name="GObject.Object"/>
		<property name="anotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_ixsd_base_content_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_anotation" invoker="get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_anotation" c:identifier="gxml_ixsd_base_content_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_anotation" invoker="set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdBaseContentIface" c:type="GXmlIXsdBaseContentIface" glib:is-gtype-struct-for="IXsdBaseContent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_anotation">
			<callback name="get_anotation" c:type="get_anotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_anotation">
			<callback name="set_anotation" c:type="set_anotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseContent" c:type="GXmlIXsdBaseContent*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdSimpleContent" c:type="GXmlIXsdSimpleContent" c:symbol-prefix="ixsd_simple_content" glib:type-name="GXmlIXsdSimpleContent" glib:get-type="gxml_ixsd_simple_content_get_type" glib:type-struct="IXsdSimpleContentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdBaseContent"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_SIMPLE_CONTENT_SCHEMA_NODE_NAME" value="simpleContent">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
	</interface>
	<record name="IXsdSimpleContentIface" c:type="GXmlIXsdSimpleContentIface" glib:is-gtype-struct-for="IXsdSimpleContent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdComplexContent" c:type="GXmlIXsdComplexContent" c:symbol-prefix="ixsd_complex_content" glib:type-name="GXmlIXsdComplexContent" glib:get-type="gxml_ixsd_complex_content_get_type" glib:type-struct="IXsdComplexContentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdBaseContent"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_COMPLEX_CONTENT_SCHEMA_NODE_NAME" value="complexContent">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
	</interface>
	<record name="IXsdComplexContentIface" c:type="GXmlIXsdComplexContentIface" glib:is-gtype-struct-for="IXsdComplexContent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdOpenContent" c:type="GXmlIXsdOpenContent" c:symbol-prefix="ixsd_open_content" glib:type-name="GXmlIXsdOpenContent" glib:get-type="gxml_ixsd_open_content_get_type" glib:type-struct="IXsdOpenContentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdBaseContent"/>
	</interface>
	<record name="IXsdOpenContentIface" c:type="GXmlIXsdOpenContentIface" glib:is-gtype-struct-for="IXsdOpenContent">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute" c:symbol-prefix="ixsd_base_attribute" glib:type-name="GXmlIXsdBaseAttribute" glib:get-type="gxml_ixsd_base_attribute_get_type" glib:type-struct="IXsdBaseAttributeIface">
		<prerequisite name="GObject.Object"/>
		<property name="anotation" writable="1">
			<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
		</property>
		<method name="get_anotation" c:identifier="gxml_ixsd_base_attribute_get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_anotation" invoker="get_anotation">
			<return-value transfer-ownership="none">
				<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_anotation" c:identifier="gxml_ixsd_base_attribute_set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_anotation" invoker="set_anotation">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdBaseAttributeIface" c:type="GXmlIXsdBaseAttributeIface" glib:is-gtype-struct-for="IXsdBaseAttribute">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_anotation">
			<callback name="get_anotation" c:type="get_anotation">
				<return-value transfer-ownership="none">
					<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_anotation">
			<callback name="set_anotation" c:type="set_anotation">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdBaseAttribute" c:type="GXmlIXsdBaseAttribute*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.IXsdAnnotation" c:type="GXmlIXsdAnnotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdAttribute" c:type="GXmlIXsdAttribute" c:symbol-prefix="ixsd_attribute" glib:type-name="GXmlIXsdAttribute" glib:get-type="gxml_ixsd_attribute_get_type" glib:type-struct="IXsdAttributeIface">
		<prerequisite name="GObject.Object"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_ATTRIBUTE_SCHEMA_NODE_NAME" value="attribute">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
	</interface>
	<record name="IXsdAttributeIface" c:type="GXmlIXsdAttributeIface" glib:is-gtype-struct-for="IXsdAttribute">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdAttributeGroup" c:type="GXmlIXsdAttributeGroup" c:symbol-prefix="ixsd_attribute_group" glib:type-name="GXmlIXsdAttributeGroup" glib:get-type="gxml_ixsd_attribute_group_get_type" glib:type-struct="IXsdAttributeGroupIface">
		<prerequisite name="GObject.Object"/>
		<constant name="SCHEMA_NODE_NAME" c:identifier="GXML_IXSD_ATTRIBUTE_GROUP_SCHEMA_NODE_NAME" value="attributeGroup">
			<type name="utf8" c:type="const gchar*"/>
		</constant>
	</interface>
	<record name="IXsdAttributeGroupIface" c:type="GXmlIXsdAttributeGroupIface" glib:is-gtype-struct-for="IXsdAttributeGroup">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdList" c:type="GXmlIXsdList" c:symbol-prefix="ixsd_list" glib:type-name="GXmlIXsdList" glib:get-type="gxml_ixsd_list_get_type" glib:type-struct="IXsdListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Collection"/>
		<property name="element" writable="1" construct="1">
			<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
		</property>
		<method name="get_element" c:identifier="gxml_ixsd_list_get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_element" invoker="get_element">
			<return-value transfer-ownership="none">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_element" c:identifier="gxml_ixsd_list_set_element">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_element" invoker="set_element">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="items-type" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_items_type" c:identifier="gxml_ixsd_list_get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_items_type" invoker="get_items_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_items_type" c:identifier="gxml_ixsd_list_set_items_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_items_type" invoker="set_items_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="items-name" writable="1" construct="1">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_items_name" c:identifier="gxml_ixsd_list_get_items_name">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_items_name" invoker="get_items_name">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_items_name" c:identifier="gxml_ixsd_list_set_items_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_items_name" invoker="set_items_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="gxml_ixsd_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_item" c:identifier="gxml_ixsd_list_get_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_item" invoker="get_item">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append" c:identifier="gxml_ixsd_list_append">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append" invoker="append">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove" c:identifier="gxml_ixsd_list_remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove" invoker="remove">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="index_of" c:identifier="gxml_ixsd_list_index_of">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="index_of" invoker="index_of">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="IXsdListIface" c:type="GXmlIXsdListIface" glib:is-gtype-struct-for="IXsdList">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_item">
			<callback name="get_item" c:type="get_item">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append">
			<callback name="append" c:type="append">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove">
			<callback name="remove" c:type="remove">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="index_of">
			<callback name="index_of" c:type="index_of">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_element">
			<callback name="get_element" c:type="get_element">
				<return-value transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_element">
			<callback name="set_element" c:type="set_element">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_type">
			<callback name="get_items_type" c:type="get_items_type">
				<return-value transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_items_type">
			<callback name="set_items_type" c:type="set_items_type">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_items_name">
			<callback name="get_items_name" c:type="get_items_name">
				<return-value transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_items_name">
			<callback name="set_items_name" c:type="set_items_name">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.IXsdList" c:type="GXmlIXsdList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="IXsdListElements" c:type="GXmlIXsdListElements" c:symbol-prefix="ixsd_list_elements" glib:type-name="GXmlIXsdListElements" glib:get-type="gxml_ixsd_list_elements_get_type" glib:type-struct="IXsdListElementsIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListElementsIface" c:type="GXmlIXsdListElementsIface" glib:is-gtype-struct-for="IXsdListElements">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListSimpleTypes" c:type="GXmlIXsdListSimpleTypes" c:symbol-prefix="ixsd_list_simple_types" glib:type-name="GXmlIXsdListSimpleTypes" glib:get-type="gxml_ixsd_list_simple_types_get_type" glib:type-struct="IXsdListSimpleTypesIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListSimpleTypesIface" c:type="GXmlIXsdListSimpleTypesIface" glib:is-gtype-struct-for="IXsdListSimpleTypes">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListComplexTypes" c:type="GXmlIXsdListComplexTypes" c:symbol-prefix="ixsd_list_complex_types" glib:type-name="GXmlIXsdListComplexTypes" glib:get-type="gxml_ixsd_list_complex_types_get_type" glib:type-struct="IXsdListComplexTypesIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListComplexTypesIface" c:type="GXmlIXsdListComplexTypesIface" glib:is-gtype-struct-for="IXsdListComplexTypes">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListAttributes" c:type="GXmlIXsdListAttributes" c:symbol-prefix="ixsd_list_attributes" glib:type-name="GXmlIXsdListAttributes" glib:get-type="gxml_ixsd_list_attributes_get_type" glib:type-struct="IXsdListAttributesIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListAttributesIface" c:type="GXmlIXsdListAttributesIface" glib:is-gtype-struct-for="IXsdListAttributes">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListAttributesGroup" c:type="GXmlIXsdListAttributesGroup" c:symbol-prefix="ixsd_list_attributes_group" glib:type-name="GXmlIXsdListAttributesGroup" glib:get-type="gxml_ixsd_list_attributes_group_get_type" glib:type-struct="IXsdListAttributesGroupIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListAttributesGroupIface" c:type="GXmlIXsdListAttributesGroupIface" glib:is-gtype-struct-for="IXsdListAttributesGroup">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListTypeRestrictionEnumerations" c:type="GXmlIXsdListTypeRestrictionEnumerations" c:symbol-prefix="ixsd_list_type_restriction_enumerations" glib:type-name="GXmlIXsdListTypeRestrictionEnumerations" glib:get-type="gxml_ixsd_list_type_restriction_enumerations_get_type" glib:type-struct="IXsdListTypeRestrictionEnumerationsIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListTypeRestrictionEnumerationsIface" c:type="GXmlIXsdListTypeRestrictionEnumerationsIface" glib:is-gtype-struct-for="IXsdListTypeRestrictionEnumerations">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="IXsdListTypeRestrictionWhiteSpaces" c:type="GXmlIXsdListTypeRestrictionWhiteSpaces" c:symbol-prefix="ixsd_list_type_restriction_white_spaces" glib:type-name="GXmlIXsdListTypeRestrictionWhiteSpaces" glib:get-type="gxml_ixsd_list_type_restriction_white_spaces_get_type" glib:type-struct="IXsdListTypeRestrictionWhiteSpacesIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.IXsdList"/>
	</interface>
	<record name="IXsdListTypeRestrictionWhiteSpacesIface" c:type="GXmlIXsdListTypeRestrictionWhiteSpacesIface" glib:is-gtype-struct-for="IXsdListTypeRestrictionWhiteSpaces">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="Object" c:type="GXmlObject" c:symbol-prefix="object" glib:type-name="GXmlObject" glib:get-type="gxml_object_get_type" glib:type-struct="ObjectIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.DomNode"/>
		<prerequisite name="GXml.DomElement"/>
		<method name="get_properties_list" c:identifier="gxml_object_get_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_properties_list" invoker="get_properties_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="find_property_name" c:identifier="gxml_object_find_property_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_name" invoker="find_property_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="find_object_property_name" c:identifier="gxml_object_find_object_property_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="pname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_object_property_name" invoker="find_object_property_name">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="pname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_property_element_list" c:identifier="gxml_object_get_property_element_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_property_element_list" invoker="get_property_element_list">
			<return-value transfer-ownership="full">
				<type name="GLib.List" c:type="GList*">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="get_property_string" c:identifier="gxml_object_get_property_string">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_property_string" invoker="get_property_string">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_attribute" c:identifier="gxml_object_get_attribute">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attribute" invoker="get_attribute">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="find_property" c:identifier="gxml_object_find_property">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.Property" c:type="GXmlProperty*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property" invoker="find_property">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.Property" c:type="GXmlProperty*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_attribute" c:identifier="gxml_object_set_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attribute" invoker="set_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_child" c:identifier="gxml_object_get_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_child" invoker="get_child">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="find_elements" c:identifier="gxml_object_find_elements">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_elements" invoker="find_elements">
			<return-value transfer-ownership="full">
				<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attribute" c:identifier="gxml_object_remove_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attribute" invoker="remove_attribute">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_instance_property" c:identifier="gxml_object_set_instance_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_instance_property" invoker="set_instance_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="clean_property_elements" c:identifier="gxml_object_clean_property_elements" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="clean_property_elements" invoker="clean_property_elements" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Object" c:type="GXmlObject*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ObjectIface" c:type="GXmlObjectIface" glib:is-gtype-struct-for="Object">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_properties_list">
			<callback name="get_properties_list" c:type="get_properties_list">
				<return-value transfer-ownership="full">
					<type name="GLib.List" c:type="GList*">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_property_name">
			<callback name="find_property_name" c:type="find_property_name">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_object_property_name">
			<callback name="find_object_property_name" c:type="find_object_property_name">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="pname" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_property_element_list">
			<callback name="get_property_element_list" c:type="get_property_element_list">
				<return-value transfer-ownership="full">
					<type name="GLib.List" c:type="GList*">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_property_string">
			<callback name="get_property_string" c:type="get_property_string">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attribute">
			<callback name="get_attribute" c:type="get_attribute">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_property">
			<callback name="find_property" c:type="find_property">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attribute">
			<callback name="set_attribute" c:type="set_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_child">
			<callback name="get_child" c:type="get_child">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_elements">
			<callback name="find_elements" c:type="find_elements">
				<return-value transfer-ownership="full">
					<type name="GXml.DomElementList" c:type="GXmlDomElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attribute">
			<callback name="remove_attribute" c:type="remove_attribute">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_instance_property">
			<callback name="set_instance_property" c:type="set_instance_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="clean_property_elements">
			<callback name="clean_property_elements" c:type="clean_property_elements" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Object" c:type="GXmlObject*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Parser" c:type="GXmlParser" c:symbol-prefix="parser" glib:type-name="GXmlParser" glib:get-type="gxml_parser_get_type" glib:type-struct="ParserIface">
		<prerequisite name="GObject.Object"/>
		<property name="backup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_backup" c:identifier="gxml_parser_get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_backup" invoker="get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_backup" c:identifier="gxml_parser_set_backup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_backup" invoker="set_backup">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="indent" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_indent" c:identifier="gxml_parser_get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_indent" invoker="get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_indent" c:identifier="gxml_parser_set_indent">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_indent" invoker="set_indent">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="cancellable" writable="1">
			<type name="Gio.Cancellable" c:type="GCancellable*"/>
		</property>
		<method name="get_cancellable" c:identifier="gxml_parser_get_cancellable">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_cancellable" invoker="get_cancellable">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_cancellable" c:identifier="gxml_parser_set_cancellable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_cancellable" invoker="set_cancellable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="node">
			<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
		</property>
		<method name="get_node" c:identifier="gxml_parser_get_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_node" invoker="get_node">
			<return-value transfer-ownership="none">
				<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="types">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="GType" c:type="GType"/>
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GType" c:type="GType"/>
				</type>
			</type>
		</property>
		<method name="get_types" c:identifier="gxml_parser_get_types">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="GType" c:type="GType"/>
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GType" c:type="GType"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_types" invoker="get_types">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="GType" c:type="GType"/>
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GType" c:type="GType"/>
					</type>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="write_file" c:identifier="gxml_parser_write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file" invoker="write_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_file_async" c:identifier="gxml_parser_write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_file_finish" c:identifier="gxml_parser_write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_file_async" invoker="write_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_file_finish" invoker="write_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_string" c:identifier="gxml_parser_write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="write_string" invoker="write_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="write_string_async" c:identifier="gxml_parser_write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_string_finish" c:identifier="gxml_parser_write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_string_async" invoker="write_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_string_finish" invoker="write_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream" c:identifier="gxml_parser_write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream" invoker="write_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_stream_async" c:identifier="gxml_parser_write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_stream_finish" c:identifier="gxml_parser_write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="write_stream_async" invoker="write_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="write_stream_finish" invoker="write_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_file" c:identifier="gxml_parser_read_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_file" invoker="read_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_file_async" c:identifier="gxml_parser_read_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_file_finish" c:identifier="gxml_parser_read_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_file_async" invoker="read_file_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_file_finish" invoker="read_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_stream" c:identifier="gxml_parser_read_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_stream" invoker="read_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_stream_async" c:identifier="gxml_parser_read_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_stream_finish" c:identifier="gxml_parser_read_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_stream_async" invoker="read_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_stream_finish" invoker="read_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_string" c:identifier="gxml_parser_read_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_string" invoker="read_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_string_async" c:identifier="gxml_parser_read_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_string_finish" c:identifier="gxml_parser_read_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_string_async" invoker="read_string_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_string_finish" invoker="read_string_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream" c:identifier="gxml_parser_create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream" invoker="create_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_stream_async" c:identifier="gxml_parser_create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_stream_finish" c:identifier="gxml_parser_create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_stream_async" invoker="create_stream_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_stream_finish" invoker="create_stream_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_nodes" c:identifier="gxml_parser_read_child_nodes" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_nodes" invoker="read_child_nodes" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_nodes_async" c:identifier="gxml_parser_read_child_nodes_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_child_nodes_finish" c:identifier="gxml_parser_read_child_nodes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_nodes_async" invoker="read_child_nodes_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_child_nodes_finish" invoker="read_child_nodes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_node" c:identifier="gxml_parser_read_child_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_node" invoker="read_child_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_element" c:identifier="gxml_parser_read_child_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_element" invoker="read_child_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_element_property" c:identifier="gxml_parser_read_element_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="element" direction="out" transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_element_property" invoker="read_element_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="element" direction="out" transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add_element_collection" c:identifier="gxml_parser_add_element_collection" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="element" direction="out" transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_element_collection" invoker="add_element_collection" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
				<parameter name="element" direction="out" transfer-ownership="full">
					<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_nodes_stream" c:identifier="gxml_parser_read_child_nodes_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_nodes_stream" invoker="read_child_nodes_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_child_nodes_string" c:identifier="gxml_parser_read_child_nodes_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_child_nodes_string" invoker="read_child_nodes_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_unparsed" c:identifier="gxml_parser_read_unparsed" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="read_unparsed" invoker="read_unparsed" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="move_next_node" c:identifier="gxml_parser_move_next_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="move_next_node" invoker="move_next_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="current_is_empty_element" c:identifier="gxml_parser_current_is_empty_element">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="current_is_empty_element" invoker="current_is_empty_element">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="current_is_element" c:identifier="gxml_parser_current_is_element">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="current_is_element" invoker="current_is_element">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="current_is_document" c:identifier="gxml_parser_current_is_document">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="current_is_document" invoker="current_is_document">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="current_node_name" c:identifier="gxml_parser_current_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="current_node_name" invoker="current_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="create_element" c:identifier="gxml_parser_create_element" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element" invoker="create_element" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="parent" transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="read_element" c:identifier="gxml_parser_read_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_element" invoker="read_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Parser" c:type="GXmlParser*"/>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ParserIface" c:type="GXmlParserIface" glib:is-gtype-struct-for="Parser">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="write_file">
			<callback name="write_file" c:type="write_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_async">
			<callback name="write_file_async" c:type="write_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_file_finish">
			<callback name="write_file_finish" c:type="write_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string">
			<callback name="write_string" c:type="write_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_async">
			<callback name="write_string_async" c:type="write_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_string_finish">
			<callback name="write_string_finish" c:type="write_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream">
			<callback name="write_stream" c:type="write_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_async">
			<callback name="write_stream_async" c:type="write_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.OutputStream" c:type="GOutputStream*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="write_stream_finish">
			<callback name="write_stream_finish" c:type="write_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_file">
			<callback name="read_file" c:type="read_file" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_file_async">
			<callback name="read_file_async" c:type="read_file_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="file" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_file_finish">
			<callback name="read_file_finish" c:type="read_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_stream">
			<callback name="read_stream" c:type="read_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_stream_async">
			<callback name="read_stream_async" c:type="read_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="stream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_stream_finish">
			<callback name="read_stream_finish" c:type="read_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_string">
			<callback name="read_string" c:type="read_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_string_async">
			<callback name="read_string_async" c:type="read_string_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_string_finish">
			<callback name="read_string_finish" c:type="read_string_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream">
			<callback name="create_stream" c:type="create_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_async">
			<callback name="create_stream_async" c:type="create_stream_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_stream_finish">
			<callback name="create_stream_finish" c:type="create_stream_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_nodes">
			<callback name="read_child_nodes" c:type="read_child_nodes" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_nodes_async">
			<callback name="read_child_nodes_async" c:type="read_child_nodes_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_nodes_finish">
			<callback name="read_child_nodes_finish" c:type="read_child_nodes_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_node">
			<callback name="read_child_node" c:type="read_child_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_element">
			<callback name="read_child_element" c:type="read_child_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_element_property">
			<callback name="read_element_property" c:type="read_element_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="element" direction="out" transfer-ownership="full">
						<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add_element_collection">
			<callback name="add_element_collection" c:type="add_element_collection" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
					<parameter name="element" direction="out" transfer-ownership="full">
						<type name="GXml.DomNode" c:type="GXmlDomNode**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_nodes_stream">
			<callback name="read_child_nodes_stream" c:type="read_child_nodes_stream" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="istream" transfer-ownership="none">
						<type name="Gio.InputStream" c:type="GInputStream*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_child_nodes_string">
			<callback name="read_child_nodes_string" c:type="read_child_nodes_string" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="str" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_unparsed">
			<callback name="read_unparsed" c:type="read_unparsed" throws="1">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="move_next_node">
			<callback name="move_next_node" c:type="move_next_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="current_is_empty_element">
			<callback name="current_is_empty_element" c:type="current_is_empty_element">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="current_is_element">
			<callback name="current_is_element" c:type="current_is_element">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="current_is_document">
			<callback name="current_is_document" c:type="current_is_document">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="current_node_name">
			<callback name="current_node_name" c:type="current_node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_element">
			<callback name="create_element" c:type="create_element" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="parent" transfer-ownership="none">
						<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_element">
			<callback name="read_element" c:type="read_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.DomElement" c:type="GXmlDomElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_backup">
			<callback name="get_backup" c:type="get_backup">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_backup">
			<callback name="set_backup" c:type="set_backup">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_indent">
			<callback name="get_indent" c:type="get_indent">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_indent">
			<callback name="set_indent" c:type="set_indent">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_cancellable">
			<callback name="get_cancellable" c:type="get_cancellable">
				<return-value transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_cancellable">
			<callback name="set_cancellable" c:type="set_cancellable">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_node">
			<callback name="get_node" c:type="get_node">
				<return-value transfer-ownership="none">
					<type name="GXml.DomNode" c:type="GXmlDomNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_types">
			<callback name="get_types" c:type="get_types">
				<return-value transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="GType" c:type="GType"/>
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GType" c:type="GType"/>
						</type>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Parser" c:type="GXmlParser*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Property" c:type="GXmlProperty" c:symbol-prefix="property" glib:type-name="GXmlProperty" glib:get-type="gxml_property_get_type" glib:type-struct="PropertyIface">
		<prerequisite name="GObject.Object"/>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_property_get_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_property_set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="validate_value" c:identifier="gxml_property_validate_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="validate_value" invoker="validate_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.Property" c:type="GXmlProperty*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="PropertyIface" c:type="GXmlPropertyIface" glib:is-gtype-struct-for="Property">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="validate_value">
			<callback name="validate_value" c:type="validate_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Property" c:type="GXmlProperty*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Property" c:type="GXmlProperty*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Property" c:type="GXmlProperty*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" nullable="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="XPathContext" c:type="GXmlXPathContext" c:symbol-prefix="xpath_context" glib:type-name="GXmlXPathContext" glib:get-type="gxml_xpath_context_get_type" glib:type-struct="XPathContextIface">
		<prerequisite name="GObject.Object"/>
		<method name="evaluate" c:identifier="gxml_xpath_context_evaluate" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathContext" c:type="GXmlXPathContext*"/>
				</instance-parameter>
				<parameter name="expression" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="resolver" transfer-ownership="none" nullable="1">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="evaluate" invoker="evaluate" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathContext" c:type="GXmlXPathContext*"/>
				</instance-parameter>
				<parameter name="expression" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="resolver" transfer-ownership="none" nullable="1">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="XPathContextIface" c:type="GXmlXPathContextIface" glib:is-gtype-struct-for="XPathContext">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="evaluate">
			<callback name="evaluate" c:type="evaluate" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathContext" c:type="GXmlXPathContext*"/>
					</parameter>
					<parameter name="expression" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="resolver" transfer-ownership="none" nullable="1">
						<type name="Gee.Map" c:type="GeeMap*">
							<type name="utf8" c:type="gchar*"/>
							<type name="utf8" c:type="gchar*"/>
						</type>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="XPathObject" c:type="GXmlXPathObject" c:symbol-prefix="xpath_object" glib:type-name="GXmlXPathObject" glib:get-type="gxml_xpath_object_get_type" glib:type-struct="XPathObjectIface">
		<prerequisite name="GObject.Object"/>
		<property name="object-type">
			<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
		</property>
		<method name="get_object_type" c:identifier="gxml_xpath_object_get_object_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_object_type" invoker="get_object_type">
			<return-value transfer-ownership="none">
				<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="boolean-value">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_boolean_value" c:identifier="gxml_xpath_object_get_boolean_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_boolean_value" invoker="get_boolean_value">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="string-value">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_string_value" c:identifier="gxml_xpath_object_get_string_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_string_value" invoker="get_string_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="number-value">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_number_value" c:identifier="gxml_xpath_object_get_number_value">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_number_value" invoker="get_number_value">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="nodeset">
			<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
		</property>
		<method name="get_nodeset" c:identifier="gxml_xpath_object_get_nodeset">
			<return-value transfer-ownership="none">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_nodeset" invoker="get_nodeset">
			<return-value transfer-ownership="none">
				<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="XPathObjectIface" c:type="GXmlXPathObjectIface" glib:is-gtype-struct-for="XPathObject">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_object_type">
			<callback name="get_object_type" c:type="get_object_type">
				<return-value transfer-ownership="none">
					<type name="GXml.XPathObjectType" c:type="GXmlXPathObjectType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_boolean_value">
			<callback name="get_boolean_value" c:type="get_boolean_value">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_string_value">
			<callback name="get_string_value" c:type="get_string_value">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_number_value">
			<callback name="get_number_value" c:type="get_number_value">
				<return-value transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_nodeset">
			<callback name="get_nodeset" c:type="get_nodeset">
				<return-value transfer-ownership="none">
					<type name="GXml.DomHTMLCollection" c:type="GXmlDomHTMLCollection*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.XPathObject" c:type="GXmlXPathObject*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="DomMutationCallback" c:type="GXmlDomMutationCallback">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="mutations" transfer-ownership="none">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.DomMutationRecord" c:type="GXmlDomMutationRecord*"/>
				</type>
			</parameter>
			<parameter name="observer" transfer-ownership="none">
				<type name="GXml.DomMutationObserver" c:type="GXmlDomMutationObserver*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="2">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
</namespace>
</repository>
