<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <c:include name="gpaste.h"/>
  <namespace name="GPaste"
             version="2"
             shared-library="libgpaste-2.so.0"
             c:identifier-prefixes="GPaste"
             c:symbol-prefixes="g_paste">
    <constant name="BUS_NAME"
              value="org.gnome.GPaste"
              c:type="G_PASTE_BUS_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="17"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CLOSE_ON_SELECT_SETTING"
              value="close-on-select"
              c:type="G_PASTE_CLOSE_ON_SELECT_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="21"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="CONST_CASTER"
                    c:identifier="G_PASTE_CONST_CASTER"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="40"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="TYPE_NAME">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONST_CHECKER"
                    c:identifier="G_PASTE_CONST_CHECKER"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="28"/>
      <parameters>
        <parameter name="TYPE_NAME">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONST_CLASS_GETTER"
                    c:identifier="G_PASTE_CONST_CLASS_GETTER"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="34"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="TYPE_NAME">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONST_FUNCS"
                    c:identifier="G_PASTE_CONST_FUNCS"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="46"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="TYPE_NAME">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONST_PRIV_ACCESSOR"
                    c:identifier="G_PASTE_CONST_PRIV_ACCESSOR"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="59"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Client"
           c:symbol-prefix="client"
           c:type="GPasteClient"
           parent="Gio.DBusProxy"
           glib:type-name="GPasteClient"
           glib:get-type="g_paste_client_get_type"
           glib:type-struct="ClientClass">
      <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                       line="20"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="g_paste_client_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2136">Create a new instance of #GPasteClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="366"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="2143">a newly allocated #GPasteClient
                          free it with g_object_unref</doc>
          <type name="Client" c:type="GPasteClient*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2138">A #GAsyncResult obtained from the #GAsyncReadyCallback function passed to the async ctor.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="g_paste_client_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2107">Create a new instance of #GPasteClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="363"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="2113">a newly allocated #GPasteClient
                          free it with g_object_unref</doc>
          <type name="Client" c:type="GPasteClient*"/>
        </return-value>
      </constructor>
      <function name="new"
                c:identifier="g_paste_client_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2122">Create a new instance of #GPasteClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="364"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2124">Callback function to invoke when the proxy is ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2125">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="about"
              c:identifier="g_paste_client_about"
              glib:finish-func="about_finish"
              glib:sync-func="about_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="764">Display the about dialog</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="766">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="767">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="769">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="about_finish"
              c:identifier="g_paste_client_about_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1404">Display the about dialog</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="257"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1406">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1407">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="about_sync"
              c:identifier="g_paste_client_about_sync"
              throws="1"
              glib:async-func="about">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="185">Display the about dialog</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="187">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add"
              c:identifier="g_paste_client_add"
              glib:finish-func="add_finish"
              glib:sync-func="add_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="781">Add an item to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="783">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="784">the text to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="785">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="787">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_file"
              c:identifier="g_paste_client_add_file"
              glib:finish-func="add_file_finish"
              glib:sync-func="add_file_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="800">Add the file contents to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="802">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="803">the file to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="804">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="806">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_file_finish"
              c:identifier="g_paste_client_add_file_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1436">Add the file contents to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="263"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1438">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1439">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_file_sync"
              c:identifier="g_paste_client_add_file_sync"
              throws="1"
              glib:async-func="add_file">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="215">Add the file contents to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="217">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="218">the file to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_finish"
              c:identifier="g_paste_client_add_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1420">Add an item to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1422">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1423">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_password"
              c:identifier="g_paste_client_add_password"
              glib:finish-func="add_password_finish"
              glib:sync-func="add_password_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="827">Add the password to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="829">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="830">the name to identify the password to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="831">the password to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="832">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="834">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_password_finish"
              c:identifier="g_paste_client_add_password_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1452">Add the password to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="266"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1454">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1455">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_password_sync"
              c:identifier="g_paste_client_add_password_sync"
              throws="1"
              glib:async-func="add_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="239">Add the password to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="241">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="242">the name to identify the password to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="243">the password to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_sync"
              c:identifier="g_paste_client_add_sync"
              throws="1"
              glib:async-func="add">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="199">Add an item to the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="201">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="202">the text to add</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="backup_history"
              c:identifier="g_paste_client_backup_history"
              glib:finish-func="backup_history_finish"
              glib:sync-func="backup_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="853">Backup the current history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="855">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="856">the name of the history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="backup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="857">the name of the backup</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="858">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="860">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="backup_history_finish"
              c:identifier="g_paste_client_backup_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1468">Backup the current history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1470">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1471">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="backup_history_sync"
              c:identifier="g_paste_client_backup_history_sync"
              throws="1"
              glib:async-func="backup_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="262">Backup the current history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="264">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="265">the name of the history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="backup" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="266">the name of the backup</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete"
              c:identifier="g_paste_client_delete"
              glib:finish-func="delete_finish"
              glib:sync-func="delete_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="879">Delete an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="881">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="882">the uuid of the element we want to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="883">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="885">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_finish"
              c:identifier="g_paste_client_delete_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1484">Delete an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="272"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1486">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1487">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_history"
              c:identifier="g_paste_client_delete_history"
              glib:finish-func="delete_history_finish"
              glib:sync-func="delete_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="898">Delete a history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="900">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="901">the name of the history to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="902">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="904">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_history_finish"
              c:identifier="g_paste_client_delete_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1500">Delete a history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1502">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1503">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_history_sync"
              c:identifier="g_paste_client_delete_history_sync"
              throws="1"
              glib:async-func="delete_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="301">Delete a history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="303">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="304">the name of the history to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_password"
              c:identifier="g_paste_client_delete_password"
              glib:finish-func="delete_password_finish"
              glib:sync-func="delete_password_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="917">Delete the password from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="919">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="920">the name of the password to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="921">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="923">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_password_finish"
              c:identifier="g_paste_client_delete_password_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1516">Delete the password from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="278"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1518">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1519">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_password_sync"
              c:identifier="g_paste_client_delete_password_sync"
              throws="1"
              glib:async-func="delete_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="317">Delete the password from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="319">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="320">the name of the password to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_sync"
              c:identifier="g_paste_client_delete_sync"
              throws="1"
              glib:async-func="delete">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="285">Delete an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="287">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="288">the uuid of the element we want to delete</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="empty_history"
              c:identifier="g_paste_client_empty_history"
              glib:finish-func="empty_history_finish"
              glib:sync-func="empty_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="936">Empty the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="938">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="939">the name of the history to empty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="940">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="942">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="empty_history_finish"
              c:identifier="g_paste_client_empty_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1532">Empty the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="281"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1534">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1535">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="empty_history_sync"
              c:identifier="g_paste_client_empty_history_sync"
              throws="1"
              glib:async-func="empty_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="333">Empty the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="335">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="336">the name of the history to empty</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element"
              c:identifier="g_paste_client_get_element"
              glib:finish-func="get_element_finish"
              glib:sync-func="get_element_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="955">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="957">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="958">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="959">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="961">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_at_index"
              c:identifier="g_paste_client_get_element_at_index"
              glib:finish-func="get_element_at_index_finish"
              glib:sync-func="get_element_at_index_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="974">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="976">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="977">the index of the element we want to get</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="978">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="980">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_at_index_finish"
              c:identifier="g_paste_client_get_element_at_index_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1566">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="345"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1574">a new #GPasteClientItem</doc>
          <type name="ClientItem" c:type="GPasteClientItem*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1568">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1569">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_at_index_sync"
              c:identifier="g_paste_client_get_element_at_index_sync"
              throws="1"
              glib:async-func="get_element_at_index">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="367">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="116"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="375">a new #GPasteClientItem</doc>
          <type name="ClientItem" c:type="GPasteClientItem*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="369">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="370">the index of the element we want to get</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_finish"
              c:identifier="g_paste_client_get_element_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1548">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="284"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1556">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1550">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1551">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_kind"
              c:identifier="g_paste_client_get_element_kind"
              glib:finish-func="get_element_kind_finish"
              glib:sync-func="get_element_kind_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="993">Get the kind of an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="995">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="996">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="997">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="999">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_kind_finish"
              c:identifier="g_paste_client_get_element_kind_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1592">Get this kind of an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="348"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1600">The #GPasteItemKind</doc>
          <type name="ItemKind" c:type="GPasteItemKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1594">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1595">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_kind_sync"
              c:identifier="g_paste_client_get_element_kind_sync"
              throws="1"
              glib:async-func="get_element_kind">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="393">Get the kind of an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="401">The #GPasteItemKind</doc>
          <type name="ItemKind" c:type="GPasteItemKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="395">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="396">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_sync"
              c:identifier="g_paste_client_get_element_sync"
              throws="1"
              glib:async-func="get_element">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="349">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="357">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="351">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="352">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_elements"
              c:identifier="g_paste_client_get_elements"
              glib:finish-func="get_elements_finish"
              glib:sync-func="get_elements_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1012">Get some items from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1014">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1015">the uuids of the elements we want to get</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1016">the number of uuids</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1017">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1019">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_elements_finish"
              c:identifier="g_paste_client_get_elements_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1613">Get some items from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="287"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1621">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1615">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1616">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_elements_sync"
              c:identifier="g_paste_client_get_elements_sync"
              throws="1"
              glib:async-func="get_elements">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="414">Get some items from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="423">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="416">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="417">the uuids of the elements we want to get</doc>
            <array length="1" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="418">the number of uuids</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history"
              c:identifier="g_paste_client_get_history"
              glib:finish-func="get_history_finish"
              glib:sync-func="get_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1034">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1036">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1037">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1039">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_finish"
              c:identifier="g_paste_client_get_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1631">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="290"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1639">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1633">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1634">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_name"
              c:identifier="g_paste_client_get_history_name"
              glib:finish-func="get_history_name_finish"
              glib:sync-func="get_history_name_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1051">Get the name of the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1053">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1054">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1056">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_name_finish"
              c:identifier="g_paste_client_get_history_name_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1649">Get the name of the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="293"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1657">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1651">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1652">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_name_sync"
              c:identifier="g_paste_client_get_history_name_sync"
              throws="1"
              glib:async-func="get_history_name">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="451">Get the name of the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="458">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="453">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_history_size"
              c:identifier="g_paste_client_get_history_size"
              glib:finish-func="get_history_size_finish"
              glib:sync-func="get_history_size_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1068">Get the history isize from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="186"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1070">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1071">the name of the history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1072">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1074">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_size_finish"
              c:identifier="g_paste_client_get_history_size_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1667">Get the history size from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="296"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1675">the size of the history</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1669">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1670">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_size_sync"
              c:identifier="g_paste_client_get_history_size_sync"
              throws="1"
              glib:async-func="get_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="467">Get the history size from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="475">the size of the history</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="469">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="470">the name of the history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_sync"
              c:identifier="g_paste_client_get_history_sync"
              throws="1"
              glib:async-func="get_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="435">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="442">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="437">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_raw_element"
              c:identifier="g_paste_client_get_raw_element"
              glib:finish-func="get_raw_element_finish"
              glib:sync-func="get_raw_element_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1087">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="190"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1089">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1090">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1091">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1093">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw_element_finish"
              c:identifier="g_paste_client_get_raw_element_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1685">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="299"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1693">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1687">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1688">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw_element_sync"
              c:identifier="g_paste_client_get_raw_element_sync"
              throws="1"
              glib:async-func="get_raw_element">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="485">Get an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="68"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="493">a newly allocated string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="487">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="488">the uuid of the element we want to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw_history"
              c:identifier="g_paste_client_get_raw_history"
              glib:finish-func="get_raw_history_finish"
              glib:sync-func="get_raw_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1106">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1108">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1109">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1111">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw_history_finish"
              c:identifier="g_paste_client_get_raw_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1703">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="302"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1711">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1705">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1706">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw_history_sync"
              c:identifier="g_paste_client_get_raw_history_sync"
              throws="1"
              glib:async-func="get_raw_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="503">Get the history from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="510">a newly allocated array of string</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ClientItem"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="505">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version" c:identifier="g_paste_client_get_version">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1951">Get the version of the running gpaste daemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="357"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1957">the version of the daemon</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1953">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_active" c:identifier="g_paste_client_is_active">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1937">Check if the daemon is active</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="356"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1943">whether the daemon is active or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1939">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_histories"
              c:identifier="g_paste_client_list_histories"
              glib:finish-func="list_histories_finish"
              glib:sync-func="list_histories_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1123">List all available hisotries</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1125">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1126">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1128">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_histories_finish"
              c:identifier="g_paste_client_list_histories_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1721">List all available hisotries</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="305"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1729">a newly allocated array of string</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1723">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1724">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_histories_sync"
              c:identifier="g_paste_client_list_histories_sync"
              throws="1"
              glib:async-func="list_histories">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="519">List all available hisotries</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="526">a newly allocated array of string</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="521">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="merge"
              c:identifier="g_paste_client_merge"
              glib:finish-func="merge_finish"
              glib:sync-func="merge_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1140">Merge some history entries

If decoration is " and separator is , and entries are foo bar baz
result will be "foo","bar","baz"</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1142">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="decoration"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1143">the decoration to apply to each entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="separator"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1144">the separator to add between each entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1145">the uuids of the elements we want to get</doc>
            <array length="3" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1146">the number of uuids</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1147">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1149">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge_finish"
              c:identifier="g_paste_client_merge_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1739">Merge some history entries</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="308"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1741">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1742">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge_sync"
              c:identifier="g_paste_client_merge_sync"
              throws="1"
              glib:async-func="merge">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="535">Merge some history entries

If decoration is " and separator is , and entries are foo bar baz
result will be "foo","bar","baz"</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="537">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="decoration"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="538">the decoration to apply to each entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="separator"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="539">the separator to add between each entry</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="540">the uuids of the elements we want to get</doc>
            <array length="3" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_uuids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="541">the number of uuids</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="on_extension_state_changed"
              c:identifier="g_paste_client_on_extension_state_changed"
              glib:finish-func="on_extension_state_changed_finish"
              glib:sync-func="on_extension_state_changed_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1174">Call this when the extension changes its state</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="207"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1176">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1177">the new state of the extension</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1178">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1180">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="on_extension_state_changed_finish"
              c:identifier="g_paste_client_on_extension_state_changed_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1755">Call this when the extension changes its state</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="311"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1757">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1758">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="on_extension_state_changed_sync"
              c:identifier="g_paste_client_on_extension_state_changed_sync"
              throws="1"
              glib:async-func="on_extension_state_changed">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="566">Call this when the extension changes its state</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="568">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="569">the new state of the extension</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="reexecute"
              c:identifier="g_paste_client_reexecute"
              glib:finish-func="reexecute_finish"
              glib:sync-func="reexecute_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1193">Reexecute the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1195">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1196">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1198">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="reexecute_finish"
              c:identifier="g_paste_client_reexecute_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1771">Reexecute the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="314"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1773">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1774">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reexecute_sync"
              c:identifier="g_paste_client_reexecute_sync"
              throws="1"
              glib:async-func="reexecute">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="582">Reexecute the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="584">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="rename_password"
              c:identifier="g_paste_client_rename_password"
              glib:finish-func="rename_password_finish"
              glib:sync-func="rename_password_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1210">Rename the password in the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1212">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="old_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1213">the old name of the password to rename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1214">the new name to give it</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1215">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1217">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="rename_password_finish"
              c:identifier="g_paste_client_rename_password_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1787">Rename the password in the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="317"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1789">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1790">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rename_password_sync"
              c:identifier="g_paste_client_rename_password_sync"
              throws="1"
              glib:async-func="rename_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="596">Rename the password in the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="598">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="old_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="599">the name of the password to rename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="600">the new name to give it</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace"
              c:identifier="g_paste_client_replace"
              glib:finish-func="replace_finish"
              glib:sync-func="replace_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1236">Replace the contents of an item</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="219"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1238">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1239">the uuid of the element we want to replace</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="contents" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1240">the replacement contents</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1241">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1243">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_finish"
              c:identifier="g_paste_client_replace_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1803">Replace the contents of an item</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="320"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1805">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1806">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_sync"
              c:identifier="g_paste_client_replace_sync"
              throws="1"
              glib:async-func="replace">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="619">Replace the contents of an item</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="621">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="622">the uuid of the element we want to replace</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="contents" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="623">the replacement contents</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search"
              c:identifier="g_paste_client_search"
              glib:finish-func="search_finish"
              glib:sync-func="search_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1262">Search for items matching @pattern in history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1264">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="pattern" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1265">the pattern to look for in history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1266">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1268">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_finish"
              c:identifier="g_paste_client_search_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1819">Search for items matching @pattern in history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="323"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="1827">The indexes of the matching items</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1821">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1822">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_sync"
              c:identifier="g_paste_client_search_sync"
              throws="1"
              glib:async-func="search">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="642">Search for items matching @pattern in history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client.c"
               line="650">The uuids of the matching items</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="644">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="pattern" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="645">the pattern to look for in history</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select"
              c:identifier="g_paste_client_select"
              glib:finish-func="select_finish"
              glib:sync-func="select_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1281">Select an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1283">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1284">the uuid of the element we want to select</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1285">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1287">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_finish"
              c:identifier="g_paste_client_select_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1837">Select an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="326"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1839">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1840">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_sync"
              c:identifier="g_paste_client_select_sync"
              throws="1"
              glib:async-func="select">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="660">Select an item from the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="662">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="663">the uuid of the element we want to select</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password"
              c:identifier="g_paste_client_set_password"
              glib:finish-func="set_password_finish"
              glib:sync-func="set_password_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1300">Set the item as password</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1302">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1303">the uuid of the element we want to set as password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1304">the name to identify the password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1305">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1307">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_finish"
              c:identifier="g_paste_client_set_password_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1853">Set the item as password</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="329"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1855">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1856">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_sync"
              c:identifier="g_paste_client_set_password_sync"
              throws="1"
              glib:async-func="set_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="676">Set the item as password</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="678">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="679">the uuid of the element we want to set as password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="680">the name to identify the password</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_history"
              c:identifier="g_paste_client_show_history"
              glib:finish-func="show_history_finish"
              glib:sync-func="show_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1326">Emit the ShowHistory signal</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="237"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1328">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1329">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1331">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_history_finish"
              c:identifier="g_paste_client_show_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1869">Emit the ShowHistory signal</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="332"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1871">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1872">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_history_sync"
              c:identifier="g_paste_client_show_history_sync"
              throws="1"
              glib:async-func="show_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="699">Emit the ShowHistory signal</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="701">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="switch_history"
              c:identifier="g_paste_client_switch_history"
              glib:finish-func="switch_history_finish"
              glib:sync-func="switch_history_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1343">Switch to another history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1345">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1346">the name of the history to switch to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1347">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1349">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="switch_history_finish"
              c:identifier="g_paste_client_switch_history_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1885">Switch to another history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="335"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1887">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1888">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="switch_history_sync"
              c:identifier="g_paste_client_switch_history_sync"
              throws="1"
              glib:async-func="switch_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="712">Switch to another history</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="714">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="715">the name of the history to switch to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="track"
              c:identifier="g_paste_client_track"
              glib:finish-func="track_finish"
              glib:sync-func="track_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1362">Change the tracking state of the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1364">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1365">the new tracking state of the #GPasteDaemon</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1366">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1368">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_finish"
              c:identifier="g_paste_client_track_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1901">Change the tracking state of the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="338"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1903">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1904">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="track_sync"
              c:identifier="g_paste_client_track_sync"
              throws="1"
              glib:async-func="track">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="728">Change the tracking state of the #GPasteDaemon</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="730">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="731">the new tracking state of the #GPasteDaemon</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload"
              c:identifier="g_paste_client_upload"
              glib:finish-func="upload_finish"
              glib:sync-func="upload_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1381">Upload an item to a pastebin service</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="248"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1383">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1384">the uuid of the element we want to upload</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1385">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1387">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_finish"
              c:identifier="g_paste_client_upload_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="1917">Upload an item to a pastebin service</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="341"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1919">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="1920">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_sync"
              c:identifier="g_paste_client_upload_sync"
              throws="1"
              glib:async-func="upload">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="744">Upload an item to a pastebin service</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="746">a #GPasteClient instance</doc>
            <type name="Client" c:type="GPasteClient*"/>
          </instance-parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="747">the uuid of the element we want to upload</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="delete-history" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2024">The "delete-history" signal is emitted when we delete
a history.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2027">the name of the history we deleted</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="empty-history" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2034">The "empty-history" signal is emitted when we empty
a history.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2037">the name of the history we emptied</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show-history" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2044">The "show-history" signal is emitted when we switch
from a history to another.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="switch-history" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2053">The "switch-history" signal is emitted when we switch
from a history to another.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2056">the name of the history we switch to</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="tracking" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="update" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client.c"
             line="2073">The "update" signal is emitted whenever anything changed
in the history (something was added, removed, selected, replaced...).</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2076">the kind of update</doc>
            <type name="UpdateAction"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2077">the items which need updating</doc>
            <type name="UpdateTarget"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client.c"
                 line="2078">the index of the item, when the target is POSITION</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ClientClass"
            c:type="GPasteClientClass"
            glib:is-gtype-struct-for="Client">
      <source-position filename="src/libgpaste/gpaste/gpaste-client.h"
                       line="20"/>
      <field name="parent_class">
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <class name="ClientItem"
           c:symbol-prefix="client_item"
           c:type="GPasteClientItem"
           parent="GObject.Object"
           glib:type-name="GPasteClientItem"
           glib:get-type="g_paste_client_item_get_type"
           glib:type-struct="ClientItemClass">
      <source-position filename="src/libgpaste/gpaste/gpaste-client-item.h"
                       line="19"/>
      <constructor name="new" c:identifier="g_paste_client_item_new">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client-item.c"
             line="74">Create a new instance of #GPasteClientItem</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client-item.h"
                         line="24"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-client-item.c"
               line="81">a newly allocated #GPasteClientItem
                          free it with g_object_unref</doc>
          <type name="ClientItem" c:type="GPasteClientItem*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client-item.c"
                 line="76">the uuid of the item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client-item.c"
                 line="77">the value of the item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_uuid" c:identifier="g_paste_client_item_get_uuid">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client-item.c"
             line="22">Returns the uuid of the item</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client-item.h"
                         line="21"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client-item.c"
                 line="24">a #GPasteClientItem instance</doc>
            <type name="ClientItem" c:type="const GPasteClientItem*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="g_paste_client_item_get_value">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-client-item.c"
             line="38">Returns the value of the item</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-client-item.h"
                         line="22"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-client-item.c"
                 line="40">a #GPasteClientItem instance</doc>
            <type name="ClientItem" c:type="const GPasteClientItem*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="ClientItemClass"
            c:type="GPasteClientItemClass"
            glib:is-gtype-struct-for="ClientItem">
      <source-position filename="src/libgpaste/gpaste/gpaste-client-item.h"
                       line="19"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <constant name="DAEMON_ABOUT" value="About" c:type="G_PASTE_DAEMON_ABOUT">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="22"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_ADD" value="Add" c:type="G_PASTE_DAEMON_ADD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="23"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_ADD_FILE"
              value="AddFile"
              c:type="G_PASTE_DAEMON_ADD_FILE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="24"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_ADD_PASSWORD"
              value="AddPassword"
              c:type="G_PASTE_DAEMON_ADD_PASSWORD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="25"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_BACKUP_HISTORY"
              value="BackupHistory"
              c:type="G_PASTE_DAEMON_BACKUP_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="26"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_DELETE"
              value="Delete"
              c:type="G_PASTE_DAEMON_DELETE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="27"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_DELETE_HISTORY"
              value="DeleteHistory"
              c:type="G_PASTE_DAEMON_DELETE_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="28"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_DELETE_PASSWORD"
              value="DeletePassword"
              c:type="G_PASTE_DAEMON_DELETE_PASSWORD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="29"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_EMPTY_HISTORY"
              value="EmptyHistory"
              c:type="G_PASTE_DAEMON_EMPTY_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="30"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_ELEMENT"
              value="GetElement"
              c:type="G_PASTE_DAEMON_GET_ELEMENT">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="31"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_ELEMENTS"
              value="GetElements"
              c:type="G_PASTE_DAEMON_GET_ELEMENTS">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_ELEMENT_AT_INDEX"
              value="GetElementAtIndex"
              c:type="G_PASTE_DAEMON_GET_ELEMENT_AT_INDEX">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="32"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_ELEMENT_KIND"
              value="GetElementKind"
              c:type="G_PASTE_DAEMON_GET_ELEMENT_KIND">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_HISTORY"
              value="GetHistory"
              c:type="G_PASTE_DAEMON_GET_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_HISTORY_NAME"
              value="GetHistoryName"
              c:type="G_PASTE_DAEMON_GET_HISTORY_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_HISTORY_SIZE"
              value="GetHistorySize"
              c:type="G_PASTE_DAEMON_GET_HISTORY_SIZE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_RAW_ELEMENT"
              value="GetRawElement"
              c:type="G_PASTE_DAEMON_GET_RAW_ELEMENT">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_GET_RAW_HISTORY"
              value="GetRawHistory"
              c:type="G_PASTE_DAEMON_GET_RAW_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_INTERFACE"
              value="&lt;node&gt; &lt;interface name='"
              c:type="G_PASTE_DAEMON_INTERFACE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_INTERFACE_NAME"
              value="org.gnome.GPaste2"
              c:type="G_PASTE_DAEMON_INTERFACE_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="20"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_LIST_HISTORIES"
              value="ListHistories"
              c:type="G_PASTE_DAEMON_LIST_HISTORIES">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_MERGE" value="Merge" c:type="G_PASTE_DAEMON_MERGE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_OBJECT_PATH"
              value="/org/gnome/GPaste"
              c:type="G_PASTE_DAEMON_OBJECT_PATH">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="19"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_ON_EXTENSION_STATE_CHANGED"
              value="OnExtensionStateChanged"
              c:type="G_PASTE_DAEMON_ON_EXTENSION_STATE_CHANGED">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_PROP_ACTIVE"
              value="Active"
              c:type="G_PASTE_DAEMON_PROP_ACTIVE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_PROP_VERSION"
              value="Version"
              c:type="G_PASTE_DAEMON_PROP_VERSION">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="61"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_REEXECUTE"
              value="Reexecute"
              c:type="G_PASTE_DAEMON_REEXECUTE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_RENAME_PASSWORD"
              value="RenamePassword"
              c:type="G_PASTE_DAEMON_RENAME_PASSWORD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_REPLACE"
              value="Replace"
              c:type="G_PASTE_DAEMON_REPLACE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SEARCH"
              value="Search"
              c:type="G_PASTE_DAEMON_SEARCH">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SELECT"
              value="Select"
              c:type="G_PASTE_DAEMON_SELECT">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SET_PASSWORD"
              value="SetPassword"
              c:type="G_PASTE_DAEMON_SET_PASSWORD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SHOW_HISTORY"
              value="ShowHistory"
              c:type="G_PASTE_DAEMON_SHOW_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SIG_DELETE_HISTORY"
              value="DeleteHistory"
              c:type="G_PASTE_DAEMON_SIG_DELETE_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SIG_EMPTY_HISTORY"
              value="EmptyHistory"
              c:type="G_PASTE_DAEMON_SIG_EMPTY_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SIG_SHOW_HISTORY"
              value="ShowHistory"
              c:type="G_PASTE_DAEMON_SIG_SHOW_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SIG_SWITCH_HISTORY"
              value="SwitchHistory"
              c:type="G_PASTE_DAEMON_SIG_SWITCH_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SIG_UPDATE"
              value="Update"
              c:type="G_PASTE_DAEMON_SIG_UPDATE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="58"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_SWITCH_HISTORY"
              value="SwitchHistory"
              c:type="G_PASTE_DAEMON_SWITCH_HISTORY">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_TRACK" value="Track" c:type="G_PASTE_DAEMON_TRACK">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DAEMON_UPLOAD"
              value="Upload"
              c:type="G_PASTE_DAEMON_UPLOAD">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DEFINE_ABSTRACT_TYPE"
                    c:identifier="G_PASTE_DEFINE_ABSTRACT_TYPE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="73"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEFINE_ABSTRACT_TYPE_WITH_PRIVATE"
                    c:identifier="G_PASTE_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="76"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEFINE_TYPE"
                    c:identifier="G_PASTE_DEFINE_TYPE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="66"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEFINE_TYPE_WITH_PRIVATE"
                    c:identifier="G_PASTE_DEFINE_TYPE_WITH_PRIVATE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="69"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DERIVABLE_TYPE"
                    c:identifier="G_PASTE_DERIVABLE_TYPE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="50"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="TYPE_NAME">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="ELEMENT_SIZE_SETTING"
              value="element-size"
              c:type="G_PASTE_ELEMENT_SIZE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="22"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EMPTY_HISTORY_CONFIRMATION_SETTING"
              value="empty-history-confirmation"
              c:type="G_PASTE_EMPTY_HISTORY_CONFIRMATION_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="23"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="EXTENSION_ENABLED_SETTING"
              value="extension-enabled"
              c:type="G_PASTE_EXTENSION_ENABLED_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="FINAL_TYPE"
                    c:identifier="G_PASTE_FINAL_TYPE"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="55"/>
      <parameters>
        <parameter name="TypeName">
        </parameter>
        <parameter name="type_name">
        </parameter>
        <parameter name="TYPE_NAME">
        </parameter>
        <parameter name="ParentTypeName">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GNOME_SHELL_ACCELERATOR"
                    c:identifier="G_PASTE_GNOME_SHELL_ACCELERATOR"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="83"/>
      <parameters>
        <parameter name="accelerator">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GNOME_SHELL_BUS_NAME"
              value="org.gnome.Shell"
              c:type="G_PASTE_GNOME_SHELL_BUS_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="17"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GROWING_LINES_SETTING"
              value="growing-lines"
              c:type="G_PASTE_GROWING_LINES_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="24"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="GnomeShellAccelerator" c:type="GPasteGnomeShellAccelerator">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="81"/>
      <field name="accelerator" writable="1">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="mode_flags" writable="1">
        <type name="MetaKeyBindingFlags" c:type="GPasteMetaKeyBindingFlags"/>
      </field>
      <field name="grab_flags" writable="1">
        <type name="GnomeShellActionMode" c:type="GPasteGnomeShellActionMode"/>
      </field>
    </record>
    <bitfield name="GnomeShellActionMode" c:type="GPasteGnomeShellActionMode">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
           line="20">Controls in which GNOME Shell states an action (like keybindings and gestures)
should be handled.</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="53"/>
      <member name="none"
              value="0"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_NONE">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="22">block action</doc>
      </member>
      <member name="normal"
              value="1"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_NORMAL">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="23">allow action when in window mode,
    e.g. when the focus is in an application window</doc>
      </member>
      <member name="overview"
              value="2"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_OVERVIEW">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="25">allow action while the overview
    is active</doc>
      </member>
      <member name="lock_screen"
              value="4"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_LOCK_SCREEN">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="27">allow action when the screen
    is locked, e.g. when the screen shield is shown</doc>
      </member>
      <member name="unlock_screen"
              value="8"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_UNLOCK_SCREEN">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="29">allow action in the unlock
    dialog</doc>
      </member>
      <member name="login_screen"
              value="16"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_LOGIN_SCREEN">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="31">allow action in the login screen</doc>
      </member>
      <member name="system_modal"
              value="32"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_SYSTEM_MODAL">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="32">allow action when a system modal
    dialog (e.g. authentification or session dialogs) is open</doc>
      </member>
      <member name="looking_glass"
              value="64"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_LOOKING_GLASS">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="34">allow action in looking glass</doc>
      </member>
      <member name="popup"
              value="128"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_POPUP">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="35">allow action while a shell menu is open</doc>
      </member>
      <member name="all"
              value="-1"
              c:identifier="G_PASTE_GNOME_SHELL_ACTION_MODE_ALL">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="36">always allow action</doc>
      </member>
    </bitfield>
    <class name="GnomeShellClient"
           c:symbol-prefix="gnome_shell_client"
           c:type="GPasteGnomeShellClient"
           parent="Gio.DBusProxy"
           glib:type-name="GPasteGnomeShellClient"
           glib:get-type="g_paste_gnome_shell_client_get_type"
           glib:type-struct="GnomeShellClientClass">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="85"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="g_paste_gnome_shell_client_new_finish"
                   throws="1">
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="139"/>
        <return-value transfer-ownership="full">
          <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="g_paste_gnome_shell_client_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="375">Create a new instance of #GPasteGnomeShellClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="136"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="381">a newly allocated #GPasteGnomeShellClient
         free it with g_object_unref</doc>
          <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
        </return-value>
      </constructor>
      <function name="new"
                c:identifier="g_paste_gnome_shell_client_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="390">Create a new instance of #GPasteGnomeShellClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="392">Callback function to invoke when the proxy is ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="393">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="grab_accelerator"
              c:identifier="g_paste_gnome_shell_client_grab_accelerator"
              glib:finish-func="grab_accelerator_finish"
              glib:sync-func="grab_accelerator_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="181">Grab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="183">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="accelerator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="184">a #GPasteGnomeShellAccelerator instance</doc>
            <type name="GnomeShellAccelerator"
                  c:type="GPasteGnomeShellAccelerator"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="185">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="187">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_accelerator_finish"
              c:identifier="g_paste_gnome_shell_client_grab_accelerator_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="263">Grab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="271">the action id corresultponding</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="265">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="266">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_accelerator_sync"
              c:identifier="g_paste_gnome_shell_client_grab_accelerator_sync"
              throws="1"
              glib:async-func="grab_accelerator">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="102">Grab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="110">the action id corresponding</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="104">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="accelerator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="105">a #GPasteGnomeShellAccelerator instance</doc>
            <type name="GnomeShellAccelerator"
                  c:type="GPasteGnomeShellAccelerator"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_accelerators"
              c:identifier="g_paste_gnome_shell_client_grab_accelerators"
              glib:finish-func="grab_accelerators_finish"
              glib:sync-func="grab_accelerators_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="205">Grab some keybindings</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="207">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="accelerators" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="208">an array of #GPasteGnomeShellAccelerator instances</doc>
            <array zero-terminated="0" c:type="GPasteGnomeShellAccelerator*">
              <type name="GnomeShellAccelerator"
                    c:type="GPasteGnomeShellAccelerator"/>
            </array>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="209">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="211">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_accelerators_finish"
              c:identifier="g_paste_gnome_shell_client_grab_accelerators_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="281">Grab some keybindings</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="289">the action ids corresultponding</doc>
          <type name="guint32" c:type="guint32*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="283">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="284">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_accelerators_sync"
              c:identifier="g_paste_gnome_shell_client_grab_accelerators_sync"
              throws="1"
              glib:async-func="grab_accelerators">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="125">Grab some keybindings</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="133">the action ids corresponding</doc>
          <type name="guint32" c:type="guint32*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="127">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="accelerators" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="128">an array of #GPasteGnomeShellAccelerator instances</doc>
            <array zero-terminated="0" c:type="GPasteGnomeShellAccelerator*">
              <type name="GnomeShellAccelerator"
                    c:type="GPasteGnomeShellAccelerator"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="ungrab_accelerator"
              c:identifier="g_paste_gnome_shell_client_ungrab_accelerator"
              glib:finish-func="ungrab_accelerator_finish"
              glib:sync-func="ungrab_accelerator_sync">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="240">Ungrab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="242">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="243">the action id corresponding to the keybinding</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="244">A #GAsyncReadyCallback to call when the request is satisfied or %NULL if you don't
care about the result of the method invocation.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="246">The data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="ungrab_accelerator_finish"
              c:identifier="g_paste_gnome_shell_client_ungrab_accelerator_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="299">Ungrab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="307">whether the ungrab was succesful or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="301">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="302">A #GAsyncResult obtained from the #GAsyncReadyCallback passed to the async call.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ungrab_accelerator_sync"
              c:identifier="g_paste_gnome_shell_client_ungrab_accelerator_sync"
              throws="1"
              glib:async-func="ungrab_accelerator">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="159">Ungrab a keybinding</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
               line="167">whether the ungrab was succesful or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="161">a #GPasteGnomeShellClient instance</doc>
            <type name="GnomeShellClient" c:type="GPasteGnomeShellClient*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="162">the action id corresponding to the keybinding</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="accelerator-activated" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
             line="345">The "accelerator-activated" signal is emitted when gnome-shell notifies us
that an accelerator has been pressed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.c"
                 line="348">the id of the activated accelerator</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="GnomeShellClientClass"
            c:type="GPasteGnomeShellClientClass"
            glib:is-gtype-struct-for="GnomeShellClient">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="85"/>
      <field name="parent_class">
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <constant name="HISTORY_NAME_SETTING"
              value="history-name"
              c:type="G_PASTE_HISTORY_NAME_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="25"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="IMAGES_SUPPORT_SETTING"
              value="images-support"
              c:type="G_PASTE_IMAGES_SUPPORT_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="26"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="INIT_GETTEXT"
                    c:identifier="G_PASTE_INIT_GETTEXT"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="80"/>
    </function-macro>
    <enumeration name="ItemKind"
                 glib:type-name="GPasteItemKind"
                 glib:get-type="g_paste_item_kind_get_type"
                 c:type="GPasteItemKind">
      <member name="Text"
              value="1"
              c:identifier="G_PASTE_ITEM_KIND_TEXT"
              glib:nick="Text"
              glib:name="G_PASTE_ITEM_KIND_TEXT">
      </member>
      <member name="Uris"
              value="2"
              c:identifier="G_PASTE_ITEM_KIND_URIS"
              glib:nick="Uris"
              glib:name="G_PASTE_ITEM_KIND_URIS">
      </member>
      <member name="Image"
              value="3"
              c:identifier="G_PASTE_ITEM_KIND_IMAGE"
              glib:nick="Image"
              glib:name="G_PASTE_ITEM_KIND_IMAGE">
      </member>
      <member name="Password"
              value="4"
              c:identifier="G_PASTE_ITEM_KIND_PASSWORD"
              glib:nick="Password"
              glib:name="G_PASTE_ITEM_KIND_PASSWORD">
      </member>
    </enumeration>
    <constant name="LAUNCH_UI_SETTING"
              value="launch-ui"
              c:type="G_PASTE_LAUNCH_UI_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="27"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAKE_PASSWORD_SETTING"
              value="make-password"
              c:type="G_PASTE_MAKE_PASSWORD_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="28"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAX_DISPLAYED_HISTORY_SIZE_SETTING"
              value="max-displayed-history-size"
              c:type="G_PASTE_MAX_DISPLAYED_HISTORY_SIZE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="29"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAX_HISTORY_SIZE_SETTING"
              value="max-history-size"
              c:type="G_PASTE_MAX_HISTORY_SIZE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="30"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAX_MEMORY_USAGE_SETTING"
              value="max-memory-usage"
              c:type="G_PASTE_MAX_MEMORY_USAGE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="31"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAX_TEXT_ITEM_SIZE_SETTING"
              value="max-text-item-size"
              c:type="G_PASTE_MAX_TEXT_ITEM_SIZE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="32"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MIN_TEXT_ITEM_SIZE_SETTING"
              value="min-text-item-size"
              c:type="G_PASTE_MIN_TEXT_ITEM_SIZE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <bitfield name="MetaKeyBindingFlags" c:type="GPasteMetaKeyBindingFlags">
      <source-position filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
                       line="72"/>
      <member name="none"
              value="0"
              c:identifier="G_PASTE_META_KEY_BINDING_NONE">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="58">none</doc>
      </member>
      <member name="per_window"
              value="1"
              c:identifier="G_PASTE_META_KEY_BINDING_PER_WINDOW">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="59">per-window</doc>
      </member>
      <member name="builtin"
              value="2"
              c:identifier="G_PASTE_META_KEY_BINDING_BUILTIN">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="60">built-in</doc>
      </member>
      <member name="is_reversed"
              value="4"
              c:identifier="G_PASTE_META_KEY_BINDING_IS_REVERSED">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="61">is reversed</doc>
      </member>
      <member name="non_maskable"
              value="8"
              c:identifier="G_PASTE_META_KEY_BINDING_NON_MASKABLE">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-gnome-shell-client.h"
             line="62">always active</doc>
      </member>
      <member name="ignore_autorepeat"
              value="16"
              c:identifier="G_PASTE_META_KEY_BINDING_IGNORE_AUTOREPEAT">
      </member>
    </bitfield>
    <constant name="OPEN_CENTERED_SETTING"
              value="open-centered"
              c:type="G_PASTE_OPEN_CENTERED_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="POP_SETTING" value="pop" c:type="G_PASTE_POP_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PRIMARY_TO_HISTORY_SETTING"
              value="primary-to-history"
              c:type="G_PASTE_PRIMARY_TO_HISTORY_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RICH_TEXT_SUPPORT_SETTING"
              value="rich-text-support"
              c:type="G_PASTE_RICH_TEXT_SUPPORT_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SAVE_HISTORY_SETTING"
              value="save-history"
              c:type="G_PASTE_SAVE_HISTORY_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SCREENSAVER_BUS_NAME"
              value="org.gnome.ScreenSaver"
              c:type="G_PASTE_SCREENSAVER_BUS_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                       line="17"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_ACTIVATE_RESULT"
              value="ActivateResult"
              c:type="G_PASTE_SEARCH_PROVIDER_ACTIVATE_RESULT">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="71"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_GET_INITIAL_RESULT_SET"
              value="GetInitialResultSet"
              c:type="G_PASTE_SEARCH_PROVIDER_GET_INITIAL_RESULT_SET">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_GET_RESULT_METAS"
              value="GetResultMetas"
              c:type="G_PASTE_SEARCH_PROVIDER_GET_RESULT_METAS">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="70"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_GET_SUBSEARCH_RESULT_SET"
              value="GetSubsearchResultSet"
              c:type="G_PASTE_SEARCH_PROVIDER_GET_SUBSEARCH_RESULT_SET">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_INTERFACE"
              value="&lt;node&gt; &lt;interface name='"
              c:type="G_PASTE_SEARCH_PROVIDER_INTERFACE">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="74"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_INTERFACE_NAME"
              value="org.gnome.Shell.SearchProvider2"
              c:type="G_PASTE_SEARCH_PROVIDER_INTERFACE_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_LAUNCH_SEARCH"
              value="LaunchSearch"
              c:type="G_PASTE_SEARCH_PROVIDER_LAUNCH_SEARCH">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="72"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SEARCH_PROVIDER_OBJECT_PATH"
              value="/org/gnome/GPaste/SearchProvider"
              c:type="G_PASTE_SEARCH_PROVIDER_OBJECT_PATH">
      <source-position filename="src/libgpaste/gpaste/gpaste-gdbus-defines.h"
                       line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SETTINGS_NAME"
              value="org.gnome.GPaste"
              c:type="G_PASTE_SETTINGS_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="17"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SETTINGS_PATH"
              value="/org/gnome/GPaste/"
              c:type="G_PASTE_SETTINGS_PATH">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="18"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SHELL_ENABLED_EXTENSIONS_SETTING"
              value="enabled-extensions"
              c:type="G_PASTE_SHELL_ENABLED_EXTENSIONS_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SHELL_SETTINGS_NAME"
              value="org.gnome.shell"
              c:type="G_PASTE_SHELL_SETTINGS_NAME">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="19"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SHOW_HISTORY_SETTING"
              value="show-history"
              c:type="G_PASTE_SHOW_HISTORY_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SYNCHRONIZE_CLIPBOARDS_SETTING"
              value="synchronize-clipboards"
              c:type="G_PASTE_SYNCHRONIZE_CLIPBOARDS_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SYNC_CLIPBOARD_TO_PRIMARY_SETTING"
              value="sync-clipboard-to-primary"
              c:type="G_PASTE_SYNC_CLIPBOARD_TO_PRIMARY_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SYNC_PRIMARY_TO_CLIPBOARD_SETTING"
              value="sync-primary-to-clipboard"
              c:type="G_PASTE_SYNC_PRIMARY_TO_CLIPBOARD_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="ScreensaverClient"
           c:symbol-prefix="screensaver_client"
           c:type="GPasteScreensaverClient"
           parent="Gio.DBusProxy"
           glib:type-name="GPasteScreensaverClient"
           glib:get-type="g_paste_screensaver_client_get_type"
           glib:type-struct="ScreensaverClientClass">
      <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                       line="21"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="g_paste_screensaver_client_new_finish"
                   throws="1">
        <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                         line="26"/>
        <return-value transfer-ownership="full">
          <type name="ScreensaverClient" c:type="GPasteScreensaverClient*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="g_paste_screensaver_client_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
             line="95">Create a new instance of #GPasteScreensaverClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                         line="23"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
               line="101">a newly allocated #GPasteScreensaverClient
         free it with g_object_unref</doc>
          <type name="ScreensaverClient" c:type="GPasteScreensaverClient*"/>
        </return-value>
      </constructor>
      <function name="new"
                c:identifier="g_paste_screensaver_client_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
             line="110">Create a new instance of #GPasteScreensaverClient</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                         line="24"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
                 line="112">Callback function to invoke when the proxy is ready.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
                 line="113">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <glib:signal name="active-changed" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
             line="66">The "active-changed" signal is emitted when the screensaver appears or vanishes</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="active" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-screensaver-client.c"
                 line="69">whether the screensaver is now active or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ScreensaverClientClass"
            c:type="GPasteScreensaverClientClass"
            glib:is-gtype-struct-for="ScreensaverClient">
      <source-position filename="src/libgpaste/gpaste/gpaste-screensaver-client.h"
                       line="21"/>
      <field name="parent_class">
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <class name="Settings"
           c:symbol-prefix="settings"
           c:type="GPasteSettings"
           parent="GObject.Object"
           glib:type-name="GPasteSettings"
           glib:get-type="g_paste_settings_get_type"
           glib:type-struct="SettingsClass">
      <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                       line="19"/>
      <constructor name="new" c:identifier="g_paste_settings_new">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="1109">Create a new instance of #GPasteSettings</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="1114">a newly allocated #GPasteSettings
         free it with g_object_unref</doc>
          <type name="Settings" c:type="GPasteSettings*"/>
        </return-value>
      </constructor>
      <method name="get_close_on_select"
              c:identifier="g_paste_settings_get_close_on_select">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="134">Get the "close-on-select" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="140">the value of the "close-on-select" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="136">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_element_size"
              c:identifier="g_paste_settings_get_element_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="180">Get the "element-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="23"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="186">the value of the "element-size" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="182">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_empty_history_confirmation"
              c:identifier="g_paste_settings_get_empty_history_confirmation">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="203">Get the "empty-history-confirmation" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="24"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="209">the value of the "empty-history-confirmation" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="205">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extension_enabled"
              c:identifier="g_paste_settings_get_extension_enabled">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="732">Get the "extension-enabled" special setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="738">Whether the gnome-shell extension is enabled or not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="734">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_growing_lines"
              c:identifier="g_paste_settings_get_growing_lines">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="226">Get the "growing-lines" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="232">the value of the "growing-lines" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="228">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_history_name"
              c:identifier="g_paste_settings_get_history_name">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="249">Get the "history-name" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="26"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="255">the value of the "history-name" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="251">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_images_support"
              c:identifier="g_paste_settings_get_images_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="272">Get the "images-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="278">the value of the "images-support" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="274">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_launch_ui"
              c:identifier="g_paste_settings_get_launch_ui">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="295">Get the "launch-ui" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="301">the value of the "launch-ui" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="297">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_make_password"
              c:identifier="g_paste_settings_get_make_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="318">Get the "make-password" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="324">the value of the "make-password" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="320">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_displayed_history_size"
              c:identifier="g_paste_settings_get_max_displayed_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="341">Get the "max-displayed-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="30"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="347">the value of the "max-displayed-history-size" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="343">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_history_size"
              c:identifier="g_paste_settings_get_max_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="364">Get the "max-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="370">the value of the "max-history-size" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="366">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_memory_usage"
              c:identifier="g_paste_settings_get_max_memory_usage">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="387">Get the "max-memory-usage" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="393">the value of the "max-memory-usage" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="389">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_text_item_size"
              c:identifier="g_paste_settings_get_max_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="410">Get the "max-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="416">the value of the "max-text-item-size" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="412">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min_text_item_size"
              c:identifier="g_paste_settings_get_min_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="433">Get the "min-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="439">the value of the "min-text-item-size" setting</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="435">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_open_centered"
              c:identifier="g_paste_settings_get_open_centered">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="157">Get the "open-centered" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="22"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="163">the value of the "open-centered" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="159">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pop" c:identifier="g_paste_settings_get_pop">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="456">Get the "pop" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="462">the value of the "pop" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="458">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_primary_to_history"
              c:identifier="g_paste_settings_get_primary_to_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="479">Get the "primary-to-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="485">the value of the "primary-to-history" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="481">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rich_text_support"
              c:identifier="g_paste_settings_get_rich_text_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="502">Get the "rich-text-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="508">the value of the "rich-text-support" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="504">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_save_history"
              c:identifier="g_paste_settings_get_save_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="525">Get the "save-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="531">the value of the "save-history" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="527">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_history"
              c:identifier="g_paste_settings_get_show_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="548">Get the "show-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="554">the value of the "show-history" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="550">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sync_clipboard_to_primary"
              c:identifier="g_paste_settings_get_sync_clipboard_to_primary">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="571">Get the "sync-clipboard-to-primary" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="577">the value of the "sync-clipboard-to-primary" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="573">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sync_primary_to_clipboard"
              c:identifier="g_paste_settings_get_sync_primary_to_clipboard">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="594">Get the "sync-primary-to-clipboard" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="600">the value of the "sync-primary-to-clipboard" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="596">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_synchronize_clipboards"
              c:identifier="g_paste_settings_get_synchronize_clipboards">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="617">Get the "synchronize-clipboards" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="623">the value of the "synchronize-clipboards" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="619">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track_changes"
              c:identifier="g_paste_settings_get_track_changes">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="640">Get the "track-changes" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="646">the value of the "track-changes" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="642">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track_extension_state"
              c:identifier="g_paste_settings_get_track_extension_state">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="663">Get the "track-extension-state" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="669">the value of the "track-extension-state" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="665">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_trim_items"
              c:identifier="g_paste_settings_get_trim_items">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="686">Get the "trim-items" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="692">the value of the "trim-items" setting</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="688">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upload" c:identifier="g_paste_settings_get_upload">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="709">Get the "upload" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-settings.c"
               line="715">the value of the "upload" setting</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="711">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="const GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_close_on_select"
              c:identifier="g_paste_settings_reset_close_on_select">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="142">Reset the "close-on-select" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="144">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_element_size"
              c:identifier="g_paste_settings_reset_element_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="188">Reset the "element-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="190">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_empty_history_confirmation"
              c:identifier="g_paste_settings_reset_empty_history_confirmation">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="211">Reset the "empty-history-confirmation" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="213">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_growing_lines"
              c:identifier="g_paste_settings_reset_growing_lines">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="234">Reset the "growing-lines" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="236">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_history_name"
              c:identifier="g_paste_settings_reset_history_name">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="257">Reset the "history-name" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="259">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_images_support"
              c:identifier="g_paste_settings_reset_images_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="280">Reset the "images-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="282">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_launch_ui"
              c:identifier="g_paste_settings_reset_launch_ui">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="303">Reset the "launch-ui" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="305">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_make_password"
              c:identifier="g_paste_settings_reset_make_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="326">Reset the "make-password" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="328">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_max_displayed_history_size"
              c:identifier="g_paste_settings_reset_max_displayed_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="349">Reset the "max-displayed-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="351">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_max_history_size"
              c:identifier="g_paste_settings_reset_max_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="372">Reset the "max-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="374">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_max_memory_usage"
              c:identifier="g_paste_settings_reset_max_memory_usage">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="395">Reset the "max-memory-usage" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="397">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_max_text_item_size"
              c:identifier="g_paste_settings_reset_max_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="418">Reset the "max-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="420">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_min_text_item_size"
              c:identifier="g_paste_settings_reset_min_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="441">Reset the "min-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="443">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_open_centered"
              c:identifier="g_paste_settings_reset_open_centered">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="165">Reset the "open-centered" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="167">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_pop" c:identifier="g_paste_settings_reset_pop">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="464">Reset the "pop" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="466">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_primary_to_history"
              c:identifier="g_paste_settings_reset_primary_to_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="487">Reset the "primary-to-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="489">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_rich_text_support"
              c:identifier="g_paste_settings_reset_rich_text_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="510">Reset the "rich-text-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="512">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_save_history"
              c:identifier="g_paste_settings_reset_save_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="533">Reset the "save-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="535">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_show_history"
              c:identifier="g_paste_settings_reset_show_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="556">Reset the "show-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="558">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_sync_clipboard_to_primary"
              c:identifier="g_paste_settings_reset_sync_clipboard_to_primary">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="579">Reset the "sync-clipboard-to-primary" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="581">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_sync_primary_to_clipboard"
              c:identifier="g_paste_settings_reset_sync_primary_to_clipboard">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="602">Reset the "sync-primary-to-clipboard" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="604">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_synchronize_clipboards"
              c:identifier="g_paste_settings_reset_synchronize_clipboards">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="625">Reset the "synchronize-clipboards" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="627">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_track_changes"
              c:identifier="g_paste_settings_reset_track_changes">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="648">Reset the "track-changes" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="650">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_track_extension_state"
              c:identifier="g_paste_settings_reset_track_extension_state">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="671">Reset the "track-extension-state" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="673">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_trim_items"
              c:identifier="g_paste_settings_reset_trim_items">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="694">Reset the "trim-items" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="696">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_upload" c:identifier="g_paste_settings_reset_upload">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="717">Reset the "upload" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="719">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_close_on_select"
              c:identifier="g_paste_settings_set_close_on_select">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="148">Change the "close-on-select" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="150">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="151">the new history name</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_element_size"
              c:identifier="g_paste_settings_set_element_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="194">Change the "element-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="196">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="197">the maximum displayed size of an item</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_empty_history_confirmation"
              c:identifier="g_paste_settings_set_empty_history_confirmation">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="217">Change the "empty-history-confirmation" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="219">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="220">whether to prompt for confirmation when emptying a history</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_extension_enabled"
              c:identifier="g_paste_settings_set_extension_enabled">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="769">Change the "extension-enabled" special setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="771">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="772">whether to enable or not the gnome-shell extension</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_growing_lines"
              c:identifier="g_paste_settings_set_growing_lines">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="240">Change the "growing-lines" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="242">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="243">whether to detect or not growing lines</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_history_name"
              c:identifier="g_paste_settings_set_history_name">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="263">Change the "history-name" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="265">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="266">the new history name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_images_support"
              c:identifier="g_paste_settings_set_images_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="286">Change the "images-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="288">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="289">the new history name</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_launch_ui"
              c:identifier="g_paste_settings_set_launch_ui">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="309">Change the "launch-ui" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="311">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="312">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_make_password"
              c:identifier="g_paste_settings_set_make_password">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="332">Change the "make-password" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="334">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="335">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_displayed_history_size"
              c:identifier="g_paste_settings_set_max_displayed_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="355">Change the "max-displayed-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="357">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="358">the maximum number of items to display</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_history_size"
              c:identifier="g_paste_settings_set_max_history_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="378">Change the "max-history-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="380">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="381">the maximum number of items the history can contain</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_memory_usage"
              c:identifier="g_paste_settings_set_max_memory_usage">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="401">Change the "max-memory-usage" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="403">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="404">the maximum amount of memory we can use</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_text_item_size"
              c:identifier="g_paste_settings_set_max_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="424">Change the "max-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="426">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="427">the maximum size for a textual item to be handled</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_min_text_item_size"
              c:identifier="g_paste_settings_set_min_text_item_size">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="447">Change the "min-text-item-size" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="449">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="450">the minimum size for a textual item to be handled</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_open_centered"
              c:identifier="g_paste_settings_set_open_centered">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="171">Change the "open-centered" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="173">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="174">the new history name</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pop" c:identifier="g_paste_settings_set_pop">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="470">Change the "pop" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="472">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="473">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_primary_to_history"
              c:identifier="g_paste_settings_set_primary_to_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="493">Change the "primary-to-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="495">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="496">whether to track or not the primary selection changes as clipboard ones</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rich_text_support"
              c:identifier="g_paste_settings_set_rich_text_support">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="516">Change the "rich-text-support" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="518">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="519">the new history name</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_save_history"
              c:identifier="g_paste_settings_set_save_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="539">Change the "save-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="541">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="542">whether to save or not the history</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_history"
              c:identifier="g_paste_settings_set_show_history">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="562">Change the "show-history" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="564">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="565">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sync_clipboard_to_primary"
              c:identifier="g_paste_settings_set_sync_clipboard_to_primary">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="585">Change the "sync-clipboard-to-primary" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="587">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="588">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sync_primary_to_clipboard"
              c:identifier="g_paste_settings_set_sync_primary_to_clipboard">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="608">Change the "sync-primary-to-clipboard" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="610">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="611">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_synchronize_clipboards"
              c:identifier="g_paste_settings_set_synchronize_clipboards">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="631">Change the "synchronize-clipboards" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="633">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="634">whether to synchronize the clipboard and the primary selection or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_changes"
              c:identifier="g_paste_settings_set_track_changes">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="654">Change the "track-changes" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="656">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="657">whether to track or not the clipboard changes</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_track_extension_state"
              c:identifier="g_paste_settings_set_track_extension_state">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="677">Change the "track-extension-state" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="679">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="680">whether to stop tracking or not the clipboard changes when an applet exits</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trim_items"
              c:identifier="g_paste_settings_set_trim_items">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="700">Change the "trim-items" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="702">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="703">whether to trim or not textual items</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_upload" c:identifier="g_paste_settings_set_upload">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="723">Change the "upload" setting</doc>
        <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="725">a #GPasteSettings instance</doc>
            <type name="Settings" c:type="GPasteSettings*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="726">the new keyboard shortcut</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed" when="last" detailed="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="987">The "changed" signal is emitted when a key has potentially changed.
You should call one of the g_paste_settings_get() calls to check the new
value.

This signal supports detailed connections.  You can connect to the
detailed signal "changed::x" in order to only receive callbacks
when key "x" changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="990">the name of the key that changed</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="rebind" when="last" detailed="1">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="1002">The "rebind" signal is emitted when a key has potentially changed.
You should call one of the g_paste_settings_get() calls to check the new
value.

This signal supports detailed connections.  You can connect to the
detailed signal "rebind::x" in order to only receive callbacks
when key "x" changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="1005">the name of the key that changed</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="track" when="last">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-settings.c"
             line="1017">The "track" signal is emitted when the daemon starts or stops tracking
clipboard changes</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tracking_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/libgpaste/gpaste/gpaste-settings.c"
                 line="1020">whether we're now tracking or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SettingsClass"
            c:type="GPasteSettingsClass"
            glib:is-gtype-struct-for="Settings">
      <source-position filename="src/libgpaste/gpaste/gpaste-settings.h"
                       line="19"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <constant name="TRACK_CHANGES_SETTING"
              value="track-changes"
              c:type="G_PASTE_TRACK_CHANGES_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="43"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TRACK_EXTENSION_STATE_SETTING"
              value="track-extension-state"
              c:type="G_PASTE_TRACK_EXTENSION_STATE_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="TRIM_ITEMS_SETTING"
              value="trim-items"
              c:type="G_PASTE_TRIM_ITEMS_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="UPLOAD_SETTING"
              value="upload"
              c:type="G_PASTE_UPLOAD_SETTING">
      <source-position filename="src/libgpaste/gpaste/gpaste-gsettings-keys.h"
                       line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <enumeration name="UpdateAction"
                 glib:type-name="GPasteUpdateAction"
                 glib:get-type="g_paste_update_action_get_type"
                 c:type="GPasteUpdateAction">
      <member name="REPLACE"
              value="1"
              c:identifier="G_PASTE_UPDATE_ACTION_REPLACE"
              glib:nick="REPLACE"
              glib:name="G_PASTE_UPDATE_ACTION_REPLACE">
      </member>
      <member name="REMOVE"
              value="2"
              c:identifier="G_PASTE_UPDATE_ACTION_REMOVE"
              glib:nick="REMOVE"
              glib:name="G_PASTE_UPDATE_ACTION_REMOVE">
      </member>
    </enumeration>
    <enumeration name="UpdateTarget"
                 glib:type-name="GPasteUpdateTarget"
                 glib:get-type="g_paste_update_target_get_type"
                 c:type="GPasteUpdateTarget">
      <member name="ALL"
              value="1"
              c:identifier="G_PASTE_UPDATE_TARGET_ALL"
              glib:nick="ALL"
              glib:name="G_PASTE_UPDATE_TARGET_ALL">
      </member>
      <member name="POSITION"
              value="2"
              c:identifier="G_PASTE_UPDATE_TARGET_POSITION"
              glib:nick="POSITION"
              glib:name="G_PASTE_UPDATE_TARGET_POSITION">
      </member>
    </enumeration>
    <function-macro name="str_equal"
                    c:identifier="g_paste_str_equal"
                    introspectable="0">
      <source-position filename="src/libgpaste/gpaste/gpaste-macros.h"
                       line="26"/>
      <parameters>
        <parameter name="s1">
        </parameter>
        <parameter name="s2">
        </parameter>
      </parameters>
    </function-macro>
    <function name="util_activate_ui" c:identifier="g_paste_util_activate_ui">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="156">Activate an action on a GPaste app</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="21"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="158">the action to activate</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="arg"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="159">the action argument</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_activate_ui_sync"
              c:identifier="g_paste_util_activate_ui_sync"
              throws="1">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="184">activate an action from GPaste Ui</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="23"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="192">whether the action was successful</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="186">the action to activate</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="arg"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="187">the action argument</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_empty_with_confirmation"
              c:identifier="g_paste_util_empty_with_confirmation">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="236">Empty a history after confirmation.
Confirmation is skipped if GPaste is configured to do so.</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="26"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="238">a #GPasteClient instance</doc>
          <type name="Client" c:type="GPasteClient*"/>
        </parameter>
        <parameter name="settings" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="239">a #GPasteSettings instance</doc>
          <type name="Settings" c:type="const GPasteSettings*"/>
        </parameter>
        <parameter name="history" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="240">the name of the history to empty</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_empty_with_confirmation_sync"
              c:identifier="g_paste_util_empty_with_confirmation_sync"
              throws="1">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="260">Empty a history after confirmation.
Confirmation is skipped if GPaste is configured to do so.</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="29"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="270">whether the action was successful</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="client" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="262">a #GPasteClient instance</doc>
          <type name="Client" c:type="GPasteClient*"/>
        </parameter>
        <parameter name="settings" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="263">a #GPasteSettings instance</doc>
          <type name="Settings" c:type="const GPasteSettings*"/>
        </parameter>
        <parameter name="history" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="264">the name of the history to empty</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_ensure_history_dir_exists"
              c:identifier="g_paste_util_ensure_history_dir_exists">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="595">Ensure the history dir exists</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="58"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="601">where it exists or if there was an error creating it</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="settings" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="597">a #GPasteSettings instance</doc>
          <type name="Settings" c:type="const GPasteSettings*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_dbus_au_result"
              c:identifier="g_paste_util_get_dbus_au_result">
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="39"/>
      <return-value transfer-ownership="none">
        <type name="guint32" c:type="guint32*"/>
      </return-value>
      <parameters>
        <parameter name="variant" transfer-ownership="none">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="len" transfer-ownership="none">
          <type name="guint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_dbus_item_result"
              c:identifier="g_paste_util_get_dbus_item_result">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="379">Get the "(ss)" GVariant as an item</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="42"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="385">The item</doc>
        <type name="ClientItem" c:type="GPasteClientItem*"/>
      </return-value>
      <parameters>
        <parameter name="variant" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="381">a #GVariant</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_dbus_items_result"
              c:identifier="g_paste_util_get_dbus_items_result">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="397">Get the "a(ss)" GVariant as a list of items</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="43"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="403">The items</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="ClientItem"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="variant" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="399">a #GVariant</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_history_dir"
              c:identifier="g_paste_util_get_history_dir">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="537">Get the directory where we store the history</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="52"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="542">the directory</doc>
        <type name="Gio.File" c:type="GFile*"/>
      </return-value>
    </function>
    <function name="util_get_history_dir_path"
              c:identifier="g_paste_util_get_history_dir_path">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="514">Get the path to the directory where we store the history</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="51"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="519">the directory path</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="util_get_history_file"
              c:identifier="g_paste_util_get_history_file">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="574">Get the file in which we store the history</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="55"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="581">the file</doc>
        <type name="Gio.File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="576">the name of the history</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="extension" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="577">the file extension</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_history_file_path"
              c:identifier="g_paste_util_get_history_file_path">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="552">Get the path to the file in which we store the history</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="53"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="559">the file path</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="554">the name of the history</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="extension" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="555">the file extension</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_has_gnome_shell"
              c:identifier="g_paste_util_has_gnome_shell">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="336">Check whether gnome-shell is installed or not</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="37"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="341">%TRUE if gnome-shell is installed</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="util_read_pid_file"
              c:identifier="g_paste_util_read_pid_file">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="451">Read the pid file</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="457">the pid</doc>
        <type name="GLib.Pid" c:type="GPid"/>
      </return-value>
      <parameters>
        <parameter name="component" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="453">The component we're handling</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_replace" c:identifier="g_paste_util_replace">
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="33"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="pattern" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="substitution" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_spawn" c:identifier="g_paste_util_spawn">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="45">spawn a GPaste app</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="18"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="app" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="47">the GPaste app to spawn</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_spawn_sync"
              c:identifier="g_paste_util_spawn_sync"
              throws="1">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="102">spawn a GPaste app</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="19"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="109">whether the spawn was successful</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="app" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="104">the GPaste app to spawn</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_write_pid_file"
              c:identifier="g_paste_util_write_pid_file">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="430">Write the pid file</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="45"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="component" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="432">The component we're handling</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_xml_decode" c:identifier="g_paste_util_xml_decode">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="478">Decode the text to its original pre-xml form</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="48"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="484">the decoded text</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="480">The text to decode</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_xml_encode" c:identifier="g_paste_util_xml_encode">
      <doc xml:space="preserve"
           filename="src/libgpaste/gpaste/gpaste-util.c"
           line="496">Encode the text into its xml form</doc>
      <source-position filename="src/libgpaste/gpaste/gpaste-util.h"
                       line="49"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="src/libgpaste/gpaste/gpaste-util.c"
             line="502">the encoded text</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/libgpaste/gpaste/gpaste-util.c"
               line="498">The text to encode</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
