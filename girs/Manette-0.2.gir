<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:doc="http://www.gtk.org/introspection/doc/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="GUdev" version="1.0"/>
  <include name="Gio" version="2.0"/>
  <package name="manette-0.2"/>
  <c:include name="libmanette.h"/>
  <doc:format name="gi-docgen"/>
  <namespace name="Manette"
             version="0.2"
             shared-library="libmanette-0.2.so.0"
             c:identifier-prefixes="Manette"
             c:symbol-prefixes="manette">
    <function-macro name="CHECK_VERSION"
                    c:identifier="MANETTE_CHECK_VERSION"
                    version="0.2.10"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="src/manette-version.h"
           line="89">Compile-time version checking. Evaluates to `TRUE` if the version
of libmanette is greater than the required one.</doc>
      <source-position filename="src/manette-version.h" line="99"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="src/manette-version.h"
               line="91">required major version</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="src/manette-version.h"
               line="92">required minor version</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="src/manette-version.h"
               line="93">required micro version</doc>
        </parameter>
      </parameters>
    </function-macro>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="ManetteDevice"
           parent="GObject.Object"
           glib:type-name="ManetteDevice"
           glib:get-type="manette_device_get_type"
           glib:type-struct="DeviceClass">
      <doc xml:space="preserve"
           filename="src/manette-device.c"
           line="35">An object representing a physical gamepad.

See also: [class@Monitor].</doc>
      <source-position filename="src/manette-device.h" line="33"/>
      <method name="get_device_type"
              c:identifier="manette_device_get_device_type"
              version="0.2.10">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="471">Gets the device type of @self.</doc>
        <source-position filename="src/manette-device.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="477">the device type</doc>
          <type name="DeviceType" c:type="ManetteDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="473">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guid"
              c:identifier="manette_device_get_guid"
              version="0.2.10">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="334">Gets the identifier used by SDL mappings to discriminate game controller
devices.</doc>
        <source-position filename="src/manette-device.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="341">the identifier used by SDL mappings</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="336">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mapping"
              c:identifier="manette_device_get_mapping"
              version="0.2.10">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="525">Gets the user mapping for @self, or default mapping if there isn't any.

Can return `NULL` if there's no mapping or @self doesn't support mappings.</doc>
        <source-position filename="src/manette-device.h" line="42"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="533">the mapping for @self</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="527">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="manette_device_get_name">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="381">Gets the device's name.</doc>
        <source-position filename="src/manette-device.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="387">the name of @self</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="383">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_input" c:identifier="manette_device_has_input">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="356">Gets whether the device has the given input.

If the input is present, it means that the device can send events for it
regardless of whether the device is mapped or not.</doc>
        <source-position filename="src/manette-device.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="367">whether the device has the given input</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="358">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="359">the input type</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="360">the input code</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_rumble" c:identifier="manette_device_has_rumble">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="627">Gets whether @self supports rumble.</doc>
        <source-position filename="src/manette-device.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="633">whether @self supports rumble</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="629">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_user_mapping"
              c:identifier="manette_device_has_user_mapping">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="554">Gets whether @self has a user mapping.</doc>
        <source-position filename="src/manette-device.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="560">whether @self has a user mapping</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="556">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_user_mapping"
              c:identifier="manette_device_remove_user_mapping">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="607">Removes the user mapping for @self.</doc>
        <source-position filename="src/manette-device.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="609">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="rumble" c:identifier="manette_device_rumble">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="643">Make @self rumble during @milliseconds milliseconds.

The heavy and light motors will rumble at their respectively defined
magnitudes.

The duration cannot exceed 32767 milliseconds.</doc>
        <source-position filename="src/manette-device.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="657">whether the rumble effect was played</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="645">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
          <parameter name="strong_magnitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="646">the magnitude for the heavy motor</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="weak_magnitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="647">the magnitude for the light motor</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="milliseconds" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="648">the rumble effect play time in milliseconds</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_user_mapping"
              c:identifier="manette_device_save_user_mapping">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="579">Saves @mapping_string as the user mapping for @self.</doc>
        <source-position filename="src/manette-device.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="581">a device</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
          <parameter name="mapping_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="582">the mapping string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_mapping"
              c:identifier="manette_device_supports_mapping"
              version="0.2.10">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="489">Gets whether @self supports mapping.</doc>
        <source-position filename="src/manette-device.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-device.c"
               line="495">whether @self supports mapping</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="491">a #ManetteDevice</doc>
            <type name="Device" c:type="ManetteDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="absolute-axis-event" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="224">Emitted when an absolute axis' value changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="227">the event emitted by the manette device</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-press-event" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="192">Emitted when a button is pressed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="195">the event emitted by the device</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-release-event" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="208">Emitted when a button is released.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="211">the event emitted by the device</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="disconnected" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="256">Emitted when the device is disconnected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="event" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="176">Emitted for any kind of event before mapping it.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="179">the event emitted by the device</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="hat-axis-event" when="last">
        <doc xml:space="preserve"
             filename="src/manette-device.c"
             line="240">Emitted when a hat axis' value changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-device.c"
                 line="243">the event emitted by the manette device</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DeviceClass"
            c:type="ManetteDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="src/manette-device.h" line="33"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="DeviceType"
                 version="0.2.10"
                 glib:type-name="ManetteDeviceType"
                 glib:get-type="manette_device_type_get_type"
                 c:type="ManetteDeviceType">
      <doc xml:space="preserve"
           filename="src/manette-device-type.c"
           line="23">Describes available types of a [class@Device].

More values may be added to this enumeration over time.</doc>
      <member name="generic"
              value="0"
              c:identifier="MANETTE_DEVICE_GENERIC"
              glib:nick="generic"
              glib:name="MANETTE_DEVICE_GENERIC">
        <doc xml:space="preserve"
             filename="src/manette-device-type.c"
             line="25">Generic gamepads</doc>
      </member>
      <member name="steam_deck"
              value="1"
              c:identifier="MANETTE_DEVICE_STEAM_DECK"
              glib:nick="steam-deck"
              glib:name="MANETTE_DEVICE_STEAM_DECK">
        <doc xml:space="preserve"
             filename="src/manette-device-type.c"
             line="26">Steam Deck</doc>
      </member>
    </enumeration>
    <function-macro name="ENCODE_VERSION"
                    c:identifier="MANETTE_ENCODE_VERSION"
                    introspectable="0">
      <source-position filename="src/manette-version.h" line="75"/>
      <parameters>
        <parameter name="major">
        </parameter>
        <parameter name="minor">
        </parameter>
        <parameter name="micro">
        </parameter>
      </parameters>
    </function-macro>
    <union name="Event"
           c:type="ManetteEvent"
           glib:type-name="ManetteEvent"
           glib:get-type="manette_event_get_type"
           c:symbol-prefix="event">
      <doc xml:space="preserve"
           filename="src/manette-event.c"
           line="44">An event emitted by a [class@Device].</doc>
      <source-position filename="src/manette-event.h" line="34"/>
      <method name="copy" c:identifier="manette_event_copy" introspectable="0">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="65">Creates a copy of @self.</doc>
        <source-position filename="src/manette-event.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="71">a new event</doc>
          <type name="Event" c:type="ManetteEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="67">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="manette_event_free" introspectable="0">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="88">Frees @self.</doc>
        <source-position filename="src/manette-event.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="90">an event</doc>
            <type name="Event" c:type="ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_absolute" c:identifier="manette_event_get_absolute">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="247">Gets the axis of @self, if any.</doc>
        <source-position filename="src/manette-event.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="255">whether the axis was retrieved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="249">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
          <parameter name="axis"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="250">return location for the axis</doc>
            <type name="guint16" c:type="guint16*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="251">return location for the axis value</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_button" c:identifier="manette_event_get_button">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="220">Gets the button of @self, if any.</doc>
        <source-position filename="src/manette-event.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="227">whether the button was retrieved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="222">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
          <parameter name="button"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="223">return location for the button</doc>
            <type name="guint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device" c:identifier="manette_event_get_device">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="140">Gets the [class@Device] associated with the @self.</doc>
        <source-position filename="src/manette-event.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="146">the device associated with the @self</doc>
          <type name="Device" c:type="ManetteDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="142">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_event_type"
              c:identifier="manette_event_get_event_type">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="104">Gets the event type of @self.</doc>
        <source-position filename="src/manette-event.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="110">the event type of @self</doc>
          <type name="EventType" c:type="ManetteEventType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="106">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hardware_code"
              c:identifier="manette_event_get_hardware_code">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="172">Gets the hardware code of @self.</doc>
        <source-position filename="src/manette-event.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="178">the hardware code of @self</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="174">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hardware_index"
              c:identifier="manette_event_get_hardware_index">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="204">Gets the hardware index of @self.</doc>
        <source-position filename="src/manette-event.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="210">the hardware index of @self</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="206">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hardware_type"
              c:identifier="manette_event_get_hardware_type">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="156">Gets the hardware type of @self.</doc>
        <source-position filename="src/manette-event.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="162">the hardware type of @self</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="158">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hardware_value"
              c:identifier="manette_event_get_hardware_value">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="188">Gets the hardware value of @self.</doc>
        <source-position filename="src/manette-event.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="194">the hardware value of @self</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="190">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hat" c:identifier="manette_event_get_hat">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="277">Gets the hat of @self, if any.</doc>
        <source-position filename="src/manette-event.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="285">whether the hat was retrieved</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="279">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
          <parameter name="axis"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="280">return location for the hat</doc>
            <type name="guint16" c:type="guint16*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="281">return location for the hat value</doc>
            <type name="gint8" c:type="gint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_time" c:identifier="manette_event_get_time">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="120">Gets the timestamp of when @self was received by the input driver that takes
care of its device.

Use this timestamp to ensure external factors such as synchronous disk writes
don't influence your timing computations.</doc>
        <source-position filename="src/manette-event.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-event.c"
               line="130">the timestamp of when @self was received by the input driver</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-event.c"
                 line="122">an event</doc>
            <type name="Event" c:type="const ManetteEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
    </union>
    <enumeration name="EventType"
                 glib:type-name="ManetteEventType"
                 glib:get-type="manette_event_type_get_type"
                 c:type="ManetteEventType">
      <doc xml:space="preserve"
           filename="src/manette-event.c"
           line="25">Specifies the type of the event.</doc>
      <member name="event_nothing"
              value="-1"
              c:identifier="MANETTE_EVENT_NOTHING"
              glib:nick="event-nothing"
              glib:name="MANETTE_EVENT_NOTHING">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="27">a special code to indicate a null event</doc>
      </member>
      <member name="event_button_press"
              value="0"
              c:identifier="MANETTE_EVENT_BUTTON_PRESS"
              glib:nick="event-button-press"
              glib:name="MANETTE_EVENT_BUTTON_PRESS">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="28">a button has been pressed</doc>
      </member>
      <member name="event_button_release"
              value="1"
              c:identifier="MANETTE_EVENT_BUTTON_RELEASE"
              glib:nick="event-button-release"
              glib:name="MANETTE_EVENT_BUTTON_RELEASE">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="29">a button has been released</doc>
      </member>
      <member name="event_absolute"
              value="2"
              c:identifier="MANETTE_EVENT_ABSOLUTE"
              glib:nick="event-absolute"
              glib:name="MANETTE_EVENT_ABSOLUTE">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="30">an absolute axis has been moved</doc>
      </member>
      <member name="event_hat"
              value="3"
              c:identifier="MANETTE_EVENT_HAT"
              glib:nick="event-hat"
              glib:name="MANETTE_EVENT_HAT">
        <doc xml:space="preserve"
             filename="src/manette-event.c"
             line="31">a hat axis has been moved</doc>
      </member>
    </enumeration>
    <constant name="MAJOR_VERSION"
              value="0"
              c:type="MANETTE_MAJOR_VERSION"
              version="0.2.10">
      <doc xml:space="preserve"
           filename="src/manette-version.h"
           line="29">libmanette major version component (e.g. 1 if the version is 1.2.3).</doc>
      <source-position filename="src/manette-version.h" line="36"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION"
              value="12"
              c:type="MANETTE_MICRO_VERSION"
              version="0.2.10">
      <doc xml:space="preserve"
           filename="src/manette-version.h"
           line="47">libmanette micro version component (e.g. 3 if the version is 1.2.3).</doc>
      <source-position filename="src/manette-version.h" line="54"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION"
              value="2"
              c:type="MANETTE_MINOR_VERSION"
              version="0.2.10">
      <doc xml:space="preserve"
           filename="src/manette-version.h"
           line="38">libmanette minor version component (e.g. 2 if the version is 1.2.3).</doc>
      <source-position filename="src/manette-version.h" line="45"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Monitor"
           c:symbol-prefix="monitor"
           c:type="ManetteMonitor"
           parent="GObject.Object"
           glib:type-name="ManetteMonitor"
           glib:get-type="manette_monitor_get_type"
           glib:type-struct="MonitorClass">
      <doc xml:space="preserve"
           filename="src/manette-monitor.c"
           line="40">An object monitoring the availability of devices.

See also: [class@Device].</doc>
      <source-position filename="src/manette-monitor.h" line="33"/>
      <constructor name="new" c:identifier="manette_monitor_new">
        <doc xml:space="preserve"
             filename="src/manette-monitor.c"
             line="483">Creates a new `ManetteMonitor`.</doc>
        <source-position filename="src/manette-monitor.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/manette-monitor.c"
               line="488">a new `ManetteMonitor`</doc>
          <type name="Monitor" c:type="ManetteMonitor*"/>
        </return-value>
      </constructor>
      <method name="iterate" c:identifier="manette_monitor_iterate">
        <doc xml:space="preserve"
             filename="src/manette-monitor.c"
             line="589">Creates a new `ManetterMonitorIter` iterating on @self.</doc>
        <source-position filename="src/manette-monitor.h" line="36"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/manette-monitor.c"
               line="595">a new iterator for @self</doc>
          <type name="MonitorIter" c:type="ManetteMonitorIter*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-monitor.c"
                 line="591">a monitor</doc>
            <type name="Monitor" c:type="ManetteMonitor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="device-connected" when="last">
        <doc xml:space="preserve"
             filename="src/manette-monitor.c"
             line="556">Emitted when @device is connected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-monitor.c"
                 line="559">a device</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-disconnected" when="last">
        <doc xml:space="preserve"
             filename="src/manette-monitor.c"
             line="572">Emitted when @device is disconnected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-monitor.c"
                 line="575">a device</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MonitorClass"
            c:type="ManetteMonitorClass"
            glib:is-gtype-struct-for="Monitor">
      <source-position filename="src/manette-monitor.h" line="33"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MonitorIter"
            c:type="ManetteMonitorIter"
            opaque="1"
            glib:type-name="ManetteMonitorIter"
            glib:get-type="manette_monitor_iter_get_type"
            c:symbol-prefix="monitor_iter">
      <doc xml:space="preserve"
           filename="src/manette-monitor-iter.c"
           line="23">An object iterating over the available devices in [class@Monitor].</doc>
      <source-position filename="src/manette-monitor-iter.h" line="34"/>
      <method name="free"
              c:identifier="manette_monitor_iter_free"
              introspectable="0">
        <doc xml:space="preserve"
             filename="src/manette-monitor-iter.c"
             line="83">Frees @self.</doc>
        <source-position filename="src/manette-monitor-iter.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-monitor-iter.c"
                 line="85">an iterator</doc>
            <type name="MonitorIter" c:type="ManetteMonitorIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next" c:identifier="manette_monitor_iter_next">
        <doc xml:space="preserve"
             filename="src/manette-monitor-iter.c"
             line="102">Gets the next device from @self.</doc>
        <source-position filename="src/manette-monitor-iter.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/manette-monitor-iter.c"
               line="109">whether the next device was retrieved, if not, the end was reached</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/manette-monitor-iter.c"
                 line="104">an iterator</doc>
            <type name="MonitorIter" c:type="ManetteMonitorIter*"/>
          </instance-parameter>
          <parameter name="device"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/manette-monitor-iter.c"
                 line="105">return location for the device</doc>
            <type name="Device" c:type="ManetteDevice**"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <constant name="VERSION_S"
              value="0.2.12"
              c:type="MANETTE_VERSION_S"
              version="0.2.10">
      <doc xml:space="preserve"
           filename="src/manette-version.h"
           line="65">libmanette version, encoded as a string, useful for printing and
concatenation.</doc>
      <source-position filename="src/manette-version.h" line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function name="get_major_version"
              c:identifier="manette_get_major_version">
      <doc xml:space="preserve"
           filename="src/manette-version.c"
           line="11">Returns the major version number of the libmanette library.

For example, in libmanette version 1.2.3 this is 1.

This function is in the library, so it represents the libmanette library your
code is running against. Contrast with the [const@MAJOR_VERSION] constant,
which represents the major version of the libmanette headers you have
included when compiling your code.</doc>
      <source-position filename="src/manette-version.h" line="181"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/manette-version.c"
             line="23">the major version number of the libmanette library</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
    </function>
    <function name="get_micro_version"
              c:identifier="manette_get_micro_version">
      <doc xml:space="preserve"
           filename="src/manette-version.c"
           line="51">Returns the micro version number of the libmanette library.

For example, in libmanette version 1.2.3 this is 3.

This function is in the library, so it represents the libmanette library your
code is running against. Contrast with the [const@MAJOR_VERSION] constant,
which represents the micro version of the libmanette headers you have
included when compiling your code.</doc>
      <source-position filename="src/manette-version.h" line="183"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/manette-version.c"
             line="63">the micro version number of the libmanette library</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
    </function>
    <function name="get_minor_version"
              c:identifier="manette_get_minor_version">
      <doc xml:space="preserve"
           filename="src/manette-version.c"
           line="31">Returns the minor version number of the libmanette library.

For example, in libmanette version 1.2.3 this is 2.

This function is in the library, so it represents the libmanette library your
code is running against. Contrast with the [const@MAJOR_VERSION] constant,
which represents the minor version of the libmanette headers you have
included when compiling your code.</doc>
      <source-position filename="src/manette-version.h" line="182"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/manette-version.c"
             line="43">the minor version number of the libmanette library</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
    </function>
    <function name="get_resource" c:identifier="manette_get_resource">
      <source-position filename="src/manette_resources.h" line="6"/>
      <return-value transfer-ownership="full">
        <type name="Gio.Resource" c:type="GResource*"/>
      </return-value>
    </function>
  </namespace>
</repository>
