<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Champlain" version="0.12"/>
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="GeocodeGlib" version="1.0"/>
  <include name="Rest" version="0.7"/>
  <package name="gnome-maps-1.0"/>
  <namespace name="GnomeMaps"
             version="1.0"
             shared-library="libgnome-maps.so.0"
             c:identifier-prefixes="Maps"
             c:symbol-prefixes="maps">
    <class name="Contact"
           c:symbol-prefix="contact"
           c:type="MapsContact"
           parent="GObject.Object"
           glib:type-name="MapsContact"
           glib:get-type="maps_contact_get_type"
           glib:type-struct="ContactClass">
      <constructor name="new" c:identifier="maps_contact_new">
        <return-value transfer-ownership="full">
          <type name="Contact" c:type="MapsContact*"/>
        </return-value>
      </constructor>
      <method name="add_place" c:identifier="maps_contact_add_place">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <type name="Contact" c:type="MapsContact*"/>
          </instance-parameter>
          <parameter name="place" transfer-ownership="none">
            <type name="GeocodeGlib.Place" c:type="GeocodePlace*"/>
          </parameter>
        </parameters>
      </method>
      <method name="geocode" c:identifier="maps_contact_geocode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve">A #MapsContact object</doc>
            <type name="Contact" c:type="MapsContact*"/>
          </instance-parameter>
          <parameter name="callback" transfer-ownership="none" scope="async">
            <doc xml:space="preserve">A #MapsContactGeocodeCallback function</doc>
            <type name="ContactGeocodeCallback"
                  c:type="MapsContactGeocodeCallback"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_places" c:identifier="maps_contact_get_places">
        <return-value transfer-ownership="container">
          <doc xml:space="preserve">a list of #GeocodePlace</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GeocodeGlib.Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="contact" transfer-ownership="none">
            <doc xml:space="preserve">A #MapsContact object</doc>
            <type name="Contact" c:type="MapsContact*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="bounding-box" transfer-ownership="none">
        <doc xml:space="preserve">The bounding box for the contact.</doc>
        <type name="Champlain.BoundingBox"/>
      </property>
      <property name="icon" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The icon of the contact.</doc>
        <type name="Gio.Icon"/>
      </property>
      <property name="id" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The unique id of the contact.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The name of the contact.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ContactPrivate" c:type="MapsContactPrivate*"/>
      </field>
    </class>
    <record name="ContactClass"
            c:type="MapsContactClass"
            glib:is-gtype-struct-for="Contact">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="ContactGeocodeCallback"
              c:type="MapsContactGeocodeCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="contact" transfer-ownership="none">
          <doc xml:space="preserve">A #MapsContact object</doc>
          <type name="Contact" c:type="MapsContact*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ContactPrivate" c:type="MapsContactPrivate" disguised="1">
    </record>
    <class name="ContactStore"
           c:symbol-prefix="contact_store"
           c:type="MapsContactStore"
           parent="GObject.Object"
           glib:type-name="MapsContactStore"
           glib:get-type="maps_contact_store_get_type"
           glib:type-struct="ContactStoreClass">
      <constructor name="new" c:identifier="maps_contact_store_new">
        <return-value transfer-ownership="full">
          <type name="ContactStore" c:type="MapsContactStore*"/>
        </return-value>
      </constructor>
      <method name="get_contacts"
              c:identifier="maps_contact_store_get_contacts">
        <return-value transfer-ownership="container">
          <doc xml:space="preserve">a list of #MapsContact,</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Contact"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve">A #MapsContactStore object</doc>
            <type name="ContactStore" c:type="MapsContactStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="maps_contact_store_load">
        <doc xml:space="preserve">Load contacts from available backends.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve">A #MapsContactStore object</doc>
            <type name="ContactStore" c:type="MapsContactStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lookup" c:identifier="maps_contact_store_lookup">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve">A #MapsContactStore object</doc>
            <type name="ContactStore" c:type="MapsContactStore*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none" scope="async">
            <doc xml:space="preserve">A #MapsContactStoreLookupCallback function</doc>
            <type name="ContactStoreLookupCallback"
                  c:type="MapsContactStoreLookupCallback"/>
          </parameter>
        </parameters>
      </method>
      <property name="state" transfer-ownership="none">
        <doc xml:space="preserve">The type of the contact.</doc>
        <type name="ContactStoreState"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ContactStorePrivate" c:type="MapsContactStorePrivate*"/>
      </field>
    </class>
    <record name="ContactStoreClass"
            c:type="MapsContactStoreClass"
            glib:is-gtype-struct-for="ContactStore">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="ContactStoreLookupCallback"
              c:type="MapsContactStoreLookupCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="contact" transfer-ownership="none">
          <doc xml:space="preserve">A #MapsContact object</doc>
          <type name="Contact" c:type="MapsContact*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ContactStorePrivate"
            c:type="MapsContactStorePrivate"
            disguised="1">
    </record>
    <enumeration name="ContactStoreState"
                 glib:type-name="MapsContactStoreState"
                 glib:get-type="maps_contact_store_state_get_type"
                 c:type="MapsContactStoreState">
      <member name="initial"
              value="0"
              c:identifier="MAPS_CONTACT_STORE_STATE_INITIAL"
              glib:nick="initial">
        <doc xml:space="preserve">Initial state</doc>
      </member>
      <member name="loading"
              value="1"
              c:identifier="MAPS_CONTACT_STORE_STATE_LOADING"
              glib:nick="loading">
        <doc xml:space="preserve">Loading</doc>
      </member>
      <member name="loaded"
              value="2"
              c:identifier="MAPS_CONTACT_STORE_STATE_LOADED"
              glib:nick="loaded">
        <doc xml:space="preserve">Loaded</doc>
      </member>
    </enumeration>
    <class name="FileTileSource"
           c:symbol-prefix="file_tile_source"
           c:type="MapsFileTileSource"
           parent="Champlain.TileSource"
           glib:type-name="MapsFileTileSource"
           glib:get-type="maps_file_tile_source_get_type"
           glib:type-struct="FileTileSourceClass">
      <doc xml:space="preserve">The #MapsFileTileSource structure contains only private data
and should be accessed using the provided API</doc>
      <method name="prepare"
              c:identifier="maps_file_tile_source_prepare"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="tile_source" transfer-ownership="none">
            <type name="FileTileSource" c:type="MapsFileTileSource*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="max-zoom" transfer-ownership="none">
        <doc xml:space="preserve">The maximum zoom level of the tile source.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="min-zoom" transfer-ownership="none">
        <doc xml:space="preserve">The minimum zoom level of the tile source.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="path"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The path to the tile source.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="world" transfer-ownership="none">
        <doc xml:space="preserve">Set a bounding box to limit the world to. No tiles will be loaded
outside of this bounding box. It will not be possible to scroll outside
of this bounding box.</doc>
        <type name="Champlain.BoundingBox"/>
      </property>
      <field name="parent_instance">
        <type name="Champlain.TileSource" c:type="ChamplainTileSource"/>
      </field>
      <field name="priv">
        <type name="FileTileSourcePrivate"
              c:type="MapsFileTileSourcePrivate*"/>
      </field>
    </class>
    <record name="FileTileSourceClass"
            c:type="MapsFileTileSourceClass"
            glib:is-gtype-struct-for="FileTileSource">
      <field name="parent_class">
        <type name="Champlain.TileSourceClass"
              c:type="ChamplainTileSourceClass"/>
      </field>
    </record>
    <record name="FileTileSourcePrivate"
            c:type="MapsFileTileSourcePrivate"
            disguised="1">
    </record>
    <class name="OSMChangeset"
           c:symbol-prefix="osm_changeset"
           c:type="MapsOSMChangeset"
           parent="GObject.Object"
           glib:type-name="MapsOSMChangeset"
           glib:get-type="maps_osm_changeset_get_type"
           glib:type-struct="OSMChangesetClass">
      <constructor name="new" c:identifier="maps_osm_changeset_new">
        <return-value transfer-ownership="full">
          <type name="OSMChangeset" c:type="MapsOSMChangeset*"/>
        </return-value>
        <parameters>
          <parameter name="comment"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">A comment about the OSM change, optional</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="created_by"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve">The client identifier of the OSM change, optional</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="serialize" c:identifier="maps_osm_changeset_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="changeset" transfer-ownership="none">
            <type name="OSMChangeset" c:type="const MapsOSMChangeset*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="comment" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The comment of the changes.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="created-by" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="OSMChangesetPrivate" c:type="MapsOSMChangesetPrivate*"/>
      </field>
    </class>
    <record name="OSMChangesetClass"
            c:type="MapsOSMChangesetClass"
            glib:is-gtype-struct-for="OSMChangeset">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="OSMChangesetPrivate"
            c:type="MapsOSMChangesetPrivate"
            disguised="1">
    </record>
    <class name="OSMNode"
           c:symbol-prefix="osm_node"
           c:type="MapsOSMNode"
           parent="OSMObject"
           glib:type-name="MapsOSMNode"
           glib:get-type="maps_osm_node_get_type"
           glib:type-struct="OSMNodeClass">
      <constructor name="new" c:identifier="maps_osm_node_new">
        <return-value transfer-ownership="full">
          <type name="OSMNode" c:type="MapsOSMNode*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="changeset" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="latitude" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="latitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The latitude of the node.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="longitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The longitude of the node.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="parent_instance">
        <type name="OSMObject" c:type="MapsOSMObject"/>
      </field>
      <field name="priv">
        <type name="OSMNodePrivate" c:type="MapsOSMNodePrivate*"/>
      </field>
    </class>
    <record name="OSMNodeClass"
            c:type="MapsOSMNodeClass"
            glib:is-gtype-struct-for="OSMNode">
      <field name="parent_class">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <record name="OSMNodePrivate" c:type="MapsOSMNodePrivate" disguised="1">
    </record>
    <class name="OSMOAuthProxyCall"
           c:symbol-prefix="osm_oauth_proxy_call"
           c:type="MapsOSMOAuthProxyCall"
           parent="Rest.OAuthProxyCall"
           glib:type-name="MapsOSMOAuthProxyCall"
           glib:get-type="maps_osm_oauth_proxy_call_get_type"
           glib:type-struct="OSMOAuthProxyCallClass">
      <constructor name="new" c:identifier="maps_osm_oauth_proxy_call_new">
        <return-value transfer-ownership="full">
          <type name="OSMOAuthProxyCall" c:type="MapsOSMOAuthProxyCall*"/>
        </return-value>
        <parameters>
          <parameter name="proxy" transfer-ownership="none">
            <type name="Rest.OAuthProxy" c:type="OAuthProxy*"/>
          </parameter>
          <parameter name="content" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="Rest.OAuthProxyCall" c:type="OAuthProxyCall"/>
      </field>
      <field name="priv">
        <type name="OSMOAuthProxyCallPrivate"
              c:type="MapsOSMOAuthProxyCallPrivate*"/>
      </field>
    </class>
    <record name="OSMOAuthProxyCallClass"
            c:type="MapsOSMOAuthProxyCallClass"
            glib:is-gtype-struct-for="OSMOAuthProxyCall">
      <field name="parent_class">
        <type name="Rest.OAuthProxyCallClass" c:type="OAuthProxyCallClass"/>
      </field>
    </record>
    <record name="OSMOAuthProxyCallPrivate"
            c:type="MapsOSMOAuthProxyCallPrivate"
            disguised="1">
    </record>
    <class name="OSMObject"
           c:symbol-prefix="osm_object"
           c:type="MapsOSMObject"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="MapsOSMObject"
           glib:get-type="maps_osm_object_get_type"
           glib:type-struct="OSMObjectClass">
      <virtual-method name="get_xml_attributes" introspectable="0">
        <return-value>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="const MapsOSMObject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_xml_child_nodes" introspectable="0">
        <return-value>
          <type c:type="xmlNodePtr"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="const MapsOSMObject*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="delete_tag" c:identifier="maps_osm_object_delete_tag">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="MapsOSMObject*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag" c:identifier="maps_osm_object_get_tag">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="const MapsOSMObject*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="serialize" c:identifier="maps_osm_object_serialize">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="const MapsOSMObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_tag" c:identifier="maps_osm_object_set_tag">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="OSMObject" c:type="MapsOSMObject*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="changeset" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The OSM changeset for the current upload of the object.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="id" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The OSM id of the object.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="version" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The latest OSM version of the object.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="OSMObjectClass"
            c:type="MapsOSMObjectClass"
            glib:is-gtype-struct-for="OSMObject">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_xml_tag_name">
        <callback name="get_xml_tag_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
        </callback>
      </field>
      <field name="get_xml_attributes" introspectable="0">
        <callback name="get_xml_attributes" introspectable="0">
          <return-value>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="OSMObject" c:type="const MapsOSMObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_xml_child_nodes" introspectable="0">
        <callback name="get_xml_child_nodes" introspectable="0">
          <return-value>
            <type c:type="xmlNodePtr"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="OSMObject" c:type="const MapsOSMObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="OSMObjectPrivate"
            c:type="MapsOSMObjectPrivate"
            disguised="1">
    </record>
    <class name="OSMRelation"
           c:symbol-prefix="osm_relation"
           c:type="MapsOSMRelation"
           parent="OSMObject"
           glib:type-name="MapsOSMRelation"
           glib:get-type="maps_osm_relation_get_type"
           glib:type-struct="OSMRelationClass">
      <constructor name="new" c:identifier="maps_osm_relation_new">
        <return-value transfer-ownership="full">
          <type name="OSMRelation" c:type="MapsOSMRelation*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="changeset" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_member" c:identifier="maps_osm_relation_add_member">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="relation" transfer-ownership="none">
            <type name="OSMRelation" c:type="MapsOSMRelation*"/>
          </instance-parameter>
          <parameter name="role" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ref" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="OSMObject" c:type="MapsOSMObject"/>
      </field>
      <field name="priv">
        <type name="OSMRelationPrivate" c:type="MapsOSMRelationPrivate*"/>
      </field>
    </class>
    <record name="OSMRelationClass"
            c:type="MapsOSMRelationClass"
            glib:is-gtype-struct-for="OSMRelation">
      <field name="parent_class">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <record name="OSMRelationPrivate"
            c:type="MapsOSMRelationPrivate"
            disguised="1">
    </record>
    <class name="OSMWay"
           c:symbol-prefix="osm_way"
           c:type="MapsOSMWay"
           parent="OSMObject"
           glib:type-name="MapsOSMWay"
           glib:get-type="maps_osm_way_get_type"
           glib:type-struct="OSMWayClass">
      <constructor name="new" c:identifier="maps_osm_way_new">
        <return-value transfer-ownership="full">
          <type name="OSMWay" c:type="MapsOSMWay*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="changeset" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_node_id" c:identifier="maps_osm_way_add_node_id">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="way" transfer-ownership="none">
            <type name="OSMWay" c:type="MapsOSMWay*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="OSMObject" c:type="MapsOSMObject"/>
      </field>
      <field name="priv">
        <type name="OSMWayPrivate" c:type="MapsOSMWayPrivate*"/>
      </field>
    </class>
    <record name="OSMWayClass"
            c:type="MapsOSMWayClass"
            glib:is-gtype-struct-for="OSMWay">
      <field name="parent_class">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <record name="OSMWayPrivate" c:type="MapsOSMWayPrivate" disguised="1">
    </record>
    <record name="_ContactClass" c:type="_MapsContactClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="_ContactStoreClass" c:type="_MapsContactStoreClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="_OSMChangesetClass" c:type="_MapsOSMChangesetClass">
      <field name="parent_class" writable="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="_OSMNodeClass" c:type="_MapsOSMNodeClass">
      <field name="parent_class" writable="1">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <record name="_OSMRelationClass" c:type="_MapsOSMRelationClass">
      <field name="parent_class" writable="1">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <record name="_OSMWayClass" c:type="_MapsOSMWayClass">
      <field name="parent_class" writable="1">
        <type name="OSMObjectClass" c:type="MapsOSMObjectClass"/>
      </field>
    </record>
    <function name="osm_finalize" c:identifier="maps_osm_finalize">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="osm_init" c:identifier="maps_osm_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="osm_parse" c:identifier="maps_osm_parse" throws="1">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">A MapsOSMObject</doc>
        <type name="OSMObject" c:type="MapsOSMObject*"/>
      </return-value>
      <parameters>
        <parameter name="content" transfer-ownership="none">
          <doc xml:space="preserve">XML data</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:space="preserve">Length of data</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
