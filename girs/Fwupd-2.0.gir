<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Json" version="1.0"/>
  <package name="fwupd"/>
  <c:include name="fwupd.h"/>
  <namespace name="Fwupd"
             version="2.0"
             shared-library="libfwupd.so.2"
             c:identifier-prefixes="Fwupd,fwupd"
             c:symbol-prefixes="fwupd">
    <alias name="DeviceFlags" c:type="FwupdDeviceFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="568">Flags used to represent device attributes</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="573"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="DeviceProblem" c:type="FwupdDeviceProblem">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="688">Problems are reasons why the device is not updatable.

All problems have to be fixable by the user, rather than the plugin author.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="695"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="PluginFlags" c:type="FwupdPluginFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="993">Flags used to represent plugin attributes</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="998"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="ReleaseFlags" c:type="FwupdReleaseFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="785">Flags used to represent release attributes</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="790"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="ReportFlags" c:type="FwupdReportFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-report.h"
           line="66">Flags used to represent report attributes</doc>
      <source-position filename="libfwupd/fwupd-report.h" line="71"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="RequestFlags" c:type="FwupdRequestFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="169">Flags used to represent request attributes</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="174"/>
      <type name="guint64" c:type="guint64"/>
    </alias>
    <alias name="_guid_t" c:type="fwupd_guid_t">
      <source-position filename="libfwupd/fwupd-common.h" line="65"/>
      <type name="guint8" c:type="guint8*"/>
    </alias>
    <constant name="BATTERY_LEVEL_INVALID"
              value="101"
              c:type="FWUPD_BATTERY_LEVEL_INVALID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1133">This value signifies the battery level is either unset, or the value cannot
be discovered.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="BIOS_SETTING_DEBUG_CMD"
              value="debug_cmd"
              c:type="FWUPD_BIOS_SETTING_DEBUG_CMD">
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BIOS_SETTING_PENDING_REBOOT"
              value="pending_reboot"
              c:type="FWUPD_BIOS_SETTING_PENDING_REBOOT">
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="32"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BIOS_SETTING_RESET_BIOS"
              value="reset_bios"
              c:type="FWUPD_BIOS_SETTING_RESET_BIOS">
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="BiosSetting"
           c:symbol-prefix="bios_setting"
           c:type="FwupdBiosSetting"
           parent="GObject.Object"
           glib:type-name="FwupdBiosSetting"
           glib:get-type="fwupd_bios_setting_get_type"
           glib:type-struct="BiosSettingClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-bios-setting.c"
           line="14">A BIOS setting that represents a setting in the firmware.</doc>
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="29"/>
      <constructor name="new"
                   c:identifier="fwupd_bios_setting_new"
                   version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="1193">Creates a new bios setting.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="1200">a new #FwupdBiosSetting.</doc>
          <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="1195">the attribute name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="1196">the path the driver providing this attribute uses</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="array_from_variant"
                c:identifier="fwupd_bios_setting_array_from_variant"
                version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="1158">Creates an array of new bios settings using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="113"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="1164">attributes,
or %NULL if @value was invalid.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="BiosSetting"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="1160">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_bios_setting_from_variant"
                version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="1124">Creates a new bios setting using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="111"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="1130">a new #FwupdBiosSetting, or %NULL if @value was invalid.</doc>
          <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="1126">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="write_value"
                      invoker="write_value"
                      version="1.9.4"
                      throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="678">Writes a new value into the setting if it is different from the current value.

NOTE: A subclass should handle the `-&gt;write_value()` vfunc and actually write the value to the
firmware.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="689">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="680">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="681">The string to write</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_possible_value"
              c:identifier="fwupd_bios_setting_add_possible_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="451">Adds a possible value to the attribute.  This indicates one of the values the
kernel driver will accept from userspace.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="453">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="possible_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="454">the possible</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="from_json"
              c:identifier="fwupd_bios_setting_from_json"
              version="1.8.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="898">Loads a fwupd bios setting from a JSON node.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting-private.h"
                         line="18"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="906">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="900">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="json_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="901">a JSON node</doc>
            <type name="Json.Node" c:type="JsonNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_current_value"
              c:identifier="fwupd_bios_setting_get_current_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="546">Gets the string representation of the current_value stored in an attribute
from the kernel.  This value is cached; so changing it outside of fwupd may
may put it out of sync.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="554">the current value of the attribute.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="548">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="fwupd_bios_setting_get_description"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="527">Gets the attribute description which is provided by some drivers to explain
what they change.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="534">the attribute description, or %NULL if unset.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="529">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="fwupd_bios_setting_get_id"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="40">Gets the unique attribute identifier for this attribute/driver</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="46">attribute ID if set otherwise NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="42">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="fwupd_bios_setting_get_kind"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="225">Gets the BIOS setting type used by the kernel interface.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="231">the bios setting type, or %FWUPD_BIOS_SETTING_KIND_UNKNOWN if unset.</doc>
          <type name="BiosSettingKind" c:type="FwupdBiosSettingKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="227">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_lower_bound"
              c:identifier="fwupd_bios_setting_get_lower_bound"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="116">Gets the lower bound for integer attributes or
minimum length for string attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="123">guint64</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="118">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="fwupd_bios_setting_get_name"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="491">Gets the attribute name.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="497">the attribute name, or %NULL if unset.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="493">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path"
              c:identifier="fwupd_bios_setting_get_path"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="509">Gets the path for the driver providing the attribute.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="94"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="515">the driver, or %NULL if unfound.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="511">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_possible_values"
              c:identifier="fwupd_bios_setting_get_possible_values"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="472">Find all possible values for an enumeration attribute.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="108"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="478">all possible values.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="474">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_read_only"
              c:identifier="fwupd_bios_setting_get_read_only"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="80">Determines if a BIOS setting is read only</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="86">gboolean</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="82">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scalar_increment"
              c:identifier="fwupd_bios_setting_get_scalar_increment"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="154">Gets the scalar increment used for integer attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="160">guint64</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="156">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upper_bound"
              c:identifier="fwupd_bios_setting_get_upper_bound"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="135">Gets the upper bound for integer attributes or
maximum length for string attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="142">guint64</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="137">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_possible_value"
              c:identifier="fwupd_bios_setting_has_possible_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="422">Finds out if a specific possible value was added to the attribute.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="429">%TRUE if the self matches.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="424">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="425">the possible value string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="map_possible_value"
              c:identifier="fwupd_bios_setting_map_possible_value"
              version="1.8.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="359">Attempts to map a user provided string into strings that a #FwupdBiosSetting can
support.  The following heuristics are used:
- Ignore case sensitivity
- Map obviously "positive" phrases into a value that turns on the #FwupdBiosSetting
- Map obviously "negative" phrases into a value that turns off the #FwupdBiosSetting</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="371">the possible value that maps or NULL if none if found</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="361">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="362">the string to try to map</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_current_value"
              c:identifier="fwupd_bios_setting_set_current_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="566">Sets the string stored in an attribute.
This doesn't change the representation in the kernel.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="568">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="569">The string to set an attribute to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="fwupd_bios_setting_set_description"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="306">Sets the attribute description.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="308">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="309">the attribute description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="fwupd_bios_setting_set_id"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="58">Sets the unique attribute identifier for this attribute</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="60">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="fwupd_bios_setting_set_kind"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="243">Sets the BIOS setting type used by the kernel interface.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="245">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="246">a bios setting type, e.g. %FWUPD_BIOS_SETTING_KIND_ENUMERATION</doc>
            <type name="BiosSettingKind" c:type="FwupdBiosSettingKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_lower_bound"
              c:identifier="fwupd_bios_setting_set_lower_bound"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="190">Sets the lower bound used for BIOS integer attributes or max
length for string attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="192">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="193">a guint64 value to set bound to</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="fwupd_bios_setting_set_name"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="260">Sets the attribute name provided by a kernel driver.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="262">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="263">the attribute name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_path"
              c:identifier="fwupd_bios_setting_set_path"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="283">Sets path to the attribute.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="285">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="286">the path the driver providing the attribute uses</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_read_only"
              c:identifier="fwupd_bios_setting_set_read_only"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="98">Configures whether an attribute is read only
maximum length for string attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="100">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scalar_increment"
              c:identifier="fwupd_bios_setting_set_scalar_increment"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="208">Sets the scalar increment used for BIOS integer attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="210">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="211">a guint64 value to set increment to</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_upper_bound"
              c:identifier="fwupd_bios_setting_set_upper_bound"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="172">Sets the upper bound used for BIOS integer attributes or max
length for string attributes.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="174">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="175">a guint64 value to set bound to</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_bios_setting_to_json"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="978">Adds a fwupd bios setting to a JSON builder.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting-private.h"
                         line="16"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="980">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="981">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_bios_setting_to_string"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="1034">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="1040">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="1036">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_bios_setting_to_variant"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="757">Serialize the bios setting.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting-private.h"
                         line="14"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="764">the serialized data, or %NULL for error.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="759">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="trusted" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="760">whether the caller should receive trusted values</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_value"
              c:identifier="fwupd_bios_setting_write_value"
              version="1.9.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.c"
             line="678">Writes a new value into the setting if it is different from the current value.

NOTE: A subclass should handle the `-&gt;write_value()` vfunc and actually write the value to the
firmware.</doc>
        <source-position filename="libfwupd/fwupd-bios-setting.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-bios-setting.c"
               line="689">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="680">a #FwupdBiosSetting</doc>
            <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="681">The string to write</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="BiosSettingClass"
            c:type="FwupdBiosSettingClass"
            glib:is-gtype-struct-for="BiosSetting">
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="write_value">
        <callback name="write_value" throws="1">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="21"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-bios-setting.c"
                 line="689">%TRUE for success</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libfwupd/fwupd-bios-setting.c"
                   line="680">a #FwupdBiosSetting</doc>
              <type name="BiosSetting" c:type="FwupdBiosSetting*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libfwupd/fwupd-bios-setting.c"
                   line="681">The string to write</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-bios-setting.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="BiosSettingKind" c:type="FwupdBiosSettingKind">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-bios-setting.h"
           line="36">The type of BIOS setting.</doc>
      <source-position filename="libfwupd/fwupd-bios-setting.h" line="53"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_BIOS_SETTING_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.h"
             line="38">BIOS setting type is unknown</doc>
      </member>
      <member name="enumeration"
              value="1"
              c:identifier="FWUPD_BIOS_SETTING_KIND_ENUMERATION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.h"
             line="39">BIOS setting that has enumerated possible
values</doc>
      </member>
      <member name="integer"
              value="2"
              c:identifier="FWUPD_BIOS_SETTING_KIND_INTEGER">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.h"
             line="41">BIOS setting that is an integer</doc>
      </member>
      <member name="string"
              value="3"
              c:identifier="FWUPD_BIOS_SETTING_KIND_STRING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-bios-setting.h"
             line="42">BIOS setting that accepts a string</doc>
      </member>
    </enumeration>
    <function-macro name="CHECK_VERSION"
                    c:identifier="FWUPD_CHECK_VERSION"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-version.h"
           line="38">Check whether a fwupd version equal to or greater than
major.minor.micro.

These compile time macros allow the user to enable parts of client code
depending on the version of libfwupd installed.</doc>
      <source-position filename="libfwupd/fwupd-version.h" line="50"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-version.h"
               line="40">Major version number</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-version.h"
               line="41">Minor version number</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-version.h"
               line="42">Micro version number</doc>
        </parameter>
      </parameters>
    </function-macro>
    <class name="Client"
           c:symbol-prefix="client"
           c:type="FwupdClient"
           parent="GObject.Object"
           glib:type-name="FwupdClient"
           glib:get-type="fwupd_client_get_type"
           glib:type-struct="ClientClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-client.c"
           line="42">Allow client code to call the daemon methods.

See also: [class@FwupdDevice]</doc>
      <source-position filename="libfwupd/fwupd-client.h" line="38"/>
      <constructor name="new" c:identifier="fwupd_client_new" version="0.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="7061">Creates a new client.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="7066">a new #FwupdClient</doc>
          <type name="Client" c:type="FwupdClient*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed">
        <source-position filename="libfwupd/fwupd-client.h" line="25"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_added">
        <source-position filename="libfwupd/fwupd-client.h" line="27"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_changed">
        <source-position filename="libfwupd/fwupd-client.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_removed">
        <source-position filename="libfwupd/fwupd-client.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_request">
        <source-position filename="libfwupd/fwupd-client.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="request" transfer-ownership="none">
            <type name="Request" c:type="FwupdRequest*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="status_changed">
        <source-position filename="libfwupd/fwupd-client.h" line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="Status" c:type="FwupdStatus"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="activate"
              c:identifier="fwupd_client_activate"
              version="1.2.6"
              throws="1"
              glib:async-func="activate_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="891">Activates up a device, which normally means the device switches to a new
firmware version. This should only be called when data loss cannot occur.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="901">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="893">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="894">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="895">a device</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="activate_async"
              c:identifier="fwupd_client_activate_async"
              version="1.5.0"
              glib:finish-func="activate_finish"
              glib:sync-func="activate">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2415">Activates up a device, which normally means the device switches to a new
firmware version. This should only be called when data loss cannot occur.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2417">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2418">a device</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2419">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2420">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2421">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="activate_finish"
              c:identifier="fwupd_client_activate_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2455">Gets the result of [method@FwupdClient.activate_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="220"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2463">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2457">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2458">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_hint"
              c:identifier="fwupd_client_add_hint"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6118">Sets optional hints from the client that may affect the list of devices.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="639"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6120">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6121">the key, e.g. `locale`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6122">the value @key should be set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_report_devices"
              c:identifier="fwupd_client_build_report_devices"
              version="1.9.20"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6478">Builds a JSON report for the list of devices.

This function should be called *before* asking the interactive user if they want to upload a
report -- as this function filters devices and may return an error if there is nothing to do.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="643"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6493">a string, or %NULL if the ID is not present</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6480">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="devices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6481">devices</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Device"/>
            </array>
          </parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6482">attributes</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="utf8"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="clear_results"
              c:identifier="fwupd_client_clear_results"
              version="0.7.0"
              throws="1"
              glib:async-func="clear_results_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="941">Clears the results for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="950">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="943">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="944">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="945">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_results_async"
              c:identifier="fwupd_client_clear_results_async"
              version="1.5.0"
              glib:finish-func="clear_results_finish"
              glib:sync-func="clear_results">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2728">Clears the results for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2730">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2731">a device</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2732">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2733">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2734">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_results_finish"
              c:identifier="fwupd_client_clear_results_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2767">Gets the result of [method@FwupdClient.clear_results_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2775">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2769">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2770">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect"
              c:identifier="fwupd_client_connect"
              version="0.7.1"
              introspectable="0"
              throws="1"
              glib:async-func="connect_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="78">Sets up the client ready for use. Most other methods call this
for you, and do you only need to call this if you are just watching
the client.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="14"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="88">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="80">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="81">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_async"
              c:identifier="fwupd_client_connect_async"
              version="1.5.0"
              glib:finish-func="connect_finish"
              glib:sync-func="connect">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="941">Sets up the client ready for use. This is probably the first method you call
when wanting to use libfwupd in an asynchronous manner.

Other methods such as [method@FwupdClient.get_devices_async] should only be called
after [method@FwupdClient.connect_finish] has been called without an error.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="943">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="944">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="945">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="946">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="fwupd_client_connect_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1017">Gets the result of [method@Client.connect_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1025">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1019">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1020">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect"
              c:identifier="fwupd_client_disconnect"
              version="1.8.0"
              introspectable="0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1038">Tears down client after use. You only need to call this method if you are:

- connecting to the daemon in one thread and finalizing the client in another one
- to change the `FWUPD_DBUS_SOCKET` for a different peer-to-peer connection
- to add or change connection hints as specified by [method@FwupdClient.add_hint].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1049">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1040">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="download_bytes"
              c:identifier="fwupd_client_download_bytes"
              version="1.4.5"
              throws="1"
              glib:async-func="download_bytes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2442">Downloads data from a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="246"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2453">downloaded data, or %NULL for error</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2444">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2445">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2446">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2447">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_bytes_async"
              c:identifier="fwupd_client_download_bytes_async"
              version="1.5.0"
              glib:finish-func="download_bytes_finish"
              glib:sync-func="download_bytes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5567">Downloads data from a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.

You must have called [method@Client.connect_async] on @self before using
this method.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="597"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5569">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5570">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5571">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5572">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5573">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5574">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_bytes_finish"
              c:identifier="fwupd_client_download_bytes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5607">Gets the result of [method@FwupdClient.download_bytes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="604"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5615">downloaded data, or %NULL for error</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5609">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5610">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_file"
              c:identifier="fwupd_client_download_file"
              version="1.5.2"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2488">Downloads data from a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="252"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2500">%TRUE if the file was written</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2490">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2491">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2492">a file</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2493">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2494">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_set_retries"
              c:identifier="fwupd_client_download_set_retries"
              version="1.9.19">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="395">Sets the number of retries should be attempted on transient download errors.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="608"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="397">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="retries" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="398">number of tries, defaulting to 0</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_load"
              c:identifier="fwupd_client_emulation_load"
              version="1.8.11"
              throws="1"
              glib:async-func="emulation_load_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2675">Loads an emulated device into the daemon backend that has the phases set by the JSON data,
for instance, having one USB device emulated for the bootloader and another emulated for the
runtime interface.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="275"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2686">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2677">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2678">archive data of JSON files</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2679">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_load_async"
              c:identifier="fwupd_client_emulation_load_async"
              version="1.8.11"
              glib:finish-func="emulation_load_finish"
              glib:sync-func="emulation_load">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6157">Loads an emulated device into the daemon backend that has the phases set by the JSON data,
for instance, having one USB device emulated for the bootloader and another emulated for the
runtime interface.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="439"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6159">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6160">archive data of JSON files</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6161">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6162">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6163">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_load_finish"
              c:identifier="fwupd_client_emulation_load_finish"
              version="1.8.11"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6200">Gets the result of [method@FwupdClient.emulation_load_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="445"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6208">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6202">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6203">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_save"
              c:identifier="fwupd_client_emulation_save"
              version="1.8.11"
              throws="1"
              glib:async-func="emulation_save_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2731">Gets the captured data from all filtered devices for all recorded phases. The data is returned
in a ZIP archive of JSON output.

NOTE: Device events are not automatically recorded for all devices. You must call something
like `ModifyDevice(device_id, 'flags','emulation-tag')` to start the recording the backend.

Once the device has been re-inserted then the emulation data will be available using
this API call.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="280"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2746">archive data</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2733">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2734">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_save_async"
              c:identifier="fwupd_client_emulation_save_async"
              version="1.8.11"
              glib:finish-func="emulation_save_finish"
              glib:sync-func="emulation_save">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6241">Gets the captured data from all filtered devices for all recorded phases. The data is returned
in a ZIP archive of JSON output.

NOTE: Device events are not automatically recorded for all devices. You must call something
like `ModifyDevice(device_id, 'flags','emulation-tag')` to start the recording the backend.

Once the device has been re-inserted then the emulation data will be available using
this API call.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="448"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6243">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6244">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6245">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6246">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="emulation_save_finish"
              c:identifier="fwupd_client_emulation_save_finish"
              version="1.8.11"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6287">Gets the result of [method@FwupdClient.emulation_save_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="453"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6295">archive data</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6289">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6290">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_networking"
              c:identifier="fwupd_client_ensure_networking"
              version="1.4.5"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="669">Sets up the client networking support ready for use. Most other download and
upload methods call this automatically, and do you only need to call this if
the session is being used outside the [class@FwupdClient].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="636"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="678">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="671">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fix_host_security_attr"
              c:identifier="fwupd_client_fix_host_security_attr"
              version="1.9.6"
              throws="1"
              glib:async-func="fix_host_security_attr_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2786">Fix one specific security attribute.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="284"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2795">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2788">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2789">the HSI AppStream ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2790">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fix_host_security_attr_async"
              c:identifier="fwupd_client_fix_host_security_attr_async"
              version="1.9.6"
              glib:finish-func="fix_host_security_attr_finish"
              glib:sync-func="fix_host_security_attr">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6326">Fix one specific security attribute.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="457"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6328">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6329">HSI AppStream ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6330">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6331">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6332">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fix_host_security_attr_finish"
              c:identifier="fwupd_client_fix_host_security_attr_finish"
              version="1.9.6"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6365">Gets the result of [method@FwupdClient.fix_host_security_attr_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="463"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6373">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6367">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6368">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_approved_firmware"
              c:identifier="fwupd_client_get_approved_firmware"
              version="1.2.6"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2104">Gets the list of approved firmware.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="217"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2112">checksums, or %NULL for error</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2106">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2107">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_approved_firmware_async"
              c:identifier="fwupd_client_get_approved_firmware_async"
              version="1.5.0"
              glib:finish-func="get_approved_firmware_finish">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4466">Gets the list of approved firmware.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="525"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4468">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4469">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4470">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4471">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_approved_firmware_finish"
              c:identifier="fwupd_client_get_approved_firmware_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4505">Gets the result of [method@FwupdClient.get_approved_firmware_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="530"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4513">checksums, or %NULL for error</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4507">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4508">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_battery_level"
              c:identifier="fwupd_client_get_battery_level"
              glib:get-property="battery-level"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3802">Returns the system battery level.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="500"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3808">value in percent</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3804">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_battery_threshold"
              c:identifier="fwupd_client_get_battery_threshold"
              glib:get-property="battery-threshold"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3820">Returns the system battery threshold under which a firmware update cannot be
performed.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="502"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3827">value in percent</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3822">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bios_settings"
              c:identifier="fwupd_client_get_bios_settings"
              version="1.8.4"
              throws="1"
              glib:async-func="get_bios_settings_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1103">Gets all the BIOS settings from the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="110"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1111">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="BiosSetting"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1105">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1106">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bios_settings_async"
              c:identifier="fwupd_client_get_bios_settings_async"
              version="1.8.4"
              glib:finish-func="get_bios_settings_finish"
              glib:sync-func="get_bios_settings">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1375">Gets all the host security attributes from the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1377">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1378">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1379">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1380">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bios_settings_finish"
              c:identifier="fwupd_client_get_bios_settings_finish"
              version="1.8.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1414">Gets the result of [method@FwupdClient.get_bios_settings_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="260"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1422">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="BiosSetting"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1416">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1417">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocked_firmware"
              c:identifier="fwupd_client_get_blocked_firmware"
              version="1.4.6"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2217">Gets the list of blocked firmware.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="226"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2225">checksums, or %NULL for error</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2219">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2220">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocked_firmware_async"
              c:identifier="fwupd_client_get_blocked_firmware_async"
              version="1.5.0"
              glib:finish-func="get_blocked_firmware_finish">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4633">Gets the list of blocked firmware.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="546"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4635">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4636">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4637">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4638">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocked_firmware_finish"
              c:identifier="fwupd_client_get_blocked_firmware_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4672">Gets the result of [method@FwupdClient.get_blocked_firmware_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="551"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4680">checksums, or %NULL for error</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4674">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4675">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_daemon_interactive"
              c:identifier="fwupd_client_get_daemon_interactive"
              version="1.3.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3893">Gets if the daemon is running in an interactive terminal.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="482"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3899">%TRUE if the daemon is running in an interactive terminal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3895">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_daemon_version"
              c:identifier="fwupd_client_get_daemon_version"
              glib:get-property="daemon-version"
              version="0.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3694">Gets the daemon version number.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="486"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3700">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3696">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_details"
              c:identifier="fwupd_client_get_details"
              version="1.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="511">Gets details about a specific firmware file.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="49"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="520">an array of results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="513">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="514">the firmware filename, e.g. `firmware.cab`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="515">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_details_bytes"
              c:identifier="fwupd_client_get_details_bytes"
              version="1.5.0"
              throws="1"
              glib:async-func="get_details_bytes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="455">Gets details about a specific firmware file.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="54"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="464">an array of results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="457">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="458">the firmware archive</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="459">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_details_bytes_async"
              c:identifier="fwupd_client_get_details_bytes_async"
              version="1.5.0"
              glib:finish-func="get_details_bytes_finish"
              glib:sync-func="get_details_bytes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3608">Gets details about a specific firmware file.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3610">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3611">firmware archive</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3612">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3613">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3614">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_details_bytes_finish"
              c:identifier="fwupd_client_get_details_bytes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3655">Gets the result of [method@FwupdClient.get_details_bytes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="168"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3663">an array of results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3657">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3658">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_by_id"
              c:identifier="fwupd_client_get_device_by_id"
              version="0.9.3"
              throws="1"
              glib:async-func="get_device_by_id_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1252">Gets a device by its device ID.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="123"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1261">a device or %NULL</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1254">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1255">the device ID, e.g. `usb:00:01:03:03`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1256">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_by_id_async"
              c:identifier="fwupd_client_get_device_by_id_async"
              version="1.5.0"
              glib:finish-func="get_device_by_id_finish"
              glib:sync-func="get_device_by_id">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1907">Gets a device by it's device ID.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="286"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1909">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1910">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1911">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1912">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1913">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_by_id_finish"
              c:identifier="fwupd_client_get_device_by_id_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1946">Gets the result of [method@FwupdClient.get_device_by_id_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="292"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1954">a device, or %NULL for failure</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1948">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1949">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="fwupd_client_get_devices"
              version="0.9.2"
              throws="1"
              glib:async-func="get_devices_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="162">Gets all the devices registered with the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="22"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="170">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="164">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="165">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_async"
              c:identifier="fwupd_client_get_devices_async"
              version="1.5.0"
              glib:finish-func="get_devices_finish"
              glib:sync-func="get_devices">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1638">Gets all the devices registered with the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1640">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1641">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1642">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1643">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_by_guid"
              c:identifier="fwupd_client_get_devices_by_guid"
              version="1.4.1"
              throws="1"
              glib:async-func="get_devices_by_guid_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1306">Gets any devices that provide a specific GUID. An error is returned if no
devices contains this GUID.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="128"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1316">devices or %NULL</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1308">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1309">the GUID, e.g. `e22c4520-43dc-5bb3-8245-5787fead9b63`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1310">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_by_guid_async"
              c:identifier="fwupd_client_get_devices_by_guid_async"
              version="1.5.0"
              glib:finish-func="get_devices_by_guid_finish"
              glib:sync-func="get_devices_by_guid">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2005">Gets any devices that provide a specific GUID. An error is returned if no
devices contains this GUID.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="297"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2007">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2008">the GUID, e.g. `e22c4520-43dc-5bb3-8245-5787fead9b63`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2009">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2010">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2011">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_by_guid_finish"
              c:identifier="fwupd_client_get_devices_by_guid_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2045">Gets the result of [method@FwupdClient.get_devices_by_guid_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="303"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2053">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2047">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2048">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_devices_finish"
              c:identifier="fwupd_client_get_devices_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1677">Gets the result of [method@FwupdClient.get_devices_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="110"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1685">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1679">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1680">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_downgrades"
              c:identifier="fwupd_client_get_downgrades"
              version="0.9.8"
              throws="1"
              glib:async-func="get_downgrades_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="348">Gets all the downgrades for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="39"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="357">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="350">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="351">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="352">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_downgrades_async"
              c:identifier="fwupd_client_get_downgrades_async"
              version="1.5.0"
              glib:finish-func="get_downgrades_finish"
              glib:sync-func="get_downgrades">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2169">Gets all the downgrades for a specific device.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2171">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2172">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2173">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2174">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2175">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_downgrades_finish"
              c:identifier="fwupd_client_get_downgrades_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2211">Gets the result of [method@FwupdClient.get_downgrades_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="148"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2219">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2213">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2214">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history"
              c:identifier="fwupd_client_get_history"
              version="1.0.4"
              throws="1"
              glib:async-func="get_history_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="250">Gets all the history.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="30"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="258">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="252">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="253">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_async"
              c:identifier="fwupd_client_get_history_async"
              version="1.5.0"
              glib:finish-func="get_history_finish"
              glib:sync-func="get_history">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1798">Gets all the history.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1800">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1801">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1802">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1803">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_history_finish"
              c:identifier="fwupd_client_get_history_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1837">Gets the result of [method@FwupdClient.get_history_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="128"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1845">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1839">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1840">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_bkc"
              c:identifier="fwupd_client_get_host_bkc"
              glib:get-property="host-bkc"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3712">Gets the host best known configuration, e.g. `vendor-factory-2021q1,mycompany-2023`.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="490"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3718">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3714">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host_machine_id"
              c:identifier="fwupd_client_get_host_machine_id"
              glib:get-property="host-machine-id"
              version="1.3.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3766">Gets the string that represents the host machine ID</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="496"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3772">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3768">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host_product"
              c:identifier="fwupd_client_get_host_product"
              glib:get-property="host-product"
              version="1.3.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3730">Gets the string that represents the host running fwupd</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="494"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3736">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3732">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host_security_attrs"
              c:identifier="fwupd_client_get_host_security_attrs"
              version="1.5.0"
              throws="1"
              glib:async-func="get_host_security_attrs_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1151">Gets all the host security attributes from the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="114"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1159">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SecurityAttr"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1153">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1154">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_attrs_async"
              c:identifier="fwupd_client_get_host_security_attrs_async"
              version="1.5.0"
              glib:finish-func="get_host_security_attrs_finish"
              glib:sync-func="get_host_security_attrs">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1205">Gets all the host security attributes from the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="265"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1207">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1208">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1209">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1210">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_attrs_finish"
              c:identifier="fwupd_client_get_host_security_attrs_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1244">Gets the result of [method@FwupdClient.get_host_security_attrs_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="270"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1252">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SecurityAttr"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1246">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1247">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_events"
              c:identifier="fwupd_client_get_host_security_events"
              version="1.7.1"
              throws="1"
              glib:async-func="get_host_security_events_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1199">Gets all the host security events from the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="118"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1208">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SecurityAttr"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1201">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="limit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1202">maximum number of events, or 0 for no limit</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1203">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_events_async"
              c:identifier="fwupd_client_get_host_security_events_async"
              version="1.7.1"
              glib:finish-func="get_host_security_events_finish"
              glib:sync-func="get_host_security_events">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1455">Gets all the host security events from the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1457">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="limit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1458">maximum number of events, or 0 for no limit</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1459">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1460">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1461">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_events_finish"
              c:identifier="fwupd_client_get_host_security_events_finish"
              version="1.7.1"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1496">Gets the result of [method@FwupdClient.get_host_security_events_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="281"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1504">attributes</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SecurityAttr"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1498">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1499">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_host_security_id"
              c:identifier="fwupd_client_get_host_security_id"
              glib:get-property="host-security-id"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3784">Gets the string that represents the host machine ID</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="498"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3790">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3786">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_host_vendor"
              c:identifier="fwupd_client_get_host_vendor"
              glib:get-property="host-vendor"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3748">Gets the string that represents the vendor of the host running fwupd</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="492"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3754">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3750">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_main_context"
              c:identifier="fwupd_client_get_main_context"
              version="1.5.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="627">Gets the internal #GMainContext to use for synchronous methods.
By default the value is set a new #GMainContext.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="634">the main context</doc>
          <type name="GLib.MainContext" c:type="GMainContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="629">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_only_trusted"
              c:identifier="fwupd_client_get_only_trusted"
              glib:get-property="only-trusted"
              version="1.8.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3875">Gets if the daemon is verifying signatures from a trusted authority.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="480"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3881">%TRUE if the daemon is checking signatures</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3877">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_percentage"
              c:identifier="fwupd_client_get_percentage"
              glib:get-property="percentage"
              version="0.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3676">Gets the last returned percentage value.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="484"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3682">a percentage, or 0 for unknown.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3678">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plugins"
              c:identifier="fwupd_client_get_plugins"
              version="1.5.0"
              throws="1"
              glib:async-func="get_plugins_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="206">Gets all the plugins being used the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="26"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="214">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Plugin"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="208">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="209">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_plugins_async"
              c:identifier="fwupd_client_get_plugins_async"
              version="1.5.0"
              glib:finish-func="get_plugins_finish"
              glib:sync-func="get_plugins">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1718">Gets all the plugins being used by the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1720">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1721">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1722">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1723">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_plugins_finish"
              c:identifier="fwupd_client_get_plugins_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1757">Gets the result of [method@FwupdClient.get_plugins_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="119"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1765">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1759">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1760">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_releases"
              c:identifier="fwupd_client_get_releases"
              version="0.9.3"
              throws="1"
              glib:async-func="get_releases_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="294">Gets all the releases for a specific device</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="34"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="303">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="296">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="297">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="298">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_releases_async"
              c:identifier="fwupd_client_get_releases_async"
              version="1.5.0"
              glib:finish-func="get_releases_finish"
              glib:sync-func="get_releases">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2086">Gets all the releases for a specific device

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2088">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2089">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2090">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2091">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2092">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_releases_finish"
              c:identifier="fwupd_client_get_releases_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2128">Gets the result of [method@FwupdClient.get_releases_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="138"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2136">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2130">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2131">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remote_by_id"
              c:identifier="fwupd_client_get_remote_by_id"
              version="0.9.3"
              throws="1"
              glib:async-func="get_remote_by_id_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2050">Gets a specific remote that has been configured for the system.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="212"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2059">a #FwupdRemote, or %NULL if not found</doc>
          <type name="Remote" c:type="FwupdRemote*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2052">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2053">the remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2054">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remote_by_id_async"
              c:identifier="fwupd_client_get_remote_by_id_async"
              version="1.5.0"
              glib:finish-func="get_remote_by_id_finish"
              glib:sync-func="get_remote_by_id">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5162">Gets a specific remote that has been configured for the system.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="514"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5164">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5165">the remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5166">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5167">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5168">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remote_by_id_finish"
              c:identifier="fwupd_client_get_remote_by_id_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5198">Gets the result of [method@FwupdClient.get_remote_by_id_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="520"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5206">a #FwupdRemote, or %NULL if not found</doc>
          <type name="Remote" c:type="FwupdRemote*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5200">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5201">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remotes"
              c:identifier="fwupd_client_get_remotes"
              version="0.9.3"
              throws="1"
              glib:async-func="get_remotes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2003">Gets the list of remotes that have been configured for the system.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="208"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2011">list of remotes, or %NULL</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Remote"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2005">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2006">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remotes_async"
              c:identifier="fwupd_client_get_remotes_async"
              version="1.5.0"
              glib:finish-func="get_remotes_finish"
              glib:sync-func="get_remotes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4382">Gets the list of remotes that have been configured for the system.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="505"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4384">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4385">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4386">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4387">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remotes_finish"
              c:identifier="fwupd_client_get_remotes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4421">Gets the result of [method@FwupdClient.get_remotes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="510"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4429">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Remote"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4423">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4424">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_report_metadata"
              c:identifier="fwupd_client_get_report_metadata"
              version="1.5.0"
              throws="1"
              glib:async-func="get_report_metadata_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1892">Gets all the report metadata from the daemon.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="204"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1900">attributes</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1894">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1895">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_report_metadata_async"
              c:identifier="fwupd_client_get_report_metadata_async"
              version="1.5.0"
              glib:finish-func="get_report_metadata_finish"
              glib:sync-func="get_report_metadata">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1558">Gets all the report metadata from the daemon.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="409"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1560">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1561">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1562">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1563">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_report_metadata_finish"
              c:identifier="fwupd_client_get_report_metadata_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1597">Gets the result of [method@FwupdClient.get_report_metadata_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="414"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1605">attributes</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1599">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1600">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_results"
              c:identifier="fwupd_client_get_results"
              version="0.7.0"
              throws="1"
              glib:async-func="get_results_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="994">Gets the results of a previous firmware update for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="100"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1003">a device, or %NULL for failure</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="996">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="997">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="998">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_results_async"
              c:identifier="fwupd_client_get_results_async"
              version="1.5.0"
              glib:finish-func="get_results_finish"
              glib:sync-func="get_results">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2808">Gets the results of a previous firmware update for a specific device.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="234"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2810">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2811">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2812">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2813">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2814">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_results_finish"
              c:identifier="fwupd_client_get_results_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2850">Gets the result of [method@FwupdClient.get_results_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="240"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2858">a device, or %NULL for failure</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2852">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2853">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="fwupd_client_get_status"
              glib:get-property="status"
              version="0.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3839">Gets the last returned status value.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="476"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3845">a #FwupdStatus, or %FWUPD_STATUS_UNKNOWN for unknown.</doc>
          <type name="Status" c:type="FwupdStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3841">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tainted"
              c:identifier="fwupd_client_get_tainted"
              glib:get-property="tainted"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3857">Gets if the daemon has been tainted by 3rd party code.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="478"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3863">%TRUE if the daemon is unsupported</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3859">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_upgrades"
              c:identifier="fwupd_client_get_upgrades"
              version="0.9.8"
              throws="1"
              glib:async-func="get_upgrades_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="401">Gets all the upgrades for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="44"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="410">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="403">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="404">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="405">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_upgrades_async"
              c:identifier="fwupd_client_get_upgrades_async"
              version="1.5.0"
              glib:finish-func="get_upgrades_finish"
              glib:sync-func="get_upgrades">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2252">Gets all the upgrades for a specific device.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2254">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2255">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2256">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2257">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2258">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_upgrades_finish"
              c:identifier="fwupd_client_get_upgrades_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2294">Gets the result of [method@FwupdClient.get_upgrades_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="158"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2302">results</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2296">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2297">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_agent"
              c:identifier="fwupd_client_get_user_agent"
              version="1.5.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5245">Gets the string that represents the user agent that is used for
uploading and downloading. The user agent will contain the runtime
version of fwupd somewhere in the provided string.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="589"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5253">a string, or %NULL for unknown.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5247">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="inhibit"
              c:identifier="fwupd_client_inhibit"
              version="1.8.11"
              throws="1"
              glib:async-func="inhibit_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="727">Marks all devices as unavailable for update. Update is only available if there is no other
inhibit imposed by other applications or by the system (e.g. low power state).

The same application can inhibit the system multiple times.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="739">a string to use for [method@FwupdClient.uninhibit_async],
or %NULL for failure</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="729">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="730">the inhibit reason, e.g. `user active`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="731">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="inhibit_async"
              c:identifier="fwupd_client_inhibit_async"
              version="1.8.11"
              glib:finish-func="inhibit_finish"
              glib:sync-func="inhibit">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5976">Marks all devices as unavailable for update. Update is only available if there is no other
inhibit imposed by other applications or by the system (e.g. low power state).

The same application can inhibit the system multiple times.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="419"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5978">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="reason" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5979">the inhibit reason, e.g. `user active`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5980">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5981">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5982">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="inhibit_finish"
              c:identifier="fwupd_client_inhibit_finish"
              version="1.8.11"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6018">Gets the result of [method@FwupdClient.inhibit_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="425"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6026">a string to use for [method@FwupdClient.uninhibit_async],
or %NULL for failure</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6020">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6021">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install"
              c:identifier="fwupd_client_install"
              version="0.7.0"
              throws="1"
              glib:async-func="install_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1362">Install a file onto a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1373">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1364">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1365">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1366">the filename to install</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1367">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1368">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_async"
              c:identifier="fwupd_client_install_async"
              version="1.5.0"
              glib:finish-func="install_finish"
              glib:sync-func="install">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3061">Install firmware onto a specific device.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="308"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3063">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3064">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3065">the filename to install</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3066">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3067">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3068">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3069">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_bytes"
              c:identifier="fwupd_client_install_bytes"
              version="1.4.5"
              throws="1"
              glib:async-func="install_bytes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1437">Install firmware onto a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1448">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1439">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1440">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1441">cabinet archive</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1442">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1443">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_bytes_async"
              c:identifier="fwupd_client_install_bytes_async"
              version="1.5.0"
              glib:finish-func="install_bytes_finish"
              glib:sync-func="install_bytes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2978">Install firmware onto a specific device.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="320"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2980">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2981">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2982">cabinet archive</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2983">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2984">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2985">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2986">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_bytes_finish"
              c:identifier="fwupd_client_install_bytes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3040">Gets the result of [method@FwupdClient.install_bytes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="328"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3048">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3042">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3043">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_finish"
              c:identifier="fwupd_client_install_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3125">Gets the result of [method@FwupdClient.install_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="316"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3133">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3127">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3128">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_release"
              c:identifier="fwupd_client_install_release"
              version="1.4.5"
              deprecated="1"
              deprecated-version="1.5.6"
              throws="1"
              glib:async-func="install_release_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1552">Installs a new release on a device, downloading the firmware if required.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1563">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1554">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1555">a device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1556">a release</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1557">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1558">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_release2"
              c:identifier="fwupd_client_install_release2"
              version="1.5.6"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1497">Installs a new release on a device, downloading the firmware if required.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1509">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1499">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1500">a device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1501">a release</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1502">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="download_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1503">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1504">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_release2_async"
              c:identifier="fwupd_client_install_release2_async"
              version="1.5.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3416">Installs a new release on a device, downloading the firmware if required.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="341"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3418">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3419">a device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3420">a release</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3421">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="download_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3422">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_ONLY_P2P</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3423">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3424">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3425">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_release_async"
              c:identifier="fwupd_client_install_release_async"
              version="1.5.0"
              deprecated="1"
              deprecated-version="1.5.6"
              glib:finish-func="install_release_finish"
              glib:sync-func="install_release">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3485">Installs a new release on a device, downloading the firmware if required.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="333"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3487">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3488">a device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3489">a release</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
          <parameter name="install_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3490">install flags, e.g. %FWUPD_INSTALL_FLAG_ALLOW_REINSTALL</doc>
            <type name="InstallFlags" c:type="FwupdInstallFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3491">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3492">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3493">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_release_finish"
              c:identifier="fwupd_client_install_release_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3523">Gets the result of [method@FwupdClient.install_release_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="350"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="3531">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3525">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3526">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_bios_setting"
              c:identifier="fwupd_client_modify_bios_setting"
              version="1.8.4"
              throws="1"
              glib:async-func="modify_bios_setting_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1048">Modifies a BIOS setting using kernel API.
The daemon will only respond to this request with proper permissions.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1058">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1050">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1051">BIOS settings</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1052">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_bios_setting_async"
              c:identifier="fwupd_client_modify_bios_setting_async"
              version="1.8.4"
              glib:finish-func="modify_bios_setting_finish"
              glib:sync-func="modify_bios_setting">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1283">Modifies a BIOS setting using kernel API.
The daemon will only respond to this request with proper permissions.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1285">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1286">BIOS settings</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1287">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1288">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1289">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_bios_setting_finish"
              c:identifier="fwupd_client_modify_bios_setting_finish"
              version="1.8.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1334">Gets the result of [method@FwupdClient.modify_bios_setting_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="250"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1342">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1336">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1337">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_config"
              c:identifier="fwupd_client_modify_config"
              version="1.2.8"
              throws="1"
              glib:async-func="modify_config_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="833">Modifies a daemon config option.
The daemon will only respond to this request with proper permissions.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="844">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="835">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="836">config key, e.g. `DisabledPlugins`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="837">config value, e.g. `*`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="838">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_config_async"
              c:identifier="fwupd_client_modify_config_async"
              version="1.5.0"
              glib:finish-func="modify_config_finish"
              glib:sync-func="modify_config">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2333">Modifies a daemon config option.
The daemon will only respond to this request with proper permissions.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="203"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2335">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2336">config key, e.g. `DisabledPlugins`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2337">config value, e.g. `*`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2338">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2339">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2340">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_config_finish"
              c:identifier="fwupd_client_modify_config_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2376">Gets the result of [method@FwupdClient.modify_config_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2384">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2378">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2379">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_device"
              c:identifier="fwupd_client_modify_device"
              version="1.0.4"
              throws="1"
              glib:async-func="modify_device_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1939">Modifies a device in a specific way. Not all properties on the #FwupdDevice
are settable by the client, and some may have other restrictions on @value.

NOTE: User authentication may be required to complete this action.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1953">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1941">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1942">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1943">the key, e.g. `Flags`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1944">the key, e.g. `reported`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1945">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_device_async"
              c:identifier="fwupd_client_modify_device_async"
              version="1.5.0"
              glib:finish-func="modify_device_finish"
              glib:sync-func="modify_device">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5055">Modifies a device in a specific way. Not all properties on the #FwupdDevice
are settable by the client, and some may have other restrictions on @value.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="397"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5057">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5058">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5059">the key, e.g. `Flags`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5060">the value, e.g. `reported`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5061">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5062">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5063">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_device_finish"
              c:identifier="fwupd_client_modify_device_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5101">Gets the result of [method@FwupdClient.modify_device_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="405"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5109">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5103">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5104">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_remote"
              c:identifier="fwupd_client_modify_remote"
              version="0.9.8"
              throws="1"
              glib:async-func="modify_remote_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1828">Modifies a system remote in a specific way.

NOTE: User authentication may be required to complete this action.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1841">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1830">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1831">the remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1832">the key, e.g. `Enabled`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1833">the key, e.g. `true`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1834">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_remote_async"
              c:identifier="fwupd_client_modify_remote_async"
              version="1.5.0"
              glib:finish-func="modify_remote_finish"
              glib:sync-func="modify_remote">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4971">Modifies a system remote in a specific way.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="385"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4973">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4974">the remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4975">the key, e.g. `Enabled`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4976">the key, e.g. `true`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4977">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4978">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4979">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="modify_remote_finish"
              c:identifier="fwupd_client_modify_remote_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5016">Gets the result of [method@FwupdClient.modify_remote_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="393"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5024">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5018">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5019">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="quit"
              c:identifier="fwupd_client_quit"
              version="1.8.11"
              introspectable="0"
              throws="1"
              glib:async-func="quit_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="120">Asks the daemon to quit. This can only be called by the root user.

NOTE: This will only actually quit if an install is not already in progress.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="18"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="130">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="122">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="123">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="quit_async"
              c:identifier="fwupd_client_quit_async"
              version="1.8.11"
              glib:finish-func="quit_finish"
              glib:sync-func="quit">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1097">Asks the daemon to quit. This can only be called by the root user.

NOTE: This will only actually quit if an install is not already in progress.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1099">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1100">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1101">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1102">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="quit_finish"
              c:identifier="fwupd_client_quit_finish"
              version="1.8.11"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="1135">Gets the result of [method@FwupdClient.quit_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="1143">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1137">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="1138">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_remote"
              c:identifier="fwupd_client_refresh_remote"
              version="1.4.5"
              throws="1"
              glib:async-func="refresh_remote_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1790">Refreshes a remote by downloading new metadata.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1799">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1792">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1793">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1794">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_remote2"
              c:identifier="fwupd_client_refresh_remote2"
              version="1.9.4"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1746">Refreshes a remote by downloading new metadata.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1756">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1748">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1749">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </parameter>
          <parameter name="download_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1750">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_ONLY_P2P</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1751">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_remote2_async"
              c:identifier="fwupd_client_refresh_remote2_async"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4231">Refreshes a remote by downloading new metadata.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="374"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4233">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4234">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </parameter>
          <parameter name="download_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4235">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_ONLY_P2P</doc>
            <type name="ClientDownloadFlags"
                  c:type="FwupdClientDownloadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4236">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4237">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4238">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_remote_async"
              c:identifier="fwupd_client_refresh_remote_async"
              version="1.5.0"
              glib:finish-func="refresh_remote_finish"
              glib:sync-func="refresh_remote">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4307">Refreshes a remote by downloading new metadata.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="368"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4309">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4310">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4311">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4312">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4313">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_remote_finish"
              c:identifier="fwupd_client_refresh_remote_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4341">Gets the result of [method@FwupdClient.refresh_remote_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="381"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4349">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4343">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4344">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="self_sign"
              c:identifier="fwupd_client_self_sign"
              version="1.2.6"
              throws="1"
              glib:async-func="self_sign_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2385">Signs the data using the client self-signed certificate.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="235"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2395">a signature, or %NULL for failure</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2387">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2388">a string to sign, typically a JSON blob</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2389">signing flags, e.g. %FWUPD_SELF_SIGN_FLAG_ADD_TIMESTAMP</doc>
            <type name="SelfSignFlags" c:type="FwupdSelfSignFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2390">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="self_sign_async"
              c:identifier="fwupd_client_self_sign_async"
              version="1.5.0"
              glib:finish-func="self_sign_finish"
              glib:sync-func="self_sign">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4875">Signs the data using the client self-signed certificate.

You must have called [method@Client.connect_async] on @self before using
this method.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="567"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4877">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4878">a string to sign, typically a JSON blob</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4879">signing flags, e.g. %FWUPD_SELF_SIGN_FLAG_ADD_TIMESTAMP</doc>
            <type name="SelfSignFlags" c:type="FwupdSelfSignFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4880">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4881">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4882">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="self_sign_finish"
              c:identifier="fwupd_client_self_sign_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4932">Gets the result of [method@FwupdClient.self_sign_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="574"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4940">a signature, or %NULL for failure</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4934">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4935">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_approved_firmware"
              c:identifier="fwupd_client_set_approved_firmware"
              version="1.2.6"
              throws="1"
              glib:async-func="set_approved_firmware_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2158">Sets the list of approved firmware.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2167">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2160">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="checksums" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2161">Array of checksums</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2162">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_approved_firmware_async"
              c:identifier="fwupd_client_set_approved_firmware_async"
              version="1.5.0"
              glib:finish-func="set_approved_firmware_finish"
              glib:sync-func="set_approved_firmware">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4544">Sets the list of approved firmware.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="535"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4546">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="checksums" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4547">firmware checksums</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4548">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4549">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4550">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_approved_firmware_finish"
              c:identifier="fwupd_client_set_approved_firmware_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4588">Gets the result of [method@FwupdClient.set_approved_firmware_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="541"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4596">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4590">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4591">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked_firmware"
              c:identifier="fwupd_client_set_blocked_firmware"
              version="1.4.6"
              throws="1"
              glib:async-func="set_blocked_firmware_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2271">Sets the list of approved firmware.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2280">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2273">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="checksums" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2274">Array of checksums</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2275">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked_firmware_async"
              c:identifier="fwupd_client_set_blocked_firmware_async"
              version="1.5.0"
              glib:finish-func="set_blocked_firmware_finish"
              glib:sync-func="set_blocked_firmware">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4711">Sets the list of blocked firmware.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="556"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4713">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="checksums" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4714">firmware checksums</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4715">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4716">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4717">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked_firmware_finish"
              c:identifier="fwupd_client_set_blocked_firmware_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4755">Gets the result of [method@FwupdClient.set_blocked_firmware_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="562"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4763">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4757">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4758">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_daemon_version"
              c:identifier="fwupd_client_set_daemon_version"
              version="1.8.11">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="371">Sets the daemon version number.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="488"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="373">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="daemon_version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="374">A semantic version, e.g. "1.2.3"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_feature_flags"
              c:identifier="fwupd_client_set_feature_flags"
              version="1.4.5"
              throws="1"
              glib:async-func="set_feature_flags_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2329">Sets the features the client supports. This allows firmware to depend on
specific front-end features, for instance showing the user an image on
how to detach the hardware.

Clients can call this none or multiple times.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2342">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2331">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="feature_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2332">feature flags, e.g. %FWUPD_FEATURE_FLAG_UPDATE_TEXT</doc>
            <type name="FeatureFlags" c:type="FwupdFeatureFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2333">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_feature_flags_async"
              c:identifier="fwupd_client_set_feature_flags_async"
              version="1.5.0"
              glib:finish-func="set_feature_flags_finish"
              glib:sync-func="set_feature_flags">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4794">Sets the features the client supports. This allows firmware to depend on
specific front-end features, for instance showing the user an image on
how to detach the hardware.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="578"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4796">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="feature_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4797">feature flags, e.g. %FWUPD_FEATURE_FLAG_UPDATE_TEXT</doc>
            <type name="FeatureFlags" c:type="FwupdFeatureFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4798">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4799">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4800">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_feature_flags_finish"
              c:identifier="fwupd_client_set_feature_flags_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4834">Gets the result of [method@FwupdClient.set_feature_flags_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="584"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4842">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4836">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4837">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_main_context"
              c:identifier="fwupd_client_set_main_context"
              version="1.5.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="648">Sets the internal main context to use for returning progress signals.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="650">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="main_ctx"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="651">the global default main context to use</doc>
            <type name="GLib.MainContext" c:type="GMainContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_agent"
              c:identifier="fwupd_client_set_user_agent"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5219">Manually sets the user agent that is used for downloading. The user agent
should contain the runtime version of fwupd somewhere in the provided string.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="591"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5221">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="user_agent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5222">the user agent ID, e.g. `gnome-software/3.34.1`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_agent_for_package"
              c:identifier="fwupd_client_set_user_agent_for_package"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5265">Builds a user-agent to use for the download.

Supplying harmless details to the server means it knows more about each
client. This allows the web service to respond in a different way, for
instance sending a different metadata file for old versions of fwupd, or
returning an error for Solaris machines.

Before freaking out about theoretical privacy implications, much more data
than this is sent to each and every website you visit.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="593"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5267">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="package_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5268">client program name, e.g. `gnome-software`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="package_version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5269">client program version, e.g. `3.28.1`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="undo_host_security_attr"
              c:identifier="fwupd_client_undo_host_security_attr"
              version="1.9.6"
              throws="1"
              glib:async-func="undo_host_security_attr_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2836">Revert the fix to one specific security attribute.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="289"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2845">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2838">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2839">the HSI AppStream ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2840">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="undo_host_security_attr_async"
              c:identifier="fwupd_client_undo_host_security_attr_async"
              version="1.9.6"
              glib:finish-func="undo_host_security_attr_finish"
              glib:sync-func="undo_host_security_attr">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6404">Reverts the fix to one specific security attribute.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="466"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6406">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6407">HSI AppStream ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6408">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6409">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6410">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="undo_host_security_attr_finish"
              c:identifier="fwupd_client_undo_host_security_attr_finish"
              version="1.9.6"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6443">Gets the result of [method@FwupdClient.undo_host_security_attr_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="472"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6451">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6445">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6446">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninhibit"
              c:identifier="fwupd_client_uninhibit"
              version="1.8.11"
              throws="1"
              glib:async-func="uninhibit_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="780">Removes the inhibit token added by the application.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="789">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="782">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="inhibit_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="783">the inhibit ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="784">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninhibit_async"
              c:identifier="fwupd_client_uninhibit_async"
              version="1.8.11"
              glib:finish-func="uninhibit_finish"
              glib:sync-func="uninhibit">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6058">Removes the inhibit token added by the application.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="429"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6060">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="inhibit_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6061">the inhibit ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6062">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6063">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6064">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninhibit_finish"
              c:identifier="fwupd_client_uninhibit_finish"
              version="1.8.11"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6097">Gets the result of [method@FwupdClient.uninhibit_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="435"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="6105">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6099">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6100">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlock"
              c:identifier="fwupd_client_unlock"
              version="0.7.0"
              throws="1"
              glib:async-func="unlock_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="678">Unlocks a specific device so firmware can be read or wrote.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="687">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="680">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="681">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="682">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlock_async"
              c:identifier="fwupd_client_unlock_async"
              version="1.5.0"
              glib:finish-func="unlock_finish"
              glib:sync-func="unlock">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2650">Unlocks a specific device so firmware can be read or wrote.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="193"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2652">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2653">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2654">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2655">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2656">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlock_finish"
              c:identifier="fwupd_client_unlock_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2689">Gets the result of [method@FwupdClient.unlock_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2697">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2691">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2692">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_metadata"
              c:identifier="fwupd_client_update_metadata"
              version="1.0.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1596">Updates the metadata. This allows a session process to download the metadata
and metadata signing file to be passed into the daemon to be checked and
parsed.

The @remote_id allows the firmware to be tagged so that the remote can be
matched when the firmware is downloaded.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1612">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1598">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1599">the remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="metadata_fn" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1600">the XML metadata filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature_fn" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1601">the GPG signature file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1602">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_metadata_bytes"
              c:identifier="fwupd_client_update_metadata_bytes"
              version="1.4.5"
              throws="1"
              glib:async-func="update_metadata_bytes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="1680">Updates the metadata. This allows a session process to download the metadata
and metadata signing file to be passed into the daemon to be checked and
parsed.

The @remote_id allows the firmware to be tagged so that the remote can be
matched when the firmware is downloaded.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="1696">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1682">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1683">remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1684">XML metadata data</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1685">signature data</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="1686">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_metadata_bytes_async"
              c:identifier="fwupd_client_update_metadata_bytes_async"
              version="1.5.0"
              glib:finish-func="update_metadata_bytes_finish"
              glib:sync-func="update_metadata_bytes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="3979">Updates the metadata. This allows a session process to download the metadata
and metadata signing file to be passed into the daemon to be checked and
parsed.

The @remote_id allows the firmware to be tagged so that the remote can be
matched when the firmware is downloaded.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="354"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3981">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3982">remote ID, e.g. `lvfs-testing`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3983">XML metadata data</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="signature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3984">signature data</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3985">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3986">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="3987">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_metadata_bytes_finish"
              c:identifier="fwupd_client_update_metadata_bytes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="4055">Gets the result of [method@FwupdClient.update_metadata_bytes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="362"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="4063">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4057">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="4058">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_bytes"
              c:identifier="fwupd_client_upload_bytes"
              version="1.4.5"
              throws="1"
              glib:async-func="upload_bytes_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2547">Uploads data to a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="259"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2560">response data, or %NULL for error</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2549">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2550">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="payload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2551">payload string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2552">signature string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2553">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientUploadFlags" c:type="FwupdClientUploadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2554">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_bytes_async"
              c:identifier="fwupd_client_upload_bytes_async"
              version="1.5.0"
              glib:finish-func="upload_bytes_finish"
              glib:sync-func="upload_bytes">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5674">Uploads data to a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.

You must have called [method@Client.connect_async] on @self before using
this method.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="610"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5676">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5677">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="payload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5678">payload string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5679">signature string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5680">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientUploadFlags" c:type="FwupdClientUploadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5681">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5682">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5683">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_bytes_finish"
              c:identifier="fwupd_client_upload_bytes_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5771">Gets the result of [method@FwupdClient.upload_bytes_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="619"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5779">response data, or %NULL for error</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5773">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5774">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_report"
              c:identifier="fwupd_client_upload_report"
              version="1.9.20"
              throws="1"
              glib:async-func="upload_report_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="2611">Uploads a report to a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="267"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="2624">a URI (perhaps an empty string), or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2613">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2614">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="payload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2615">payload string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2616">signature string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2617">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientUploadFlags" c:type="FwupdClientUploadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="2618">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_report_async"
              c:identifier="fwupd_client_upload_report_async"
              version="1.9.20"
              glib:finish-func="upload_report_finish"
              glib:sync-func="upload_report">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5882">Uploads a report to a remote server. The [method@Client.set_user_agent] function
should be called before this method is used.

You must have called [method@Client.connect_async] on @self before using
this method.

NOTE: This method is thread-safe, but progress signals will be
emitted in the global default main context, if not explicitly set with
[method@Client.set_main_context].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="623"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5884">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5885">the remote URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="payload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5886">payload string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="signature"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5887">signature string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5888">download flags, e.g. %FWUPD_CLIENT_DOWNLOAD_FLAG_NONE</doc>
            <type name="ClientUploadFlags" c:type="FwupdClientUploadFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5889">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5890">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5891">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="upload_report_finish"
              c:identifier="fwupd_client_upload_report_finish"
              version="1.9.20"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="5935">Gets the result of [method@FwupdClient.upload_report_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="632"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="5943">a URI (perhaps an empty string), or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5937">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="5938">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify"
              c:identifier="fwupd_client_verify"
              version="0.7.0"
              throws="1"
              glib:async-func="verify_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="576">Verify a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="585">%TRUE for verification success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="578">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="579">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="580">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_async"
              c:identifier="fwupd_client_verify_async"
              version="1.5.0"
              glib:finish-func="verify_finish"
              glib:sync-func="verify">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2494">Verify a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2496">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2497">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2498">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2499">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2500">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_finish"
              c:identifier="fwupd_client_verify_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2533">Gets the result of [method@FwupdClient.verify_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2541">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2535">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2536">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_update"
              c:identifier="fwupd_client_verify_update"
              version="0.8.0"
              throws="1"
              glib:async-func="verify_update_async">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client-sync.c"
             line="625">Update the verification record for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client-sync.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client-sync.c"
               line="634">%TRUE for verification success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="627">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="628">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client-sync.c"
                 line="629">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_update_async"
              c:identifier="fwupd_client_verify_update_async"
              version="1.5.0"
              glib:finish-func="verify_update_finish"
              glib:sync-func="verify_update">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2572">Update the verification record for a specific device.</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2574">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2575">the device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2576">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2577">the function to run on completion</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2578">the data to pass to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="verify_update_finish"
              c:identifier="fwupd_client_verify_update_finish"
              version="1.5.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="2611">Gets the result of [method@FwupdClient.verify_update_async].</doc>
        <source-position filename="libfwupd/fwupd-client.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-client.c"
               line="2619">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2613">a #FwupdClient</doc>
            <type name="Client" c:type="FwupdClient*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="2614">the asynchronous result</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <property name="battery-level"
                version="1.8.1"
                writable="1"
                transfer-ownership="none"
                getter="get_battery_level"
                default-value="101">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6980">The system battery level in percent.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="battery-threshold"
                version="1.8.1"
                writable="1"
                transfer-ownership="none"
                getter="get_battery_threshold"
                default-value="101">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6996">The system battery threshold in percent.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="daemon-version"
                version="0.9.6"
                transfer-ownership="none"
                getter="get_daemon_version"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6868">The daemon version number.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-bkc"
                version="1.7.3"
                writable="1"
                transfer-ownership="none"
                getter="get_host_bkc"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6882">The host best known configuration.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-machine-id"
                version="1.3.2"
                writable="1"
                transfer-ownership="none"
                getter="get_host_machine_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6938">The host machine-id string</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-product"
                version="1.3.1"
                writable="1"
                transfer-ownership="none"
                getter="get_host_product"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6924">The host product string</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-security-id"
                version="1.5.0"
                writable="1"
                transfer-ownership="none"
                getter="get_host_security_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6952">The host machine-id string</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="host-vendor"
                version="1.8.2"
                writable="1"
                transfer-ownership="none"
                getter="get_host_vendor"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6910">The host vendor string</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="interactive"
                version="1.3.4"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6838">If the daemon is running in an interactive terminal</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="only-trusted"
                version="1.8.0"
                transfer-ownership="none"
                getter="get_only_trusted"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6966">If the daemon is verifying signatures from a trusted authority.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="percentage"
                version="0.7.3"
                writable="1"
                transfer-ownership="none"
                getter="get_percentage"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6852">The last-reported percentage of the daemon.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="soup-session" version="1.4.5" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6896">The libsoup session, now unused.</doc>
        <type name="GObject.Object"/>
      </property>
      <property name="status"
                version="0.7.0"
                writable="1"
                transfer-ownership="none"
                getter="get_status"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6808">The last-reported status of the daemon.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="tainted"
                version="1.2.4"
                transfer-ownership="none"
                getter="get_tainted"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6824">If the daemon is tainted by 3rd party code.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="changed" when="last" version="0.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6680">The ::changed signal is emitted when the daemon internal has
changed, for instance when a device has been added or removed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="device-added" when="last" version="0.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6721">The ::device-added signal is emitted when a device has been
added.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6724">the #FwupdDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-changed" when="last" version="0.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6764">The ::device-changed signal is emitted when a device has been
changed in some way, e.g. the version number is updated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6767">the #FwupdDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="last" version="0.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6742">The ::device-removed signal is emitted when a device has been
removed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6745">the #FwupdDevice</doc>
            <type name="Device"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-request" when="last" version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.c"
             line="6786">The ::device-request signal is emitted when a device has been
emitted some kind of event, e.g. a manual action is required.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-client.c"
                 line="6789">the #FwupdRequest</doc>
            <type name="Request"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="status-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ClientClass"
            c:type="FwupdClientClass"
            glib:is-gtype-struct-for="Client">
      <source-position filename="libfwupd/fwupd-client.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="libfwupd/fwupd-client.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="status_changed">
        <callback name="status_changed">
          <source-position filename="libfwupd/fwupd-client.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
            <parameter name="status" transfer-ownership="none">
              <type name="Status" c:type="FwupdStatus"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_added">
        <callback name="device_added">
          <source-position filename="libfwupd/fwupd-client.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="Device" c:type="FwupdDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_removed">
        <callback name="device_removed">
          <source-position filename="libfwupd/fwupd-client.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="Device" c:type="FwupdDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_changed">
        <callback name="device_changed">
          <source-position filename="libfwupd/fwupd-client.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="Device" c:type="FwupdDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_request">
        <callback name="device_request">
          <source-position filename="libfwupd/fwupd-client.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Client" c:type="FwupdClient*"/>
            </parameter>
            <parameter name="request" transfer-ownership="none">
              <type name="Request" c:type="FwupdRequest*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-client.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-client.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-client.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-client.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-client.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-client.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="ClientDownloadFlags" c:type="FwupdClientDownloadFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-client.h"
           line="40">The options to use for downloading.</doc>
      <source-position filename="libfwupd/fwupd-client.h" line="52"/>
      <member name="none"
              value="0"
              c:identifier="FWUPD_CLIENT_DOWNLOAD_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.h"
             line="42">No flags set</doc>
      </member>
      <member name="only_p2p"
              value="1"
              c:identifier="FWUPD_CLIENT_DOWNLOAD_FLAG_ONLY_P2P">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.h"
             line="43">Only use peer-to-peer when downloading URIs</doc>
      </member>
    </bitfield>
    <bitfield name="ClientUploadFlags" c:type="FwupdClientUploadFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-client.h"
           line="64">The options to use for uploading.</doc>
      <source-position filename="libfwupd/fwupd-client.h" line="76"/>
      <member name="none"
              value="0"
              c:identifier="FWUPD_CLIENT_UPLOAD_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.h"
             line="66">No flags set</doc>
      </member>
      <member name="always_multipart"
              value="1"
              c:identifier="FWUPD_CLIENT_UPLOAD_FLAG_ALWAYS_MULTIPART">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-client.h"
             line="67">Always use multipart/form-data</doc>
      </member>
    </bitfield>
    <constant name="DBUS_INTERFACE"
              value="org.freedesktop.fwupd"
              c:type="FWUPD_DBUS_INTERFACE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="25">The dbus interface</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="30"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DBUS_P2P_SOCKET_ADDRESS"
              value="tcp:host=localhost,port=1341"
              c:type="FWUPD_DBUS_P2P_SOCKET_ADDRESS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="31">The D-Bus socket address when using point-to-point connections.

NOTE: This is no longer used as the value is set at compile time.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DBUS_PATH" value="/" c:type="FWUPD_DBUS_PATH">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="13">The dbus path</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="18"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DBUS_SERVICE"
              value="org.freedesktop.fwupd"
              c:type="FWUPD_DBUS_SERVICE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="19">The dbus service</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="24"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_FLAG_ADD_COUNTERPART_GUIDS"
              value="34359738368"
              c:type="FWUPD_DEVICE_FLAG_ADD_COUNTERPART_GUIDS"
              version="1.4.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="403">The device will add counterpart GUIDs from an alternate mode like bootloader.
This flag is typically specified in a quirk.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="411"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_AFFECTS_FDE"
              value="35184372088832"
              c:type="FWUPD_DEVICE_FLAG_AFFECTS_FDE"
              version="1.7.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="492">The device is warning that a volume with full-disk-encryption was found on this machine,
typically a Windows NTFS partition with BitLocker.
Updating the firmware on this device may invalidate secrets used to decrypt the volume, and
the recovery key may be required.

Supported clients will display this information as a warning to the user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="504"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ANOTHER_WRITE_REQUIRED"
              value="262144"
              c:type="FWUPD_DEVICE_FLAG_ANOTHER_WRITE_REQUIRED"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="255">The device requires the update to be retried, possibly with a different plugin.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_BACKUP_BEFORE_INSTALL"
              value="1099511627776"
              c:type="FWUPD_DEVICE_FLAG_BACKUP_BEFORE_INSTALL"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="446">The device firmware should be saved before installing firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="453"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_CAN_VERIFY"
              value="33554432"
              c:type="FWUPD_DEVICE_FLAG_CAN_VERIFY"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="317">The device checksums can be compared against metadata.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="324"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_CAN_VERIFY_IMAGE"
              value="67108864"
              c:type="FWUPD_DEVICE_FLAG_CAN_VERIFY_IMAGE"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="325">The device application firmware image can be dumped from device for verification.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="332"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_DUAL_IMAGE"
              value="134217728"
              c:type="FWUPD_DEVICE_FLAG_DUAL_IMAGE"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="333">The device firmware update architecture uses a redundancy mechanism such
as A/B partitions for updates.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="341"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_EMULATED"
              value="562949953421312"
              c:type="FWUPD_DEVICE_FLAG_EMULATED"
              version="1.8.11">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="533">The device is emulated and should not be recorded by the backend.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="540"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_EMULATION_TAG"
              value="1125899906842624"
              c:type="FWUPD_DEVICE_FLAG_EMULATION_TAG"
              version="1.8.11">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="541">The device should be recorded by the backend, allowing emulation.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="548"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_END_OF_LIFE"
              value="70368744177664"
              c:type="FWUPD_DEVICE_FLAG_END_OF_LIFE"
              version="1.7.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="505">The device is no longer supported by the original hardware vendor as it is considered
end-of-life. It it unlikely to receive firmware updates, even for security issues.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="513"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ENSURE_SEMVER"
              value="2097152"
              c:type="FWUPD_DEVICE_FLAG_ENSURE_SEMVER"
              version="1.2.9">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="282">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecate: 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_HAS_MULTIPLE_BRANCHES"
              value="549755813888"
              c:type="FWUPD_DEVICE_FLAG_HAS_MULTIPLE_BRANCHES"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="438">The device supports switching to a different stream of firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="445"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_HISTORICAL"
              value="4194304"
              c:type="FWUPD_DEVICE_FLAG_HISTORICAL"
              version="1.3.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="291">The device is used for historical data only.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_IGNORE_VALIDATION"
              value="32768"
              c:type="FWUPD_DEVICE_FLAG_IGNORE_VALIDATION"
              version="1.1.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="230">When processing an update for the device, plugins should ignore all validation safety checks.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_INSTALL_ALL_RELEASES"
              value="2147483648"
              c:type="FWUPD_DEVICE_FLAG_INSTALL_ALL_RELEASES"
              version="1.3.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="368">Install each intermediate releases for the device rather than jumping directly to the newest.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="375"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_INSTALL_PARENT_FIRST"
              value="4096"
              c:type="FWUPD_DEVICE_FLAG_INSTALL_PARENT_FIRST"
              version="1.0.8">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="205">The composite device requires installation of composite firmware on the parent before the child.
Normally the child is installed before the parent.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_INTERNAL"
              value="1"
              c:type="FWUPD_DEVICE_FLAG_INTERNAL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="108">Device is internal to the platform and cannot be removed easily.

Since 0.1.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_IS_BOOTLOADER"
              value="8192"
              c:type="FWUPD_DEVICE_FLAG_IS_BOOTLOADER"
              version="1.0.8">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="214">The device is currently in a read-only bootloader mode and not running application code.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_LOCKED"
              value="16"
              c:type="FWUPD_DEVICE_FLAG_LOCKED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="141">The device can not be updated without manual user interaction.

Since 0.6.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_MD_SET_ICON"
              value="2199023255552"
              c:type="FWUPD_DEVICE_FLAG_MD_SET_ICON"
              version="1.5.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="454">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="462"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_MD_SET_NAME"
              value="4294967296"
              c:type="FWUPD_DEVICE_FLAG_MD_SET_NAME"
              version="1.4.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="376">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="384"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_MD_SET_NAME_CATEGORY"
              value="8589934592"
              c:type="FWUPD_DEVICE_FLAG_MD_SET_NAME_CATEGORY"
              version="1.4.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="385">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="393"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_MD_SET_VERFMT"
              value="17179869184"
              c:type="FWUPD_DEVICE_FLAG_MD_SET_VERFMT"
              version="1.4.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="394">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="402"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NEEDS_ACTIVATION"
              value="1048576"
              c:type="FWUPD_DEVICE_FLAG_NEEDS_ACTIVATION"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="272">The device update needs to be separately activated.
This process may occur automatically on shutdown in some operating systems
or when the device is unplugged with some devices.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NEEDS_BOOTLOADER"
              value="64"
              c:type="FWUPD_DEVICE_FLAG_NEEDS_BOOTLOADER">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="157">The device requires entering a bootloader mode to be manually.

Since 0.7.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NEEDS_REBOOT"
              value="256"
              c:type="FWUPD_DEVICE_FLAG_NEEDS_REBOOT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="173">The device requires a system reboot to apply firmware or to reload hardware.

Since 0.9.7</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NEEDS_SHUTDOWN"
              value="131072"
              c:type="FWUPD_DEVICE_FLAG_NEEDS_SHUTDOWN"
              version="1.2.4">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="247">The device requires the system to be shutdown to finish application of new firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NONE"
              value="0"
              c:type="FWUPD_DEVICE_FLAG_NONE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="100">No flags set

Since 0.1.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NOTIFIED"
              value="1024"
              c:type="FWUPD_DEVICE_FLAG_NOTIFIED"
              version="1.0.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="189">The user has been notified about a change in the device state.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NO_AUTO_INSTANCE_IDS"
              value="524288"
              c:type="FWUPD_DEVICE_FLAG_NO_AUTO_INSTANCE_IDS"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="263">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_NO_GUID_MATCHING"
              value="68719476736"
              c:type="FWUPD_DEVICE_FLAG_NO_GUID_MATCHING"
              version="1.4.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="412">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.8</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="420"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ONLY_EXPLICIT_UPDATES"
              value="2251799813685248"
              c:type="FWUPD_DEVICE_FLAG_ONLY_EXPLICIT_UPDATES"
              version="1.9.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="549">The device should stay on one firmware version unless the new version is explicitly specified.

This can either be done using `fwupdmgr install`, using GNOME Firmware, or using a BKC config.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="558"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ONLY_OFFLINE"
              value="4"
              c:type="FWUPD_DEVICE_FLAG_ONLY_OFFLINE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="124">Update can only be done from a limited functionality OS (offline mode).

Since 0.9.7</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ONLY_SUPPORTED"
              value="8388608"
              c:type="FWUPD_DEVICE_FLAG_ONLY_SUPPORTED"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="299">Deprecated, no not use</doc>
      <doc-version xml:space="preserve">
Deprecated 1.5.5</doc-version>
      <source-position filename="libfwupd/fwupd-enums.h" line="307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_ONLY_VERSION_UPGRADE"
              value="8796093022208"
              c:type="FWUPD_DEVICE_FLAG_ONLY_VERSION_UPGRADE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="475">The device firmware can only be updated to a newer version and never downgraded or reinstalled.

Since 1.6.2</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="482"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_REGISTERED"
              value="128"
              c:type="FWUPD_DEVICE_FLAG_REGISTERED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="165">The device has been registered with other plugins.

Since 0.9.7</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_REPORTED"
              value="512"
              c:type="FWUPD_DEVICE_FLAG_REPORTED"
              version="1.0.4">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="181">The success or failure of a previous update has been reported to a metadata server.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_REQUIRE_AC"
              value="8"
              c:type="FWUPD_DEVICE_FLAG_REQUIRE_AC">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="132">Device requires an external power source to be connected or the battery
level at a minimum threshold to update.

Since 0.6.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_SELF_RECOVERY"
              value="268435456"
              c:type="FWUPD_DEVICE_FLAG_SELF_RECOVERY"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="342">In flashing mode, the device will only accept intended payloads and will
revert back to a valid firmware image if an invalid or incomplete payload was sent.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="350"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_SIGNED_PAYLOAD"
              value="140737488355328"
              c:type="FWUPD_DEVICE_FLAG_SIGNED_PAYLOAD"
              version="1.7.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="514">The firmware payload is verified on-device the payload using strong cryptography such
as RSA, AES or ECC.

It is usually not possible to modify or flash custom firmware not provided by the vendor.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="524"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_SKIPS_RESTART"
              value="274877906944"
              c:type="FWUPD_DEVICE_FLAG_SKIPS_RESTART"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="430">The device relies upon activation or power cycle to load firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="437"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_SUPPORTED"
              value="32"
              c:type="FWUPD_DEVICE_FLAG_SUPPORTED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="149">The device is found in metadata loaded into the daemon.

Since 0.7.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_TRUSTED"
              value="65536"
              c:type="FWUPD_DEVICE_FLAG_TRUSTED"
              version="1.1.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="238">A trusted client is reading information about the device.
Extra metadata such as serial number can be exposed about this device.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_UNREACHABLE"
              value="17592186044416"
              c:type="FWUPD_DEVICE_FLAG_UNREACHABLE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="483">The device is currently unreachable, perhaps because it is in a lower power state or is out of
wireless range.

Since 1.7.0</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="491"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_UNSIGNED_PAYLOAD"
              value="281474976710656"
              c:type="FWUPD_DEVICE_FLAG_UNSIGNED_PAYLOAD"
              version="1.7.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="525">The firmware payload is unsigned and it is possible to modify and flash custom firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="532"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_UPDATABLE"
              value="2"
              c:type="FWUPD_DEVICE_FLAG_UPDATABLE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="116">Device has the ability to be updated in this or any other mode.

Since 0.9.7</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_UPDATABLE_HIDDEN"
              value="137438953472"
              c:type="FWUPD_DEVICE_FLAG_UPDATABLE_HIDDEN"
              version="1.4.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="421">The device is updatable but is currently inhibited from updates in the client.
Reasons include but are not limited to low power or requiring reboot from a previous update.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="429"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_USABLE_DURING_UPDATE"
              value="536870912"
              c:type="FWUPD_DEVICE_FLAG_USABLE_DURING_UPDATE"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="351">The device remains usable while the update flashes or schedules the update.
The update will implicitly be applied next time the device is power cycled or possibly activated.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="359"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_USE_RUNTIME_VERSION"
              value="2048"
              c:type="FWUPD_DEVICE_FLAG_USE_RUNTIME_VERSION"
              version="1.0.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="197">The device will always display use the runtime version rather than the bootloader version.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_VERSION_CHECK_REQUIRED"
              value="1073741824"
              c:type="FWUPD_DEVICE_FLAG_VERSION_CHECK_REQUIRED"
              version="1.3.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="360">All firmware updates for this device require a firmware version check.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="367"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_WAIT_FOR_REPLUG"
              value="16384"
              c:type="FWUPD_DEVICE_FLAG_WAIT_FOR_REPLUG"
              version="1.1.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="222">The device is in the middle of and update and the hardware is waiting to be probed/replugged.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_WILDCARD_INSTALL"
              value="4398046511104"
              c:type="FWUPD_DEVICE_FLAG_WILDCARD_INSTALL"
              version="1.6.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="463">All devices with matching GUIDs will be updated at the same time.

For some devices it is not possible to have different versions of firmware
for hardware of the same type. Updating one device will force update of
others with exactly the same instance IDs.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="474"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_FLAG_WILL_DISAPPEAR"
              value="16777216"
              c:type="FWUPD_DEVICE_FLAG_WILL_DISAPPEAR"
              version="1.3.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="308">The device will disappear after the update is complete and success
or failure can't be verified.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="316"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_ID_ANY" value="*" c:type="FWUPD_DEVICE_ID_ANY">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="40">Wildcard used for matching all device ids in fwupd</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_PROBLEM_DISPLAY_REQUIRED"
              value="2048"
              c:type="FWUPD_DEVICE_PROBLEM_DISPLAY_REQUIRED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="671">The device cannot be used while there are no displays plugged in.

Since 1.9.6</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="678"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_IN_USE"
              value="1024"
              c:type="FWUPD_DEVICE_PROBLEM_IN_USE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="663">The device is in use and cannot be interrupted, for instance taking a phone call.

Since 1.9.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="670"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_IS_EMULATED"
              value="64"
              c:type="FWUPD_DEVICE_PROBLEM_IS_EMULATED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="631">The device is emulated from a different host.

Since 1.8.3</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="638"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_LID_IS_CLOSED"
              value="32"
              c:type="FWUPD_DEVICE_PROBLEM_LID_IS_CLOSED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="623">The device cannot be used while the laptop lid is closed.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="630"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_MISSING_LICENSE"
              value="128"
              c:type="FWUPD_DEVICE_PROBLEM_MISSING_LICENSE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="639">The device cannot be updated due to missing vendor's license.

Since 1.8.6</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="646"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_NONE"
              value="0"
              c:type="FWUPD_DEVICE_PROBLEM_NONE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="575">No device problems detected.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="582"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_POWER_TOO_LOW"
              value="4"
              c:type="FWUPD_DEVICE_PROBLEM_POWER_TOO_LOW">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="599">The device battery power is too low.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="606"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_REQUIRE_AC_POWER"
              value="16"
              c:type="FWUPD_DEVICE_PROBLEM_REQUIRE_AC_POWER">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="615">The device requires AC power to be connected.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="622"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_SYSTEM_INHIBIT"
              value="256"
              c:type="FWUPD_DEVICE_PROBLEM_SYSTEM_INHIBIT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="647">The device cannot be updated due to a system-wide inhibit.

Since 1.8.10</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="654"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW"
              value="1"
              c:type="FWUPD_DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="583">The system power is too low to perform the update.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="590"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_UNREACHABLE"
              value="2"
              c:type="FWUPD_DEVICE_PROBLEM_UNREACHABLE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="591">The device is unreachable, or out of wireless range.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="598"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_UPDATE_IN_PROGRESS"
              value="512"
              c:type="FWUPD_DEVICE_PROBLEM_UPDATE_IN_PROGRESS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="655">The device cannot be updated as it is already being updated.

Since 1.8.11</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="662"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_PROBLEM_UPDATE_PENDING"
              value="8"
              c:type="FWUPD_DEVICE_PROBLEM_UPDATE_PENDING">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="607">The device is waiting for the update to be applied.

Since 1.8.1</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="614"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="FwupdDevice"
           parent="GObject.Object"
           glib:type-name="FwupdDevice"
           glib:get-type="fwupd_device_get_type"
           glib:type-struct="DeviceClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-device.c"
           line="18">A physical device on the host with optionally updatable firmware.

See also: [class@FwupdRelease]</doc>
      <source-position filename="libfwupd/fwupd-device.h" line="30"/>
      <constructor name="new" c:identifier="fwupd_device_new" version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4382">Creates a new device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4387">a new #FwupdDevice</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
      </constructor>
      <function name="array_ensure_parents"
                c:identifier="fwupd_device_array_ensure_parents"
                version="1.3.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4217">Sets the parent object on all devices in the array using the parent ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="devices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4219">devices</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Device"/>
            </array>
          </parameter>
        </parameters>
      </function>
      <function name="array_filter_flags"
                c:identifier="fwupd_device_array_filter_flags"
                version="1.9.3"
                throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4344">Creates an array of new devices that match using fwupd_device_match_flags().</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="289"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4353">devices</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="devices" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4346">devices</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Device"/>
            </array>
          </parameter>
          <parameter name="include" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4347">#FwupdDeviceFlags, or %FWUPD_DEVICE_FLAG_NONE</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
          <parameter name="exclude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4348">#FwupdDeviceFlags, or %FWUPD_DEVICE_FLAG_NONE</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="array_from_variant"
                c:identifier="fwupd_device_array_from_variant"
                version="1.2.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4256">Creates an array of new devices using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="285"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4262">devices, or %NULL if @value was invalid</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4258">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_from_string"
                c:identifier="fwupd_device_flag_from_string"
                version="0.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="227">Converts a string to an enumerated device flag.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="233">enumerated value</doc>
          <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
        </return-value>
        <parameters>
          <parameter name="device_flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="229">a string, e.g. `require-ac`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_device_flag_to_string"
                version="0.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="103">Converts a device flag to a string.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="109">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="device_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="105">a device flag, e.g. %FWUPD_DEVICE_FLAG_REQUIRE_AC</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_device_from_variant"
                version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4182">Creates a new device using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="283"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4188">a new #FwupdDevice, or %NULL if @value was invalid</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4184">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_is_valid"
                c:identifier="fwupd_device_id_is_valid"
                version="1.4.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="915">Checks the string is a valid non-partial device ID. It is important to note
that the wildcard ID of `*` is not considered a valid ID in this function and
the client must check for this manually if this should be allowed.</doc>
        <source-position filename="libfwupd/fwupd-common.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="923">%TRUE if @guid was a fwupd device ID, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-common.c"
                 line="917">string to check, e.g. `d3fae86d95e5d56626129d00e332c4b8dac95442`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="problem_from_string"
                c:identifier="fwupd_device_problem_from_string"
                version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="394">Converts a string to a enumerated device inhibit kind.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="400">enumerated value</doc>
          <type name="DeviceProblem" c:type="FwupdDeviceProblem"/>
        </return-value>
        <parameters>
          <parameter name="device_problem"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="396">a string, e.g. `require-ac`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="problem_to_string"
                c:identifier="fwupd_device_problem_to_string"
                version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="350">Converts a device inhibit kind to a string.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="356">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="device_problem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="352">a device inhibit kind, e.g. %FWUPD_DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW</doc>
            <type name="DeviceProblem" c:type="FwupdDeviceProblem"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_checksum"
              c:identifier="fwupd_device_add_checksum"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="148">Adds a device checksum.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="150">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="checksum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="151">the device checksum</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_child"
              c:identifier="fwupd_device_add_child"
              version="1.5.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="557">Adds a child device. An child device is logically linked to the primary
device in some way.

NOTE: You should never call this function from user code, it is for daemon
use only. Only use fwupd_device_set_parent() to set up a logical tree.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="559">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="560">Another #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_flag"
              c:identifier="fwupd_device_add_flag"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1638">Adds a specific device flag to the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1640">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1641">the #FwupdDeviceFlags</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_guid"
              c:identifier="fwupd_device_add_guid"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="661">Adds the GUID if it does not already exist.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="219"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="663">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="664">the GUID, e.g. `2082b5e0-7a64-478a-b1b2-e3404fab6dad`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_icon"
              c:identifier="fwupd_device_add_icon"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="810">Adds the icon name if it does not already exist.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="812">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="813">the icon name, e.g. `input-mouse` or `/usr/share/icons/foo.png`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_instance_id"
              c:identifier="fwupd_device_add_instance_id"
              version="1.2.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="746">Adds the instance ID if it does not already exist.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="748">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="instance_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="749">the instance ID, e.g. `PCI\VEN_10EC&amp;DEV_525A`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_issue"
              c:identifier="fwupd_device_add_issue"
              version="1.7.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="187">Adds an current issue to this device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="244"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="189">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="190">the update issue, e.g. `CVE-2019-12345`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_problem"
              c:identifier="fwupd_device_add_problem"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1739">Adds a specific device problem kind to the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1741">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="problem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1742">the #FwupdDeviceProblem, e.g. #FWUPD_DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW</doc>
            <type name="DeviceProblem" c:type="FwupdDeviceProblem"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_protocol"
              c:identifier="fwupd_device_add_protocol"
              version="1.5.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1568">Adds a device protocol name.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1570">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1571">the protocol name, e.g. `com.hughski.colorhug`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_release"
              c:identifier="fwupd_device_add_release"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2960">Adds a release for this device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="271"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2962">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="release" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2963">a release</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_request_flag"
              c:identifier="fwupd_device_add_request_flag"
              version="1.9.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1840">Adds a specific device request flag to the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1842">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="request_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1843">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_vendor_id"
              c:identifier="fwupd_device_add_vendor_id"
              version="1.5.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1002">Adds a device vendor ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1004">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="vendor_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1005">the ID, e.g. 'USB:0x1234'</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compare"
              c:identifier="fwupd_device_compare"
              version="1.1.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4293">Comparison function for comparing two device objects.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="277"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4300">negative, 0 or positive</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4295">a device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="self2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4296">a different device</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="from_json"
              c:identifier="fwupd_device_from_json"
              version="1.8.3"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3266">Loads a fwupd security attribute from a JSON node.</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="3274">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3268">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="json_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3269">a JSON node</doc>
            <type name="Json.Node" c:type="JsonNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_battery_level"
              c:identifier="fwupd_device_get_battery_level"
              glib:get-property="battery-level"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1304">Returns the battery level.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1310">value in percent</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1306">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_battery_threshold"
              c:identifier="fwupd_device_get_battery_threshold"
              glib:get-property="battery-threshold"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1348">Returns the battery threshold under which a firmware update cannot be
performed.

If fwupd_device_set_battery_threshold() has not been used, a default value is
used instead.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1358">value in percent</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1350">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branch"
              c:identifier="fwupd_device_get_branch"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="269">Gets the current device branch.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="275">the device branch, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="271">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksums"
              c:identifier="fwupd_device_get_checksums"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="103">Gets the device checksums.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="109">the checksums, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="105">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="fwupd_device_get_children"
              version="1.3.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="210">Gets the device children. These can only be assigned using fwupd_device_set_parent().</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="216">the children, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="212">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_composite_id"
              c:identifier="fwupd_device_get_composite_id"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="433">Gets the composite ID, falling back to the device ID if unset.

The composite ID will be the same value for all parent, child and sibling
devices.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="442">the composite ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="435">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_created"
              c:identifier="fwupd_device_get_created"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1903">Gets when the device was created.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1909">the UNIX time, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1905">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="fwupd_device_get_description"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1034">Gets the device description in AppStream markup format.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1040">the device description, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1036">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_device_get_flags"
              glib:get-property="flags"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1600">Gets device flags.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1606">device flags, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1602">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flashes_left"
              c:identifier="fwupd_device_get_flashes_left"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1269">Gets the number of flash cycles left on the device</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1275">the flash cycles left, or %NULL if unset</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1271">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guid_default"
              c:identifier="fwupd_device_get_guid_default"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="681">Gets the default GUID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="687">the GUID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="683">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guids"
              c:identifier="fwupd_device_get_guids"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="616">Gets the GUIDs.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="224"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="622">the GUIDs</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="618">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icons"
              c:identifier="fwupd_device_get_icons"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="766">Gets the icon names to use for the device.

NOTE: Icons specified without a full path are stock icons and should
be loaded from the users icon theme.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="240"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="775">an array of icon names</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="768">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="fwupd_device_get_id" version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="351">Gets the ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="357">the ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="353">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_duration"
              c:identifier="fwupd_device_get_install_duration"
              version="1.1.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1402">Gets the time estimate for firmware installation (in seconds)</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1408">the estimated time to flash this device (or 0 if unset)</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1404">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_instance_ids"
              c:identifier="fwupd_device_get_instance_ids"
              version="1.2.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="701">Gets the instance IDs.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="707">the instance IDs</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="703">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issues"
              c:identifier="fwupd_device_get_issues"
              version="1.7.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="169">Gets the list of issues currently affecting this device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="242"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="175">the issues, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="171">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modified"
              c:identifier="fwupd_device_get_modified"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1938">Gets when the device was modified.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1944">the UNIX time, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1940">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="fwupd_device_get_name"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="830">Gets the device name.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="836">the device name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="832">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent"
              c:identifier="fwupd_device_get_parent"
              glib:get-property="parent"
              version="1.0.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="480">Gets the parent.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="486">the parent device, or %NULL if unset</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="482">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_id"
              c:identifier="fwupd_device_get_parent_id"
              version="1.0.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="392">Gets the parent ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="398">the parent ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="394">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_percentage"
              c:identifier="fwupd_device_get_percentage"
              glib:get-property="percentage"
              version="1.8.11">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3016">Returns the percentage completion of the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="3022">the percentage value</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3018">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plugin"
              c:identifier="fwupd_device_get_plugin"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1437">Gets the plugin that created the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="185"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1443">the plugin name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1439">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_problems"
              c:identifier="fwupd_device_get_problems"
              glib:get-property="problems"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1701">Gets device problems.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1707">device problems, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1703">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="fwupd_device_get_protocol"
              glib:get-property="protocol"
              version="1.3.6"
              deprecated="1"
              deprecated-version="1.5.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1478">Gets the protocol name that the device uses for updating.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_device_get_protocols() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-device.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1484">the protocol name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1480">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocols"
              c:identifier="fwupd_device_get_protocols"
              version="1.5.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1523">Gets the device protocol names.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1529">the device protocol names</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1525">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_release_default"
              c:identifier="fwupd_device_get_release_default"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2922">Gets the default release for this device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="275"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2928">the #FwupdRelease, or %NULL if not set</doc>
          <type name="Release" c:type="FwupdRelease*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2924">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_releases"
              c:identifier="fwupd_device_get_releases"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2942">Gets all the releases for this device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="273"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2948">array of releases</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2944">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_request_flags"
              c:identifier="fwupd_device_get_request_flags"
              glib:get-property="request-flags"
              version="1.9.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1802">Gets device request flags.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1808">device request flags, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1804">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_root"
              c:identifier="fwupd_device_get_root"
              version="1.7.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="498">Gets the device root.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="504">the root device, or %NULL if unset</doc>
          <type name="Device" c:type="FwupdDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="500">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_serial"
              c:identifier="fwupd_device_get_serial"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="310">Gets the serial number for the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="316">a string value, or %NULL if never set.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="312">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="fwupd_device_get_status"
              glib:get-property="status"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2978">Returns what the device is currently doing.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="263"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2984">the status value, e.g. %FWUPD_STATUS_DEVICE_WRITE</doc>
          <type name="Status" c:type="FwupdStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2980">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="fwupd_device_get_summary"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="228">Gets the device summary.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="234">the device summary, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="230">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_error"
              c:identifier="fwupd_device_get_update_error"
              glib:get-property="update-error"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2880">Gets the update error string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2886">the update error string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2882">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_image"
              c:identifier="fwupd_device_get_update_image"
              glib:get-property="update-image"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2838">Gets the update image URL.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2844">the update image URL, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2840">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_message"
              c:identifier="fwupd_device_get_update_message"
              glib:get-property="update-message"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2796">Gets the update message string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="255"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2802">the update message string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2798">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_state"
              c:identifier="fwupd_device_get_update_state"
              glib:get-property="update-state"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2653">Gets the update state.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="247"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2659">the update state, or %FWUPD_UPDATE_STATE_UNKNOWN if unset</doc>
          <type name="UpdateState" c:type="FwupdUpdateState"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2655">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor"
              c:identifier="fwupd_device_get_vendor"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="871">Gets the device vendor.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="202"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="877">the device vendor, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="873">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_id"
              c:identifier="fwupd_device_get_vendor_id"
              version="0.9.4"
              deprecated="1"
              deprecated-version="1.5.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="912">Gets the combined device vendor ID.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_device_get_vendor_ids() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-device.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="918">the device vendor, e.g. 'USB:0x1234|PCI:0x5678', or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="914">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_ids"
              c:identifier="fwupd_device_get_vendor_ids"
              version="1.5.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="957">Gets the device vendor ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="963">the device vendor ID</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="959">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="fwupd_device_get_version"
              glib:get-property="version"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1075">Gets the device version.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1081">the device version, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1077">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_bootloader"
              c:identifier="fwupd_device_get_version_bootloader"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1193">Gets the version of the bootloader.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1199">the device version_bootloader, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1195">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_bootloader_raw"
              c:identifier="fwupd_device_get_version_bootloader_raw"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1234">Gets the bootloader version of firmware the device will accept in raw format.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1240">integer version number, or %0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1236">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_build_date"
              c:identifier="fwupd_device_get_version_build_date"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2761">Gets the date when the firmware was built.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2767">the UNIX time, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2763">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_format"
              c:identifier="fwupd_device_get_version_format"
              glib:get-property="version-format"
              version="1.2.9">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2691">Gets the version format.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2697">the version format, or %FWUPD_VERSION_FORMAT_UNKNOWN if unset</doc>
          <type name="VersionFormat" c:type="FwupdVersionFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2693">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_lowest"
              c:identifier="fwupd_device_get_version_lowest"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1117">Gets the lowest version of firmware the device will accept.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1123">the device version_lowest, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1119">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_lowest_raw"
              c:identifier="fwupd_device_get_version_lowest_raw"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1158">Gets the lowest version of firmware the device will accept in raw format.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1164">integer version number, or %0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1160">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_raw"
              c:identifier="fwupd_device_get_version_raw"
              version="1.3.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2726">Gets the raw version number from the hardware before converted to a string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2732">the hardware version, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2728">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_checksum"
              c:identifier="fwupd_device_has_checksum"
              version="1.8.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="121">Finds out if the device has this specific checksum.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="128">%TRUE if the checksum name is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="123">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="checksum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="124">the device checksum</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_device_has_flag"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1682">Finds if the device has a specific device flag.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1689">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1684">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1685">the #FwupdDeviceFlags</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_guid"
              c:identifier="fwupd_device_has_guid"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="634">Finds out if the device has this specific GUID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="641">%TRUE if the GUID is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="636">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="637">the GUID, e.g. `2082b5e0-7a64-478a-b1b2-e3404fab6dad`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_icon"
              c:identifier="fwupd_device_has_icon"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="787">Finds out if the device has this specific icon.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="794">%TRUE if the icon name is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="789">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="790">the icon name, e.g. `input-mouse` or `/usr/share/icons/foo.png`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_instance_id"
              c:identifier="fwupd_device_has_instance_id"
              version="1.2.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="719">Finds out if the device has this specific instance ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="726">%TRUE if the instance ID is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="721">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="instance_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="722">the instance ID, e.g. `PCI\VEN_10EC&amp;DEV_525A`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_problem"
              c:identifier="fwupd_device_has_problem"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1783">Finds if the device has a specific device problem kind.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1790">%TRUE if the problem is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1785">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="problem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1786">the #FwupdDeviceProblem</doc>
            <type name="DeviceProblem" c:type="FwupdDeviceProblem"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_protocol"
              c:identifier="fwupd_device_has_protocol"
              version="1.5.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1541">Finds out if the device has this specific protocol name.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1548">%TRUE if the protocol name is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1543">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1544">the protocol name, e.g. `com.hughski.colorhug`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_request_flag"
              c:identifier="fwupd_device_has_request_flag"
              version="1.9.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1884">Finds if the device has a specific device request flag.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="1891">%TRUE if the request_flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1886">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="request_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1887">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_vendor_id"
              c:identifier="fwupd_device_has_vendor_id"
              version="1.5.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="975">Finds out if the device has this specific vendor ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="214"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="982">%TRUE if the vendor ID is found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="977">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="vendor_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="978">the vendor ID, e.g. 'USB:0x1234'</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="incorporate"
              c:identifier="fwupd_device_incorporate"
              version="1.1.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1973">Copy all properties from the donor object if they have not already been set.</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1975">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="donor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1976">Another #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_flags"
              c:identifier="fwupd_device_match_flags"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4314">Check if the device flags match.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="279"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="4321">%TRUE if the device flags match</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="include" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4316">#FwupdDeviceFlags, or %FWUPD_DEVICE_FLAG_NONE</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
          <parameter name="exclude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="4317">#FwupdDeviceFlags, or %FWUPD_DEVICE_FLAG_NONE</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_child"
              c:identifier="fwupd_device_remove_child"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="588">Removes a child device.

NOTE: You should never call this function from user code, it is for daemon
use only.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="590">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="591">Another #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_device_remove_flag"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1660">Removes a specific device flag from the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1662">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1663">the #FwupdDeviceFlags</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_problem"
              c:identifier="fwupd_device_remove_problem"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1761">Removes a specific device problem kind from the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1763">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="problem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1764">the #FwupdDeviceProblem, e.g. #FWUPD_DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW</doc>
            <type name="DeviceProblem" c:type="FwupdDeviceProblem"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_request_flag"
              c:identifier="fwupd_device_remove_request_flag"
              version="1.9.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1862">Removes a specific device request flag from the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1864">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="request_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1865">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_battery_level"
              c:identifier="fwupd_device_set_battery_level"
              glib:set-property="battery-level"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1322">Sets the battery level, or %FWUPD_BATTERY_LEVEL_INVALID.

Setting this allows fwupd to show a warning if the device change is too low
to perform the update.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1324">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="battery_level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1325">the percentage value</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_battery_threshold"
              c:identifier="fwupd_device_set_battery_threshold"
              glib:set-property="battery-threshold"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1376">Sets the battery level, or %FWUPD_BATTERY_LEVEL_INVALID for the default.

Setting this allows fwupd to show a warning if the device change is too low
to perform the update.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1378">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="battery_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1379">the percentage value</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_branch"
              c:identifier="fwupd_device_set_branch"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="287">Sets the current device branch.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="289">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="290">the device one line branch</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_composite_id"
              c:identifier="fwupd_device_set_composite_id"
              version="1.6.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="456">Sets the composite ID, which is usually a SHA1 hash of a grandparent or
parent device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="458">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="composite_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="459">a device ID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_created"
              c:identifier="fwupd_device_set_created"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1921">Sets when the device was created.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1923">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="created" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1924">the UNIX time</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="fwupd_device_set_description"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1052">Sets the device description.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1054">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1055">the description in AppStream markup format</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_device_set_flags"
              glib:set-property="flags"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1618">Sets device flags.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1620">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1621">device flags, e.g. %FWUPD_DEVICE_FLAG_REQUIRE_AC</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flashes_left"
              c:identifier="fwupd_device_set_flashes_left"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1287">Sets the number of flash cycles left on the device</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1289">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flashes_left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1290">the description</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id" c:identifier="fwupd_device_set_id" version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="369">Sets the ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="371">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="372">the device ID, e.g. `USB:foo`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_install_duration"
              c:identifier="fwupd_device_set_install_duration"
              version="1.1.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1420">Sets the time estimate for firmware installation (in seconds)</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1422">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1423">the amount of time</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modified"
              c:identifier="fwupd_device_set_modified"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1956">Sets when the device was modified.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1958">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="modified" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1959">the UNIX time</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="fwupd_device_set_name"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="848">Sets the device name.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="850">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="851">the device name, e.g. `ColorHug2`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent"
              c:identifier="fwupd_device_set_parent"
              glib:set-property="parent"
              version="1.0.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="521">Sets the parent. Only used internally.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="523">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="524">another #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent_id"
              c:identifier="fwupd_device_set_parent_id"
              version="1.0.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="410">Sets the parent ID.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="412">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="parent_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="413">the device ID, e.g. `USB:foo`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_percentage"
              c:identifier="fwupd_device_set_percentage"
              glib:set-property="percentage"
              version="1.8.11">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3034">Sets the percentage completion of the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3036">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="percentage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3037">the percentage value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_plugin"
              c:identifier="fwupd_device_set_plugin"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1455">Sets the plugin that created the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="187"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1457">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="plugin"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1458">the plugin name, e.g. `colorhug`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_problems"
              c:identifier="fwupd_device_set_problems"
              glib:set-property="problems"
              version="1.8.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1719">Sets device problems.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1721">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="problems" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1722">device problems, e.g. %FWUPD_DEVICE_PROBLEM_SYSTEM_POWER_TOO_LOW</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protocol"
              c:identifier="fwupd_device_set_protocol"
              glib:set-property="protocol"
              version="1.3.6"
              deprecated="1"
              deprecated-version="1.5.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1498">Sets the protocol name that is used to update the device.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_device_add_protocol() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-device.h" line="193"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1500">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1501">the protocol name, e.g. `com.hughski.colorhug`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_request_flags"
              c:identifier="fwupd_device_set_request_flags"
              glib:set-property="request-flags"
              version="1.9.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1820">Sets device request flags.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1822">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="request_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1823">device request flags, e.g. %FWUPD_DEVICE_REQUEST_FLAG_REQUIRE_AC</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_serial"
              c:identifier="fwupd_device_set_serial"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="328">Sets the serial number for the device.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="330">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="serial"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="331">the device serial number</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_status"
              c:identifier="fwupd_device_set_status"
              glib:set-property="status"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2996">Sets what the device is currently doing.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="265"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2998">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="status" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2999">the status value, e.g. %FWUPD_STATUS_DEVICE_WRITE</doc>
            <type name="Status" c:type="FwupdStatus"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="fwupd_device_set_summary"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="246">Sets the device summary.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="248">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="summary"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="249">the device one line summary</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_error"
              c:identifier="fwupd_device_set_update_error"
              glib:set-property="update-error"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2898">Sets the update error string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="253"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2900">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="update_error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2901">the update error string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_image"
              c:identifier="fwupd_device_set_update_image"
              glib:set-property="update-image"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2856">Sets the update image URL.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="261"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2858">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="update_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2859">the update image URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_message"
              c:identifier="fwupd_device_set_update_message"
              glib:set-property="update-message"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2814">Sets the update message string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="257"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2816">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="update_message"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2817">the update message string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_state"
              c:identifier="fwupd_device_set_update_state"
              glib:set-property="update-state"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2671">Sets the update state.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="249"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2673">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="update_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2674">the state, e.g. %FWUPD_UPDATE_STATE_PENDING</doc>
            <type name="UpdateState" c:type="FwupdUpdateState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor"
              c:identifier="fwupd_device_set_vendor"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="889">Sets the device vendor.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="204"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="891">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="vendor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="892">the vendor</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor_id"
              c:identifier="fwupd_device_set_vendor_id"
              version="0.9.4"
              deprecated="1"
              deprecated-version="1.5.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="932">Sets the device vendor ID.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_device_add_vendor_id() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-device.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="934">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="vendor_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="935">the vendor ID, e.g. 'USB:0x1234' or 'USB:0x1234|PCI:0x5678'</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version"
              c:identifier="fwupd_device_set_version"
              glib:set-property="version"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1093">Sets the device version.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1095">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1096">the device version, e.g. `1.2.3`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_bootloader"
              c:identifier="fwupd_device_set_version_bootloader"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1211">Sets the bootloader version.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1213">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_bootloader"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1214">the version</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_bootloader_raw"
              c:identifier="fwupd_device_set_version_bootloader_raw"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1252">Sets the raw bootloader version number from the hardware before converted to a string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1254">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_bootloader_raw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1255">the raw hardware version</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_build_date"
              c:identifier="fwupd_device_set_version_build_date"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2779">Sets the date when the firmware was built.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2781">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_build_date" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2782">the UNIX time</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_format"
              c:identifier="fwupd_device_set_version_format"
              glib:set-property="version-format"
              version="1.2.9">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2709">Sets the version format.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2711">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2712">the version format, e.g. %FWUPD_VERSION_FORMAT_NUMBER</doc>
            <type name="VersionFormat" c:type="FwupdVersionFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_lowest"
              c:identifier="fwupd_device_set_version_lowest"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1135">Sets the lowest version of firmware the device will accept.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1137">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_lowest"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1138">the version</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_lowest_raw"
              c:identifier="fwupd_device_set_version_lowest_raw"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="1176">Sets the raw lowest version number from the hardware before converted to a string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1178">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_lowest_raw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="1179">the raw hardware version</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_raw"
              c:identifier="fwupd_device_set_version_raw"
              version="1.3.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2744">Sets the raw version number from the hardware before converted to a string.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2746">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="version_raw" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2747">the raw hardware version</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_device_to_json"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3561">Adds a fwupd device to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3563">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3564">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json_full"
              c:identifier="fwupd_device_to_json_full"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3062">Adds a fwupd device to a JSON builder
Optionally provides additional data based upon flags</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3064">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3065">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3066">device flags</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_device_to_string"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3611">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-device.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="3617">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="3613">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_device_to_variant"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2390">Serialize the device data omitting sensitive fields</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="16"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2396">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2392">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant_full"
              c:identifier="fwupd_device_to_variant_full"
              version="1.1.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="2080">Serialize the device data.
Optionally provides additional data based upon flags</doc>
        <source-position filename="libfwupd/fwupd-device-private.h" line="18"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-device.c"
               line="2088">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2082">a #FwupdDevice</doc>
            <type name="Device" c:type="FwupdDevice*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-device.c"
                 line="2083">device flags</doc>
            <type name="DeviceFlags" c:type="FwupdDeviceFlags"/>
          </parameter>
        </parameters>
      </method>
      <property name="battery-level"
                version="1.5.8"
                writable="1"
                transfer-ownership="none"
                setter="set_battery_level"
                getter="get_battery_level"
                default-value="101">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4077">The device battery level in percent.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="battery-threshold"
                version="1.5.8"
                writable="1"
                transfer-ownership="none"
                setter="set_battery_threshold"
                getter="get_battery_threshold"
                default-value="101">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4093">The device battery threshold in percent.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="flags"
                version="0.9.3"
                writable="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3910">The device flags.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="parent"
                version="1.0.8"
                writable="1"
                construct="1"
                transfer-ownership="none"
                setter="set_parent"
                getter="get_parent">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4005">The device parent.</doc>
        <type name="Device"/>
      </property>
      <property name="percentage"
                version="1.8.11"
                writable="1"
                transfer-ownership="none"
                setter="set_percentage"
                getter="get_percentage"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3989">The current device percentage.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="problems"
                version="1.8.1"
                writable="1"
                transfer-ownership="none"
                setter="set_problems"
                getter="get_problems"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3926">The problems with the device that the user could fix, e.g. "lid open".</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="protocol"
                version="1.3.6"
                deprecated="1"
                deprecated-version="1.5.8"
                writable="1"
                transfer-ownership="none"
                setter="set_protocol"
                getter="get_protocol"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3958">The device protocol.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="request-flags"
                version="1.9.10"
                writable="1"
                transfer-ownership="none"
                setter="set_request_flags"
                getter="get_request_flags"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3942">The device request flags.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="status"
                version="1.4.0"
                writable="1"
                transfer-ownership="none"
                setter="set_status"
                getter="get_status"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3973">The current device status.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="update-error"
                version="0.9.8"
                writable="1"
                transfer-ownership="none"
                setter="set_update_error"
                getter="get_update_error"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4049">The device update error.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="update-image"
                version="1.4.5"
                writable="1"
                transfer-ownership="none"
                setter="set_update_image"
                getter="get_update_image"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4063">The update image for the device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="update-message"
                version="1.2.4"
                writable="1"
                transfer-ownership="none"
                setter="set_update_message"
                getter="get_update_message"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4035">The device update message.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="update-state"
                version="0.9.8"
                writable="1"
                transfer-ownership="none"
                setter="set_update_state"
                getter="get_update_state"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="4019">The device update state.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="version"
                version="1.8.15"
                writable="1"
                transfer-ownership="none"
                setter="set_version"
                getter="get_version"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3880">The device version.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version-format"
                version="1.2.9"
                writable="1"
                transfer-ownership="none"
                setter="set_version_format"
                getter="get_version_format"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-device.c"
             line="3894">The version format of the device.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DeviceClass"
            c:type="FwupdDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="libfwupd/fwupd-device.h" line="30"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-device.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-device.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-device.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-device.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-device.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-device.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-device.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="Error"
                 c:type="FwupdError"
                 glib:error-domain="FwupdError">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-error.h"
           line="15">The error code.</doc>
      <source-position filename="libfwupd/fwupd-error.h" line="59"/>
      <member name="internal" value="0" c:identifier="FWUPD_ERROR_INTERNAL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="17">Internal error</doc>
      </member>
      <member name="version_newer"
              value="1"
              c:identifier="FWUPD_ERROR_VERSION_NEWER">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="18">Installed newer firmware version</doc>
      </member>
      <member name="version_same"
              value="2"
              c:identifier="FWUPD_ERROR_VERSION_SAME">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="19">Installed same firmware version</doc>
      </member>
      <member name="already_pending"
              value="3"
              c:identifier="FWUPD_ERROR_ALREADY_PENDING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="20">Already set to be installed offline</doc>
      </member>
      <member name="auth_failed"
              value="4"
              c:identifier="FWUPD_ERROR_AUTH_FAILED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="21">Failed to get authentication</doc>
      </member>
      <member name="read" value="5" c:identifier="FWUPD_ERROR_READ">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="22">Failed to read from device</doc>
      </member>
      <member name="write" value="6" c:identifier="FWUPD_ERROR_WRITE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="23">Failed to write to the device</doc>
      </member>
      <member name="invalid_file"
              value="7"
              c:identifier="FWUPD_ERROR_INVALID_FILE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="24">Invalid file format</doc>
      </member>
      <member name="not_found" value="8" c:identifier="FWUPD_ERROR_NOT_FOUND">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="25">No matching device exists</doc>
      </member>
      <member name="nothing_to_do"
              value="9"
              c:identifier="FWUPD_ERROR_NOTHING_TO_DO">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="26">Nothing to do</doc>
      </member>
      <member name="not_supported"
              value="10"
              c:identifier="FWUPD_ERROR_NOT_SUPPORTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="27">Action was not possible</doc>
      </member>
      <member name="signature_invalid"
              value="11"
              c:identifier="FWUPD_ERROR_SIGNATURE_INVALID">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="28">Signature was invalid</doc>
      </member>
      <member name="ac_power_required"
              value="12"
              c:identifier="FWUPD_ERROR_AC_POWER_REQUIRED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="29">AC power was required</doc>
      </member>
      <member name="permission_denied"
              value="13"
              c:identifier="FWUPD_ERROR_PERMISSION_DENIED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="30">Permission was denied</doc>
      </member>
      <member name="broken_system"
              value="14"
              c:identifier="FWUPD_ERROR_BROKEN_SYSTEM">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="31">User has configured their system in a broken way</doc>
      </member>
      <member name="battery_level_too_low"
              value="15"
              c:identifier="FWUPD_ERROR_BATTERY_LEVEL_TOO_LOW">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="32">The system battery level is too low</doc>
      </member>
      <member name="needs_user_action"
              value="16"
              c:identifier="FWUPD_ERROR_NEEDS_USER_ACTION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="33">User needs to do an action to complete the update</doc>
      </member>
      <member name="auth_expired"
              value="17"
              c:identifier="FWUPD_ERROR_AUTH_EXPIRED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.h"
             line="34">Failed to get auth as credentials have expired</doc>
      </member>
    </enumeration>
    <bitfield name="FeatureFlags" c:type="FwupdFeatureFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="68">The flags to the feature capabilities of the front-end client.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="98"/>
      <member name="none" value="0" c:identifier="FWUPD_FEATURE_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="70">No trust</doc>
      </member>
      <member name="can_report"
              value="1"
              c:identifier="FWUPD_FEATURE_FLAG_CAN_REPORT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="71">Can upload a report of the update back to the server</doc>
      </member>
      <member name="detach_action"
              value="2"
              c:identifier="FWUPD_FEATURE_FLAG_DETACH_ACTION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="72">Can perform detach action, typically showing text</doc>
      </member>
      <member name="update_action"
              value="4"
              c:identifier="FWUPD_FEATURE_FLAG_UPDATE_ACTION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="73">Can perform update action, typically showing text</doc>
      </member>
      <member name="switch_branch"
              value="8"
              c:identifier="FWUPD_FEATURE_FLAG_SWITCH_BRANCH">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="74">Can switch the firmware branch</doc>
      </member>
      <member name="requests"
              value="16"
              c:identifier="FWUPD_FEATURE_FLAG_REQUESTS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="75">Can show interactive requests</doc>
      </member>
      <member name="fde_warning"
              value="32"
              c:identifier="FWUPD_FEATURE_FLAG_FDE_WARNING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="76">Can warn about full disk encryption</doc>
      </member>
      <member name="community_text"
              value="64"
              c:identifier="FWUPD_FEATURE_FLAG_COMMUNITY_TEXT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="77">Can show information about community supported</doc>
      </member>
      <member name="show_problems"
              value="128"
              c:identifier="FWUPD_FEATURE_FLAG_SHOW_PROBLEMS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="78">Can show problems when getting the update list</doc>
      </member>
      <member name="allow_authentication"
              value="256"
              c:identifier="FWUPD_FEATURE_FLAG_ALLOW_AUTHENTICATION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="79">Can authenticate with PolicyKit for requests</doc>
      </member>
      <member name="requests_non_generic"
              value="512"
              c:identifier="FWUPD_FEATURE_FLAG_REQUESTS_NON_GENERIC">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="80">Can handle showing non-generic request message text</doc>
      </member>
    </bitfield>
    <bitfield name="GuidFlags" c:type="FwupdGuidFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.h"
           line="47">The flags to show how the data should be converted.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="61"/>
      <member name="none" value="0" c:identifier="FWUPD_GUID_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.h"
             line="49">No trust</doc>
      </member>
      <member name="namespace_microsoft"
              value="1"
              c:identifier="FWUPD_GUID_FLAG_NAMESPACE_MICROSOFT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.h"
             line="50">Use the Microsoft-compatible namespace</doc>
      </member>
      <member name="mixed_endian"
              value="2"
              c:identifier="FWUPD_GUID_FLAG_MIXED_ENDIAN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.h"
             line="51">Use EFI mixed endian representation</doc>
      </member>
    </bitfield>
    <bitfield name="InstallFlags" c:type="FwupdInstallFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1000">Flags to set when performing the firmware update or install.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1033"/>
      <member name="none" value="0" c:identifier="FWUPD_INSTALL_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1002">No flags set</doc>
      </member>
      <member name="offline"
              value="1"
              c:identifier="FWUPD_INSTALL_FLAG_OFFLINE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1003">Schedule this for next boot</doc>
      </member>
      <member name="allow_reinstall"
              value="2"
              c:identifier="FWUPD_INSTALL_FLAG_ALLOW_REINSTALL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1004">Allow reinstalling the same version</doc>
      </member>
      <member name="allow_older"
              value="4"
              c:identifier="FWUPD_INSTALL_FLAG_ALLOW_OLDER">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1005">Allow downgrading firmware</doc>
      </member>
      <member name="force" value="8" c:identifier="FWUPD_INSTALL_FLAG_FORCE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1006">Force the update even if not a good idea</doc>
      </member>
      <member name="no_history"
              value="16"
              c:identifier="FWUPD_INSTALL_FLAG_NO_HISTORY">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1007">Do not write to the history database</doc>
      </member>
      <member name="allow_branch_switch"
              value="32"
              c:identifier="FWUPD_INSTALL_FLAG_ALLOW_BRANCH_SWITCH">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1008">Allow firmware branch switching</doc>
      </member>
      <member name="ignore_checksum"
              value="64"
              c:identifier="FWUPD_INSTALL_FLAG_IGNORE_CHECKSUM">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1009">Ignore firmware CRCs and checksums</doc>
      </member>
      <member name="ignore_vid_pid"
              value="128"
              c:identifier="FWUPD_INSTALL_FLAG_IGNORE_VID_PID">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1010">Ignore firmware vendor and project checks</doc>
      </member>
      <member name="ignore_power"
              value="256"
              c:identifier="FWUPD_INSTALL_FLAG_IGNORE_POWER">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1011">Ignore requirement of external power source
(Deprecated since 1.7.0)</doc>
      </member>
      <member name="no_search"
              value="512"
              c:identifier="FWUPD_INSTALL_FLAG_NO_SEARCH">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1013">Do not use heuristics when parsing the image</doc>
      </member>
      <member name="ignore_requirements"
              value="1024"
              c:identifier="FWUPD_INSTALL_FLAG_IGNORE_REQUIREMENTS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1014">Ignore version requirement checks</doc>
      </member>
    </bitfield>
    <enumeration name="KeyringKind" c:type="FwupdKeyringKind">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1074">Type of keyring used on a remote.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1092"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_KEYRING_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1076">Unknown</doc>
      </member>
      <member name="none" value="1" c:identifier="FWUPD_KEYRING_KIND_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1077">No verification</doc>
      </member>
      <member name="gpg" value="2" c:identifier="FWUPD_KEYRING_KIND_GPG">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1078">Verification using GPG</doc>
      </member>
      <member name="pkcs7" value="3" c:identifier="FWUPD_KEYRING_KIND_PKCS7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1079">Verification using PKCS7</doc>
      </member>
      <member name="jcat" value="4" c:identifier="FWUPD_KEYRING_KIND_JCAT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1080">Verification using Jcat</doc>
      </member>
    </enumeration>
    <constant name="MAJOR_VERSION" value="1" c:type="FWUPD_MAJOR_VERSION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-version.h"
           line="16">The compile-time major version</doc>
      <source-position filename="libfwupd/fwupd-version.h" line="21"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION" value="23" c:type="FWUPD_MICRO_VERSION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-version.h"
           line="30">The compile-time micro version</doc>
      <source-position filename="libfwupd/fwupd-version.h" line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION" value="9" c:type="FWUPD_MINOR_VERSION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-version.h"
           line="23">The compile-time minor version</doc>
      <source-position filename="libfwupd/fwupd-version.h" line="28"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_AUTH_REQUIRED"
              value="4096"
              c:type="FWUPD_PLUGIN_FLAG_AUTH_REQUIRED"
              version="1.6.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="925">The plugin requires the user to provide authentication details.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="933"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_CAPSULES_UNSUPPORTED"
              value="16"
              c:type="FWUPD_PLUGIN_FLAG_CAPSULES_UNSUPPORTED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="855">The plugin discovered that UEFI UpdateCapsule are unsupported.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="863"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_CLEAR_UPDATABLE"
              value="4"
              c:type="FWUPD_PLUGIN_FLAG_CLEAR_UPDATABLE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="836">When the plugin loads it should clear the UPDATABLE flag from any devices.
This typically happens when the device requires a system restart.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="844"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_DISABLED"
              value="1"
              c:type="FWUPD_PLUGIN_FLAG_DISABLED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="820">The plugin has been disabled, either by daemon configuration or a problem.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="827"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_EFIVAR_NOT_MOUNTED"
              value="64"
              c:type="FWUPD_PLUGIN_FLAG_EFIVAR_NOT_MOUNTED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="873">The plugin discovered the efivar filesystem is not found and is required for this plugin.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="881"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_ESP_NOT_FOUND"
              value="128"
              c:type="FWUPD_PLUGIN_FLAG_ESP_NOT_FOUND"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="882">The plugins discovered that the EFI system partition was not found.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="890"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_ESP_NOT_VALID"
              value="65536"
              c:type="FWUPD_PLUGIN_FLAG_ESP_NOT_VALID"
              version="1.9.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="959">The plugins discovered that the EFI system partition may not be valid.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="967"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_FAILED_OPEN"
              value="512"
              c:type="FWUPD_PLUGIN_FLAG_FAILED_OPEN"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="900">Failed to open plugin (missing dependency).
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="908"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_KERNEL_TOO_OLD"
              value="2048"
              c:type="FWUPD_PLUGIN_FLAG_KERNEL_TOO_OLD"
              version="1.6.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="917">The feature is not supported as the kernel is too old.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="924"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_LEGACY_BIOS"
              value="256"
              c:type="FWUPD_PLUGIN_FLAG_LEGACY_BIOS"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="891">The plugin discovered the system is running in legacy CSM mode.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="899"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_MEASURE_SYSTEM_INTEGRITY"
              value="32768"
              c:type="FWUPD_PLUGIN_FLAG_MEASURE_SYSTEM_INTEGRITY"
              version="1.8.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="951">The plugin will be checked that it preserves system state such as `KEK`, `PK`, `BOOT####` etc.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="958"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_MODULAR"
              value="16384"
              c:type="FWUPD_PLUGIN_FLAG_MODULAR"
              version="1.8.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="943">The plugin is loaded from an external module.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="950"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_NONE"
              value="0"
              c:type="FWUPD_PLUGIN_FLAG_NONE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="812">No plugin flags are set.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="819"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_NO_HARDWARE"
              value="8"
              c:type="FWUPD_PLUGIN_FLAG_NO_HARDWARE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="845">The plugin won't load because no supported hardware was found.
This typically happens with plugins designed for a specific platform design
(such as the dell plugin only works on Dell systems).</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="854"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_READY"
              value="131072"
              c:type="FWUPD_PLUGIN_FLAG_READY"
              version="1.9.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="968">The plugin is ready for use and all devices have been coldplugged.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="975"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_REQUIRE_HWID"
              value="1024"
              c:type="FWUPD_PLUGIN_FLAG_REQUIRE_HWID"
              version="1.5.8">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="909">A specific HWID is required to use this plugin.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="916"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_SECURE_CONFIG"
              value="8192"
              c:type="FWUPD_PLUGIN_FLAG_SECURE_CONFIG"
              version="1.8.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="934">The plugin requires the config file to be saved with permissions that only allow the root user
to read.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="942"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_TEST_ONLY"
              value="262144"
              c:type="FWUPD_PLUGIN_FLAG_TEST_ONLY"
              version="1.9.13">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="985">The plugin is used for virtual devices that exercising daemon flows.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="984"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_UNLOCK_REQUIRED"
              value="32"
              c:type="FWUPD_PLUGIN_FLAG_UNLOCK_REQUIRED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="864">The plugin discovered that hardware unlock is required.
Supported clients will display this information to a user.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="872"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="PLUGIN_FLAG_USER_WARNING"
              value="2"
              c:type="FWUPD_PLUGIN_FLAG_USER_WARNING"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="828">The plugin has a problem and would like to show a user warning to a supported client.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="835"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Plugin"
           c:symbol-prefix="plugin"
           c:type="FwupdPlugin"
           parent="GObject.Object"
           glib:type-name="FwupdPlugin"
           glib:get-type="fwupd_plugin_get_type"
           glib:type-struct="PluginClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-plugin.c"
           line="15">A plugin which is used by fwupd to enumerate and update devices.

See also: [class@FwupdRelease]</doc>
      <source-position filename="libfwupd/fwupd-plugin.h" line="28"/>
      <constructor name="new" c:identifier="fwupd_plugin_new" version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="468">Creates a new plugin.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="473">a new #FwupdPlugin</doc>
          <type name="Plugin" c:type="FwupdPlugin*"/>
        </return-value>
      </constructor>
      <function name="array_from_variant"
                c:identifier="fwupd_plugin_array_from_variant"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="434">Creates an array of new plugins using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="54"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="440">plugins, or %NULL if @value was invalid</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Plugin"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="436">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_from_string"
                c:identifier="fwupd_plugin_flag_from_string"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="494">Converts a string to an enumerated plugin flag.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="500">enumerated value</doc>
          <type name="PluginFlags" c:type="FwupdPluginFlags"/>
        </return-value>
        <parameters>
          <parameter name="plugin_flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="496">a string, e.g. `require-ac`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_plugin_flag_to_string"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="436">Converts an enumerated plugin flag to a string.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="442">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="plugin_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="438">plugin flags, e.g. %FWUPD_PLUGIN_FLAG_CLEAR_UPDATABLE</doc>
            <type name="PluginFlags" c:type="FwupdPluginFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_plugin_from_variant"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="399">Creates a new plugin using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="405">a new #FwupdPlugin, or %NULL if @value was invalid</doc>
          <type name="Plugin" c:type="FwupdPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="401">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_flag"
              c:identifier="fwupd_plugin_add_flag"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="117">Adds a specific plugin flag to the plugin.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="119">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="120">the #FwupdPluginFlags</doc>
            <type name="PluginFlags" c:type="FwupdPluginFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_plugin_get_flags"
              glib:get-property="flags"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="79">Gets the plugin flags.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="85">plugin flags, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="81">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="fwupd_plugin_get_name"
              glib:get-property="name"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="36">Gets the plugin name.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="42">the plugin name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="38">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_plugin_has_flag"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="161">Finds if the plugin has a specific plugin flag.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="168">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="163">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="164">a plugin flag</doc>
            <type name="PluginFlags" c:type="FwupdPluginFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_plugin_remove_flag"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="139">Removes a specific plugin flag from the plugin.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="141">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="142">a plugin flag</doc>
            <type name="PluginFlags" c:type="FwupdPluginFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_plugin_set_flags"
              glib:set-property="flags"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="97">Sets the plugin flags.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="99">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="100">plugin flags, e.g. %FWUPD_PLUGIN_FLAG_CAPSULES_UNSUPPORTED</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="fwupd_plugin_set_name"
              glib:set-property="name"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="54">Sets the plugin name.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="56">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="57">the plugin name, e.g. `bios`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_plugin_to_json"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="245">Adds a fwupd plugin to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-plugin-private.h" line="18"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="247">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="248">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_plugin_to_string"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="277">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-plugin.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="283">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="279">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_plugin_to_variant"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="180">Serialize the plugin data omitting sensitive fields</doc>
        <source-position filename="libfwupd/fwupd-plugin-private.h" line="16"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-plugin.c"
               line="186">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-plugin.c"
                 line="182">a #FwupdPlugin</doc>
            <type name="Plugin" c:type="FwupdPlugin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="flags"
                version="1.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="357">The plugin flags.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="name"
                version="1.5.0"
                writable="1"
                transfer-ownership="none"
                setter="set_name"
                getter="get_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-plugin.c"
             line="346">The plugin name.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="PluginClass"
            c:type="FwupdPluginClass"
            glib:is-gtype-struct-for="Plugin">
      <source-position filename="libfwupd/fwupd-plugin.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-plugin.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-plugin.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-plugin.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-plugin.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-plugin.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-plugin.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-plugin.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <constant name="RELEASE_FLAG_BLOCKED_APPROVAL"
              value="32"
              c:type="FWUPD_RELEASE_FLAG_BLOCKED_APPROVAL"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="745">The installation of the release is blocked as release not approved by an administrator.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="752"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_BLOCKED_VERSION"
              value="16"
              c:type="FWUPD_RELEASE_FLAG_BLOCKED_VERSION"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="737">The installation of the release is blocked as below device version-lowest.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="744"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_IS_ALTERNATE_BRANCH"
              value="64"
              c:type="FWUPD_RELEASE_FLAG_IS_ALTERNATE_BRANCH"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="753">The release is an alternate branch of firmware.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="760"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_IS_COMMUNITY"
              value="128"
              c:type="FWUPD_RELEASE_FLAG_IS_COMMUNITY"
              version="1.7.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="761">The release is supported by the community and not the hardware vendor.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="768"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_IS_DOWNGRADE"
              value="8"
              c:type="FWUPD_RELEASE_FLAG_IS_DOWNGRADE"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="729">The release is older than the device version.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="736"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_IS_UPGRADE"
              value="4"
              c:type="FWUPD_RELEASE_FLAG_IS_UPGRADE"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="721">The release is newer than the device version.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="728"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_NONE"
              value="0"
              c:type="FWUPD_RELEASE_FLAG_NONE"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="697">No flags are set.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="704"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_TRUSTED_METADATA"
              value="2"
              c:type="FWUPD_RELEASE_FLAG_TRUSTED_METADATA"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="713">The payload metadata is trusted.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="720"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_TRUSTED_PAYLOAD"
              value="1"
              c:type="FWUPD_RELEASE_FLAG_TRUSTED_PAYLOAD"
              version="1.2.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="705">The payload binary is trusted.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="712"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="RELEASE_FLAG_TRUSTED_REPORT"
              value="256"
              c:type="FWUPD_RELEASE_FLAG_TRUSTED_REPORT"
              version="1.9.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="769">The payload has been tested by a report we trust.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="776"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REPORT_FLAG_FROM_OEM"
              value="1"
              c:type="FWUPD_REPORT_FLAG_FROM_OEM"
              version="1.9.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-report.h"
           line="37">The report was generated by the OEM.</doc>
      <source-position filename="libfwupd/fwupd-report.h" line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REPORT_FLAG_IS_UPGRADE"
              value="2"
              c:type="FWUPD_REPORT_FLAG_IS_UPGRADE"
              version="1.9.14">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-report.h"
           line="46">The new firmware was newer than the old firmware.</doc>
      <source-position filename="libfwupd/fwupd-report.h" line="53"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REPORT_FLAG_NONE"
              value="0"
              c:type="FWUPD_REPORT_FLAG_NONE"
              version="1.9.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-report.h"
           line="28">No report flags are set.</doc>
      <source-position filename="libfwupd/fwupd-report.h" line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_FLAG_ALLOW_GENERIC_IMAGE"
              value="2"
              c:type="FWUPD_REQUEST_FLAG_ALLOW_GENERIC_IMAGE"
              version="1.8.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="133">Use a generic (translated) request image.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_FLAG_ALLOW_GENERIC_MESSAGE"
              value="1"
              c:type="FWUPD_REQUEST_FLAG_ALLOW_GENERIC_MESSAGE"
              version="1.8.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="124">Use a generic (translated) request message.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_FLAG_NONE"
              value="0"
              c:type="FWUPD_REQUEST_FLAG_NONE"
              version="1.8.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="115">No flags are set.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_FLAG_NON_GENERIC_IMAGE"
              value="8"
              c:type="FWUPD_REQUEST_FLAG_NON_GENERIC_IMAGE"
              version="1.9.10">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="151">Device requires to show the user a custom image for the action to make sense.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_FLAG_NON_GENERIC_MESSAGE"
              value="4"
              c:type="FWUPD_REQUEST_FLAG_NON_GENERIC_MESSAGE"
              version="1.9.10">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="142">Device requires a non-generic interaction with custom non-translatable text.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="REQUEST_ID_DO_NOT_POWER_OFF"
              value="org.freedesktop.fwupd.request.do-not-power-off"
              c:type="FWUPD_REQUEST_ID_DO_NOT_POWER_OFF">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="84">Show the user a message not to unplug the machine from the AC power, e.g.
"Do not turn off your computer or remove the AC adaptor until you are sure the update has
completed."

Since 1.8.6</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_INSERT_USB_CABLE"
              value="org.freedesktop.fwupd.request.insert-usb-cable"
              c:type="FWUPD_REQUEST_ID_INSERT_USB_CABLE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="74">The user needs to insert the cable to complete the update, e.g.
"The update will continue when the device USB cable has been re-inserted."

Since 1.8.9</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="82"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_PRESS_UNLOCK"
              value="org.freedesktop.fwupd.request.press-unlock"
              c:type="FWUPD_REQUEST_ID_PRESS_UNLOCK">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="54">The user needs to press unlock on the device to continue, e.g.
"Press unlock on the device to continue the update process."

Since 1.6.2</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_REMOVE_REPLUG"
              value="org.freedesktop.fwupd.request.remove-replug"
              c:type="FWUPD_REQUEST_ID_REMOVE_REPLUG">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="44">The user needs to remove and reinsert the device to complete the update, e.g.
"The update will continue when the device USB cable has been unplugged and then re-inserted."

Since 1.6.2</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_REMOVE_USB_CABLE"
              value="org.freedesktop.fwupd.request.remove-usb-cable"
              c:type="FWUPD_REQUEST_ID_REMOVE_USB_CABLE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="64">The user needs to remove the device to complete the update, e.g.
"The update will continue when the device USB cable has been unplugged."

Since 1.8.6</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="72"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_REPLUG_INSTALL"
              value="org.freedesktop.fwupd.replug-install"
              c:type="FWUPD_REQUEST_ID_REPLUG_INSTALL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="95">Show the user a message to replug the device and then install the firmware, e.g.
"Unplug and replug the device, to continue the update process."

Since 1.8.11</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="103"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="REQUEST_ID_REPLUG_POWER"
              value="org.freedesktop.fwupd.replug-power"
              c:type="FWUPD_REQUEST_ID_REPLUG_POWER">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="105">Show the user a message to replug the power connector, e.g.
"The update will continue when the device power cable has been unplugged and then re-inserted."

Since 1.9.9</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="113"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_APPSTREAM_ID"
              value="AppstreamId"
              c:type="FWUPD_RESULT_KEY_APPSTREAM_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="13">Result key to represent AppstreamId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="20"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BATTERY_LEVEL"
              value="BatteryLevel"
              c:type="FWUPD_RESULT_KEY_BATTERY_LEVEL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="525">Result key to represent the current battery level in percent.
Expressed from 0-100%, or 101 for invalid or unset.

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="533"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BATTERY_THRESHOLD"
              value="BatteryThreshold"
              c:type="FWUPD_RESULT_KEY_BATTERY_THRESHOLD">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="534">Result key to represent the minimum battery level required to perform an update.
Expressed from 0-100%, or 101 for invalid or unset.

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="542"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_CURRENT_VALUE"
              value="BiosSettingCurrentValue"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_CURRENT_VALUE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="559">Result key to represent the current value of BIOS setting.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="566"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_ID"
              value="BiosSettingId"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="543">Result key to represent the unique identifier of the BIOS setting.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="550"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_LOWER_BOUND"
              value="BiosSettingLowerBound"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_LOWER_BOUND">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="584">Result key to represent the upper bound for an integer BIOS setting.
or minimum length for string BIOS setting.
The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="591"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_POSSIBLE_VALUES"
              value="BiosSettingPossibleValues"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_POSSIBLE_VALUES">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="576">Result key to represent possible values

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="583"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_READ_ONLY"
              value="BiosSettingReadOnly"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_READ_ONLY">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="609">Result key to represent whether BIOS setting is read only

The D-Bus type signature string is 'b' i.e. a boolean.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="616"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_SCALAR_INCREMENT"
              value="BiosSettingScalarIncrement"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_SCALAR_INCREMENT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="601">Result key to represent the scalar increment for an integer BIOS setting.

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="608"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_TARGET_VALUE"
              value="BiosSettingTargetValue"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_TARGET_VALUE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="551">Result key to represent the value that would enable this attribute.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="558"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_TYPE"
              value="BiosSettingType"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_TYPE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="567">Result key to represent the type of BIOS setting.
0 is invalid, 1+ represent an attribute type

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="575"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BIOS_SETTING_UPPER_BOUND"
              value="BiosSettingUpperBound"
              c:type="FWUPD_RESULT_KEY_BIOS_SETTING_UPPER_BOUND">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="592">Result key to represent the lower bound for an integer BIOS setting
or maximum length for string BIOS setting.

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="600"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_BRANCH"
              value="Branch"
              c:type="FWUPD_RESULT_KEY_BRANCH">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="373">Result key to represent Branch

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="380"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_CATEGORIES"
              value="Categories"
              c:type="FWUPD_RESULT_KEY_CATEGORIES">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="117">Result key to represent Categories

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="124"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_CHECKSUM"
              value="Checksum"
              c:type="FWUPD_RESULT_KEY_CHECKSUM">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="29">Result key to represent Checksum

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_COMPOSITE_ID"
              value="CompositeId"
              c:type="FWUPD_RESULT_KEY_COMPOSITE_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="93">Result key to represent CompositeId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="100"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_CREATED"
              value="Created"
              c:type="FWUPD_RESULT_KEY_CREATED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="45">Result key to represent Created

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DESCRIPTION"
              value="Description"
              c:type="FWUPD_RESULT_KEY_DESCRIPTION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="53">Result key to represent Description

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DETACH_CAPTION"
              value="DetachCaption"
              c:type="FWUPD_RESULT_KEY_DETACH_CAPTION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="61">Result key to represent DetachCaption

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DETACH_IMAGE"
              value="DetachImage"
              c:type="FWUPD_RESULT_KEY_DETACH_IMAGE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="69">Result key to represent DetachImage

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DETAILS_URL"
              value="DetailsUrl"
              c:type="FWUPD_RESULT_KEY_DETAILS_URL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="237">Result key to represent DetailsUrl

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="244"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DEVICE_ID"
              value="DeviceId"
              c:type="FWUPD_RESULT_KEY_DEVICE_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="77">Result key to represent DeviceId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DEVICE_NAME"
              value="DeviceName"
              c:type="FWUPD_RESULT_KEY_DEVICE_NAME">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="665">Result key to represent the device name.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="672"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DISTRO_ID"
              value="DistroId"
              c:type="FWUPD_RESULT_KEY_DISTRO_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="633">Result key to represent the distribution ID.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="640"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DISTRO_VARIANT"
              value="DistroVariant"
              c:type="FWUPD_RESULT_KEY_DISTRO_VARIANT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="641">Result key to represent the distribution variant.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="648"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_DISTRO_VERSION"
              value="DistroVersion"
              c:type="FWUPD_RESULT_KEY_DISTRO_VERSION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="649">Result key to represent the distribution version.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="656"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_FILENAME"
              value="Filename"
              c:type="FWUPD_RESULT_KEY_FILENAME">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="101">Result key to represent Filename

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="108"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_FLAGS"
              value="Flags"
              c:type="FWUPD_RESULT_KEY_FLAGS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="133">Result key to represent Flags

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="140"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_FLASHES_LEFT"
              value="FlashesLeft"
              c:type="FWUPD_RESULT_KEY_FLASHES_LEFT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="149">Result key to represent FlashesLeft

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="156"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_GUID"
              value="Guid"
              c:type="FWUPD_RESULT_KEY_GUID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="213">Result key to represent Guid

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="220"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_HOMEPAGE"
              value="Homepage"
              c:type="FWUPD_RESULT_KEY_HOMEPAGE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="229">Result key to represent Homepage

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="236"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_HSI_LEVEL"
              value="HsiLevel"
              c:type="FWUPD_RESULT_KEY_HSI_LEVEL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="173">Result key to represent HsiLevel

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="180"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_HSI_RESULT"
              value="HsiResult"
              c:type="FWUPD_RESULT_KEY_HSI_RESULT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="181">Result key to represent HsiResult

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="188"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_HSI_RESULT_FALLBACK"
              value="HsiResultFallback"
              c:type="FWUPD_RESULT_KEY_HSI_RESULT_FALLBACK">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="189">Result key to represent the fallback HsiResult

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="196"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_HSI_RESULT_SUCCESS"
              value="HsiResultSuccess"
              c:type="FWUPD_RESULT_KEY_HSI_RESULT_SUCCESS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="197">Result key to represent the desired HsiResult

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="204"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_ICON"
              value="Icon"
              c:type="FWUPD_RESULT_KEY_ICON">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="253">Result key to represent Icon

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="260"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_INSTALL_DURATION"
              value="InstallDuration"
              c:type="FWUPD_RESULT_KEY_INSTALL_DURATION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="205">Result key to represent InstallDuration

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="212"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_INSTANCE_IDS"
              value="InstanceIds"
              c:type="FWUPD_RESULT_KEY_INSTANCE_IDS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="221">Result key to represent InstanceIds

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="228"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_ISSUES"
              value="Issues"
              c:type="FWUPD_RESULT_KEY_ISSUES">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="125">Result key to represent Issues

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="132"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_KERNEL_CURRENT_VALUE"
              value="KernelCurrentValue"
              c:type="FWUPD_RESULT_KEY_KERNEL_CURRENT_VALUE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="617">Result key to represent the current kernel setting.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="624"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_KERNEL_TARGET_VALUE"
              value="KernelTargetValue"
              c:type="FWUPD_RESULT_KEY_KERNEL_TARGET_VALUE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="625">Result key to represent the target kernel setting.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="632"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_LICENSE"
              value="License"
              c:type="FWUPD_RESULT_KEY_LICENSE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="261">Result key to represent License

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="268"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_LOCATIONS"
              value="Locations"
              c:type="FWUPD_RESULT_KEY_LOCATIONS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="437">Result key to represent Locations

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="444"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_METADATA"
              value="Metadata"
              c:type="FWUPD_RESULT_KEY_METADATA">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="285">Result key to represent Metadata

The D-Bus type signature string is 'a{ss}' i.e. a string dictionary.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="292"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_MODIFIED"
              value="Modified"
              c:type="FWUPD_RESULT_KEY_MODIFIED">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="269">Result key to represent Modified

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="276"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_NAME"
              value="Name"
              c:type="FWUPD_RESULT_KEY_NAME">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="293">Result key to represent Name

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="300"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_NAME_VARIANT_SUFFIX"
              value="NameVariantSuffix"
              c:type="FWUPD_RESULT_KEY_NAME_VARIANT_SUFFIX">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="301">Result key to represent NameVariantSuffix

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="308"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_PARENT_DEVICE_ID"
              value="ParentDeviceId"
              c:type="FWUPD_RESULT_KEY_PARENT_DEVICE_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="85">Result key to represent ParentDeviceId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="92"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_PERCENTAGE"
              value="Percentage"
              c:type="FWUPD_RESULT_KEY_PERCENTAGE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="357">Result key to represent progress percentage, typically installation or verification

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="364"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_PLUGIN"
              value="Plugin"
              c:type="FWUPD_RESULT_KEY_PLUGIN">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="309">Result key to represent Plugin

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="316"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_PROBLEMS"
              value="Problems"
              c:type="FWUPD_RESULT_KEY_PROBLEMS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="389">Result key to represent problems

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="396"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_PROTOCOL"
              value="Protocol"
              c:type="FWUPD_RESULT_KEY_PROTOCOL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="109">Result key to represent Protocol

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="116"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_RELEASE"
              value="Release"
              c:type="FWUPD_RESULT_KEY_RELEASE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="317">Result key to represent Release

The D-Bus type signature string is 'a{sv}' i.e. a variant dictionary.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="324"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_RELEASE_ID"
              value="ReleaseId"
              c:type="FWUPD_RESULT_KEY_RELEASE_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="21">Result key to represent the release ID.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="28"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_REMOTE_ID"
              value="RemoteId"
              c:type="FWUPD_RESULT_KEY_REMOTE_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="325">Result key to represent RemoteId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="332"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_REPORTS"
              value="Reports"
              c:type="FWUPD_RESULT_KEY_REPORTS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="657">Result key to represent an array of reports.

The D-Bus type signature string is 'a{sv}' i.e. a variant dictionary.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="664"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_REQUEST_FLAGS"
              value="RequestFlags"
              c:type="FWUPD_RESULT_KEY_REQUEST_FLAGS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="141">Result key to represent RequestFlags

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="148"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_REQUEST_KIND"
              value="RequestKind"
              c:type="FWUPD_RESULT_KEY_REQUEST_KIND">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="165">Result key to represent RequestKind

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_SERIAL"
              value="Serial"
              c:type="FWUPD_RESULT_KEY_SERIAL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="333">Result key to represent Serial

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="340"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_SIZE"
              value="Size"
              c:type="FWUPD_RESULT_KEY_SIZE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="341">Result key to represent Size

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="348"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_SOURCE_URL"
              value="SourceUrl"
              c:type="FWUPD_RESULT_KEY_SOURCE_URL">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="245">Result key to represent SourceUrl

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="252"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_STATUS"
              value="Status"
              c:type="FWUPD_RESULT_KEY_STATUS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="349">Result key to represent Status

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="356"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_SUMMARY"
              value="Summary"
              c:type="FWUPD_RESULT_KEY_SUMMARY">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="365">Result key to represent Summary

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="372"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_TAGS"
              value="Tags"
              c:type="FWUPD_RESULT_KEY_TAGS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="37">Result key to represent release tags

The D-Bus type signature string is 'as' i.e. an array of strings.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="44"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_TRUST_FLAGS"
              value="TrustFlags"
              c:type="FWUPD_RESULT_KEY_TRUST_FLAGS">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="381">Result key to represent TrustFlags

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="388"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_UPDATE_ERROR"
              value="UpdateError"
              c:type="FWUPD_RESULT_KEY_UPDATE_ERROR">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="413">Result key to represent UpdateError

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="420"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_UPDATE_IMAGE"
              value="UpdateImage"
              c:type="FWUPD_RESULT_KEY_UPDATE_IMAGE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="405">Result key to represent UpdateImage

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="412"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_UPDATE_MESSAGE"
              value="UpdateMessage"
              c:type="FWUPD_RESULT_KEY_UPDATE_MESSAGE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="397">Result key to represent UpdateMessage

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="404"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_UPDATE_STATE"
              value="UpdateState"
              c:type="FWUPD_RESULT_KEY_UPDATE_STATE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="421">Result key to represent UpdateState

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="428"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_URGENCY"
              value="Urgency"
              c:type="FWUPD_RESULT_KEY_URGENCY">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="157">Result key to represent Urgency

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="164"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_URI" value="Uri" c:type="FWUPD_RESULT_KEY_URI">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="429">Result key to represent Uri

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="436"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VENDOR"
              value="Vendor"
              c:type="FWUPD_RESULT_KEY_VENDOR">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="453">Result key to represent Vendor

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="460"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VENDOR_ID"
              value="VendorId"
              c:type="FWUPD_RESULT_KEY_VENDOR_ID">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="445">Result key to represent VendorId

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="452"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION"
              value="Version"
              c:type="FWUPD_RESULT_KEY_VERSION">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="509">Result key to represent Version

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="516"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_BOOTLOADER"
              value="VersionBootloader"
              c:type="FWUPD_RESULT_KEY_VERSION_BOOTLOADER">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="461">Result key to represent VersionBootloader

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="468"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_BOOTLOADER_RAW"
              value="VersionBootloaderRaw"
              c:type="FWUPD_RESULT_KEY_VERSION_BOOTLOADER_RAW">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="469">Result key to represent VersionBootloaderRaw

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="476"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_BUILD_DATE"
              value="VersionBuildDate"
              c:type="FWUPD_RESULT_KEY_VERSION_BUILD_DATE">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="277">Result key to represent VersionBuildDate

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="284"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_FORMAT"
              value="VersionFormat"
              c:type="FWUPD_RESULT_KEY_VERSION_FORMAT">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="477">Result key to represent VersionFormat

The D-Bus type signature string is 'u' i.e. a unsigned 32 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="484"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_LOWEST"
              value="VersionLowest"
              c:type="FWUPD_RESULT_KEY_VERSION_LOWEST">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="493">Result key to represent VersionLowest

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="500"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_LOWEST_RAW"
              value="VersionLowestRaw"
              c:type="FWUPD_RESULT_KEY_VERSION_LOWEST_RAW">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="501">Result key to represent VersionLowestRaw

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="508"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_OLD"
              value="VersionOld"
              c:type="FWUPD_RESULT_KEY_VERSION_OLD">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="517">Result key to represent the old version string.

The D-Bus type signature string is 's' i.e. a string.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="524"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="RESULT_KEY_VERSION_RAW"
              value="VersionRaw"
              c:type="FWUPD_RESULT_KEY_VERSION_RAW">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums-private.h"
           line="485">Result key to represent VersionRaw

The D-Bus type signature string is 't' i.e. a unsigned 64 bit integer.</doc>
      <source-position filename="libfwupd/fwupd-enums-private.h" line="492"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Release"
           c:symbol-prefix="release"
           c:type="FwupdRelease"
           parent="GObject.Object"
           glib:type-name="FwupdRelease"
           glib:get-type="fwupd_release_get_type"
           glib:type-struct="ReleaseClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-release.c"
           line="18">A firmware release with a specific version.

Devices can have more than one release, and the releases are typically
ordered by their version.

See also: [class@FwupdDevice]</doc>
      <source-position filename="libfwupd/fwupd-release.h" line="27"/>
      <constructor name="new" c:identifier="fwupd_release_new" version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2540">Creates a new release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="30"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2545">a new #FwupdRelease</doc>
          <type name="Release" c:type="FwupdRelease*"/>
        </return-value>
      </constructor>
      <function name="array_filter_flags"
                c:identifier="fwupd_release_array_filter_flags"
                version="1.9.3"
                throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2502">Creates an array of new releases that match using fwupd_release_match_flags().</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="204"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2511">releases</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="rels" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2504">releases</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="Release"/>
            </array>
          </parameter>
          <parameter name="include" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2505">#FwupdReleaseFlags, or %FWUPD_RELEASE_FLAG_NONE</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
          <parameter name="exclude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2506">#FwupdReleaseFlags, or %FWUPD_RELEASE_FLAG_NONE</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="array_from_variant"
                c:identifier="fwupd_release_array_from_variant"
                version="1.2.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2414">Creates an array of new releases using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="212"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2420">releases, or %NULL if @value was
invalid</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Release"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2416">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_from_string"
                c:identifier="fwupd_release_flag_from_string"
                version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="810">Converts a string to an enumerated release flag.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="816">enumerated value</doc>
          <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
        </return-value>
        <parameters>
          <parameter name="release_flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="812">a string, e.g. `trusted-payload`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_release_flag_to_string"
                version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="774">Converts an enumerated release flag to a string.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="780">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="release_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="776">a release flag, e.g. %FWUPD_RELEASE_FLAG_TRUSTED_PAYLOAD</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_release_from_variant"
                version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2379">Creates a new release using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="210"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2385">a new #FwupdRelease, or %NULL if @value was invalid</doc>
          <type name="Release" c:type="FwupdRelease*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2381">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="urgency_from_string"
                c:identifier="fwupd_release_urgency_from_string"
                version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="868">Converts a string to an enumerated release urgency value.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="874">enumerated value</doc>
          <type name="ReleaseUrgency" c:type="FwupdReleaseUrgency"/>
        </return-value>
        <parameters>
          <parameter name="release_urgency"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="870">a string, e.g. `low`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="urgency_to_string"
                c:identifier="fwupd_release_urgency_to_string"
                version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="844">Converts an enumerated release urgency to a string.</doc>
        <source-position filename="libfwupd/fwupd-enums.h" line="1162"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="850">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="release_urgency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-enums.c"
                 line="846">a release urgency, e.g. %FWUPD_RELEASE_URGENCY_HIGH</doc>
            <type name="ReleaseUrgency" c:type="FwupdReleaseUrgency"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_category"
              c:identifier="fwupd_release_add_category"
              version="1.2.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="382">Adds the update category.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="384">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="385">the update category, e.g. `X-EmbeddedController`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_checksum"
              c:identifier="fwupd_release_add_checksum"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="448">Sets the update checksum.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="450">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="checksum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="451">the update container checksum</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_flag"
              c:identifier="fwupd_release_add_flag"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1448">Adds a specific release flag to the release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1450">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1451">the #FwupdReleaseFlags</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_issue"
              c:identifier="fwupd_release_add_issue"
              version="1.3.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="341">Adds an resolved issue to this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="343">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="issue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="344">the update issue, e.g. `CVE-2019-12345`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_location"
              c:identifier="fwupd_release_add_location"
              version="1.5.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="708">Adds an update URI, i.e. where you can download the firmware from.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="710">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="711">the update URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_metadata"
              c:identifier="fwupd_release_add_metadata"
              version="1.0.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="600">Sets multiple release metadata items.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="602">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="hash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="603">the key-values</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="add_metadata_item"
              c:identifier="fwupd_release_add_metadata_item"
              version="1.0.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="580">Sets a release metadata item.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="582">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="583">the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="584">the value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_report"
              c:identifier="fwupd_release_add_report"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1572">Adds a report for this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="198"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1574">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="report" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1575">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_tag"
              c:identifier="fwupd_release_add_tag"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="514">Adds a specific release tag.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="516">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="517">the update tag, e.g. `vendor-factory-2021q1`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_appstream_id"
              c:identifier="fwupd_release_get_appstream_id"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="895">Gets the AppStream ID.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="901">the AppStream ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="897">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_branch"
              c:identifier="fwupd_release_get_branch"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1170">Gets the update branch.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1176">the alternate branch, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1172">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_categories"
              c:identifier="fwupd_release_get_categories"
              version="1.2.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="364">Gets the release categories.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="370">the categories, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="366">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksums"
              c:identifier="fwupd_release_get_checksums"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="430">Gets the release container checksums.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="436">the checksums, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="432">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_created"
              c:identifier="fwupd_release_get_created"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1094">Gets when the update was created.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1100">UTC timestamp in UNIX format, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1096">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="fwupd_release_get_description"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="854">Gets the update description in AppStream markup format.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="860">the update description, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="856">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_detach_caption"
              c:identifier="fwupd_release_get_detach_caption"
              version="1.3.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="977">Gets the optional text caption used to manually detach the device.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="983">the string caption, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="979">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_detach_image"
              c:identifier="fwupd_release_get_detach_image"
              version="1.3.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1018">Gets the optional image used to manually detach the device.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1024">the URI, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1020">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_details_url"
              c:identifier="fwupd_release_get_details_url"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="772">Gets the URL for the online update notes.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="778">the update URL, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="774">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename"
              c:identifier="fwupd_release_get_filename"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="159">Gets the update filename.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="165">the update filename, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="161">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_release_get_flags"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1413">Gets the release flags.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1419">release flags, or 0 if unset</doc>
          <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1415">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_homepage"
              c:identifier="fwupd_release_get_homepage"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="731">Gets the update homepage.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="737">the update homepage, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="733">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="fwupd_release_get_id"
              version="1.7.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="936">Gets the release ID, which allows identifying the specific uploaded component.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="942">the ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="938">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_duration"
              c:identifier="fwupd_release_get_install_duration"
              version="1.2.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1536">Gets the time estimate for firmware installation (in seconds)</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="183"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1542">the estimated time to flash this release (or 0 if unset)</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1538">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_issues"
              c:identifier="fwupd_release_get_issues"
              version="1.3.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="323">Gets the list of issues fixed in this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="329">the issues, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="325">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_license"
              c:identifier="fwupd_release_get_license"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1252">Gets the update license.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1258">the update license, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1254">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locations"
              c:identifier="fwupd_release_get_locations"
              version="1.5.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="687">Gets the update URI, i.e. where you can download the firmware from.

Typically the first URI will be the main HTTP mirror, but all URIs may not
be valid HTTP URIs. For example, "ipns://QmSrPmba" is valid here.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="696">the URIs</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="689">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="fwupd_release_get_metadata"
              version="1.0.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="562">Gets the release metadata.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="568">the metadata, which may be empty</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="564">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_item"
              c:identifier="fwupd_release_get_metadata_item"
              version="1.0.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="627">Gets a release metadata item.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="634">the value, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="629">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="630">the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="fwupd_release_get_name"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1293">Gets the update name.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1299">the update name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1295">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name_variant_suffix"
              c:identifier="fwupd_release_get_name_variant_suffix"
              version="1.3.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1334">Gets the update variant suffix.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1340">the update variant, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1336">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_protocol"
              c:identifier="fwupd_release_get_protocol"
              version="1.2.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="282">Gets the update protocol.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="288">the update protocol, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="284">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remote_id"
              c:identifier="fwupd_release_get_remote_id"
              glib:get-property="remote-id"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="76">Gets the remote ID that can be used for downloading.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="82">the ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="78">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reports"
              c:identifier="fwupd_release_get_reports"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1554">Gets all the reports for this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1560">array of reports</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Report"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1556">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="fwupd_release_get_size"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1059">Gets the update size.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1065">the update size in bytes, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1061">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_url"
              c:identifier="fwupd_release_get_source_url"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="813">Gets the URL of the source code used to build this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="819">the update source_url, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="815">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="fwupd_release_get_summary"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1129">Gets the update summary.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1135">the update summary, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1131">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tags"
              c:identifier="fwupd_release_get_tags"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="496">Gets the release tags.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="502">the tags, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="498">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_trust_flags"
              c:identifier="fwupd_release_get_trust_flags"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1375">Gets the trust level of the release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1381">the trust bitfield, e.g. #FWUPD_TRUST_FLAG_PAYLOAD</doc>
          <type name="TrustFlags" c:type="FwupdTrustFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1377">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_image"
              c:identifier="fwupd_release_get_update_image"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="241">Gets the update image.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="247">the update image URL, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="243">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_message"
              c:identifier="fwupd_release_get_update_message"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="200">Gets the update message.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="206">the update message, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="202">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_urgency"
              c:identifier="fwupd_release_get_urgency"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1501">Gets the release urgency.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1507">the release urgency, or 0 if unset</doc>
          <type name="ReleaseUrgency" c:type="FwupdReleaseUrgency"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1503">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri"
              c:identifier="fwupd_release_get_uri"
              version="0.9.3"
              deprecated="1"
              deprecated-version="1.5.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="647">Gets the default update URI.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_release_get_locations() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-release.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="653">the update URI, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="649">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor"
              c:identifier="fwupd_release_get_vendor"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1211">Gets the update vendor.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1217">the update vendor, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1213">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="fwupd_release_get_version"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="118">Gets the update version.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="124">the update version, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="120">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_category"
              c:identifier="fwupd_release_has_category"
              version="1.2.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="405">Finds out if the release has the update category.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="412">%TRUE if the release matches</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="407">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="408">the update category, e.g. `X-EmbeddedController`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_checksum"
              c:identifier="fwupd_release_has_checksum"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="471">Finds out if the release has the update container checksum.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="478">%TRUE if the release matches</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="473">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="checksum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="474">the update checksum</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_release_has_flag"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1482">Finds if the release has a specific release flag.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1489">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1484">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1485">the #FwupdReleaseFlags</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_tag"
              c:identifier="fwupd_release_has_tag"
              version="1.7.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="537">Finds out if the release has a specific tag.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="544">%TRUE if the release matches</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="539">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="540">the update tag, e.g. `vendor-factory-2021q1`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="incorporate"
              c:identifier="fwupd_release_incorporate"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2449">Copy all properties from the donor object.</doc>
        <source-position filename="libfwupd/fwupd-release-private.h"
                         line="21"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2451">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="donor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2452">another #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </parameter>
        </parameters>
      </method>
      <method name="match_flags"
              c:identifier="fwupd_release_match_flags"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2472">Check if the release flags match.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2479">%TRUE if the release flags match</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="include" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2474">#FwupdReleaseFlags, or %FWUPD_RELEASE_FLAG_NONE</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
          <parameter name="exclude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2475">#FwupdReleaseFlags, or %FWUPD_RELEASE_FLAG_NONE</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_release_remove_flag"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1465">Removes a specific release flag from the release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1467">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1468">the #FwupdReleaseFlags</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_appstream_id"
              c:identifier="fwupd_release_set_appstream_id"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="913">Sets the AppStream ID.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="915">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="appstream_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="916">the AppStream component ID, e.g. `org.hughski.ColorHug2.firmware`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_branch"
              c:identifier="fwupd_release_set_branch"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1188">Sets the alternate branch.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1190">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="branch"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1191">the update one line branch</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_created"
              c:identifier="fwupd_release_set_created"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1112">Sets when the update was created.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1114">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="created" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1115">UTC timestamp in UNIX format</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="fwupd_release_set_description"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="872">Sets the update description.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="874">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="875">the update description in AppStream markup format</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_detach_caption"
              c:identifier="fwupd_release_set_detach_caption"
              version="1.3.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="995">Sets the optional text caption used to manually detach the device.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="997">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="detach_caption"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="998">string caption</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_detach_image"
              c:identifier="fwupd_release_set_detach_image"
              version="1.3.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1036">Sets the optional image used to manually detach the device.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1038">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="detach_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1039">a fully qualified URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_details_url"
              c:identifier="fwupd_release_set_details_url"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="790">Sets the URL for the online update notes.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="792">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="details_url"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="793">the URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filename"
              c:identifier="fwupd_release_set_filename"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="177">Sets the update filename.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="179">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="filename"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="180">the update filename on disk</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_release_set_flags"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1431">Sets the release flags.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1433">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1434">release flags, e.g. %FWUPD_RELEASE_FLAG_TRUSTED_PAYLOAD</doc>
            <type name="ReleaseFlags" c:type="FwupdReleaseFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homepage"
              c:identifier="fwupd_release_set_homepage"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="749">Sets the update homepage URL.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="751">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="homepage"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="752">the URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="fwupd_release_set_id"
              version="1.7.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="954">Sets the ID, which allows identifying the specific uploaded component.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="956">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="957">the AppStream component ID, e.g. `component:1234`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_install_duration"
              c:identifier="fwupd_release_set_install_duration"
              version="1.2.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1590">Sets the time estimate for firmware installation (in seconds)</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1592">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1593">amount of time in seconds</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_license"
              c:identifier="fwupd_release_set_license"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1270">Sets the update license.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1272">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="license"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1273">the update license.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="fwupd_release_set_name"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1311">Sets the update name.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1313">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1314">the update name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name_variant_suffix"
              c:identifier="fwupd_release_set_name_variant_suffix"
              version="1.3.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1352">Sets the update variant suffix.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1354">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="name_variant_suffix"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1355">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_protocol"
              c:identifier="fwupd_release_set_protocol"
              version="1.2.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="300">Sets the update protocol.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="302">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="protocol"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="303">the update protocol, e.g. `org.usb.dfu`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_remote_id"
              c:identifier="fwupd_release_set_remote_id"
              glib:set-property="remote-id"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="94">Sets the remote ID that can be used for downloading.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="96">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="remote_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="97">the release ID, e.g. `USB:foo`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="fwupd_release_set_size"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1077">Sets the update size.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1079">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1080">the update size in bytes</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_url"
              c:identifier="fwupd_release_set_source_url"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="831">Sets the URL of the source code used to build this release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="833">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="source_url"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="834">the URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="fwupd_release_set_summary"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1147">Sets the update summary.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1149">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="summary"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1150">the update one line summary</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trust_flags"
              c:identifier="fwupd_release_set_trust_flags"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1393">Sets the trust level of the release.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1395">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="trust_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1396">the bitfield, e.g. #FWUPD_TRUST_FLAG_PAYLOAD</doc>
            <type name="TrustFlags" c:type="FwupdTrustFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_image"
              c:identifier="fwupd_release_set_update_image"
              version="1.4.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="259">Sets the update image.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="261">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="update_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="262">the update image URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update_message"
              c:identifier="fwupd_release_set_update_message"
              version="1.2.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="218">Sets the update message.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="220">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="update_message"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="221">the update message string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_urgency"
              c:identifier="fwupd_release_set_urgency"
              version="1.4.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1519">Sets the release urgency.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="181"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1521">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="urgency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1522">the release urgency, e.g. %FWUPD_RELEASE_FLAG_TRUSTED_PAYLOAD</doc>
            <type name="ReleaseUrgency" c:type="FwupdReleaseUrgency"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri"
              c:identifier="fwupd_release_set_uri"
              version="0.9.3"
              deprecated="1"
              deprecated-version="1.5.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="668">Sets the update URI, i.e. where you can download the firmware from.</doc>
        <doc-deprecated xml:space="preserve">Use fwupd_release_add_location() instead.</doc-deprecated>
        <source-position filename="libfwupd/fwupd-release.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="670">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="671">the update URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor"
              c:identifier="fwupd_release_set_vendor"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1229">Sets the update vendor.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1231">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="vendor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1232">the vendor name, e.g. `Hughski Limited`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version"
              c:identifier="fwupd_release_set_version"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="136">Sets the update version.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="138">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="version"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="139">the update version, e.g. `1.2.4`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_release_to_json"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2038">Adds a fwupd release to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-release-private.h"
                         line="19"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2040">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2041">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_release_to_string"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2175">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-release.h" line="32"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="2181">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="2177">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_release_to_variant"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="1607">Serialize the release data.</doc>
        <source-position filename="libfwupd/fwupd-release-private.h"
                         line="17"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-release.c"
               line="1613">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-release.c"
                 line="1609">a #FwupdRelease</doc>
            <type name="Release" c:type="FwupdRelease*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="remote-id"
                version="1.8.0"
                writable="1"
                transfer-ownership="none"
                setter="set_remote_id"
                getter="get_remote_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-release.c"
             line="2303">The remote ID.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ReleaseClass"
            c:type="FwupdReleaseClass"
            glib:is-gtype-struct-for="Release">
      <source-position filename="libfwupd/fwupd-release.h" line="27"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-release.h" line="20"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-release.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-release.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-release.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-release.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-release.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-release.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ReleaseUrgency" c:type="FwupdReleaseUrgency">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="792">The release urgency.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="810"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_RELEASE_URGENCY_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="794">Unknown</doc>
      </member>
      <member name="low" value="1" c:identifier="FWUPD_RELEASE_URGENCY_LOW">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="795">Low</doc>
      </member>
      <member name="medium"
              value="2"
              c:identifier="FWUPD_RELEASE_URGENCY_MEDIUM">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="796">Medium</doc>
      </member>
      <member name="high" value="3" c:identifier="FWUPD_RELEASE_URGENCY_HIGH">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="797">High</doc>
      </member>
      <member name="critical"
              value="4"
              c:identifier="FWUPD_RELEASE_URGENCY_CRITICAL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="798">Critical, e.g. a security fix</doc>
      </member>
    </enumeration>
    <class name="Remote"
           c:symbol-prefix="remote"
           c:type="FwupdRemote"
           parent="GObject.Object"
           glib:type-name="FwupdRemote"
           glib:get-type="fwupd_remote_get_type"
           glib:type-struct="RemoteClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-remote.c"
           line="19">A source of metadata that provides firmware.

Remotes can be local (e.g. folders on a disk) or remote (e.g. downloaded
over HTTP or IPFS).

See also: [class@FwupdClient]</doc>
      <source-position filename="libfwupd/fwupd-remote.h" line="28"/>
      <constructor name="new" c:identifier="fwupd_remote_new" version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2381">Creates a new fwupd remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="2386">a new #FwupdRemote</doc>
          <type name="Remote" c:type="FwupdRemote*"/>
        </return-value>
      </constructor>
      <function name="array_from_variant"
                c:identifier="fwupd_remote_array_from_variant"
                version="1.2.10">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2350">Creates an array of new devices using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="169"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="2356">remotes, or %NULL if @value was invalid</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Remote"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="2352">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_from_string"
                c:identifier="fwupd_remote_flag_from_string"
                version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="112">Converts a string to an enumerated flag.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="118">enumerated value</doc>
          <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
        </return-value>
        <parameters>
          <parameter name="flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="114">a string, e.g. `enabled`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_remote_flag_to_string"
                version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="82">Returns the printable string for the flag.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="88">string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="84">remote attribute flags, e.g. %FWUPD_REMOTE_FLAG_ENABLED</doc>
            <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_remote_from_variant"
                version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2315">Creates a new remote using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="167"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="2321">a new #FwupdRemote, or %NULL if @value was invalid</doc>
          <type name="Remote" c:type="FwupdRemote*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="2317">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="kind_from_string"
                c:identifier="fwupd_remote_kind_from_string"
                version="0.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="679">Converts an printable string to an enumerated type.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="685">a #FwupdRemoteKind, e.g. %FWUPD_REMOTE_KIND_DOWNLOAD</doc>
          <type name="RemoteKind" c:type="FwupdRemoteKind"/>
        </return-value>
        <parameters>
          <parameter name="kind"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="681">a string, e.g. `download`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="kind_to_string"
                c:identifier="fwupd_remote_kind_to_string"
                version="0.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="701">Converts an enumerated type to a printable string.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="707">a string, e.g. `download`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="703">a #FwupdRemoteKind, e.g. %FWUPD_REMOTE_KIND_DOWNLOAD</doc>
            <type name="RemoteKind" c:type="FwupdRemoteKind"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_flag"
              c:identifier="fwupd_remote_add_flag"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="244">Adds a specific attribute flag to the attribute.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="246">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="247">the #FwupdRemoteFlags, e.g. %FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED</doc>
            <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_firmware_uri"
              c:identifier="fwupd_remote_build_firmware_uri"
              version="0.9.7"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1458">Builds a URI for the URL using the username and password set for the remote,
including any basename URI substitution.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="151"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1467">a URI, or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1460">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1461">the URL to use</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="build_metadata_sig_uri"
              c:identifier="fwupd_remote_build_metadata_sig_uri"
              version="1.9.8"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1501">Builds a URI for the metadata using the username and password set for the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="62"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1508">a URI, or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1503">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="build_metadata_uri"
              c:identifier="fwupd_remote_build_metadata_uri"
              version="1.9.8"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1521">Builds a URI for the metadata signature using the username and password set for the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1528">a URI, or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1523">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="build_report_uri"
              c:identifier="fwupd_remote_build_report_uri"
              version="1.9.1"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1481">Builds a URI for the URL using the username and password set for the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="155"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1488">a URI, or %NULL for error</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1483">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_age"
              c:identifier="fwupd_remote_get_age"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1235">Gets the age of the remote in seconds.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1241">a age, or %G_MAXUINT64 for unavailable</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1237">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_agreement"
              c:identifier="fwupd_remote_get_agreement"
              version="1.0.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1386">Gets the remote agreement in AppStream markup format</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1392">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1388">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_approval_required"
              c:identifier="fwupd_remote_get_approval_required"
              glib:get-property="approval-required"
              version="1.2.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1845">Gets if firmware from the remote should be checked against the list
of a approved checksums.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1852">a #TRUE if the remote is restricted</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1847">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_automatic_reports"
              c:identifier="fwupd_remote_get_automatic_reports"
              glib:get-property="automatic-reports"
              version="1.3.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1788">Gets if reports should be automatically uploaded to this remote</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1794">a #TRUE if the remote should have reports uploaded automatically</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1790">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_automatic_security_reports"
              c:identifier="fwupd_remote_get_automatic_security_reports"
              glib:get-property="automatic-security-reports"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1805">Gets if security reports should be automatically uploaded to this remote</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1811">a #TRUE if the remote should have reports uploaded automatically</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1807">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksum"
              c:identifier="fwupd_remote_get_checksum"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1422">Gets the remote signature checksum.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1428">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1424">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_checksum_metadata"
              c:identifier="fwupd_remote_get_checksum_metadata"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1440">Gets the remote metadata checksum.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1446">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1442">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="fwupd_remote_get_enabled"
              glib:get-property="enabled"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1752">Gets if the remote is enabled and should be used.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1758">a #TRUE if the remote is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1754">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename_cache"
              c:identifier="fwupd_remote_get_filename_cache"
              version="0.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1127">Gets the path and filename that the remote is using for a cache.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1133">a string, or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1129">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename_cache_sig"
              c:identifier="fwupd_remote_get_filename_cache_sig"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1145">Gets the path and filename that the remote is using for a signature cache.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1151">a string, or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1147">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_filename_source"
              c:identifier="fwupd_remote_get_filename_source"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1163">Gets the path and filename of the remote itself, typically a `.conf` file.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1169">a string, or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1165">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_firmware_base_uri"
              c:identifier="fwupd_remote_get_firmware_base_uri"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1734">Gets the base URI for firmware.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1740">a URI, or %NULL for unset.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1736">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_remote_get_flags"
              glib:get-property="flags"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="206">Gets the self flags.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="212">remote attribute flags, or 0 if unset</doc>
          <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="208">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="fwupd_remote_get_id"
              glib:get-property="id"
              version="0.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1863">Gets the remote ID, e.g. `lvfs-testing`.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1869">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1865">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keyring_kind"
              c:identifier="fwupd_remote_get_keyring_kind"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1217">Gets the keyring kind of the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1223">a #FwupdKeyringKind, e.g. #FWUPD_KEYRING_KIND_GPG</doc>
          <type name="KeyringKind" c:type="FwupdKeyringKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1219">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="fwupd_remote_get_kind"
              version="0.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1199">Gets the kind of the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1205">a #FwupdRemoteKind, e.g. #FWUPD_REMOTE_KIND_LOCAL</doc>
          <type name="RemoteKind" c:type="FwupdRemoteKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1201">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_uri"
              c:identifier="fwupd_remote_get_metadata_uri"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1577">Gets the URI for the remote metadata.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1583">a URI, or %NULL for invalid.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1579">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_uri_sig"
              c:identifier="fwupd_remote_get_metadata_uri_sig"
              version="0.9.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1716">Gets the URI for the remote metadata signature.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1722">a URI, or %NULL for invalid.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1718">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_order_after"
              c:identifier="fwupd_remote_get_order_after"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1091">Gets the list of remotes this plugin should be ordered after.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1097">an array</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1093">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_order_before"
              c:identifier="fwupd_remote_get_order_before"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1109">Gets the list of remotes this plugin should be ordered before.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1115">an array</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1111">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_password"
              c:identifier="fwupd_remote_get_password"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1350">Gets the password configured for the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1356">a string, or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1352">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_priority"
              c:identifier="fwupd_remote_get_priority"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1181">Gets the priority of the remote, where bigger numbers are better.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1187">a priority, or 0 for the default value</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1183">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_interval"
              c:identifier="fwupd_remote_get_refresh_interval"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1314">Sets the plugin refresh interval in seconds.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1320">value in seconds</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1316">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remotes_dir"
              c:identifier="fwupd_remote_get_remotes_dir"
              version="1.3.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1404">Gets the base directory for storing remote metadata</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1410">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1406">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_report_uri"
              c:identifier="fwupd_remote_get_report_uri"
              version="1.0.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1541">Gets the URI for the remote reporting.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1547">a URI, or %NULL for invalid.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1543">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_security_report_uri"
              c:identifier="fwupd_remote_get_security_report_uri"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1559">Gets the URI for the security report.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1565">a URI, or %NULL for invalid.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1561">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="fwupd_remote_get_title"
              version="0.9.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1368">Gets the remote title, e.g. `Linux Vendor Firmware Service`.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1374">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1370">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_username"
              c:identifier="fwupd_remote_get_username"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1332">Gets the username configured for the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1338">a string, or %NULL for unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1334">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_remote_has_flag"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="280">Finds if the remote has a specific flag.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="287">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="282">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="283">the remote flag, e.g. %FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED</doc>
            <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_from_filename"
              c:identifier="fwupd_remote_load_from_filename"
              version="0.9.3"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="873">Loads metadata about the remote from a keyfile.
This can be called zero or multiple times for each remote.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="19"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="883">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="875">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="876">a filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="877">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_signature"
              c:identifier="fwupd_remote_load_signature"
              version="1.4.0"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1687">Parses the signature, updating the metadata URI as appropriate.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1695">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1689">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1690">a filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_signature_bytes"
              c:identifier="fwupd_remote_load_signature_bytes"
              version="1.4.5"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1646">Parses the signature, updating the metadata URI as appropriate.

This can only be called for remotes with `Keyring=jcat` which is
the default for most remotes.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="162"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1657">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1648">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1649">data blob</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
        </parameters>
      </method>
      <method name="needs_refresh"
              c:identifier="fwupd_remote_needs_refresh"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1822">Gets if the metadata remote needs re-downloading.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1828">a #TRUE if the remote contents are considered old</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1824">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_remote_remove_flag"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="262">Removes a specific attribute flag from the remote.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="264">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="265">the #FwupdRemoteFlags, e.g. %FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED</doc>
            <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_to_filename"
              c:identifier="fwupd_remote_save_to_filename"
              version="1.8.13"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1019">Saves metadata about the remote to a keyfile.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="24"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1028">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1021">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1022">a filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1023">optional #GCancellable</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_agreement"
              c:identifier="fwupd_remote_set_agreement"
              version="1.0.7">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="344">Sets the remote agreement in AppStream markup format</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="346">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="agreement"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="347">agreement markup text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_checksum"
              c:identifier="fwupd_remote_set_checksum"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="368">Sets the remote signature checksum, typically only useful in the self tests.

NOTE: This should have been called fwupd_remote_set_checksum_sig() but alas, ABI.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="370">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="checksum_sig"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="371">checksum string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="fwupd_remote_set_enabled"
              glib:set-property="enabled"
              version="1.8.13">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1769">Sets if the remote is enabled and should be used.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1771">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1772">boolean</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filename_cache"
              c:identifier="fwupd_remote_set_filename_cache"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="723">Sets the remote filename cache filename, typically only useful in the self tests.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="725">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="filename"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="726">filename string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filename_source"
              c:identifier="fwupd_remote_set_filename_source"
              version="1.6.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="471">Sets the source filename. This is typically a file in `/etc/fwupd/remotes/`.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="473">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="filename_source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="474">filename</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_remote_set_flags"
              glib:set-property="flags"
              version="1.9.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="224">Sets the attribute flags.</doc>
        <source-position filename="libfwupd/fwupd-remote.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="226">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="227">remote attribute flags, e.g. %FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED</doc>
            <type name="RemoteFlags" c:type="FwupdRemoteFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="fwupd_remote_set_id"
              glib:set-property="id"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="446">Sets the remote title.

NOTE: the ID has to be set before the URL.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="448">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="449">remote ID, e.g. "lvfs"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keyring_kind"
              c:identifier="fwupd_remote_set_keyring_kind"
              version="1.5.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="429">Sets the keyring kind</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="431">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="keyring_kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="432">keyring kind e.g. #FWUPD_KEYRING_KIND_PKCS7</doc>
            <type name="KeyringKind" c:type="FwupdKeyringKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_metadata_uri"
              c:identifier="fwupd_remote_set_metadata_uri"
              version="1.8.13">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="602">Sets the remote metadata URI.

NOTE: This has to be set before the username and password.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="604">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="metadata_uri"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="605">metadata URI</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mtime"
              c:identifier="fwupd_remote_set_mtime"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1297">Sets the plugin modification time.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1299">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="mtime" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1300">a UNIX timestamp</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority"
              c:identifier="fwupd_remote_set_priority"
              version="0.9.5">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1280">Sets the plugin priority.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1282">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="priority" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1283">an integer, where 1 is better</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_remotes_dir"
              c:identifier="fwupd_remote_set_remotes_dir"
              version="1.3.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1257">Sets the directory to store remote data</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1259">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="directory"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1260">Remotes directory</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="fwupd_remote_set_title"
              version="1.8.13">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="320">Sets the remote title.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="322">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="323">title text, e.g. "Backup"</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="setup"
              c:identifier="fwupd_remote_setup"
              version="1.6.1"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="773">Sets up the remote ready for use, checking that required parameters have
been set. Calling this method multiple times has no effect.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="781">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="775">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_remote_to_json"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="140">Adds a fwupd remote to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="142">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="143">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_remote_to_variant"
              version="1.0.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="1951">Serialize the remote data.</doc>
        <source-position filename="libfwupd/fwupd-remote-private.h" line="17"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-remote.c"
               line="1957">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-remote.c"
                 line="1953">a #FwupdRemote</doc>
            <type name="Remote" c:type="FwupdRemote*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="approval-required"
                version="1.2.6"
                writable="1"
                transfer-ownership="none"
                getter="get_approval_required"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2220">If firmware from the remote should be checked against the system
list of approved firmware.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="automatic-reports"
                version="1.3.3"
                writable="1"
                transfer-ownership="none"
                getter="get_automatic_reports"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2235">The behavior for auto-uploading reports.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="automatic-security-reports"
                version="1.5.0"
                writable="1"
                transfer-ownership="none"
                getter="get_automatic_security_reports"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2249">The behavior for auto-uploading security reports.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="enabled"
                version="0.9.3"
                writable="1"
                transfer-ownership="none"
                setter="set_enabled"
                getter="get_enabled"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2206">If the remote is enabled and should be used.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="flags"
                version="1.9.4"
                writable="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2263">The remote flags.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="id"
                version="0.9.3"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.c"
             line="2195">The remote ID.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RemoteClass"
            c:type="FwupdRemoteClass"
            glib:is-gtype-struct-for="Remote">
      <source-position filename="libfwupd/fwupd-remote.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-remote.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-remote.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-remote.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-remote.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-remote.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-remote.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-remote.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="RemoteFlags" c:type="FwupdRemoteFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-remote.h"
           line="48">The flags available for the remote.</doc>
      <source-position filename="libfwupd/fwupd-remote.h" line="68"/>
      <member name="none" value="0" c:identifier="FWUPD_REMOTE_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="50">No flags set</doc>
      </member>
      <member name="enabled"
              value="1"
              c:identifier="FWUPD_REMOTE_FLAG_ENABLED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="51">Is enabled</doc>
      </member>
      <member name="approval_required"
              value="2"
              c:identifier="FWUPD_REMOTE_FLAG_APPROVAL_REQUIRED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="52">Requires approval for each firmware</doc>
      </member>
      <member name="automatic_reports"
              value="4"
              c:identifier="FWUPD_REMOTE_FLAG_AUTOMATIC_REPORTS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="53">Send firmware reports automatically</doc>
      </member>
      <member name="automatic_security_reports"
              value="8"
              c:identifier="FWUPD_REMOTE_FLAG_AUTOMATIC_SECURITY_REPORTS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="54">Send security reports automatically</doc>
      </member>
      <member name="allow_p2p_metadata"
              value="16"
              c:identifier="FWUPD_REMOTE_FLAG_ALLOW_P2P_METADATA">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="55">Use peer-to-peer locations for metadata</doc>
      </member>
      <member name="allow_p2p_firmware"
              value="32"
              c:identifier="FWUPD_REMOTE_FLAG_ALLOW_P2P_FIRMWARE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="56">Use peer-to-peer locations for firmware</doc>
      </member>
    </bitfield>
    <enumeration name="RemoteKind" c:type="FwupdRemoteKind">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-remote.h"
           line="30">The kind of remote.</doc>
      <source-position filename="libfwupd/fwupd-remote.h" line="46"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_REMOTE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="32">Unknown kind</doc>
      </member>
      <member name="download"
              value="1"
              c:identifier="FWUPD_REMOTE_KIND_DOWNLOAD">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="33">Requires files to be downloaded</doc>
      </member>
      <member name="local" value="2" c:identifier="FWUPD_REMOTE_KIND_LOCAL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="34">Reads files from the local machine</doc>
      </member>
      <member name="directory"
              value="3"
              c:identifier="FWUPD_REMOTE_KIND_DIRECTORY">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-remote.h"
             line="35">Reads directory from the local machine</doc>
      </member>
    </enumeration>
    <class name="Report"
           c:symbol-prefix="report"
           c:type="FwupdReport"
           parent="GObject.Object"
           glib:type-name="FwupdReport"
           glib:get-type="fwupd_report_get_type"
           glib:type-struct="ReportClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-report.c"
           line="17">A firmware report from a vendor.

This is the LVFS formatted report that the fwupd user consumes, NOT the thing that gets uploaded.

See also: [class@FwupdRelease]</doc>
      <source-position filename="libfwupd/fwupd-report.h" line="26"/>
      <constructor name="new" c:identifier="fwupd_report_new" version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="985">Creates a new report.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="990">a new #FwupdReport</doc>
          <type name="Report" c:type="FwupdReport*"/>
        </return-value>
      </constructor>
      <function name="flag_from_string"
                c:identifier="fwupd_report_flag_from_string"
                version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="838">Converts a string to an enumerated report flag.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="844">enumerated value</doc>
          <type name="ReportFlags" c:type="FwupdReportFlags"/>
        </return-value>
        <parameters>
          <parameter name="report_flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="840">a string, e.g. `from-oem`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_report_flag_to_string"
                version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="816">Converts an enumerated report flag to a string.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="822">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="report_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="818">report flags, e.g. %FWUPD_REPORT_FLAG_FROM_OEM</doc>
            <type name="ReportFlags" c:type="FwupdReportFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_report_from_variant"
                version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="952">Creates a new report using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="124"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="958">a new #FwupdReport, or %NULL if @value was invalid</doc>
          <type name="Report" c:type="FwupdReport*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="954">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_flag"
              c:identifier="fwupd_report_add_flag"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="753">Adds a specific report flag to the report.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="755">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="756">the #FwupdReportFlags</doc>
            <type name="ReportFlags" c:type="FwupdReportFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_metadata_item"
              c:identifier="fwupd_report_add_metadata_item"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="423">Sets a report metadata item.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="425">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="426">the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="427">the value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_created"
              c:identifier="fwupd_report_get_created"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="46">Gets when the report was created.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="52">UTC timestamp in UNIX format, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="48">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_name"
              c:identifier="fwupd_report_get_device_name"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="200">Gets the name of the device the update was performed on.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="206">the name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="202">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distro_id"
              c:identifier="fwupd_report_get_distro_id"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="241">Gets the distribution name.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="247">the name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="243">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distro_variant"
              c:identifier="fwupd_report_get_distro_variant"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="282">Gets the distribution variant.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="288">variant, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="284">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distro_version"
              c:identifier="fwupd_report_get_distro_version"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="364">Gets the distribution version.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="370">a string, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="366">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_report_get_flags"
              glib:get-property="flags"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="715">Gets the report flags.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="721">report flags, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="717">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="fwupd_report_get_metadata"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="405">Gets the report metadata.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="411">the metadata, which may be empty</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="407">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata_item"
              c:identifier="fwupd_report_get_metadata_item"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="443">Gets a report metadata item.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="450">the value, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="445">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="446">the key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_remote_id"
              c:identifier="fwupd_report_get_remote_id"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="323">Gets the remote ID.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="329">ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="325">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor"
              c:identifier="fwupd_report_get_vendor"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="122">Gets the vendor that uploaded the test result.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="128">the test vendor, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="124">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_id"
              c:identifier="fwupd_report_get_vendor_id"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="163">Gets the vendor identifier. The mapping is only known on the remote server, and this can be
useful to filter on different QA teams that work for the same OEM.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="170">the vendor ID, or 0 if unset</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="165">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version_old"
              c:identifier="fwupd_report_get_version_old"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="81">Gets the old version, i.e. what the upser was upgrading *from*.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="87">the version, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="83">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_report_has_flag"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="797">Finds if the report has a specific report flag.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="804">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="799">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="800">a report flag</doc>
            <type name="ReportFlags" c:type="FwupdReportFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_report_remove_flag"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="775">Removes a specific report flag from the report.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="777">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="778">a report flag</doc>
            <type name="ReportFlags" c:type="FwupdReportFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_created"
              c:identifier="fwupd_report_set_created"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="64">Sets when the report was created.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="66">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="created" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="67">UTC timestamp in UNIX format</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_name"
              c:identifier="fwupd_report_set_device_name"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="218">Sets the name of the device the update was performed on.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="220">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="device_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="221">the name, e.g. `LENOVO ThinkPad P1 Gen 3`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_distro_id"
              c:identifier="fwupd_report_set_distro_id"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="259">Sets the distribution name.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="261">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="distro_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="262">the name, e.g. `fedora`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_distro_variant"
              c:identifier="fwupd_report_set_distro_variant"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="300">Sets the distribution variant.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="302">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="distro_variant"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="303">the variant, e.g. `workstation`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_distro_version"
              c:identifier="fwupd_report_set_distro_version"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="382">Sets the distribution version.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="384">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="distro_version"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="385">a string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_report_set_flags"
              glib:set-property="flags"
              version="1.9.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="733">Sets the report flags.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="735">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="736">report flags, e.g. %FWUPD_REPORT_FLAG_FROM_OEM</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_remote_id"
              c:identifier="fwupd_report_set_remote_id"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="341">Sets the remote ID.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="343">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="remote_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="344">the remote, e.g. `lvfs`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor"
              c:identifier="fwupd_report_set_vendor"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="140">Sets the vendor that uploaded the test result.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="142">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="vendor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="143">the vendor name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vendor_id"
              c:identifier="fwupd_report_set_vendor_id"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="182">Sets the vendor identifier. The mapping is only known on the remote server, and this can be
useful to filter on different QA teams that work for the same OEM.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="184">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="vendor_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="185">the vendor ID, or 0</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_version_old"
              c:identifier="fwupd_report_set_version_old"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="99">Sets the old version, i.e. what the upser was upgrading *from*.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="101">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="version_old"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="102">the version, e.g. `1.2.3`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_report_to_json"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="603">Adds a fwupd report to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-report-private.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="605">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="606">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_report_to_string"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="674">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="680">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="676">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_report_to_variant"
              version="1.8.8">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="463">Serialize the report data.</doc>
        <source-position filename="libfwupd/fwupd-report.h" line="126"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-report.c"
               line="469">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-report.c"
                 line="465">a #FwupdReport</doc>
            <type name="Report" c:type="FwupdReport*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="flags"
                version="1.9.1"
                writable="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-report.c"
             line="924">The report flags.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ReportClass"
            c:type="FwupdReportClass"
            glib:is-gtype-struct-for="Report">
      <source-position filename="libfwupd/fwupd-report.h" line="26"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-report.h" line="19"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-report.h" line="20"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-report.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-report.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-report.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-report.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-report.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="Request"
           c:symbol-prefix="request"
           c:type="FwupdRequest"
           parent="GObject.Object"
           glib:type-name="FwupdRequest"
           glib:get-type="fwupd_request_get_type"
           glib:type-struct="RequestClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.c"
           line="13">A user request from the device.

See also: [class@FwupdDevice]</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="26"/>
      <constructor name="new" c:identifier="fwupd_request_new" version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="883">Creates a new request.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="187"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="888">a new #FwupdRequest</doc>
          <type name="Request" c:type="FwupdRequest*"/>
        </return-value>
      </constructor>
      <function name="flag_from_string"
                c:identifier="fwupd_request_flag_from_string"
                version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="119">Converts a string to an enumerated request flag.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="125">enumerated value</doc>
          <type name="RequestFlags" c:type="FwupdRequestFlags"/>
        </return-value>
        <parameters>
          <parameter name="flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="121">a string, e.g. `none`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_request_flag_to_string"
                version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="93">Converts an enumerated request flag to a string.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="99">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="95">a request flag, e.g. %FWUPD_REQUEST_FLAG_NONE</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_request_from_variant"
                version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="848">Creates a new request using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="229"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="854">a new #FwupdRequest, or %NULL if @value was invalid</doc>
          <type name="Request" c:type="FwupdRequest*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="850">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="kind_from_string"
                c:identifier="fwupd_request_kind_from_string"
                version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="71">Converts a string to an enumerated update message kind.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="77">enumerated value</doc>
          <type name="RequestKind" c:type="FwupdRequestKind"/>
        </return-value>
        <parameters>
          <parameter name="kind"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="73">a string, e.g. `immediate`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="kind_to_string"
                c:identifier="fwupd_request_kind_to_string"
                version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="49">Converts an enumerated update message kind to a string.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="55">identifier string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="51">a update message kind, e.g. %FWUPD_REQUEST_KIND_IMMEDIATE</doc>
            <type name="RequestKind" c:type="FwupdRequestKind"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="invalidate">
        <source-position filename="libfwupd/fwupd-request.h" line="18"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_flag"
              c:identifier="fwupd_request_add_flag"
              version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="560">Adds a specific flag to the request.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="562">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="563">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_invalidate"
              c:identifier="fwupd_request_emit_invalidate"
              version="1.9.17">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="143">Emits an `invalidate` signal to signify that the request is no longer valid, and any visible
UI components should be hidden.</doc>
        <source-position filename="libfwupd/fwupd-request-private.h"
                         line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="145">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_created"
              c:identifier="fwupd_request_get_created"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="242">Gets when the request was created.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="248">the UNIX time, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="244">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="fwupd_request_get_device_id"
              glib:get-property="device-id"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="201">Gets the device_id that created the request.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="207">the device_id, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="203">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_request_get_flags"
              glib:get-property="flags"
              version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="519">Gets the request flags.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="525">request flags, or 0 if unset</doc>
          <type name="RequestFlags" c:type="FwupdRequestFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="521">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="fwupd_request_get_id"
              glib:get-property="id"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="160">Gets the ID.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="166">the ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="162">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image"
              c:identifier="fwupd_request_get_image"
              glib:get-property="image"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="439">Gets the update image.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="445">the update image URL, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="441">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="fwupd_request_get_kind"
              glib:get-property="kind"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="481">Returns what the request is currently doing.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="487">the kind value, e.g. %FWUPD_STATUS_REQUEST_WRITE</doc>
          <type name="RequestKind" c:type="FwupdRequestKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="483">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_message"
              c:identifier="fwupd_request_get_message"
              glib:get-property="message"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="375">Gets the update message, generating a generic one using the request ID if possible.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="204"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="381">the update message, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="377">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_request_has_flag"
              version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="594">Finds if the request has a specific flag.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="601">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="596">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="597">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_request_remove_flag"
              version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="577">Removes a specific flag from the request.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="579">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="580">the #FwupdRequestFlags</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_created"
              c:identifier="fwupd_request_set_created"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="260">Sets when the request was created.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="198"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="262">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="created" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="263">the UNIX time</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_id"
              c:identifier="fwupd_request_set_device_id"
              glib:set-property="device-id"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="219">Sets the device_id that created the request.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="202"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="221">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="device_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="222">the device_id, e.g. `colorhug`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_request_set_flags"
              glib:set-property="flags"
              version="1.8.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="537">Sets the request flags.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="219"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="539">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="540">request flags, e.g. %FWUPD_REQUEST_FLAG_NONE</doc>
            <type name="RequestFlags" c:type="FwupdRequestFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="fwupd_request_set_id"
              glib:set-property="id"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="178">Sets the ID.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="180">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="181">the request ID, e.g. `USB:foo`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image"
              c:identifier="fwupd_request_set_image"
              glib:set-property="image"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="457">Sets the update image.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="459">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="460">the update image URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kind"
              c:identifier="fwupd_request_set_kind"
              glib:set-property="kind"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="499">Sets what the request is currently doing.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="501">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="502">the kind value, e.g. %FWUPD_STATUS_REQUEST_WRITE</doc>
            <type name="RequestKind" c:type="FwupdRequestKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_message"
              c:identifier="fwupd_request_set_message"
              glib:set-property="message"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="415">Sets the update message.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="206"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="417">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
          <parameter name="message"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="418">the update message string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_request_to_string"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="613">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-request.h" line="189"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="619">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="615">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_request_to_variant"
              version="1.6.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="277">Serialize the request data.</doc>
        <source-position filename="libfwupd/fwupd-request-private.h"
                         line="14"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-request.c"
               line="283">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-request.c"
                 line="279">a #FwupdRequest</doc>
            <type name="Request" c:type="FwupdRequest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="device-id"
                version="1.8.2"
                writable="1"
                transfer-ownership="none"
                setter="set_device_id"
                getter="get_device_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="822">The device ID for the request.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="flags"
                version="1.8.6"
                writable="1"
                transfer-ownership="none"
                setter="set_flags"
                getter="get_flags"
                default-value="18446744073709551615">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="781">The flags for the request.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="id"
                version="1.6.2"
                writable="1"
                transfer-ownership="none"
                setter="set_id"
                getter="get_id"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="754">The request identifier.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="image"
                version="1.6.2"
                writable="1"
                transfer-ownership="none"
                setter="set_image"
                getter="get_image"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="811">The image link for the request.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kind"
                version="1.6.2"
                writable="1"
                transfer-ownership="none"
                setter="set_kind"
                getter="get_kind"
                default-value="0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="765">The kind of the request.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="message"
                version="1.6.2"
                writable="1"
                transfer-ownership="none"
                setter="set_message"
                getter="get_message"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="797">The message text in the request.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="invalidate" when="last" version="1.9.17">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.c"
             line="735">The ::invalidate signal is emitted when the request is no longer valid, and any visible
UI components should be hidden.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="RequestClass"
            c:type="FwupdRequestClass"
            glib:is-gtype-struct-for="Request">
      <source-position filename="libfwupd/fwupd-request.h" line="26"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="invalidate">
        <callback name="invalidate">
          <source-position filename="libfwupd/fwupd-request.h" line="18"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="client" transfer-ownership="none">
              <type name="Request" c:type="FwupdRequest*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-request.h" line="20"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-request.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-request.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-request.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-request.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-request.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="RequestKind" c:type="FwupdRequestKind">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-request.h"
           line="28">The kind of request we are asking of the user.</doc>
      <source-position filename="libfwupd/fwupd-request.h" line="42"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_REQUEST_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.h"
             line="30">Unknown kind</doc>
      </member>
      <member name="post" value="1" c:identifier="FWUPD_REQUEST_KIND_POST">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.h"
             line="31">After the update</doc>
      </member>
      <member name="immediate"
              value="2"
              c:identifier="FWUPD_REQUEST_KIND_IMMEDIATE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-request.h"
             line="32">Immediately</doc>
      </member>
    </enumeration>
    <constant name="SECURITY_ATTR_ID_AMD_ROLLBACK_PROTECTION"
              value="org.fwupd.hsi.Amd.RollbackProtection"
              c:type="FWUPD_SECURITY_ATTR_ID_AMD_ROLLBACK_PROTECTION"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="320">Host Security ID attribute for Rollback protection of AMD platform
firmware</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="328"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_AMD_SPI_REPLAY_PROTECTION"
              value="org.fwupd.hsi.Amd.SpiReplayProtection"
              c:type="FWUPD_SECURITY_ATTR_ID_AMD_SPI_REPLAY_PROTECTION"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="337">Host Security ID attribute for SPI replay protection</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="344"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_AMD_SPI_WRITE_PROTECTION"
              value="org.fwupd.hsi.Amd.SpiWriteProtection"
              c:type="FWUPD_SECURITY_ATTR_ID_AMD_SPI_WRITE_PROTECTION"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="329">Host Security ID attribute for SPI Write protection</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="336"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_BIOS_CAPSULE_UPDATES"
              value="org.fwupd.hsi.Bios.CapsuleUpdates"
              c:type="FWUPD_SECURITY_ATTR_ID_BIOS_CAPSULE_UPDATES"
              version="1.9.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="369">Host Security ID attribute indicating Capsule updates are supported by the BIOS.</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="376"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_BIOS_ROLLBACK_PROTECTION"
              value="org.fwupd.hsi.Bios.RollbackProtection"
              c:type="FWUPD_SECURITY_ATTR_ID_BIOS_ROLLBACK_PROTECTION"
              version="1.8.8">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="353">Host Security ID attribute for Rollback protection of BIOS firmware</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="360"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_ENCRYPTED_RAM"
              value="org.fwupd.hsi.EncryptedRam"
              c:type="FWUPD_SECURITY_ATTR_ID_ENCRYPTED_RAM"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="26">Host Security ID attribute indicating encrypted RAM available</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="33"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_FWUPD_ATTESTATION"
              value="org.fwupd.hsi.Fwupd.Attestation"
              c:type="FWUPD_SECURITY_ATTR_ID_FWUPD_ATTESTATION"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="34">Host Security ID attribute for attestation</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_FWUPD_PLUGINS"
              value="org.fwupd.hsi.Fwupd.Plugins"
              c:type="FWUPD_SECURITY_ATTR_ID_FWUPD_PLUGINS"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="42">Host Security ID attribute for plugins</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_FWUPD_UPDATES"
              value="org.fwupd.hsi.Fwupd.Updates"
              c:type="FWUPD_SECURITY_ATTR_ID_FWUPD_UPDATES"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="50">Host Security ID attribute for updates</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_HOST_EMULATION"
              value="org.fwupd.hsi.HostEmulation"
              c:type="FWUPD_SECURITY_ATTR_ID_HOST_EMULATION"
              version="1.8.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="345">Host Security ID attribute for host emulation</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="352"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_BOOTGUARD_ACM"
              value="org.fwupd.hsi.IntelBootguard.Acm"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_BOOTGUARD_ACM"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="74">Host Security ID attribute for Intel Bootguard ACM</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="81"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_BOOTGUARD_ENABLED"
              value="org.fwupd.hsi.IntelBootguard.Enabled"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_BOOTGUARD_ENABLED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="58">Host Security ID attribute for Intel Bootguard enabled</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_BOOTGUARD_OTP"
              value="org.fwupd.hsi.IntelBootguard.Otp"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_BOOTGUARD_OTP"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="90">Host Security ID attribute for Intel Bootguard OTP fuse</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="97"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_BOOTGUARD_POLICY"
              value="org.fwupd.hsi.IntelBootguard.Policy"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_BOOTGUARD_POLICY"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="82">Host Security ID attribute for Intel Bootguard policy</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="89"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_BOOTGUARD_VERIFIED"
              value="org.fwupd.hsi.IntelBootguard.Verified"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_BOOTGUARD_VERIFIED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="66">Host Security ID attribute for Intel Bootguard verified</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_CET_ACTIVE"
              value="org.fwupd.hsi.IntelCet.Active"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_CET_ACTIVE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="106">Host Security ID attribute for Intel CET active</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="113"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_CET_ENABLED"
              value="org.fwupd.hsi.IntelCet.Enabled"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_CET_ENABLED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="98">Host Security ID attribute for Intel CET enabled</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="105"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_GDS"
              value="org.fwupd.hsi.IntelGds"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_GDS"
              version="1.9.4">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="361">Host Security ID attribute indicating the processor is safe against Gather Data Sampling.</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="368"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_INTEL_SMAP"
              value="org.fwupd.hsi.IntelSmap"
              c:type="FWUPD_SECURITY_ATTR_ID_INTEL_SMAP"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="114">Host Security ID attribute for Intel SMAP</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="121"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_IOMMU"
              value="org.fwupd.hsi.Iommu"
              c:type="FWUPD_SECURITY_ATTR_ID_IOMMU"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="122">Host Security ID attribute for IOMMU</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="129"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_KERNEL_LOCKDOWN"
              value="org.fwupd.hsi.Kernel.Lockdown"
              c:type="FWUPD_SECURITY_ATTR_ID_KERNEL_LOCKDOWN"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="130">Host Security ID attribute for kernel lockdown</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="137"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_KERNEL_SWAP"
              value="org.fwupd.hsi.Kernel.Swap"
              c:type="FWUPD_SECURITY_ATTR_ID_KERNEL_SWAP"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="138">Host Security ID attribute for kernel swap</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="145"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_KERNEL_TAINTED"
              value="org.fwupd.hsi.Kernel.Tainted"
              c:type="FWUPD_SECURITY_ATTR_ID_KERNEL_TAINTED"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="146">Host Security ID attribute for kernel taint</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="153"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_MEI_KEY_MANIFEST"
              value="org.fwupd.hsi.Mei.KeyManifest"
              c:type="FWUPD_SECURITY_ATTR_ID_MEI_KEY_MANIFEST"
              version="1.8.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="170">Host Security ID attribute for Intel ME Key Manifest</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="177"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_MEI_MANUFACTURING_MODE"
              value="org.fwupd.hsi.Mei.ManufacturingMode"
              c:type="FWUPD_SECURITY_ATTR_ID_MEI_MANUFACTURING_MODE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="154">Host Security ID attribute for Intel ME manufacturing mode</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="161"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_MEI_OVERRIDE_STRAP"
              value="org.fwupd.hsi.Mei.OverrideStrap"
              c:type="FWUPD_SECURITY_ATTR_ID_MEI_OVERRIDE_STRAP"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="162">Host Security ID attribute for Intel ME override strap</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="169"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_MEI_VERSION"
              value="org.fwupd.hsi.Mei.Version"
              c:type="FWUPD_SECURITY_ATTR_ID_MEI_VERSION"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="178">Host Security ID attribute for Intel ME version</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="185"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_PLATFORM_DEBUG_ENABLED"
              value="org.fwupd.hsi.PlatformDebugEnabled"
              c:type="FWUPD_SECURITY_ATTR_ID_PLATFORM_DEBUG_ENABLED"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="274">Host Security ID attribute for parts with debugging capabilities enabled

This was previously known as org.fwupd.hsi.PlatformDebugEnabled for Intel 1.5.0+
It was renamed for all vendor support in 1.8.0. *</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="284"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_PLATFORM_DEBUG_LOCKED"
              value="org.fwupd.hsi.PlatformDebugLocked"
              c:type="FWUPD_SECURITY_ATTR_ID_PLATFORM_DEBUG_LOCKED"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="293">Host Security ID attribute for parts locked from debugging

This was previously known as org.fwupd.hsi.IntelDci.Locked for Intel 1.5.0+
It was renamed for all vendor support in 1.8.0.</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="303"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_PLATFORM_FUSED"
              value="org.fwupd.hsi.PlatformFused"
              c:type="FWUPD_SECURITY_ATTR_ID_PLATFORM_FUSED"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="285">Host Security ID attribute for fused parts</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="292"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_PREBOOT_DMA_PROTECTION"
              value="org.fwupd.hsi.PrebootDma"
              c:type="FWUPD_SECURITY_ATTR_ID_PREBOOT_DMA_PROTECTION"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="16">Host Security ID attribute for Pre-boot DMA protection

This was previously known as org.fwupd.hsi.AcpiDmar for Intel from 1.5.0+.</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="25"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SPI_BIOSWE"
              value="org.fwupd.hsi.Spi.Bioswe"
              c:type="FWUPD_SECURITY_ATTR_ID_SPI_BIOSWE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="186">Host Security ID attribute for Intel SPI BIOSWE configuration</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="193"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SPI_BLE"
              value="org.fwupd.hsi.Spi.Ble"
              c:type="FWUPD_SECURITY_ATTR_ID_SPI_BLE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="194">Host Security ID attribute for Intel SPI BLE configuration</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="201"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SPI_DESCRIPTOR"
              value="org.fwupd.hsi.Spi.Descriptor"
              c:type="FWUPD_SECURITY_ATTR_ID_SPI_DESCRIPTOR"
              version="1.6.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="210">Host Security ID attribute for Intel SPI descriptor</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="217"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SPI_SMM_BWP"
              value="org.fwupd.hsi.Spi.SmmBwp"
              c:type="FWUPD_SECURITY_ATTR_ID_SPI_SMM_BWP"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="202">Host Security ID attribute for Intel SPI SMM BWP</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="209"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SUPPORTED_CPU"
              value="org.fwupd.hsi.SupportedCpu"
              c:type="FWUPD_SECURITY_ATTR_ID_SUPPORTED_CPU"
              version="1.8.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="312">Host Security ID attribute for Supported CPU</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="319"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SUSPEND_TO_IDLE"
              value="org.fwupd.hsi.SuspendToIdle"
              c:type="FWUPD_SECURITY_ATTR_ID_SUSPEND_TO_IDLE"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="218">Host Security ID attribute for Suspend to Idle</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="225"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_SUSPEND_TO_RAM"
              value="org.fwupd.hsi.SuspendToRam"
              c:type="FWUPD_SECURITY_ATTR_ID_SUSPEND_TO_RAM"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="226">Host Security ID attribute for Suspend to RAM</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="233"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_TPM_EMPTY_PCR"
              value="org.fwupd.hsi.Tpm.EmptyPcr"
              c:type="FWUPD_SECURITY_ATTR_ID_TPM_EMPTY_PCR"
              version="1.7.2">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="234">Host Security ID attribute for empty PCR</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="241"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_TPM_RECONSTRUCTION_PCR0"
              value="org.fwupd.hsi.Tpm.ReconstructionPcr0"
              c:type="FWUPD_SECURITY_ATTR_ID_TPM_RECONSTRUCTION_PCR0"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="242">Host Security ID attribute for TPM PCR0 reconstruction</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="249"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_TPM_VERSION_20"
              value="org.fwupd.hsi.Tpm.Version20"
              c:type="FWUPD_SECURITY_ATTR_ID_TPM_VERSION_20"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="250">Host Security ID attribute for TPM 2.0</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="257"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_UEFI_BOOTSERVICE_VARS"
              value="org.fwupd.hsi.Uefi.BootserviceVars"
              c:type="FWUPD_SECURITY_ATTR_ID_UEFI_BOOTSERVICE_VARS"
              version="1.9.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="266">Host Security ID attribute indicating if Bootservice-only variables are hidden.</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="273"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_UEFI_PK"
              value="org.fwupd.hsi.Uefi.Pk"
              c:type="FWUPD_SECURITY_ATTR_ID_UEFI_PK"
              version="1.5.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="304">Host Security ID attribute for UEFI PK</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="311"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="SECURITY_ATTR_ID_UEFI_SECUREBOOT"
              value="org.fwupd.hsi.Uefi.SecureBoot"
              c:type="FWUPD_SECURITY_ATTR_ID_UEFI_SECUREBOOT"
              version="1.5.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr-private.h"
           line="258">Host Security ID attribute for UEFI secure boot</doc>
      <source-position filename="libfwupd/fwupd-security-attr-private.h"
                       line="265"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="SecurityAttr"
           c:symbol-prefix="security_attr"
           c:type="FwupdSecurityAttr"
           parent="GObject.Object"
           glib:type-name="FwupdSecurityAttr"
           glib:get-type="fwupd_security_attr_get_type"
           glib:type-struct="SecurityAttrClass">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr.c"
           line="17">A Host Security ID attribute that represents something that was measured.</doc>
      <source-position filename="libfwupd/fwupd-security-attr.h" line="29"/>
      <constructor name="new"
                   c:identifier="fwupd_security_attr_new"
                   version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1910">Creates a new security attribute.

Plugins should not use this method, and should instead use `fu_plugin_security_attr_new()` or
`fu_security_attr_new()`.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1919">a new #FwupdSecurityAttr</doc>
          <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
        </return-value>
        <parameters>
          <parameter name="appstream_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1912">the AppStream component ID, e.g. `com.intel.BiosGuard`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="array_from_variant"
                c:identifier="fwupd_security_attr_array_from_variant"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1824">Creates an array of new security attributes using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="262"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1830">attributes, or %NULL if @value
was invalid</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SecurityAttr"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1826">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_from_string"
                c:identifier="fwupd_security_attr_flag_from_string"
                version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="92">Converts a string to an enumerated flag.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="98">enumerated value</doc>
          <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
        </return-value>
        <parameters>
          <parameter name="flag"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="94">a string, e.g. `success`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_string"
                c:identifier="fwupd_security_attr_flag_to_string"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="52">Returns the printable string for the flag.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="249"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="58">string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="54">security attribute flags, e.g. %FWUPD_SECURITY_ATTR_FLAG_SUCCESS</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="flag_to_suffix"
                c:identifier="fwupd_security_attr_flag_to_suffix"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="218">Returns the string suffix for the flag.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="253"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="224">string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="220">security attribute flags, e.g. %FWUPD_SECURITY_ATTR_FLAG_RUNTIME_UPDATES</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_variant"
                c:identifier="fwupd_security_attr_from_variant"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1790">Creates a new security attribute using serialized data.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="260"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1796">a new #FwupdSecurityAttr, or %NULL if @value was invalid</doc>
          <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1792">the serialized data</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </function>
      <function name="result_from_string"
                c:identifier="fwupd_security_attr_result_from_string"
                version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="174">Converts a string to an enumerated result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="180">enumerated value</doc>
          <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
        </return-value>
        <parameters>
          <parameter name="result"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="176">a string, e.g. `not-encrypted`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="result_to_string"
                c:identifier="fwupd_security_attr_result_to_string"
                version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="130">Returns the printable string for the result enum.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="255"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="136">string, or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="132">security attribute result, e.g. %FWUPD_SECURITY_ATTR_RESULT_ENABLED</doc>
            <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_flag"
              c:identifier="fwupd_security_attr_add_flag"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="938">Adds a specific attribute flag to the attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="239"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="940">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="941">the #FwupdSecurityAttrFlags, e.g. %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_guid"
              c:identifier="fwupd_security_attr_add_guid"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="363">Adds a device GUID to the attribute. This indicates the GUID in some way contributed to the
result decided.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="222"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="365">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="366">the GUID</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_guids"
              c:identifier="fwupd_security_attr_add_guids"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="384">Adds device GUIDs to the attribute. This indicates the GUIDs in some way contributed to the
result decided.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="386">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="guids" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="387">the GUIDs</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="add_metadata"
              c:identifier="fwupd_security_attr_add_metadata"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1315">Adds metadata to the attribute which may be used in the name.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="231"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1317">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1318">metadata key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1319">metadata value</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_obsolete"
              c:identifier="fwupd_security_attr_add_obsolete"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="299">Adds an attribute appstream_id to obsolete. The obsoleted attribute will not
contribute to the calculated HSI value or be visible in command line tools.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="213"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="301">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="302">the appstream_id or plugin name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy"
              c:identifier="fwupd_security_attr_copy"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1859">Makes a full (deep) copy of a security attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr-private.h"
                         line="386"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1865">a new #FwupdSecurityAttr</doc>
          <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self"
                              transfer-ownership="none"
                              nullable="1"
                              allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1861">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="from_json"
              c:identifier="fwupd_security_attr_from_json"
              version="1.7.1"
              throws="1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1451">Loads a fwupd security attribute from a JSON node.</doc>
        <source-position filename="libfwupd/fwupd-security-attr-private.h"
                         line="383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1459">%TRUE for success</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1453">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="json_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1454">a JSON node</doc>
            <type name="Json.Node" c:type="JsonNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_appstream_id"
              c:identifier="fwupd_security_attr_get_appstream_id"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="430">Gets the AppStream ID.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="436">the AppStream ID, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="432">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bios_setting_current_value"
              c:identifier="fwupd_security_attr_get_bios_setting_current_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="557">Gets the current value of the BIOS setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="563">the current value of the attribute.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="559">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bios_setting_id"
              c:identifier="fwupd_security_attr_get_bios_setting_id"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="240">Gets the #FwupdBiosSetting that can be used to improve this
#FwupdSecurityAttr.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="247">The unique ID used for #FwupdBiosSetting or NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="242">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bios_setting_target_value"
              c:identifier="fwupd_security_attr_get_bios_setting_target_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="516">Gets the value that when written to an attribute would activate it or satisfy
a security requirement.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="523">the target value of the attribute.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="518">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_created"
              c:identifier="fwupd_security_attr_get_created"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="768">Gets when the attribute was created.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="774">the UNIX time, or 0 if unset</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="770">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="fwupd_security_attr_get_description"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="842">Gets the attribute description which is a few lines of prose that normal users will understand.

The fwupd client program may be able to get translations for this value using a method call
like `dgettext("fwupd",str)`.

NOTE: The returned string may contain placeholders such as `$HostVendor$` or `$HostProduct$`
and these should be replaced with the values from [method@FwupdClient.get_host_vendor] and
[method@FwupdClient.get_host_product].</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="194"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="855">the attribute description, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="844">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="fwupd_security_attr_get_flags"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="885">Gets the self flags.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="234"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="891">security attribute flags, or 0 if unset</doc>
          <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="887">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_guids"
              c:identifier="fwupd_security_attr_get_guids"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="345">Gets the list of attribute GUIDs. The GUID values will not modify the calculated HSI value.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="220"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="351">the GUIDs, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="347">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_current_value"
              c:identifier="fwupd_security_attr_get_kernel_current_value"
              version="1.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="597">Gets the current value of the BIOS setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="603">the current value of the attribute.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="599">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_target_value"
              c:identifier="fwupd_security_attr_get_kernel_target_value"
              version="1.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="637">Gets the target value of the kernel setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="643">the current value of the attribute.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="639">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_level"
              c:identifier="fwupd_security_attr_get_level"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="992">Gets the HSI level.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="998">the security attribute level, or %FWUPD_SECURITY_ATTR_LEVEL_NONE if unset</doc>
          <type name="SecurityAttrLevel" c:type="FwupdSecurityAttrLevel"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="994">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata"
              c:identifier="fwupd_security_attr_get_metadata"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1291">Gets private metadata from the attribute which may be used in the name.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="229"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1298">the metadata value, or %NULL if unfound</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1293">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1294">metadata key</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="fwupd_security_attr_get_name"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="803">Gets the attribute name.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="186"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="809">the attribute name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="805">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_obsoletes"
              c:identifier="fwupd_security_attr_get_obsoletes"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="280">Gets the list of attribute obsoletes. The obsoleted attributes will not
contribute to the calculated HSI value or be visible in command line tools.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="211"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="287">the obsoletes, which may be empty</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="282">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plugin"
              c:identifier="fwupd_security_attr_get_plugin"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="867">Gets the plugin that created the attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="873">the plugin name, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="869">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_result"
              c:identifier="fwupd_security_attr_get_result"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1053">Gets the optional HSI result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1059">the #FwupdSecurityAttrResult, e.g %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
          <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1055">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_result_fallback"
              c:identifier="fwupd_security_attr_get_result_fallback"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1089">Gets the optional fallback HSI result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="176"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1095">the #FwupdSecurityAttrResult, e.g %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
          <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1091">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_result_success"
              c:identifier="fwupd_security_attr_get_result_success"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1125">Gets the desired HSI result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1131">the #FwupdSecurityAttrResult, e.g %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
          <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1127">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="fwupd_security_attr_get_title"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="821">Gets the attribute title, which is typically a two word title.

The fwupd client program may be able to get translations for this value using a method call
like `dgettext("fwupd",str)`.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="830">the attribute title, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="823">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="fwupd_security_attr_get_url"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="475">Gets the attribute URL.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="481">the attribute result, or %NULL if unset</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="477">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_flag"
              c:identifier="fwupd_security_attr_has_flag"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="973">Finds if the attribute has a specific attribute flag.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="245"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="980">%TRUE if the flag is set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="975">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="976">the attribute flag, e.g. %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_guid"
              c:identifier="fwupd_security_attr_has_guid"
              version="1.7.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="405">Finds out if a specific GUID was added to the attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="412">%TRUE if the self matches</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="407">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="guid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="408">the attribute guid</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_obsolete"
              c:identifier="fwupd_security_attr_has_obsolete"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="320">Finds out if the attribute obsoletes a specific appstream_id.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="327">%TRUE if the self matches</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="322">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="appstream_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="323">the attribute appstream_id</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_flag"
              c:identifier="fwupd_security_attr_remove_flag"
              version="1.8.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="956">Removes a specific attribute flag from the attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="958">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="959">the #FwupdSecurityAttrFlags, e.g. %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_appstream_id"
              c:identifier="fwupd_security_attr_set_appstream_id"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="448">Sets the AppStream ID.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="450">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="appstream_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="451">the AppStream component ID, e.g. `com.intel.BiosGuard`</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bios_setting_current_value"
              c:identifier="fwupd_security_attr_set_bios_setting_current_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="575">Sets the current value of the BIOS setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="577">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="578">The string to set current value to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bios_setting_id"
              c:identifier="fwupd_security_attr_set_bios_setting_id"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="259">Sets the #FwupdBiosSetting that can be used to improve this
#FwupdSecurityAttr.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="261">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="262">Unique identifier used for #FwupdBiosSetting</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bios_setting_target_value"
              c:identifier="fwupd_security_attr_set_bios_setting_target_value"
              version="1.8.4">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="535">Sets the string used for the target value of an attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="537">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="538">The string to set target value to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_created"
              c:identifier="fwupd_security_attr_set_created"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="786">Sets when the attribute was created.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="209"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="788">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="created" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="789">the UNIX time</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="fwupd_security_attr_set_description"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="700">Sets the attribute description.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="196"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="702">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="703">the attribute description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="fwupd_security_attr_set_flags"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="903">Sets the attribute flags.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="236"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="905">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="906">security attribute flags, e.g. %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED</doc>
            <type name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kernel_current_value"
              c:identifier="fwupd_security_attr_set_kernel_current_value"
              version="1.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="615">Sets the current value of the BIOS setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="617">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="618">The string to set current value to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_kernel_target_value"
              c:identifier="fwupd_security_attr_set_kernel_target_value"
              version="1.9.6">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="655">Sets the target value of the kernel setting that can be changed.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="657">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="value"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="658">The string to set current value to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_level"
              c:identifier="fwupd_security_attr_set_level"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1010">Sets the HSI level. A @level of %FWUPD_SECURITY_ATTR_LEVEL_NONE is not used
for the HSI calculation.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1012">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1013">a security attribute level, e.g. %FWUPD_SECURITY_ATTR_LEVEL_IMPORTANT</doc>
            <type name="SecurityAttrLevel" c:type="FwupdSecurityAttrLevel"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="fwupd_security_attr_set_name"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="493">Sets the attribute name.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="495">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="496">the attribute name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_plugin"
              c:identifier="fwupd_security_attr_set_plugin"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="723">Sets the plugin that created the attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="725">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="plugin"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="726">the plugin name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_result"
              c:identifier="fwupd_security_attr_set_result"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1028">Sets the optional HSI result. This is required because some attributes may
be a "success" when something is `locked` or may be "failed" if `found`.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1030">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1031">a security attribute result, e.g. %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
            <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_result_fallback"
              c:identifier="fwupd_security_attr_set_result_fallback"
              version="1.7.1">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1071">Sets the optional fallback HSI result. The fallback may represent the old state, or a state
that may be considered equivalent.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="178"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1073">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1074">a security attribute, e.g. %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
            <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_result_success"
              c:identifier="fwupd_security_attr_set_result_success"
              version="1.9.3">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1107">Sets the desired HSI result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1109">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1110">a security attribute, e.g. %FWUPD_SECURITY_ATTR_LEVEL_LOCKED</doc>
            <type name="SecurityAttrResult" c:type="FwupdSecurityAttrResult"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="fwupd_security_attr_set_title"
              version="1.8.2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="677">Sets the attribute title.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="679">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="680">the attribute title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url"
              c:identifier="fwupd_security_attr_set_url"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="746">Sets the attribute result.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="748">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="url"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="749">the attribute URL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_json"
              c:identifier="fwupd_security_attr_to_json"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1586">Adds a fwupd security attribute to a JSON builder</doc>
        <source-position filename="libfwupd/fwupd-security-attr-private.h"
                         line="381"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1588">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
          <parameter name="builder" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1589">a JSON builder</doc>
            <type name="Json.Builder" c:type="JsonBuilder*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="fwupd_security_attr_to_string"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1668">Builds a text representation of the object.</doc>
        <source-position filename="libfwupd/fwupd-security-attr.h" line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1674">text, or %NULL for invalid</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1670">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_variant"
              c:identifier="fwupd_security_attr_to_variant"
              version="1.5.0">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.c"
             line="1143">Serialize the security attribute.</doc>
        <source-position filename="libfwupd/fwupd-security-attr-private.h"
                         line="379"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-security-attr.c"
               line="1149">the serialized data, or %NULL for error</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libfwupd/fwupd-security-attr.c"
                 line="1145">a #FwupdSecurityAttr</doc>
            <type name="SecurityAttr" c:type="FwupdSecurityAttr*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SecurityAttrClass"
            c:type="FwupdSecurityAttrClass"
            glib:is-gtype-struct-for="SecurityAttr">
      <source-position filename="libfwupd/fwupd-security-attr.h" line="29"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_fwupd_reserved1" introspectable="0">
        <callback name="_fwupd_reserved1">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved2" introspectable="0">
        <callback name="_fwupd_reserved2">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved3" introspectable="0">
        <callback name="_fwupd_reserved3">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved4" introspectable="0">
        <callback name="_fwupd_reserved4">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved5" introspectable="0">
        <callback name="_fwupd_reserved5">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved6" introspectable="0">
        <callback name="_fwupd_reserved6">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_fwupd_reserved7" introspectable="0">
        <callback name="_fwupd_reserved7">
          <source-position filename="libfwupd/fwupd-security-attr.h"
                           line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="SecurityAttrFlags" c:type="FwupdSecurityAttrFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr.h"
           line="31">The flags available for HSI attributes.</doc>
      <source-position filename="libfwupd/fwupd-security-attr.h" line="61"/>
      <member name="none"
              value="0"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="33">No flags set</doc>
      </member>
      <member name="success"
              value="1"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_SUCCESS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="34">Success</doc>
      </member>
      <member name="obsoleted"
              value="2"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_OBSOLETED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="35">Obsoleted by another attribute</doc>
      </member>
      <member name="missing_data"
              value="4"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_MISSING_DATA">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="36">Missing data</doc>
      </member>
      <member name="runtime_updates"
              value="256"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_RUNTIME_UPDATES">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="37">Suffix `U`</doc>
      </member>
      <member name="runtime_attestation"
              value="512"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_RUNTIME_ATTESTATION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="38">Suffix `A`</doc>
      </member>
      <member name="runtime_issue"
              value="1024"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_RUNTIME_ISSUE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="39">Suffix `!`</doc>
      </member>
      <member name="action_contact_oem"
              value="2048"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_ACTION_CONTACT_OEM">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="40">Contact the firmware vendor for a update</doc>
      </member>
      <member name="action_config_fw"
              value="4096"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_ACTION_CONFIG_FW">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="41">Failure may be fixed by changing FW config</doc>
      </member>
      <member name="action_config_os"
              value="8192"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_ACTION_CONFIG_OS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="42">Failure may be fixed by changing OS config</doc>
      </member>
      <member name="can_fix"
              value="16384"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_CAN_FIX">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="43">The failure can be automatically fixed</doc>
      </member>
      <member name="can_undo"
              value="32768"
              c:identifier="FWUPD_SECURITY_ATTR_FLAG_CAN_UNDO">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="44">The fix can be automatically reverted</doc>
      </member>
    </bitfield>
    <enumeration name="SecurityAttrLevel" c:type="FwupdSecurityAttrLevel">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr.h"
           line="63">The HSI level.</doc>
      <source-position filename="libfwupd/fwupd-security-attr.h" line="87"/>
      <member name="none"
              value="0"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="65">Very few detected firmware protections</doc>
      </member>
      <member name="critical"
              value="1"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_CRITICAL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="66">The most basic of security protections</doc>
      </member>
      <member name="important"
              value="2"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_IMPORTANT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="67">Firmware security issues considered
important</doc>
      </member>
      <member name="theoretical"
              value="3"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_THEORETICAL">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="69">Firmware security issues that pose a
theoretical concern</doc>
      </member>
      <member name="system_protection"
              value="4"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_SYSTEM_PROTECTION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="71">Out-of-band protection of the system
firmware</doc>
      </member>
      <member name="system_attestation"
              value="5"
              c:identifier="FWUPD_SECURITY_ATTR_LEVEL_SYSTEM_ATTESTATION">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="73">Out-of-band attestation of the system
firmware</doc>
      </member>
    </enumeration>
    <enumeration name="SecurityAttrResult" c:type="FwupdSecurityAttrResult">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-security-attr.h"
           line="89">The HSI result.</doc>
      <source-position filename="libfwupd/fwupd-security-attr.h" line="127"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="91">Not known</doc>
      </member>
      <member name="enabled"
              value="1"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_ENABLED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="92">Enabled</doc>
      </member>
      <member name="not_enabled"
              value="2"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_ENABLED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="93">Not enabled</doc>
      </member>
      <member name="valid"
              value="3"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_VALID">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="94">Valid</doc>
      </member>
      <member name="not_valid"
              value="4"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_VALID">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="95">Not valid</doc>
      </member>
      <member name="locked"
              value="5"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_LOCKED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="96">Locked</doc>
      </member>
      <member name="not_locked"
              value="6"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_LOCKED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="97">Not locked</doc>
      </member>
      <member name="encrypted"
              value="7"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_ENCRYPTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="98">Encrypted</doc>
      </member>
      <member name="not_encrypted"
              value="8"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_ENCRYPTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="99">Not encrypted</doc>
      </member>
      <member name="tainted"
              value="9"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_TAINTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="100">Tainted</doc>
      </member>
      <member name="not_tainted"
              value="10"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_TAINTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="101">Not tainted</doc>
      </member>
      <member name="found"
              value="11"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_FOUND">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="102">Found</doc>
      </member>
      <member name="not_found"
              value="12"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_FOUND">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="103">NOt found</doc>
      </member>
      <member name="supported"
              value="13"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_SUPPORTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="104">Supported</doc>
      </member>
      <member name="not_supported"
              value="14"
              c:identifier="FWUPD_SECURITY_ATTR_RESULT_NOT_SUPPORTED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-security-attr.h"
             line="105">Not supported</doc>
      </member>
    </enumeration>
    <bitfield name="SelfSignFlags" c:type="FwupdSelfSignFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1035">Flags to set when performing the firmware update or install.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1049"/>
      <member name="none" value="0" c:identifier="FWUPD_SELF_SIGN_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1037">No flags set</doc>
      </member>
      <member name="add_timestamp"
              value="1"
              c:identifier="FWUPD_SELF_SIGN_FLAG_ADD_TIMESTAMP">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1038">Add the timestamp to the detached signature</doc>
      </member>
      <member name="add_cert"
              value="2"
              c:identifier="FWUPD_SELF_SIGN_FLAG_ADD_CERT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1039">Add the certificate to the detached signature</doc>
      </member>
    </bitfield>
    <enumeration name="Status" c:type="FwupdStatus">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="13">The flags to show daemon status.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="50"/>
      <member name="unknown" value="0" c:identifier="FWUPD_STATUS_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="15">Unknown state</doc>
      </member>
      <member name="idle" value="1" c:identifier="FWUPD_STATUS_IDLE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="16">Idle</doc>
      </member>
      <member name="loading" value="2" c:identifier="FWUPD_STATUS_LOADING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="17">Loading a resource</doc>
      </member>
      <member name="decompressing"
              value="3"
              c:identifier="FWUPD_STATUS_DECOMPRESSING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="18">Decompressing firmware</doc>
      </member>
      <member name="device_restart"
              value="4"
              c:identifier="FWUPD_STATUS_DEVICE_RESTART">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="19">Restarting the device</doc>
      </member>
      <member name="device_write"
              value="5"
              c:identifier="FWUPD_STATUS_DEVICE_WRITE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="20">Writing to a device</doc>
      </member>
      <member name="device_verify"
              value="6"
              c:identifier="FWUPD_STATUS_DEVICE_VERIFY">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="21">Verifying (reading) a device</doc>
      </member>
      <member name="scheduling"
              value="7"
              c:identifier="FWUPD_STATUS_SCHEDULING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="22">Scheduling an offline update</doc>
      </member>
      <member name="downloading"
              value="8"
              c:identifier="FWUPD_STATUS_DOWNLOADING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="23">A file is downloading</doc>
      </member>
      <member name="device_read"
              value="9"
              c:identifier="FWUPD_STATUS_DEVICE_READ">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="24">Reading from a device</doc>
      </member>
      <member name="device_erase"
              value="10"
              c:identifier="FWUPD_STATUS_DEVICE_ERASE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="25">Erasing a device</doc>
      </member>
      <member name="waiting_for_auth"
              value="11"
              c:identifier="FWUPD_STATUS_WAITING_FOR_AUTH">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="26">Waiting for authentication</doc>
      </member>
      <member name="device_busy"
              value="12"
              c:identifier="FWUPD_STATUS_DEVICE_BUSY">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="27">The device is busy</doc>
      </member>
      <member name="shutdown" value="13" c:identifier="FWUPD_STATUS_SHUTDOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="28">The daemon is shutting down</doc>
      </member>
      <member name="waiting_for_user"
              value="14"
              c:identifier="FWUPD_STATUS_WAITING_FOR_USER">
      </member>
    </enumeration>
    <bitfield name="TrustFlags" c:type="FwupdTrustFlags">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="52">The flags to show the level of trust.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="66"/>
      <member name="none" value="0" c:identifier="FWUPD_TRUST_FLAG_NONE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="54">No trust</doc>
      </member>
      <member name="payload" value="1" c:identifier="FWUPD_TRUST_FLAG_PAYLOAD">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="55">The firmware is trusted</doc>
      </member>
      <member name="metadata"
              value="2"
              c:identifier="FWUPD_TRUST_FLAG_METADATA">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="56">The metadata is trusted</doc>
      </member>
    </bitfield>
    <enumeration name="UpdateState" c:type="FwupdUpdateState">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1051">The update state.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1072"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_UPDATE_STATE_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1053">Unknown</doc>
      </member>
      <member name="pending"
              value="1"
              c:identifier="FWUPD_UPDATE_STATE_PENDING">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1054">Update is pending</doc>
      </member>
      <member name="success"
              value="2"
              c:identifier="FWUPD_UPDATE_STATE_SUCCESS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1055">Update was successful</doc>
      </member>
      <member name="failed" value="3" c:identifier="FWUPD_UPDATE_STATE_FAILED">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1056">Update failed</doc>
      </member>
      <member name="needs_reboot"
              value="4"
              c:identifier="FWUPD_UPDATE_STATE_NEEDS_REBOOT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1057">Waiting for a reboot to apply</doc>
      </member>
      <member name="failed_transient"
              value="5"
              c:identifier="FWUPD_UPDATE_STATE_FAILED_TRANSIENT">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1058">Update failed due to transient issue, e.g. AC power
required</doc>
      </member>
    </enumeration>
    <enumeration name="VersionFormat" c:type="FwupdVersionFormat">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.h"
           line="1094">The flags used when parsing version numbers.

If no verification is required then %FWUPD_VERSION_FORMAT_PLAIN should
be used to signify an unparsable text string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1131"/>
      <member name="unknown"
              value="0"
              c:identifier="FWUPD_VERSION_FORMAT_UNKNOWN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1096">Unknown version format</doc>
      </member>
      <member name="plain" value="1" c:identifier="FWUPD_VERSION_FORMAT_PLAIN">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1097">An unidentified format text string</doc>
      </member>
      <member name="number"
              value="2"
              c:identifier="FWUPD_VERSION_FORMAT_NUMBER">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1098">A single integer version number</doc>
      </member>
      <member name="pair" value="3" c:identifier="FWUPD_VERSION_FORMAT_PAIR">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1099">Two AABB.CCDD version numbers</doc>
      </member>
      <member name="triplet"
              value="4"
              c:identifier="FWUPD_VERSION_FORMAT_TRIPLET">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1100">Microsoft-style AA.BB.CCDD version numbers</doc>
      </member>
      <member name="quad" value="5" c:identifier="FWUPD_VERSION_FORMAT_QUAD">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1101">UEFI-style AA.BB.CC.DD version numbers</doc>
      </member>
      <member name="bcd" value="6" c:identifier="FWUPD_VERSION_FORMAT_BCD">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1102">Binary coded decimal notation</doc>
      </member>
      <member name="intel_me"
              value="7"
              c:identifier="FWUPD_VERSION_FORMAT_INTEL_ME">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1103">Intel ME-style bitshifted notation</doc>
      </member>
      <member name="intel_me2"
              value="8"
              c:identifier="FWUPD_VERSION_FORMAT_INTEL_ME2">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1104">Intel ME-style A.B.CC.DDDD notation notation</doc>
      </member>
      <member name="surface_legacy"
              value="9"
              c:identifier="FWUPD_VERSION_FORMAT_SURFACE_LEGACY">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1105">Legacy Microsoft Surface 10b.12b.10b</doc>
      </member>
      <member name="surface"
              value="10"
              c:identifier="FWUPD_VERSION_FORMAT_SURFACE">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1106">Microsoft Surface 8b.16b.8b</doc>
      </member>
      <member name="dell_bios"
              value="11"
              c:identifier="FWUPD_VERSION_FORMAT_DELL_BIOS">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1107">Dell BIOS BB.CC.DD style</doc>
      </member>
      <member name="hex" value="12" c:identifier="FWUPD_VERSION_FORMAT_HEX">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.h"
             line="1108">Hexadecimal 0xAABCCDD style</doc>
      </member>
    </enumeration>
    <function name="build_history_report_json"
              c:identifier="fwupd_build_history_report_json"
              version="1.0.4"
              throws="1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="639">Builds a JSON report for the list of devices. No filtering is done on the
@devices array, and it is expected that the caller will filter to something
sane, e.g. %FWUPD_DEVICE_FLAG_REPORTED at the bare minimum.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="92"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="648">a string, or %NULL if the ID is not present</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="devices" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="641">devices</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Device"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="build_machine_id"
              c:identifier="fwupd_build_machine_id"
              version="1.0.4"
              throws="1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="440">Gets a salted hash of the /etc/machine-id contents. This can be used to
identify a specific machine. It is not possible to recover the original
machine-id from the machine-hash.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="86"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="449">the SHA256 machine hash, or %NULL if the ID is not present</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="salt"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="442">optional salt</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="build_user_agent"
              c:identifier="fwupd_build_user_agent"
              version="1.0.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="392">Builds a user-agent to use for the download.

Supplying harmless details to the server means it knows more about each
client. This allows the web service to respond in a different way, for
instance sending a different metadata file for old versions of fwupd, or
returning an error for Solaris machines.

Before freaking out about theoretical privacy implications, much more data
than this is sent to each and every website you visit.

Rather that using this function you should use [method@Client.set_user_agent_for_package]
which uses the *runtime* version of the daemon rather than the *build-time*
version.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="83"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="411">a string, e.g. `foo/0.1 (Linux i386 4.14.5; en; Fedora 27) fwupd/1.0.3`</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="package_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="394">client program name, e.g. `gnome-software`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="package_version" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="395">client program version, e.g. `3.28.1`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="build_user_agent_system"
              c:identifier="fwupd_build_user_agent_system"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="26"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="checksum_format_for_display"
              c:identifier="fwupd_checksum_format_for_display"
              version="0.9.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="87">Formats a checksum for display.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="79"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="93">text, or %NULL for invalid</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="checksum"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="89">a checksum</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_get_best"
              c:identifier="fwupd_checksum_get_best"
              version="0.9.4">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="127">Gets a the best possible checksum kind.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="71"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="133">a checksum from the array, or %NULL if nothing was suitable</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="checksums" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="129">checksums</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_get_by_kind"
              c:identifier="fwupd_checksum_get_by_kind"
              version="0.9.4">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="104">Gets a specific checksum kind.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="73"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="111">a checksum from the array, or %NULL if not found</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="checksums" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="106">checksums</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="107">a checksum type, e.g. %G_CHECKSUM_SHA512</doc>
          <type name="GLib.ChecksumType" c:type="GChecksumType"/>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_guess_kind"
              c:identifier="fwupd_checksum_guess_kind"
              version="0.9.3">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="32">Guesses the checksum kind based on the length of the hash.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="75"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="38">a checksum type, e.g. %G_CHECKSUM_SHA1</doc>
        <type name="GLib.ChecksumType" c:type="GChecksumType"/>
      </return-value>
      <parameters>
        <parameter name="checksum"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="34">a checksum</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="checksum_type_to_string_display"
              c:identifier="fwupd_checksum_type_to_string_display"
              version="1.9.6">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="61">Formats a checksum type for display.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="77"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="67">text, or %NULL for invalid</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="checksum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="63">a #GChecksumType, e.g. %G_CHECKSUM_SHA1</doc>
          <type name="GLib.ChecksumType" c:type="GChecksumType"/>
        </parameter>
      </parameters>
    </function>
    <function name="common_json_add_boolean"
              c:identifier="fwupd_common_json_add_boolean"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="38"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="builder" transfer-ownership="none">
          <type name="Json.Builder" c:type="JsonBuilder*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="common_json_add_int"
              c:identifier="fwupd_common_json_add_int"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="35"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="builder" transfer-ownership="none">
          <type name="Json.Builder" c:type="JsonBuilder*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="common_json_add_string"
              c:identifier="fwupd_common_json_add_string"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="29"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="builder" transfer-ownership="none">
          <type name="Json.Builder" c:type="JsonBuilder*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="common_json_add_stringv"
              c:identifier="fwupd_common_json_add_stringv"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="32"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="builder" transfer-ownership="none">
          <type name="Json.Builder" c:type="JsonBuilder*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_from_string"
              c:identifier="fwupd_error_from_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-error.c"
           line="67">Converts a string to an enumerated error.</doc>
      <source-position filename="libfwupd/fwupd-error.h" line="66"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.c"
             line="73">enumerated value</doc>
        <type name="Error" c:type="FwupdError"/>
      </return-value>
      <parameters>
        <parameter name="error"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-error.c"
               line="69">a string, e.g. `org.freedesktop.fwupd.VersionNewer`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_quark"
              c:identifier="fwupd_error_quark"
              version="0.1.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-error.c"
           line="119">An error quark.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.c"
             line="124">an error quark</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="error_to_string"
              c:identifier="fwupd_error_to_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-error.c"
           line="15">Converts an enumerated error to a string.</doc>
      <source-position filename="libfwupd/fwupd-error.h" line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-error.c"
             line="21">identifier string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-error.c"
               line="17">an enumerated error, e.g. %FWUPD_ERROR_VERSION_NEWER</doc>
          <type name="Error" c:type="FwupdError"/>
        </parameter>
      </parameters>
    </function>
    <function name="feature_flag_from_string"
              c:identifier="fwupd_feature_flag_from_string"
              version="1.4.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="688">Converts a string to an enumerated feature flag.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1176"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="694">enumerated value</doc>
        <type name="FeatureFlags" c:type="FwupdFeatureFlags"/>
      </return-value>
      <parameters>
        <parameter name="feature_flag"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="690">a string, e.g. `detach-action`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="feature_flag_to_string"
              c:identifier="fwupd_feature_flag_to_string"
              version="1.4.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="650">Converts a feature flag to a string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1174"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="656">identifier string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="feature_flag" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="652">a single feature flag, e.g. %FWUPD_FEATURE_FLAG_DETACH_ACTION</doc>
          <type name="FeatureFlags" c:type="FwupdFeatureFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_os_release"
              c:identifier="fwupd_get_os_release"
              version="1.0.7"
              throws="1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="304">Loads information from the system os-release file.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="88"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="310">keys from os-release</doc>
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="utf8"/>
          <type name="utf8"/>
        </type>
      </return-value>
    </function>
    <function name="get_os_release_full"
              c:identifier="fwupd_get_os_release_full"
              version="1.8.8"
              throws="1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="235">Loads information from a defined system os-release file.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="90"/>
      <return-value transfer-ownership="container">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="242">keys from os-release</doc>
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="utf8"/>
          <type name="utf8"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="filename"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="237">optional filename to load</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="guid_from_string"
              c:identifier="fwupd_guid_from_string"
              version="1.2.5"
              throws="1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="771">Converts a string GUID into its binary encoding. All string GUIDs are
formatted as big endian but on-disk can be encoded in different ways.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="107"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="781">%TRUE for success</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="guidstr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="773">a GUID, e.g. `00112233-4455-6677-8899-aabbccddeeff`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="guid"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="774">a #fwupd_guid_t, or NULL to just check the GUID</doc>
          <type name="guint8" c:type="guint8*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="775">GUID flags, e.g. %FWUPD_GUID_FLAG_MIXED_ENDIAN</doc>
          <type name="GuidFlags" c:type="FwupdGuidFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="guid_hash_data"
              c:identifier="fwupd_guid_hash_data"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="851">Returns a GUID for some data. This uses a hash and so even small
differences in the @data will produce radically different return values.

The implementation is taken from RFC4122, Section 4.1.3; specifically
using a type-5 SHA-1 hash.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="114"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="863">a new GUID, or %NULL for internal error</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="853">data to hash</doc>
          <type name="guint8" c:type="const guint8*"/>
        </parameter>
        <parameter name="datasz" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="854">length of @data</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="855">GUID flags, e.g. %FWUPD_GUID_FLAG_NAMESPACE_MICROSOFT</doc>
          <type name="GuidFlags" c:type="FwupdGuidFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="guid_hash_string"
              c:identifier="fwupd_guid_hash_string"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="983">Returns a GUID for a given string. This uses a hash and so even small
differences in the @str will produce radically different return values.

The default implementation is taken from RFC4122, Section 4.1.3; specifically
using a type-5 SHA-1 hash with a DNS namespace.
The same result can be obtained with this simple python program:

   #!/usr/bin/python
   import uuid
   print uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="112"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="998">a new GUID, or %NULL if the string was invalid</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="985">a source string to use as a key</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="guid_is_valid"
              c:identifier="fwupd_guid_is_valid"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="943">Checks the string is a valid GUID.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="110"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="949">%TRUE if @guid was a valid GUID, %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="guid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="945">string to check, e.g. `00112233-4455-6677-8899-aabbccddeeff`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="guid_to_string"
              c:identifier="fwupd_guid_to_string"
              version="1.2.5">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-common.c"
           line="723">Returns a text GUID of mixed or BE endian for a packed buffer.</doc>
      <source-position filename="libfwupd/fwupd-common.h" line="105"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-common.c"
             line="730">a new GUID string</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="guid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="725">a #fwupd_guid_t to read</doc>
          <type name="guint8" c:type="const guint8*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-common.c"
               line="726">GUID flags, e.g. %FWUPD_GUID_FLAG_MIXED_ENDIAN</doc>
          <type name="GuidFlags" c:type="FwupdGuidFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="hash_kv_to_variant"
              c:identifier="fwupd_hash_kv_to_variant"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="22"/>
      <return-value transfer-ownership="full">
        <type name="GLib.Variant" c:type="GVariant*"/>
      </return-value>
      <parameters>
        <parameter name="hash" transfer-ownership="none">
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="gpointer" c:type="gpointer"/>
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="keyring_kind_from_string"
              c:identifier="fwupd_keyring_kind_from_string"
              version="0.9.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="726">Converts an printable string to an enumerated keyring kind.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1178"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="732">keyring kind, e.g. %FWUPD_KEYRING_KIND_GPG</doc>
        <type name="KeyringKind" c:type="FwupdKeyringKind"/>
      </return-value>
      <parameters>
        <parameter name="keyring_kind"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="728">a string, e.g. `gpg`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyring_kind_to_string"
              c:identifier="fwupd_keyring_kind_to_string"
              version="0.9.7">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="750">Converts an enumerated keyring kind to a printable string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1180"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="756">a string, e.g. `gpg`</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="keyring_kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="752">a #FwupdKeyringKind, e.g. %FWUPD_KEYRING_KIND_GPG</doc>
          <type name="KeyringKind" c:type="FwupdKeyringKind"/>
        </parameter>
      </parameters>
    </function>
    <function name="pad_kv_int"
              c:identifier="fwupd_pad_kv_int"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="55"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="pad_kv_str"
              c:identifier="fwupd_pad_kv_str"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="53"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="pad_kv_unx"
              c:identifier="fwupd_pad_kv_unx"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="51"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="key" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="status_from_string"
              c:identifier="fwupd_status_from_string"
              version="0.1.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="57">Converts a string to an enumerated status.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1144"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="63">enumerated value</doc>
        <type name="Status" c:type="FwupdStatus"/>
      </return-value>
      <parameters>
        <parameter name="status"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="59">a string, e.g. `decompressing`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="status_to_string"
              c:identifier="fwupd_status_to_string"
              version="0.1.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="11">Converts an enumerated status to a string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1142"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="17">identifier string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="status" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="13">a status, e.g. %FWUPD_STATUS_DECOMPRESSING</doc>
          <type name="Status" c:type="FwupdStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="trust_flag_from_string"
              c:identifier="fwupd_trust_flag_from_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="628">Converts a string to an enumerated trust flag.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1172"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="634">enumerated value</doc>
        <type name="TrustFlags" c:type="FwupdTrustFlags"/>
      </return-value>
      <parameters>
        <parameter name="trust_flag"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="630">a string, e.g. `payload`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="trust_flag_to_string"
              c:identifier="fwupd_trust_flag_to_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="606">Converts an enumerated trust flag to a string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1170"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="612">identifier string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="trust_flag" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="608">the trust flags, e.g. %FWUPD_TRUST_FLAG_PAYLOAD</doc>
          <type name="TrustFlags" c:type="FwupdTrustFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="update_state_from_string"
              c:identifier="fwupd_update_state_from_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="578">Converts a string to an enumerated update state.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1168"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="584">enumerated value</doc>
        <type name="UpdateState" c:type="FwupdUpdateState"/>
      </return-value>
      <parameters>
        <parameter name="update_state"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="580">a string, e.g. `pending`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="update_state_to_string"
              c:identifier="fwupd_update_state_to_string"
              version="0.7.0">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="550">Converts an enumerated update state to a string.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1166"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="556">identifier string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="update_state" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="552">the update state, e.g. %FWUPD_UPDATE_STATE_PENDING</doc>
          <type name="UpdateState" c:type="FwupdUpdateState"/>
        </parameter>
      </parameters>
    </function>
    <function name="variant_to_hash_kv"
              c:identifier="fwupd_variant_to_hash_kv"
              introspectable="0">
      <source-position filename="libfwupd/fwupd-common-private.h" line="24"/>
      <return-value>
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="dict" transfer-ownership="none">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_format_from_string"
              c:identifier="fwupd_version_format_from_string"
              version="1.2.9">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="892">Converts text to a display version type.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1182"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="898">an enumerated version format, e.g. %FWUPD_VERSION_FORMAT_TRIPLET</doc>
        <type name="VersionFormat" c:type="FwupdVersionFormat"/>
      </return-value>
      <parameters>
        <parameter name="str"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="894">a string, e.g. `quad`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_format_to_string"
              c:identifier="fwupd_version_format_to_string"
              version="1.2.9">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-enums.c"
           line="932">Converts an enumerated version format to text.</doc>
      <source-position filename="libfwupd/fwupd-enums.h" line="1184"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-enums.c"
             line="938">a string, e.g. `quad`, or %NULL if not known</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="kind" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libfwupd/fwupd-enums.c"
               line="934">a version format, e.g. %FWUPD_VERSION_FORMAT_TRIPLET</doc>
          <type name="VersionFormat" c:type="FwupdVersionFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_string"
              c:identifier="fwupd_version_string"
              version="1.6.1">
      <doc xml:space="preserve"
           filename="libfwupd/fwupd-version.c"
           line="11">Gets the libfwupd installed runtime version.

This may be different to the *build-time* version if the daemon and library
objects somehow get out of sync.</doc>
      <source-position filename="libfwupd/fwupd-version.h" line="57"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libfwupd/fwupd-version.c"
             line="19">version string</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
  </namespace>
</repository>
