<?xml version="1.0"?>
<!-- Bump-0.1.gir generated by valac 0.51.3, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="Gee" version="0.8"/>
<include name="GLib" version="2.0"/>
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<package name="bump-0.1"/>
<c:include name="bump.h"/>
<namespace name="Bump" version="0.1" c:prefix="Bump" c:identifier-prefixes="Bump" c:symbol-prefix="bump">
	<class name="AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue" c:symbol-prefix="async_priority_queue" glib:type-name="BumpAsyncPriorityQueue" glib:get-type="bump_async_priority_queue_get_type" glib:type-struct="AsyncPriorityQueueClass" parent="Gee.PriorityQueue">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gee.PriorityQueue" c:type="GeePriorityQueue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AsyncPriorityQueuePrivate" c:type="BumpAsyncPriorityQueuePrivate*"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<method name="poll_timed" c:identifier="bump_async_priority_queue_poll_timed">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<method name="peek_timed" c:identifier="bump_async_priority_queue_peek_timed">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<method name="offer" c:identifier="bump_async_priority_queue_offer">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="element" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="bump_async_priority_queue_new">
			<return-value transfer-ownership="full">
				<type name="Bump.AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="compare_func" transfer-ownership="none" allow-none="1" closure="4" scope="notified" destroy="5">
					<type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
				</parameter>
				<parameter name="compare_func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="compare_func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="waiting-threads" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_waiting_threads" c:identifier="bump_async_priority_queue_get_waiting_threads">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.AsyncPriorityQueue" c:type="BumpAsyncPriorityQueue*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="consumer-shortage">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="AsyncPriorityQueueClass" c:type="BumpAsyncPriorityQueueClass" glib:is-gtype-struct-for="AsyncPriorityQueue">
		<field name="parent_class" readable="0" private="1">
			<type name="Gee.PriorityQueueClass" c:type="GeePriorityQueueClass"/>
		</field>
	</record>
	<record name="AsyncPriorityQueuePrivate" c:type="BumpAsyncPriorityQueuePrivate" disguised="1"/>
	<class name="Claim" c:type="BumpClaim" c:symbol-prefix="claim" glib:type-name="BumpClaim" glib:get-type="bump_claim_get_type" glib:type-struct="ClaimClass" parent="GObject.Object">
		<implements name="Gio.Initable"/>
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ClaimPrivate" c:type="BumpClaimPrivate*"/>
		</field>
		<method name="release" c:identifier="bump_claim_release">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="release" invoker="release">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="init" c:identifier="bump_claim_init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init" invoker="init" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="init_async" c:identifier="bump_claim_init_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="io_priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="init_finish" c:identifier="bump_claim_init_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="init_async" invoker="init_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="io_priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="init_finish" invoker="init_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<constructor name="new" c:identifier="bump_claim_new">
			<return-value transfer-ownership="full">
				<type name="Bump.Claim" c:type="BumpClaim*"/>
			</return-value>
		</constructor>
		<property name="active">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_active" c:identifier="bump_claim_get_active">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="time-acquired" writable="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_time_acquired" c:identifier="bump_claim_get_time_acquired">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="time-released" writable="1">
			<type name="gint64" c:type="gint64"/>
		</property>
		<method name="get_time_released" c:identifier="bump_claim_get_time_released">
			<return-value transfer-ownership="none">
				<type name="gint64" c:type="gint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="duration-held">
			<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
		</property>
		<method name="get_duration_held" c:identifier="bump_claim_get_duration_held">
			<return-value transfer-ownership="none">
				<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Claim" c:type="BumpClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ClaimClass" c:type="BumpClaimClass" glib:is-gtype-struct-for="Claim">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="release">
			<callback name="release" c:type="release">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Claim" c:type="BumpClaim*"/>
					</instance-parameter>
				</parameters>
			</callback>
		</field>
		<field name="init">
			<callback name="init" c:type="init" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Claim" c:type="BumpClaim*"/>
					</instance-parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="init_async">
			<callback name="init_async" c:type="init_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Claim" c:type="BumpClaim*"/>
					</instance-parameter>
					<parameter name="io_priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="init_finish">
			<callback name="init_finish" c:type="init_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Claim" c:type="BumpClaim*"/>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="ClaimPrivate" c:type="BumpClaimPrivate" disguised="1"/>
	<class name="Event" c:type="BumpEvent" c:symbol-prefix="event" glib:type-name="BumpEvent" glib:get-type="bump_event_get_type" glib:type-struct="EventClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="EventPrivate" c:type="BumpEventPrivate*"/>
		</field>
		<property name="t-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="t-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="t-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<method name="reset" c:identifier="bump_event_reset">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<method name="trigger" c:identifier="bump_event_trigger" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="add" c:identifier="bump_event_add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="Bump.EventSourceFunc" c:type="BumpEventSourceFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute" c:identifier="bump_event_execute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.EventCallback" c:type="BumpEventCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_async" c:identifier="bump_event_execute_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.EventCallback" c:type="BumpEventCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="8" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_finish" c:identifier="bump_event_execute_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_background" c:identifier="bump_event_execute_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.EventCallback" c:type="BumpEventCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="8" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_background_finish" c:identifier="bump_event_execute_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="bump_event_new">
			<return-value transfer-ownership="full">
				<type name="Bump.Event" c:type="BumpEvent*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="auto_reset" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="pool" writable="1" construct-only="1">
			<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
		</property>
		<method name="get_pool" c:identifier="bump_event_get_pool">
			<return-value transfer-ownership="none">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="auto-reset" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_auto_reset" c:identifier="bump_event_get_auto_reset">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="triggered" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_triggered" c:identifier="bump_event_get_triggered">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Event" c:type="BumpEvent*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<callback name="Callback" c:type="BumpEventCallback" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="arg" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="SourceFunc" c:type="BumpEventSourceFunc">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="a_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="a_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="a_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="arg" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="4">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="EventClass" c:type="BumpEventClass" glib:is-gtype-struct-for="Event">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="EventPrivate" c:type="BumpEventPrivate" disguised="1"/>
	<class name="Factory" c:type="BumpFactory" c:symbol-prefix="factory" glib:type-name="BumpFactory" glib:get-type="bump_factory_get_type" glib:type-struct="FactoryClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FactoryPrivate" c:type="BumpFactoryPrivate*"/>
		</field>
		<property name="g-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="g-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="g-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<method name="create" c:identifier="bump_factory_create" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create" invoker="create" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_async" c:identifier="bump_factory_create_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_finish" c:identifier="bump_factory_create_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_async" invoker="create_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_finish" invoker="create_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_background" c:identifier="bump_factory_create_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_background_finish" c:identifier="bump_factory_create_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_background" invoker="create_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_background_finish" invoker="create_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="acquire" c:identifier="bump_factory_acquire" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="acquire" invoker="acquire" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="acquire_async" c:identifier="bump_factory_acquire_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="acquire_finish" c:identifier="bump_factory_acquire_finish" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="acquire_async" invoker="acquire_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="acquire_finish" invoker="acquire_finish" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="acquire_background" c:identifier="bump_factory_acquire_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="acquire_background_finish" c:identifier="bump_factory_acquire_background_finish" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="acquire_background" invoker="acquire_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="acquire_background_finish" invoker="acquire_background_finish" throws="1">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_construct_properties" c:identifier="bump_factory_get_construct_properties">
			<return-value transfer-ownership="none" allow-none="1">
				<array length="0" c:type="GParameter*">
					<type name="GObject.Parameter" c:type="GParameter"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_construct_properties" c:identifier="bump_factory_set_construct_properties">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Factory" c:type="BumpFactory*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<array length="1" c:type="GParameter*">
						<type name="GObject.Parameter" c:type="GParameter"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="FactoryClass" c:type="BumpFactoryClass" glib:is-gtype-struct-for="Factory">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="create">
			<callback name="create" c:type="create" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_async">
			<callback name="create_async" c:type="create_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_finish">
			<callback name="create_finish" c:type="create_finish" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_background">
			<callback name="create_background" c:type="create_background">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_background_finish">
			<callback name="create_background_finish" c:type="create_background_finish" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="acquire">
			<callback name="acquire" c:type="acquire" throws="1">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="acquire_async">
			<callback name="acquire_async" c:type="acquire_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="acquire_finish">
			<callback name="acquire_finish" c:type="acquire_finish" throws="1">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="acquire_background">
			<callback name="acquire_background" c:type="acquire_background">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="acquire_background_finish">
			<callback name="acquire_background_finish" c:type="acquire_background_finish" throws="1">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Factory" c:type="BumpFactory*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FactoryPrivate" c:type="BumpFactoryPrivate" disguised="1"/>
	<class name="Lazy" c:type="BumpLazy" c:symbol-prefix="lazy" glib:type-name="BumpLazy" glib:get-type="bump_lazy_get_type" glib:type-struct="LazyClass" parent="Bump.Factory">
		<field name="parent_instance" readable="0" private="1">
			<type name="Bump.Factory" c:type="BumpFactory"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LazyPrivate" c:type="BumpLazyPrivate*"/>
		</field>
		<property name="t-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="t-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="t-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="bump_lazy_new">
			<return-value transfer-ownership="full">
				<type name="Bump.Lazy" c:type="BumpLazy*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="pool" writable="1" construct-only="1">
			<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
		</property>
		<method name="get_pool" c:identifier="bump_lazy_get_pool">
			<return-value transfer-ownership="none">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Lazy" c:type="BumpLazy*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="value">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<method name="get_value" c:identifier="bump_lazy_get_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Lazy" c:type="BumpLazy*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="is-initialized">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_is_initialized" c:identifier="bump_lazy_get_is_initialized">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Lazy" c:type="BumpLazy*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LazyClass" c:type="BumpLazyClass" glib:is-gtype-struct-for="Lazy">
		<field name="parent_class" readable="0" private="1">
			<type name="Bump.FactoryClass" c:type="BumpFactoryClass"/>
		</field>
	</record>
	<record name="LazyPrivate" c:type="BumpLazyPrivate" disguised="1"/>
	<class name="ResourceClaim" c:type="BumpResourceClaim" c:symbol-prefix="resource_claim" glib:type-name="BumpResourceClaim" glib:get-type="bump_resource_claim_get_type" glib:type-struct="ResourceClaimClass" parent="Bump.Claim">
		<field name="parent_instance" readable="0" private="1">
			<type name="Bump.Claim" c:type="BumpClaim"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ResourceClaimPrivate" c:type="BumpResourceClaimPrivate*"/>
		</field>
		<property name="t-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="t-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="t-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<constructor name="new" c:identifier="bump_resource_claim_new">
			<return-value transfer-ownership="full">
				<type name="Bump.ResourceClaim" c:type="BumpResourceClaim*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="pool" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="pool" writable="1" construct-only="1">
			<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_pool" c:identifier="bump_resource_claim_get_pool">
			<return-value transfer-ownership="none">
				<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourceClaim" c:type="BumpResourceClaim*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="resource">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<method name="get_resource" c:identifier="bump_resource_claim_get_resource">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourceClaim" c:type="BumpResourceClaim*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ResourceClaimClass" c:type="BumpResourceClaimClass" glib:is-gtype-struct-for="ResourceClaim">
		<field name="parent_class" readable="0" private="1">
			<type name="Bump.ClaimClass" c:type="BumpClaimClass"/>
		</field>
	</record>
	<record name="ResourceClaimPrivate" c:type="BumpResourceClaimPrivate" disguised="1"/>
	<class name="ResourcePool" c:type="BumpResourcePool" c:symbol-prefix="resource_pool" glib:type-name="BumpResourcePool" glib:get-type="bump_resource_pool_get_type" glib:type-struct="ResourcePoolClass" parent="Bump.Factory">
		<field name="parent_instance" readable="0" private="1">
			<type name="Bump.Factory" c:type="BumpFactory"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ResourcePoolPrivate" c:type="BumpResourcePoolPrivate*"/>
		</field>
		<property name="t-type" writable="1" construct-only="1">
			<type name="GType" c:type="GType"/>
		</property>
		<property name="t-dup-func" writable="1" construct-only="1">
			<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
		</property>
		<property name="t-destroy-func" writable="1" construct-only="1">
			<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
		</property>
		<method name="release" c:identifier="bump_resource_pool_release">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="resource" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="release" invoker="release">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="resource" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="execute" c:identifier="bump_resource_pool_execute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.ResourcePoolCallback" c:type="BumpResourcePoolCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_async" c:identifier="bump_resource_pool_execute_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.ResourcePoolCallback" c:type="BumpResourcePoolCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_finish" c:identifier="bump_resource_pool_execute_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_background" c:identifier="bump_resource_pool_execute_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.ResourcePoolCallback" c:type="BumpResourcePoolCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_background_finish" c:identifier="bump_resource_pool_execute_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="claim" c:identifier="bump_resource_pool_claim" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.ResourceClaim" c:type="BumpResourceClaim*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="claim_async" c:identifier="bump_resource_pool_claim_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="claim_finish" c:identifier="bump_resource_pool_claim_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.ResourceClaim" c:type="BumpResourceClaim*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="bump_resource_pool_new">
			<return-value transfer-ownership="full">
				<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="max_resources" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="max-resources" writable="1" construct-only="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_max_resources" c:identifier="bump_resource_pool_get_max_resources">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="max-idle-time" writable="1">
			<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
		</property>
		<method name="get_max_idle_time" c:identifier="bump_resource_pool_get_max_idle_time">
			<return-value transfer-ownership="none">
				<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_max_idle_time" c:identifier="bump_resource_pool_set_max_idle_time">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<property name="num-resources" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_num_resources" c:identifier="bump_resource_pool_get_num_resources">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="idle-resources">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_idle_resources" c:identifier="bump_resource_pool_get_idle_resources">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="active-resources">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_active_resources" c:identifier="bump_resource_pool_get_active_resources">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pool" writable="1" construct-only="1">
			<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
		</property>
		<method name="get_pool" c:identifier="bump_resource_pool_get_pool">
			<return-value transfer-ownership="none">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</instance-parameter>
			</parameters>
		</method>
		<callback name="Callback" c:type="BumpResourcePoolCallback" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="t_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="t_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="t_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="r_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="r_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="r_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="resource" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="7">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="ResourcePoolClass" c:type="BumpResourcePoolClass" glib:is-gtype-struct-for="ResourcePool">
		<field name="parent_class" readable="0" private="1">
			<type name="Bump.FactoryClass" c:type="BumpFactoryClass"/>
		</field>
		<field name="release">
			<callback name="release" c:type="release">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.ResourcePool" c:type="BumpResourcePool*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</instance-parameter>
					<parameter name="resource" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="ResourcePoolPrivate" c:type="BumpResourcePoolPrivate" disguised="1"/>
	<class name="Semaphore" c:type="BumpSemaphore" c:symbol-prefix="semaphore" glib:type-name="BumpSemaphore" glib:get-type="bump_semaphore_get_type" glib:type-struct="SemaphoreClass" parent="Bump.TaskQueue">
		<field name="parent_instance" readable="0" private="1">
			<type name="Bump.TaskQueue" c:type="BumpTaskQueue"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SemaphorePrivate" c:type="BumpSemaphorePrivate*"/>
		</field>
		<method name="unlock" c:identifier="bump_semaphore_unlock">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="lock" c:identifier="bump_semaphore_lock" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lock_async" c:identifier="bump_semaphore_lock_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="lock_finish" c:identifier="bump_semaphore_lock_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="claim" c:identifier="bump_semaphore_claim" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="claim" invoker="claim" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="claim_async" c:identifier="bump_semaphore_claim_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="claim_finish" c:identifier="bump_semaphore_claim_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="claim_async" invoker="claim_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="claim_finish" invoker="claim_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<constructor name="new" c:identifier="bump_semaphore_new">
			<return-value transfer-ownership="full">
				<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
			</return-value>
			<parameters>
				<parameter name="max_claims" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="max-claims" writable="1" construct-only="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_max_claims" c:identifier="bump_semaphore_get_max_claims">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="claims" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_claims" c:identifier="bump_semaphore_get_claims">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pool" writable="1" construct-only="1">
			<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
		</property>
		<method name="get_pool" c:identifier="bump_semaphore_get_pool">
			<return-value transfer-ownership="none">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SemaphoreClass" c:type="BumpSemaphoreClass" glib:is-gtype-struct-for="Semaphore">
		<field name="parent_class" readable="0" private="1">
			<type name="Bump.TaskQueueClass" c:type="BumpTaskQueueClass"/>
		</field>
		<field name="claim">
			<callback name="claim" c:type="claim" throws="1">
				<return-value transfer-ownership="full">
					<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="claim_async">
			<callback name="claim_async" c:type="claim_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
					</instance-parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="claim_finish">
			<callback name="claim_finish" c:type="claim_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
					</instance-parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SemaphorePrivate" c:type="BumpSemaphorePrivate" disguised="1"/>
	<class name="SemaphoreClaim" c:type="BumpSemaphoreClaim" c:symbol-prefix="semaphore_claim" glib:type-name="BumpSemaphoreClaim" glib:get-type="bump_semaphore_claim_get_type" glib:type-struct="SemaphoreClaimClass" parent="Bump.Claim">
		<field name="parent_instance" readable="0" private="1">
			<type name="Bump.Claim" c:type="BumpClaim"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SemaphoreClaimPrivate" c:type="BumpSemaphoreClaimPrivate*"/>
		</field>
		<property name="semaphore" writable="1" construct-only="1">
			<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
		</property>
		<method name="get_semaphore" c:identifier="bump_semaphore_claim_get_semaphore">
			<return-value transfer-ownership="none">
				<type name="Bump.Semaphore" c:type="BumpSemaphore*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.SemaphoreClaim" c:type="BumpSemaphoreClaim*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SemaphoreClaimClass" c:type="BumpSemaphoreClaimClass" glib:is-gtype-struct-for="SemaphoreClaim">
		<field name="parent_class" readable="0" private="1">
			<type name="Bump.ClaimClass" c:type="BumpClaimClass"/>
		</field>
	</record>
	<record name="SemaphoreClaimPrivate" c:type="BumpSemaphoreClaimPrivate" disguised="1"/>
	<class name="TaskQueue" c:type="BumpTaskQueue" c:symbol-prefix="task_queue" glib:type-name="BumpTaskQueue" glib:get-type="bump_task_queue_get_type" glib:type-struct="TaskQueueClass" parent="GObject.Object">
		<implements name="Bump.Queue"/>
		<implements name="Bump.Threading"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TaskQueuePrivate" c:type="BumpTaskQueuePrivate*"/>
		</field>
		<method name="spawn" c:identifier="bump_task_queue_spawn">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="max" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="spawn" invoker="spawn">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="max" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add" c:identifier="bump_task_queue_add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="task" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="GLib.SourceFunc" c:type="GSourceFunc"/>
				</parameter>
				<parameter name="task_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="task_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add" invoker="add" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="task" transfer-ownership="none" closure="1" scope="notified" destroy="2">
					<type name="GLib.SourceFunc" c:type="GSourceFunc"/>
				</parameter>
				<parameter name="task_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="task_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="process" c:identifier="bump_task_queue_process">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="process" invoker="process">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="execute" c:identifier="bump_task_queue_execute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="execute" invoker="execute" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="call">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="execute_async" c:identifier="bump_task_queue_execute_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_finish" c:identifier="bump_task_queue_execute_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="execute_async" invoker="execute_async">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="execute_finish" invoker="execute_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="execute_background" c:identifier="bump_task_queue_execute_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_background_finish" c:identifier="bump_task_queue_execute_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="execute_background" invoker="execute_background">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
					<type name="Bump.Callback" c:type="BumpCallback"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="priority" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="execute_background_finish" invoker="execute_background_finish" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
				</instance-parameter>
				<parameter name="g_type" transfer-ownership="none">
					<type name="GType" c:type="GType"/>
				</parameter>
				<parameter name="g_dup_func" transfer-ownership="none">
					<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
				</parameter>
				<parameter name="g_destroy_func" transfer-ownership="none">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="get_global" c:identifier="bump_task_queue_get_global">
			<return-value transfer-ownership="full">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
		</function>
		<constructor name="new" c:identifier="bump_task_queue_new">
			<return-value transfer-ownership="full">
				<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
			</return-value>
		</constructor>
	</class>
	<record name="TaskQueueClass" c:type="BumpTaskQueueClass" glib:is-gtype-struct-for="TaskQueue">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="spawn">
			<callback name="spawn" c:type="spawn">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="max" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add">
			<callback name="add" c:type="add" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="task" transfer-ownership="none" closure="1" scope="notified" destroy="2">
						<type name="GLib.SourceFunc" c:type="GSourceFunc"/>
					</parameter>
					<parameter name="task_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="task_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="process">
			<callback name="process" c:type="process">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="wait" transfer-ownership="none">
						<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="execute">
			<callback name="execute" c:type="execute" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="g_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="g_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="g_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="4" scope="call">
						<type name="Bump.Callback" c:type="BumpCallback"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="execute_async">
			<callback name="execute_async" c:type="execute_async">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="g_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="g_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="g_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
						<type name="Bump.Callback" c:type="BumpCallback"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="execute_finish">
			<callback name="execute_finish" c:type="execute_finish" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="g_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="g_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="g_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="execute_background">
			<callback name="execute_background" c:type="execute_background">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="g_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="g_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="g_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="func" transfer-ownership="none" closure="4" scope="notified" destroy="5">
						<type name="Bump.Callback" c:type="BumpCallback"/>
					</parameter>
					<parameter name="func_target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
					<parameter name="func_target_destroy_notify" transfer-ownership="none" scope="call">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="priority" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="9" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="execute_background_finish">
			<callback name="execute_background_finish" c:type="execute_background_finish" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.TaskQueue" c:type="BumpTaskQueue*"/>
					</instance-parameter>
					<parameter name="g_type" transfer-ownership="none">
						<type name="GType" c:type="GType"/>
					</parameter>
					<parameter name="g_dup_func" transfer-ownership="none">
						<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
					</parameter>
					<parameter name="g_destroy_func" transfer-ownership="none">
						<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TaskQueuePrivate" c:type="BumpTaskQueuePrivate" disguised="1"/>
	<interface name="Queue" c:type="BumpQueue" c:symbol-prefix="queue" glib:type-name="BumpQueue" glib:get-type="bump_queue_get_type" glib:type-struct="QueueIface">
		<prerequisite name="GObject.Object"/>
		<method name="process" c:identifier="bump_queue_process">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Queue" c:type="BumpQueue*"/>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="process" invoker="process">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Queue" c:type="BumpQueue*"/>
				</instance-parameter>
				<parameter name="wait" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_length" c:identifier="bump_queue_get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Queue" c:type="BumpQueue*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Queue" c:type="BumpQueue*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="QueueIface" c:type="BumpQueueIface" glib:is-gtype-struct-for="Queue">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="process">
			<callback name="process" c:type="process">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Queue" c:type="BumpQueue*"/>
					</instance-parameter>
					<parameter name="wait" transfer-ownership="none">
						<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Queue" c:type="BumpQueue*"/>
					</instance-parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Threading" c:type="BumpThreading" c:symbol-prefix="threading" glib:type-name="BumpThreading" glib:get-type="bump_threading_get_type" glib:type-struct="ThreadingIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Bump.Queue"/>
		<method name="get_max_threads" c:identifier="bump_threading_get_max_threads">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_max_threads" c:identifier="bump_threading_set_max_threads">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_max_idle_time" c:identifier="bump_threading_get_max_idle_time">
			<return-value transfer-ownership="full">
				<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_max_idle_time" c:identifier="bump_threading_set_max_idle_time">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.TimeSpan" c:type="GTimeSpan"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_num_threads" c:identifier="bump_threading_get_num_threads">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_idle_threads" c:identifier="bump_threading_get_idle_threads">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="increase_max_threads" c:identifier="bump_threading_increase_max_threads">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="new_max_threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_task" c:identifier="bump_threading_run_task">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="func" transfer-ownership="none" closure="1" scope="call">
					<type name="GLib.SourceFunc" c:type="GSourceFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn" c:identifier="bump_threading_spawn">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="max_new_threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="spawn" invoker="spawn">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Bump.Threading" c:type="BumpThreading*"/>
				</instance-parameter>
				<parameter name="max_new_threads" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ThreadingIface" c:type="BumpThreadingIface" glib:is-gtype-struct-for="Threading">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="spawn">
			<callback name="spawn" c:type="spawn">
				<return-value transfer-ownership="full">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<instance-parameter name="self" transfer-ownership="none">
						<type name="Bump.Threading" c:type="BumpThreading*"/>
					</instance-parameter>
					<parameter name="max_new_threads" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="Callback" c:type="BumpCallback" throws="1">
		<return-value transfer-ownership="full" allow-none="1">
			<type name="gpointer" c:type="gpointer"/>
		</return-value>
		<parameters>
			<parameter name="g_type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="g_dup_func" transfer-ownership="none">
				<type name="GObject.BoxedCopyFunc" c:type="GBoxedCopyFunc"/>
			</parameter>
			<parameter name="g_destroy_func" transfer-ownership="none">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="3">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
</namespace>
</repository>
